//
//  VFR compiler version  2.01 (UEFI 2.4) 
//
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Platform\\Dxe\\FpgaSocketSetup\\FpgaSktSetupForms.vfr"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\Build\\WhitleyRpPkg\\DEBUG_VS2015x86\\X64\\ServerPlatformPkg\\Platform\\Dxe\\FpgaSocketSetup\\FpgaSktSetup\\DEBUG\\FpgaSocketSetupStrDefs.h"






























































extern unsigned char FpgaSocketSetupStrings[];




















#line 85 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\Build\\WhitleyRpPkg\\DEBUG_VS2015x86\\X64\\ServerPlatformPkg\\Platform\\Dxe\\FpgaSocketSetup\\FpgaSktSetup\\DEBUG\\FpgaSocketSetupStrDefs.h"

#line 87 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\Build\\WhitleyRpPkg\\DEBUG_VS2015x86\\X64\\ServerPlatformPkg\\Platform\\Dxe\\FpgaSocketSetup\\FpgaSktSetup\\DEBUG\\FpgaSocketSetupStrDefs.h"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Platform\\Dxe\\FpgaSocketSetup\\FpgaSktSetupForms.vfr"




























#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/FpgaSocketVariable.h"
































#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Fpga.h"






























#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Include\\MaxSocket.h"







































#line 32 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Fpga.h"












































#line 77 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Fpga.h"
#line 34 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/FpgaSocketVariable.h"

extern EFI_GUID { 0x75839b0b, 0x0a99, 0x4233, { 0x8a, 0xa4, 0x38, 0x66, 0xf6, 0xce, 0xf4, 0xb3 } };


#pragma pack(1)

typedef struct {

  
  UINT8    FpgaSetupEnabled;

  
  
  UINT8    FpgaSocketGuid[4];
  
  
  UINT8    FpgaThermalTH1[4];
  UINT8    FpgaThermalTH2[4];

  
  UINT8    FpgaReserved[14];
} FPGA_SOCKET_CONFIGURATION;
#pragma pack()

#line 59 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/FpgaSocketVariable.h"

#line 30 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Platform\\Dxe\\FpgaSocketSetup\\FpgaSktSetupForms.vfr"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\FpgaConfiguration.h"











































































#line 31 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Platform\\Dxe\\FpgaSocketSetup\\FpgaSktSetupForms.vfr"


formset
>00000000: 0E A7 10 91 81 22 6F 7F 52 48 B4 BB 13 A7 70 14 9B 0C 04 00 05 00 01 71 99 03 93 45 85 04 4B B4 5E 32 EB 83 26 04 0E 
>00000051: 5C 06 07 00 00 00 
>00000057: 5C 06 08 00 01 00 
  guid     = { 0x22819110, 0x7f6f, 0x4852, 0xb4, 0xbb, 0x13, 0xa7, 0x70, 0x14, 0x9b, 0xc },
  title    = STRING_TOKEN(0x0004),
  help     = STRING_TOKEN(0x0005),
  class    = 44,
>00000027: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 03 2C 00 
  subclass = 0x00,
>0000003C: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 04 00 00 

  efivarstore FPGA_SOCKET_CONFIGURATION,
>0000005D: 26 2B 00 9A 0B 9B 83 75 99 0A 33 42 8A A4 38 66 F6 CE F4 B3 07 00 00 00 1B 00 46 70 67 61 53 6F 63 6B 65 74 43 6F 6E 66 69 67 00 
    varid = 0x9a00,
    attribute = 0x7,  
    name  = FpgaSocketConfig,
    guid  = { 0x75839b0b, 0x0a99, 0x4233, 0x8a, 0xa4, 0x38, 0x66, 0xf6, 0xce, 0xf4, 0xb3 };







  defaultstore MyStandardDefault,
      prompt      = STRING_TOKEN(0x0007),
      attribute   = 0x0000;                         

  defaultstore MyManufactureDefault,
      prompt      = STRING_TOKEN(0x0008),
      attribute   = 0x0001;

  form formid = 0x47D0,
>00000088: 01 86 D0 47 04 00 

        title = STRING_TOKEN(0x0004);





    subtitle text = STRING_TOKEN(0x0004);
>0000008E: 02 87 04 00 00 00 00 
>00000095: 29 02 
    subtitle text = STRING_TOKEN(0x0002);
>00000097: 02 87 02 00 00 00 00 
>0000009E: 29 02 
        
    numeric varid = FPGA_SOCKET_CONFIGURATION.FpgaSetupEnabled,
>000000A0: 07 91 26 00 27 00 01 00 00 9A 00 00 10 20 00 FF 01 
            prompt   = STRING_TOKEN(0x0026),
            help     = STRING_TOKEN(0x0027),
            flags   = DISPLAY_UINT_HEX | RESET_REQUIRED,
            minimum  = 0,
            maximum = 0xFF,
            step    = 1, 
            default = 0x3, defaultstore = MyStandardDefault,
>000000B1: 5B 06 00 00 00 03 
            default = 0x3, defaultstore = MyManufactureDefault,
>000000B7: 5B 06 01 00 00 03 
    endnumeric;
>000000BD: 29 02 

    subtitle text = STRING_TOKEN(0x0003);
>000000BF: 02 87 03 00 00 00 00 
>000000C6: 29 02 

    
    oneof varid   = FPGA_SOCKET_CONFIGURATION.FpgaSocketGuid[0],
>000000C8: 05 91 09 00 0B 00 02 00 00 9A 01 00 10 10 00 FF 00 
            prompt   = STRING_TOKEN(0x0009),
            help     = STRING_TOKEN(0x000B),
            option text = STRING_TOKEN(0x000C),              value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>000000D9: 09 07 0C 00 30 00 00 
            option text = STRING_TOKEN(0x000E),                value = 1, flags = 0;
>000000E0: 09 07 0E 00 00 00 01 
            option text = STRING_TOKEN(0x000D),              value = 0xFF, flags = 0;
>000000E7: 09 07 0D 00 00 00 FF 
    endoneof;
>000000EE: 29 02 


    oneof varid   = FPGA_SOCKET_CONFIGURATION.FpgaSocketGuid[1],
>000000F0: 05 91 0A 00 0B 00 03 00 00 9A 02 00 10 10 00 FF 00 
            prompt   = STRING_TOKEN(0x000A),
            help     = STRING_TOKEN(0x000B),
            option text = STRING_TOKEN(0x000C),              value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00000101: 09 07 0C 00 30 00 00 
            option text = STRING_TOKEN(0x000E),                value = 1, flags = 0;
>00000108: 09 07 0E 00 00 00 01 
            option text = STRING_TOKEN(0x000D),              value = 0xFF, flags = 0;
>0000010F: 09 07 0D 00 00 00 FF 
    endoneof;
>00000116: 29 02 
#line 102 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Platform\\Dxe\\FpgaSocketSetup\\FpgaSktSetupForms.vfr"

    subtitle text = STRING_TOKEN(0x0003);
>00000118: 02 87 03 00 00 00 00 
>0000011F: 29 02 
    
    oneof varid   = FPGA_SOCKET_CONFIGURATION.FpgaThermalTH1[0],
>00000121: 05 91 10 00 0F 00 04 00 00 9A 05 00 10 10 00 67 00 
            prompt   = STRING_TOKEN(0x0010),
            help     = STRING_TOKEN(0x000F),
            option text = STRING_TOKEN(0x0006),          value = 0, flags = 0;
>00000132: 09 07 06 00 00 00 00 
            option text = STRING_TOKEN(0x0014),                     value = 60, flags = 0;
>00000139: 09 07 14 00 00 00 3C 
            option text = STRING_TOKEN(0x0015),                     value = 65, flags = 0;
>00000140: 09 07 15 00 00 00 41 
            option text = STRING_TOKEN(0x0016),                     value = 70, flags = 0;
>00000147: 09 07 16 00 00 00 46 
            option text = STRING_TOKEN(0x0017),                     value = 75, flags = 0;
>0000014E: 09 07 17 00 00 00 4B 
            option text = STRING_TOKEN(0x0018),                     value = 80, flags = 0;
>00000155: 09 07 18 00 00 00 50 
            option text = STRING_TOKEN(0x0019),                     value = 85, flags = 0;
>0000015C: 09 07 19 00 00 00 55 
            option text = STRING_TOKEN(0x001A),                     value = 90, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00000163: 09 07 1A 00 30 00 5A 
            option text = STRING_TOKEN(0x001B),                     value = 93, flags = 0;
>0000016A: 09 07 1B 00 00 00 5D 
            option text = STRING_TOKEN(0x001C),                     value = 94, flags = 0;
>00000171: 09 07 1C 00 00 00 5E 
            option text = STRING_TOKEN(0x001D),                     value = 95, flags = 0;
>00000178: 09 07 1D 00 00 00 5F 
            option text = STRING_TOKEN(0x001E),                     value = 96, flags = 0;
>0000017F: 09 07 1E 00 00 00 60 
            option text = STRING_TOKEN(0x001F),                     value = 97, flags = 0;
>00000186: 09 07 1F 00 00 00 61 
            option text = STRING_TOKEN(0x0020),                     value = 98, flags = 0;
>0000018D: 09 07 20 00 00 00 62 
            option text = STRING_TOKEN(0x0021),                     value = 99, flags = 0;
>00000194: 09 07 21 00 00 00 63 
            option text = STRING_TOKEN(0x0022),                    value = 100, flags = 0;
>0000019B: 09 07 22 00 00 00 64 
            option text = STRING_TOKEN(0x0023),                    value = 101, flags = 0;
>000001A2: 09 07 23 00 00 00 65 
            option text = STRING_TOKEN(0x0024),                    value = 102, flags = 0;
>000001A9: 09 07 24 00 00 00 66 
            option text = STRING_TOKEN(0x0025),                    value = 103, flags = 0;
>000001B0: 09 07 25 00 00 00 67 
    endoneof;
>000001B7: 29 02 

    oneof varid   = FPGA_SOCKET_CONFIGURATION.FpgaThermalTH2[0],
>000001B9: 05 91 11 00 0F 00 05 00 00 9A 09 00 10 10 00 67 00 
            prompt   = STRING_TOKEN(0x0011),
            help     = STRING_TOKEN(0x000F),
            option text = STRING_TOKEN(0x0006),          value = 0, flags = 0;
>000001CA: 09 07 06 00 00 00 00 
            option text = STRING_TOKEN(0x0014),                     value = 60, flags = 0;
>000001D1: 09 07 14 00 00 00 3C 
            option text = STRING_TOKEN(0x0015),                     value = 65, flags = 0;
>000001D8: 09 07 15 00 00 00 41 
            option text = STRING_TOKEN(0x0016),                     value = 70, flags = 0;
>000001DF: 09 07 16 00 00 00 46 
            option text = STRING_TOKEN(0x0017),                     value = 75, flags = 0;
>000001E6: 09 07 17 00 00 00 4B 
            option text = STRING_TOKEN(0x0018),                     value = 80, flags = 0;
>000001ED: 09 07 18 00 00 00 50 
            option text = STRING_TOKEN(0x0019),                     value = 85, flags = 0;
>000001F4: 09 07 19 00 00 00 55 
            option text = STRING_TOKEN(0x001A),                     value = 90, flags = 0;
>000001FB: 09 07 1A 00 00 00 5A 
            option text = STRING_TOKEN(0x001B),                     value = 93, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00000202: 09 07 1B 00 30 00 5D 
            option text = STRING_TOKEN(0x001C),                     value = 94, flags = 0;
>00000209: 09 07 1C 00 00 00 5E 
            option text = STRING_TOKEN(0x001D),                     value = 95, flags = 0;
>00000210: 09 07 1D 00 00 00 5F 
            option text = STRING_TOKEN(0x001E),                     value = 96, flags = 0;
>00000217: 09 07 1E 00 00 00 60 
            option text = STRING_TOKEN(0x001F),                     value = 97, flags = 0;
>0000021E: 09 07 1F 00 00 00 61 
            option text = STRING_TOKEN(0x0020),                     value = 98, flags = 0;
>00000225: 09 07 20 00 00 00 62 
            option text = STRING_TOKEN(0x0021),                     value = 99, flags = 0;
>0000022C: 09 07 21 00 00 00 63 
            option text = STRING_TOKEN(0x0022),                    value = 100, flags = 0;
>00000233: 09 07 22 00 00 00 64 
            option text = STRING_TOKEN(0x0023),                    value = 101, flags = 0;
>0000023A: 09 07 23 00 00 00 65 
            option text = STRING_TOKEN(0x0024),                    value = 102, flags = 0;
>00000241: 09 07 24 00 00 00 66 
            option text = STRING_TOKEN(0x0025),                    value = 103, flags = 0;
>00000248: 09 07 25 00 00 00 67 
    endoneof;
>0000024F: 29 02 


    oneof varid   = FPGA_SOCKET_CONFIGURATION.FpgaThermalTH1[1],
>00000251: 05 91 12 00 0F 00 06 00 00 9A 06 00 10 10 00 67 00 
            prompt   = STRING_TOKEN(0x0012),
            help     = STRING_TOKEN(0x000F),
            option text = STRING_TOKEN(0x0006),          value = 0, flags = 0;
>00000262: 09 07 06 00 00 00 00 
            option text = STRING_TOKEN(0x0014),                     value = 60, flags = 0;
>00000269: 09 07 14 00 00 00 3C 
            option text = STRING_TOKEN(0x0015),                     value = 65, flags = 0;
>00000270: 09 07 15 00 00 00 41 
            option text = STRING_TOKEN(0x0016),                     value = 70, flags = 0;
>00000277: 09 07 16 00 00 00 46 
            option text = STRING_TOKEN(0x0017),                     value = 75, flags = 0;
>0000027E: 09 07 17 00 00 00 4B 
            option text = STRING_TOKEN(0x0018),                     value = 80, flags = 0;
>00000285: 09 07 18 00 00 00 50 
            option text = STRING_TOKEN(0x0019),                     value = 85, flags = 0;
>0000028C: 09 07 19 00 00 00 55 
            option text = STRING_TOKEN(0x001A),                     value = 90, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00000293: 09 07 1A 00 30 00 5A 
            option text = STRING_TOKEN(0x001B),                     value = 93, flags = 0;
>0000029A: 09 07 1B 00 00 00 5D 
            option text = STRING_TOKEN(0x001C),                     value = 94, flags = 0;
>000002A1: 09 07 1C 00 00 00 5E 
            option text = STRING_TOKEN(0x001D),                     value = 95, flags = 0;
>000002A8: 09 07 1D 00 00 00 5F 
            option text = STRING_TOKEN(0x001E),                     value = 96, flags = 0;
>000002AF: 09 07 1E 00 00 00 60 
            option text = STRING_TOKEN(0x001F),                     value = 97, flags = 0;
>000002B6: 09 07 1F 00 00 00 61 
            option text = STRING_TOKEN(0x0020),                     value = 98, flags = 0;
>000002BD: 09 07 20 00 00 00 62 
            option text = STRING_TOKEN(0x0021),                     value = 99, flags = 0;
>000002C4: 09 07 21 00 00 00 63 
            option text = STRING_TOKEN(0x0022),                    value = 100, flags = 0;
>000002CB: 09 07 22 00 00 00 64 
            option text = STRING_TOKEN(0x0023),                    value = 101, flags = 0;
>000002D2: 09 07 23 00 00 00 65 
            option text = STRING_TOKEN(0x0024),                    value = 102, flags = 0;
>000002D9: 09 07 24 00 00 00 66 
            option text = STRING_TOKEN(0x0025),                    value = 103, flags = 0;
>000002E0: 09 07 25 00 00 00 67 
    endoneof;
>000002E7: 29 02 

    oneof varid   = FPGA_SOCKET_CONFIGURATION.FpgaThermalTH2[1],
>000002E9: 05 91 13 00 0F 00 07 00 00 9A 0A 00 10 10 00 67 00 
            prompt   = STRING_TOKEN(0x0013),
            help     = STRING_TOKEN(0x000F),
            option text = STRING_TOKEN(0x0006),          value = 0, flags = 0;
>000002FA: 09 07 06 00 00 00 00 
            option text = STRING_TOKEN(0x0014),                     value = 60, flags = 0;
>00000301: 09 07 14 00 00 00 3C 
            option text = STRING_TOKEN(0x0015),                     value = 65, flags = 0;
>00000308: 09 07 15 00 00 00 41 
            option text = STRING_TOKEN(0x0016),                     value = 70, flags = 0;
>0000030F: 09 07 16 00 00 00 46 
            option text = STRING_TOKEN(0x0017),                     value = 75, flags = 0;
>00000316: 09 07 17 00 00 00 4B 
            option text = STRING_TOKEN(0x0018),                     value = 80, flags = 0;
>0000031D: 09 07 18 00 00 00 50 
            option text = STRING_TOKEN(0x0019),                     value = 85, flags = 0;
>00000324: 09 07 19 00 00 00 55 
            option text = STRING_TOKEN(0x001A),                     value = 90, flags = 0;
>0000032B: 09 07 1A 00 00 00 5A 
            option text = STRING_TOKEN(0x001B),                     value = 93, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00000332: 09 07 1B 00 30 00 5D 
            option text = STRING_TOKEN(0x001C),                     value = 94, flags = 0;
>00000339: 09 07 1C 00 00 00 5E 
            option text = STRING_TOKEN(0x001D),                     value = 95, flags = 0;
>00000340: 09 07 1D 00 00 00 5F 
            option text = STRING_TOKEN(0x001E),                     value = 96, flags = 0;
>00000347: 09 07 1E 00 00 00 60 
            option text = STRING_TOKEN(0x001F),                     value = 97, flags = 0;
>0000034E: 09 07 1F 00 00 00 61 
            option text = STRING_TOKEN(0x0020),                     value = 98, flags = 0;
>00000355: 09 07 20 00 00 00 62 
            option text = STRING_TOKEN(0x0021),                     value = 99, flags = 0;
>0000035C: 09 07 21 00 00 00 63 
            option text = STRING_TOKEN(0x0022),                    value = 100, flags = 0;
>00000363: 09 07 22 00 00 00 64 
            option text = STRING_TOKEN(0x0023),                    value = 101, flags = 0;
>0000036A: 09 07 23 00 00 00 65 
            option text = STRING_TOKEN(0x0024),                    value = 102, flags = 0;
>00000371: 09 07 24 00 00 00 66 
            option text = STRING_TOKEN(0x0025),                    value = 103, flags = 0;
>00000378: 09 07 25 00 00 00 67 
    endoneof;
>0000037F: 29 02 
#line 202 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Platform\\Dxe\\FpgaSocketSetup\\FpgaSktSetupForms.vfr"

  endform;
>00000381: 29 02 


 endformset;
>00000383: 29 02 

//
// All Opcode Record List 
//
>00000000: 0E A7 10 91 81 22 6F 7F 52 48 B4 BB 13 A7 70 14 9B 0C 04 00 05 00 01 71 99 03 93 45 85 04 4B B4 5E 32 EB 83 26 04 0E 
>00000027: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 03 2C 00 
>0000003C: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 04 00 00 
>00000051: 5C 06 07 00 00 00 
>00000057: 5C 06 08 00 01 00 
>0000005D: 26 2B 00 9A 0B 9B 83 75 99 0A 33 42 8A A4 38 66 F6 CE F4 B3 07 00 00 00 1B 00 46 70 67 61 53 6F 63 6B 65 74 43 6F 6E 66 69 67 00 
>00000088: 01 86 D0 47 04 00 
>0000008E: 02 87 04 00 00 00 00 
>00000095: 29 02 
>00000097: 02 87 02 00 00 00 00 
>0000009E: 29 02 
>000000A0: 07 91 26 00 27 00 01 00 00 9A 00 00 10 20 00 FF 01 
>000000B1: 5B 06 00 00 00 03 
>000000B7: 5B 06 01 00 00 03 
>000000BD: 29 02 
>000000BF: 02 87 03 00 00 00 00 
>000000C6: 29 02 
>000000C8: 05 91 09 00 0B 00 02 00 00 9A 01 00 10 10 00 FF 00 
>000000D9: 09 07 0C 00 30 00 00 
>000000E0: 09 07 0E 00 00 00 01 
>000000E7: 09 07 0D 00 00 00 FF 
>000000EE: 29 02 
>000000F0: 05 91 0A 00 0B 00 03 00 00 9A 02 00 10 10 00 FF 00 
>00000101: 09 07 0C 00 30 00 00 
>00000108: 09 07 0E 00 00 00 01 
>0000010F: 09 07 0D 00 00 00 FF 
>00000116: 29 02 
>00000118: 02 87 03 00 00 00 00 
>0000011F: 29 02 
>00000121: 05 91 10 00 0F 00 04 00 00 9A 05 00 10 10 00 67 00 
>00000132: 09 07 06 00 00 00 00 
>00000139: 09 07 14 00 00 00 3C 
>00000140: 09 07 15 00 00 00 41 
>00000147: 09 07 16 00 00 00 46 
>0000014E: 09 07 17 00 00 00 4B 
>00000155: 09 07 18 00 00 00 50 
>0000015C: 09 07 19 00 00 00 55 
>00000163: 09 07 1A 00 30 00 5A 
>0000016A: 09 07 1B 00 00 00 5D 
>00000171: 09 07 1C 00 00 00 5E 
>00000178: 09 07 1D 00 00 00 5F 
>0000017F: 09 07 1E 00 00 00 60 
>00000186: 09 07 1F 00 00 00 61 
>0000018D: 09 07 20 00 00 00 62 
>00000194: 09 07 21 00 00 00 63 
>0000019B: 09 07 22 00 00 00 64 
>000001A2: 09 07 23 00 00 00 65 
>000001A9: 09 07 24 00 00 00 66 
>000001B0: 09 07 25 00 00 00 67 
>000001B7: 29 02 
>000001B9: 05 91 11 00 0F 00 05 00 00 9A 09 00 10 10 00 67 00 
>000001CA: 09 07 06 00 00 00 00 
>000001D1: 09 07 14 00 00 00 3C 
>000001D8: 09 07 15 00 00 00 41 
>000001DF: 09 07 16 00 00 00 46 
>000001E6: 09 07 17 00 00 00 4B 
>000001ED: 09 07 18 00 00 00 50 
>000001F4: 09 07 19 00 00 00 55 
>000001FB: 09 07 1A 00 00 00 5A 
>00000202: 09 07 1B 00 30 00 5D 
>00000209: 09 07 1C 00 00 00 5E 
>00000210: 09 07 1D 00 00 00 5F 
>00000217: 09 07 1E 00 00 00 60 
>0000021E: 09 07 1F 00 00 00 61 
>00000225: 09 07 20 00 00 00 62 
>0000022C: 09 07 21 00 00 00 63 
>00000233: 09 07 22 00 00 00 64 
>0000023A: 09 07 23 00 00 00 65 
>00000241: 09 07 24 00 00 00 66 
>00000248: 09 07 25 00 00 00 67 
>0000024F: 29 02 
>00000251: 05 91 12 00 0F 00 06 00 00 9A 06 00 10 10 00 67 00 
>00000262: 09 07 06 00 00 00 00 
>00000269: 09 07 14 00 00 00 3C 
>00000270: 09 07 15 00 00 00 41 
>00000277: 09 07 16 00 00 00 46 
>0000027E: 09 07 17 00 00 00 4B 
>00000285: 09 07 18 00 00 00 50 
>0000028C: 09 07 19 00 00 00 55 
>00000293: 09 07 1A 00 30 00 5A 
>0000029A: 09 07 1B 00 00 00 5D 
>000002A1: 09 07 1C 00 00 00 5E 
>000002A8: 09 07 1D 00 00 00 5F 
>000002AF: 09 07 1E 00 00 00 60 
>000002B6: 09 07 1F 00 00 00 61 
>000002BD: 09 07 20 00 00 00 62 
>000002C4: 09 07 21 00 00 00 63 
>000002CB: 09 07 22 00 00 00 64 
>000002D2: 09 07 23 00 00 00 65 
>000002D9: 09 07 24 00 00 00 66 
>000002E0: 09 07 25 00 00 00 67 
>000002E7: 29 02 
>000002E9: 05 91 13 00 0F 00 07 00 00 9A 0A 00 10 10 00 67 00 
>000002FA: 09 07 06 00 00 00 00 
>00000301: 09 07 14 00 00 00 3C 
>00000308: 09 07 15 00 00 00 41 
>0000030F: 09 07 16 00 00 00 46 
>00000316: 09 07 17 00 00 00 4B 
>0000031D: 09 07 18 00 00 00 50 
>00000324: 09 07 19 00 00 00 55 
>0000032B: 09 07 1A 00 00 00 5A 
>00000332: 09 07 1B 00 30 00 5D 
>00000339: 09 07 1C 00 00 00 5E 
>00000340: 09 07 1D 00 00 00 5F 
>00000347: 09 07 1E 00 00 00 60 
>0000034E: 09 07 1F 00 00 00 61 
>00000355: 09 07 20 00 00 00 62 
>0000035C: 09 07 21 00 00 00 63 
>00000363: 09 07 22 00 00 00 64 
>0000036A: 09 07 23 00 00 00 65 
>00000371: 09 07 24 00 00 00 66 
>00000378: 09 07 25 00 00 00 67 
>0000037F: 29 02 
>00000381: 29 02 
>00000383: 29 02 

Total Size of all record is 0x00000385


***************************************************************
		mPackAlign = 1
		struct FPGA_SOCKET_CONFIGURATION : mAlign [1] mTotalSize [0x1b]

		struct FPGA_SOCKET_CONFIGURATION {
			+00000000[00000000] FpgaSetupEnabled <UINT8>
			+00000001[00000001] FpgaSocketGuid[4] <UINT8>
			+00000005[00000005] FpgaThermalTH1[4] <UINT8>
			+00000009[00000009] FpgaThermalTH2[4] <UINT8>
			+00000013[0000000d] FpgaReserved[14] <UINT8>
		};
---------------------------------------------------------------
		struct EFI_HII_REF : mAlign [16] mTotalSize [0x16]

		struct EFI_HII_REF {
			+00000000[00000000] QuestionId <UINT16>
			+00000002[00000002] FormId <UINT16>
			+00000004[00000004] FormSetGuid <(null)>
			+00000020[00000014] DevicePath <EFI_STRING_ID>
		};
---------------------------------------------------------------
		struct EFI_HII_TIME : mAlign [1] mTotalSize [0x3]

		struct EFI_HII_TIME {
			+00000000[00000000] Hours <UINT8>
			+00000001[00000001] Minutes <UINT8>
			+00000002[00000002] Seconds <UINT8>
		};
---------------------------------------------------------------
		struct EFI_STRING_ID : mAlign [2] mTotalSize [0x2]

		struct EFI_STRING_ID {
		};
---------------------------------------------------------------
		struct EFI_HII_DATE : mAlign [2] mTotalSize [0x4]

		struct EFI_HII_DATE {
			+00000000[00000000] Year <UINT16>
			+00000002[00000002] Month <UINT8>
			+00000003[00000003] Day <UINT8>
		};
---------------------------------------------------------------
		struct BOOLEAN : mAlign [1] mTotalSize [0x1]

		struct BOOLEAN {
		};
---------------------------------------------------------------
		struct UINT8 : mAlign [1] mTotalSize [0x1]

		struct UINT8 {
		};
---------------------------------------------------------------
		struct UINT16 : mAlign [2] mTotalSize [0x2]

		struct UINT16 {
		};
---------------------------------------------------------------
		struct UINT32 : mAlign [4] mTotalSize [0x4]

		struct UINT32 {
		};
---------------------------------------------------------------
		struct UINT64 : mAlign [8] mTotalSize [0x8]

		struct UINT64 {
		};
---------------------------------------------------------------
***************************************************************
