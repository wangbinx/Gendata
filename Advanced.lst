//
//  VFR compiler version  2.01 (UEFI 2.4) 
//
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\Build\\WhitleyRpPkg\\DEBUG_VS2015x86\\X64\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\DxePlatform\\DEBUG\\PlatformStrDefs.h"





















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































extern unsigned char PlatformStrings[];








































































#line 3072 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\Build\\WhitleyRpPkg\\DEBUG_VS2015x86\\X64\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\DxePlatform\\DEBUG\\PlatformStrDefs.h"

#line 3074 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\Build\\WhitleyRpPkg\\DEBUG_VS2015x86\\X64\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\DxePlatform\\DEBUG\\PlatformStrDefs.h"

#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"



























#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Include\\Configuration.h"
































#line 34 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Include\\Configuration.h"




















































































































































































#line 215 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Include\\Configuration.h"





































































































#line 317 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Include\\Configuration.h"
#line 29 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"


#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Include\\Guid/SetupVariable.h"







































#line 41 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Include\\Guid/SetupVariable.h"



#line 45 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Include\\Guid/SetupVariable.h"



















































extern EFI_GUID { 0xb87aa73f, 0xdcb3, 0x4533, { 0x83, 0x98, 0x6c, 0x12, 0x84, 0x27, 0x28, 0x40 } };

#pragma pack(1)

typedef struct {

  UINT8   UserPassword[32];
  UINT8   AdminPassword[32];
  UINT8   Access;

  
  
  
  UINT8   Numlock;
  UINT8   Ps2PortSwap;

  
  
  
  UINT8         TpmEnable;
  UINT8         TpmState;
  UINT8         MorState;

  
  
  
  UINT8   ValidationBreakpointType;
  UINT16   bsdBreakpoint;

  
  
  
  UINT8   PowerState;

  
  
  
  UINT8   WakeOnLanS5;

  
  
  
  UINT8   BootNetwork;

  
  
  
  UINT8   VideoSelect;
  UINT8   EfiWindowsInt10Workaround;
  UINT8   UefiOptimizedBootToggle;

  
  
  
  UINT8    FanPwmOffset;

  
  
  
  UINT8    Benchmark;

  
  
  
  UINT8   PCIe_MultiSeg_Support;

  
  UINT8   WakeOnLanSupport;
  
  
  
  
  UINT8   LomDisableByGpio;
  
  
  UINT8   WakeOnRTCS4S5;
  UINT8   RTCWakeupTimeHour;
  UINT8   RTCWakeupTimeMinute;
  UINT8   RTCWakeupTimeSecond;
  
  
  
  UINT8   PcieClockGatingDisabled ;
  UINT8   PcieDmiAspm;
  UINT8   PcieSBDE;
  UINT8   GbePciePortNum;
  UINT8   PciePortConfig1;
  UINT8   PciePortConfig2;
  UINT8   PciePortConfig3;
  UINT8   PciePortConfig4;
  UINT8   PciePortConfig5;

  
  UINT8 GbeEnabled;

  
  UINT8 PchStepping;

  
  
  
  UINT8   XhciWakeOnUsbEnabled;

  
  
  



  UINT8   SystemErrorEn;
  
  
  UINT8   PoisonEn;
  UINT8   ViralEn;
  UINT8   ClearViralStatus;
  UINT8   CloakingEn;
  UINT8   UboxToPcuMcaEn;
  UINT8   FatalErrSpinLoopEn;

  UINT8   EmcaEn;
  UINT8   EmcaIgnOptin;
  UINT8   EmcaCsmiEn;
  UINT8   CsmiDynamicDisable;
  UINT8   EmcaMsmiEn;
  UINT8   ElogCorrErrEn;
  UINT8   ElogMemErrEn;
  UINT8   ElogProcErrEn;
  UINT8   EmcaSetFwUpdate;
  UINT8   LmceEn;

  UINT8   WheaSupportEn;
  UINT8   WheaLogMemoryEn;
  UINT8   WheaLogProcEn;

  UINT8   WheaLogPciEn;
  UINT8   AEPErrorInjEn;
  UINT8   WheaErrorInjSupportEn;
  UINT8   McaBankErrInjEn;
  UINT8   WheaErrInjEn;
  UINT8   WheaPcieErrInjEn;
  UINT8   MeSegErrorInjEn;
  UINT8   PcieErrInjActionTable;
 
  UINT8   MemErrEn;
  UINT8   CorrMemErrEn;
  UINT32  LeakyBktHiLeakyBktLo;
  UINT8   SpareIntSelect;
  UINT8   FnvErrorEn;
  UINT8   FnvErrorLowPrioritySignal;  
  UINT8   FnvErrorHighPrioritySignal; 
  UINT8   NgnAddressRangeScrub;
  UINT8   NgnHostAlertAit;        
  UINT8   NgnHostAlertDpa;        
  UINT8   NgnHostAlertPatrolScrubUNC;  

  UINT8   IioErrorEn;
  UINT8   IoMcaEn;
  UINT8   IioErrRegistersClearEn;
  UINT8   IioErrorPinEn;
  UINT8   LerEn;
  UINT8   DisableMAerrorLoggingDueToLER;
  UINT8   IioIrpErrorEn;
  UINT8   IioMiscErrorEn;
  UINT8   IioVtdErrorEn;
  UINT8   IioDmaErrorEn;
  UINT8   IioDmiErrorEn;
  UINT8   IioPcieAddCorrErrorEn;
  UINT8   IioPcieAddUnCorrEn;
  UINT8   IioPcieAerSpecCompEn;

  UINT8   PcieErrEn;
  UINT8   PcieCorrErrEn;
  UINT8   PcieUncorrErrEn;
  UINT8   PcieFatalErrEn;
  UINT8   PcieCorErrCntr;
  UINT8   PcieCorErrMaskBitMap;
  UINT16  PcieCorErrThres;
  UINT8   PcieAerCorrErrEn;
  UINT8   PcieAerAdNfatErrEn;
  UINT8   PcieAerNfatErrEn;
  UINT8   PcieAerFatErrEn;
  UINT8   SerrPropEn;
  UINT8   PerrPropEn;
  UINT8   OsSigOnSerrEn;
  UINT8   OsSigOnPerrEn;

  UINT8   CaterrGpioSmiEn;


  
  

  UINT8   McBankWarmBootClearError;
  UINT8   KTIFailoverSmiEn;

  UINT8   irpp0_parityError;
  UINT8   irpp0_qtOverflow;
  UINT8   irpp0_unexprsp;
  UINT8   irpp0_csraccunaligned;
  UINT8   irpp0_unceccCs1;
  UINT8   irpp0_unceccCs0;
  UINT8   irpp0_rcvdpoison;
  UINT8   irpp0_crreccCs1;
  UINT8   irpp0_crreccCs0;

  UINT8   PropagateSerr;
  UINT8   PropagatePerr;

  
  
  
  UINT8   serialDebugMsgLvl;
  UINT8   serialDebugTrace;
  UINT8   serialDebugMsgLvlTrainResults;

  UINT8   ResetOnMemMapChange;
#line 313 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Include\\Guid/SetupVariable.h"
  UINT8   ForceSetup;
  UINT8   BiosGuardEnabled;
  UINT8   BiosGuardPlatformSupported;
  UINT8   EnableAntiFlashWearout;
  UINT8   AntiFlashWearoutSupported;
  UINT8   DfxPopulateBGDirectory;

  UINT8   Use1GPageTable;
  
  
  
  UINT8   FastBoot;

  
  
  
  UINT8   ReserveMem;
  UINT64  ReserveStartAddr;

  
  
  
  UINT8  TagecMem;

  
  UINT8   UsbMassDevNum;
  UINT8   UsbLegacySupport;
  UINT8   UsbEmul6064;
  UINT8   UsbMassResetDelay;
  UINT8   UsbNonBoot;
  UINT8   UsbEmu1;
  UINT8   UsbEmu2;
  UINT8   UsbEmu3;
  UINT8   UsbEmu4;
  UINT8   UsbEmu5;
  UINT8   UsbEmu6;
  UINT8   UsbEmu7;
  UINT8   UsbEmu8;
  UINT8   UsbEmu9;
  UINT8   UsbEmu10;
  UINT8   UsbEmu11;
  UINT8   UsbEmu12;
  UINT8   UsbEmu13;
  UINT8   UsbEmu14;
  UINT8   UsbEmu15;
  UINT8   UsbEmu16;
  UINT8   UsbStackSupport;

  
  UINT8   ConsoleRedirection;
  UINT8   FlowControl;
  UINT64  BaudRate;
  UINT8   TerminalType;
  UINT8   LegacyOsRedirection;
  UINT8   TerminalResolution;
  UINT8   DataBits;
  UINT8   Parity;
  UINT8   StopBits;


  UINT8   SystemPageSize;
  UINT8   ARIEnable;
  UINT8   ARIForward;
  UINT8   SRIOVEnable;
  UINT8   MRIOVEnable;
#line 379 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Include\\Guid/SetupVariable.h"
  
  
  




  UINT8  LegacyPxeRom;
  UINT8  EfiNetworkSupport;







  UINT32        SerialBaudRate;




  UINT8         BootAllOptions;
  UINT8         SetShellFirst;

  
  
  
  UINT8  PlatformOCSupport;
  UINT8  FilterPll;
  UINT8  OverclockingSupport;

  UINT8  CoreMaxOcRatio;
  UINT8  CoreVoltageMode;
  UINT16 CoreVoltageOverride;
  UINT16 CoreVoltageOffset;
  UINT8  CoreVoltageOffsetPrefix;
  UINT16 CoreExtraTurboVoltage;

  
  
  
  UINT8  MemoryVoltage;
  UINT8  MemoryVoltageDefault;
  UINT8  tCL;

  
  
  
  UINT8   ClrMaxOcRatio;
  UINT8   ClrVoltageMode;
  UINT16  ClrVoltageOverride;
  UINT16  ClrVoltageOffset;
  UINT8   ClrVoltageOffsetPrefix;
  UINT16  ClrExtraTurboVoltage;

  
  
  
  UINT16   UncoreVoltageOffset;
  UINT8    UncoreVoltageOffsetPrefix;
  UINT16   IoaVoltageOffset;
  UINT8    IoaVoltageOffsetPrefix;
  UINT16   IodVoltageOffset;
  UINT8    IodVoltageOffsetPrefix;

  
  
  
  UINT8   SvidEnable;
  UINT16  SvidVoltageOverride;
  UINT8   FivrFaultsEnable;
  UINT8   FivrEfficiencyEnable;




  UINT8 SataInterfaceRAIDMode;
  UINT8 sSataInterfaceRAIDMode;



  UINT16  C01MemoryVoltage;
  UINT16  C23MemoryVoltage;

  UINT16  CpuVccInVoltage;

  UINT8   VccIoVoltage;

  UINT8   CloudProfile;
  UINT16  VariablePlatId;

  

  UINT8 FlexRatioOverrideDefault;
  UINT8 RatioLimit1Default;
  UINT8 RatioLimit2Default;
  UINT8 RatioLimit3Default;
  UINT8 RatioLimit4Default;
  UINT8 OverclockingLockDefault;
  UINT8 DdrRefClkDefault;
  UINT8 DdrRatioDefault;
  UINT8 tCLDefault;
  UINT8 tCWLDefault;
  UINT16 tFAWDefault;
  UINT16 tRASDefault;
  UINT16 tRCDefault;
  UINT8 tRCDDefault;
  UINT16 tREFIDefault;
  UINT16 tRFCDefault;
  UINT8 tRPDefault;
  UINT8 tRPabDefault;
  UINT8 tRRDDefault;
  UINT8 tRTPDefault;
  UINT8 tWRDefault;
  UINT8 tWTRDefault;
  UINT8 NModeDefault;
  UINT8 CoreMaxOcRatioDefault;
  UINT8 CoreVoltageModeDefault;
  UINT16 CoreVoltageOverrideDefault;
  UINT16 CoreVoltageOffsetDefault;
  UINT8 CoreVoltageOffsetPrefixDefault;
  UINT16 CoreExtraTurboVoltageDefault;
  UINT8 GtOcSupportDefault;
  UINT8 GtOcFrequencyDefault;
  UINT16 GtExtraTurboVoltageDefault;
  UINT16 GtOcVoltageDefault;
  UINT8 GtVoltageModeDefault;
  UINT16 GtVoltageOverrideDefault;
  UINT16 GtVoltageOffsetDefault;
  UINT8 GtVoltageOffsetPrefixDefault;
  UINT8 ClrMaxOcRatioDefault;
  UINT8 ClrVoltageModeDefault;
  UINT16 ClrVoltageOverrideDefault;
  UINT16 ClrVoltageOffsetDefault;
  UINT8 ClrVoltageOffsetPrefixDefault;
  UINT16 ClrExtraTurboVoltageDefault;
  UINT16 UncoreVoltageOffsetDefault;
  UINT8 UncoreVoltageOffsetPrefixDefault;
  UINT16 IoaVoltageOffsetDefault;
  UINT8 IoaVoltageOffsetPrefixDefault;
  UINT16 IodVoltageOffsetDefault;
  UINT8 IodVoltageOffsetPrefixDefault;
  UINT8 SvidEnableDefault;
  UINT16 SvidVoltageOverrideDefault;
  UINT8 FivrFaultsEnableDefault;
  UINT8 FivrEfficiencyEnableDefault;
  UINT16 VrCurrentLimitDefault;
  UINT8 EnableGvDefault;
  UINT8 TurboModeDefault;
  UINT8 PowerLimit1TimeDefault;
  UINT16 PowerLimit1Default;
  UINT16 PowerLimit2Default;


  UINT8 RatioLimit1; 
  UINT8 RatioLimit2;
  UINT8 RatioLimit3;
  UINT8 RatioLimit4;
  UINT8 CpuRatio; 
  UINT8 CpuRatioOverride;
  UINT8 IsTurboRatioDefaultsInitalized; 


  UINT8 DdrRefClk; 
  UINT8 PcieRatioDisabled;
  UINT8 NMode ;
  UINT8 Pmtt;

  UINT16 GtVoltageOffset; 
  UINT16 VrCurrentLimit;
  
  UINT8 NModeSupport;
  UINT8 WDTSupportforNextOSBoot; 
  UINT16 TimeforNextOSBoot; 
  UINT8 PlatformUnstable; 
  UINT8 GtVoltageMode; 
  UINT8 DdrRatio;
  UINT8 GtOcFrequency;
  UINT16 GtExtraTurboVoltage; 
  UINT16 GtVoltageOverride; 
  UINT8 GtVoltageOffsetPrefix;
  UINT8 GtOcSupport;
  
  
  
  UINT8 FlexOverrideEnable;
  UINT8 FlexRatioOverride;
  UINT8 PowerLimit3Override;
  UINT32 PowerLimit3;
  UINT8 PowerLimit3Time;
  UINT8 PowerLimit3DutyCycle;
  UINT8 PowerLimit3Lock;
  UINT8 MemoryVoltageOverride;

  
  
  
  UINT8 BClkOverride;
  UINT8 BclkAdjustable;
  UINT8 DmiPegRatio;
  UINT8 SkipXmlComprs;
  UINT8 DfxAdvDebugJumper;
  UINT8 DfxAltPostCode;

  
  
  
  UINT8   ValidationResetType;
  UINT16  ValidationCountOuter;
  UINT16  ValidationCountInner;
  UINT8   ValidationStopOnError;
  UINT8   ValidationBootWhenDone;
  UINT8   ValidationSkxPciError;
  UINT8   ValidationSkxPciLinkError;
  UINT8   ValidationPchPciError;
  UINT8   ValidationSkxPciLinkRecoveryCountError;
  UINT16  ValidationSkxPciLinkRecoveryCountThreshold;
  UINT8   ValidationKtiError;

  UINT8 TraceHubDebugInterface;
  UINT8 RamDebugInterface;















  UINT8   StorageOpROMSuppression;



  UINT8   RsaSupport;

} SYSTEM_CONFIGURATION;

typedef struct {
  UINT8   FakeItem;
} FAKE_VARSTORE;

#pragma pack()














extern EFI_GUID  { 0x6205c3a4, 0x1149, 0x491a, { 0xa6, 0xd6, 0x1e, 0x72, 0x3b, 0x87, 0x83, 0xb1 } };
extern EFI_GUID  { 0xc09c81cb, 0x31e9, 0x4de6, { 0xa9, 0xf9, 0x17, 0xa1, 0x44, 0x35, 0x42, 0x45 } };
extern EFI_GUID  { 0x7da45aa9, 0x6dbf, 0x4f1b, { 0xa4, 0x3e, 0x32, 0x87, 0xcb, 0xe5, 0x13, 0x51 } };
extern EFI_GUID  { 0x3a885aae, 0x3e30, 0x42b9, { 0xa9, 0x76, 0x2f, 0x1f, 0x13, 0xbd, 0x70, 0x15 } };
extern EFI_GUID  { 0x62197ef0, 0x7b7e, 0x11e2, { 0xb9, 0x2a, 0x08, 0x00, 0x20, 0x0c, 0x9a, 0x66 } };
extern EFI_GUID  gServerMgmtPkgListGuid;

















#line 666 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Include\\Guid/SetupVariable.h"
#line 32 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\SocketConfiguration.h"














































































































































































































































































































































































































































































































































































#line 560 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\SocketConfiguration.h"
#line 33 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketVariable.h"































#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"































#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Include\\MaxSocket.h"







































#line 33 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Include\\MaxCore.h"







































#line 34 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Include\\MaxThread.h"







































#line 35 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 39 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



























































#line 99 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 102 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 105 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 108 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 111 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 114 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 117 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 120 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 123 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 126 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 130 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 134 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 138 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"






#line 145 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 148 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 151 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 154 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 157 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 160 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 163 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 166 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 169 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 173 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 177 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 181 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"











#line 193 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"





#line 199 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


















#line 218 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"




#line 223 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"




#line 228 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"





#line 234 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"





#line 240 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 244 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 248 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 252 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 256 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 260 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"






#line 267 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"
#line 268 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 272 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 276 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 280 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"






#line 287 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"
#line 288 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 291 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 295 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"






#line 302 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"
#line 303 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 307 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 311 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 315 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 319 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 323 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 327 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 331 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 335 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 339 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 343 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"















#line 359 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 362 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"


#line 365 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"





#line 371 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"
#line 372 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"
#line 373 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 377 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 381 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"





#line 387 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"

#line 389 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"

#line 391 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"






























#line 422 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"



#line 426 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"










#line 437 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\UncoreCommonIncludes.h"
#line 33 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketVariable.h"

#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketIioVariable.h"


































extern EFI_GUID { 0xdd84017e, 0x7f52, 0x48f9, { 0xb1, 0x6e, 0x50, 0xed, 0x9e, 0x0d, 0xbe, 0x27 } };


#pragma pack(1)


typedef struct {






    UINT8                   VTdSupport;
    UINT8                   InterruptRemap;
    UINT8                   CoherencySupport;
    UINT8                   ATS;
    UINT8                   PostedInterrupt;
    UINT8                   PassThroughDma;





    UINT8   IioPresent[4];
    UINT8   VtdAcsWa;

    
    UINT8    SLOTHPCAP[168];        
    UINT8    SLOTHPSUP[168];        

    
    UINT8   ConfigIOU0[4];         
    UINT8   ConfigIOU1[4];         
    UINT8   ConfigIOU2[4];         
    UINT8   ConfigIOU3[4];         
    UINT8   ConfigIOU4[4];         
    UINT8   CompletionTimeoutGlobal;            
    UINT8   CompletionTimeoutGlobalValue;
    UINT8   CompletionTimeout[4];  
    UINT8   CompletionTimeoutValue[4]; 
    UINT8   CoherentReadPart;
    UINT8   CoherentReadFull;
    UINT8   PcieGlobalAspm;                    
    UINT8   StopAndScream;                     
    UINT8   SnoopResponseHoldOff;              
    
    
    
    UINT8   PCIe_LTR;                          
    UINT8   PcieExtendedTagField;              
    UINT8   Pcie10bitTag;
    UINT8   PCIe_AtomicOpReq;                  
    UINT8   PcieMaxReadRequestSize;            
    UINT8   PciePtm;                           


    UINT8   RpCorrectableErrorEsc[4];           
    UINT8   RpUncorrectableNonFatalErrorEsc[4]; 
    UINT8   RpUncorrectableFatalErrorEsc[4];    

    
    UINT8    PcieLinkDis[168];            
    UINT8    PcieAspm[168];               
    UINT8    PcieCommonClock[168];        
    UINT8    PcieMaxPayload[168];         
    UINT8    PcieDState[168];             
    UINT8    PcieL1Latency[168];          
    UINT8    MsiEn[168];                  
    UINT8    ExtendedSync[168];           
    UINT8    InbandPresenceDetect[168];   
    UINT8    PciePortDisable[168];        
    UINT8    PciePmeIntEn[168];           
    UINT8    IODC[168];                   

    
    
    
    UINT8    PciePortLinkSpeed[168];   
    UINT8    ComplianceMode[168];   
    UINT8    PciePortLinkMaxWidth[168]; 
    UINT8    DeEmphasis[168];       

    
    
    
    UINT8    EOI[168];              
    UINT8    MSIFATEN[168];         
    UINT8    MSINFATEN[168];        
    UINT8    MSICOREN[168];         
    UINT8    ACPIPMEn[168];         
    UINT8    P2PWrtDis[168];        
    UINT8    P2PRdDis[168];         
    UINT8    DisPMETOAck[168];      
    UINT8    ACPIHP[168];           
    UINT8    ACPIPM[168];           
    UINT8    SRIS[168];             
    UINT8    TXEQ[168];             
    UINT8    ECRC[168];             
    UINT8    SERRE[168];            
    
    
    

    UINT8   PcieUnsupportedRequests[168];   

    
    
    






      UINT8                 Cb3DmaEn[64];        
      UINT8                 Cb3NoSnoopEn[64];    
      UINT8                 DisableTPH;
      UINT8                 PrioritizeTPH;
      UINT8                 CbRelaxedOrdering;
      UINT8                 CbDmaMultiCastEnable;               







    
    UINT8   PEXPHIDE[168];            
    UINT8   DevPresIoApicIio[48];
                                                     
    UINT8   PCUF6Hide;                            
    UINT8   EN1K;                                 
    UINT8   DualCvIoFlow;                         
    UINT8   Pci64BitResourceAllocation;
    UINT8   PcieBiosTrainEnable;                  
    UINT8   MultiCastEnable;                      
    UINT8   McastBaseAddrRegion;                  
    UINT8   McastIndexPosition;                   
    UINT8   McastNumGroup;                        


    UINT8   HidePEXPMenu[168];          






  UINT8   NtbPpd[32];                   
  UINT8   NtbBarSizeOverride[32];       
  UINT8   NtbSplitBar[32];             
  UINT8   NtbBarSizeImBar1[32];         
  UINT8   NtbBarSizeImBar2[32];         
  UINT8   NtbBarSizeImBar2_0[32];          
  UINT8   NtbBarSizeImBar2_1[32];          
  UINT8   NtbBarSizeEmBarSZ1[32];         
  UINT8   NtbBarSizeEmBarSZ2[32];         
  UINT8   NtbBarSizeEmBarSZ2_0[32];          
  UINT8   NtbBarSizeEmBarSZ2_1[32];          
  UINT8   NtbXlinkCtlOverride[32];      






  UINT8   VMDEnabled[20];
  UINT8   VMDPortEnable[80];
  UINT8   VMDHotPlugEnable[20];
  UINT8   VMDCfgBarSz[20];
  UINT8   VMDCfgBarAttr[20];
  UINT8   VMDMemBarSz1[20];
  UINT8   VMDMemBar1Attr[20];
  UINT8   VMDMemBarSz2[20];
  UINT8   VMDMemBar2Attr[20];


  





    UINT8   PcieAICEnabled[20];
    UINT8   PcieAICPortEnable[80];
    UINT8   PcieAICHotPlugEnable[20];

  




  UINT8   NoSnoopRdCfg;                             
  UINT8   NoSnoopWrCfg;                             
  UINT8   MaxReadCompCombSize;                      
  UINT8   ProblematicPort;                          
  UINT8   DmiAllocatingFlow;                        
  UINT8   PcieAllocatingFlow;                       
  UINT8   PcieHotPlugEnable;                        
  UINT8   PcieAcpiHotPlugEnable;                    
  UINT8   HaltOnDmiDegraded;                        
  UINT8   RxClockWA;
  UINT8   GlobalPme2AckTOCtrl;                      
  UINT8   MctpEn;                                   
  UINT8   PcieSlotOprom1;                           
  UINT8   PcieSlotOprom2;                           
  UINT8   PcieSlotOprom3;                           
  UINT8   PcieSlotOprom4;                           
  UINT8   PcieSlotOprom5;                           
  UINT8   PcieSlotOprom6;                           
  UINT8   PcieSlotOprom7;                           
  UINT8   PcieSlotOprom8;                           
  UINT8   PcieSlotItemCtrl;                         
  UINT8   PcieRelaxedOrdering;                      
  UINT8   PciePhyTestMode;                          






  UINT8  DFXEnable;
  UINT8  DfxLtssmLogger;                
  UINT8  DfxLtssmLoggerStop;            
  UINT8  DfxLtssmLoggerSpeed;           
  UINT8  DfxLtssmLoggerMask;            
  UINT8  DfxJitterLogger;               
  UINT8  DfxIioRcFlow;                  
  UINT8  DfxIioLinkTraining;            
  UINT32 DfxSocketDevFuncHide[256]; 
  UINT8  DfxGen3NTBTestCard[168];                   

  UINT8  DfxGen3OverrideMode[168];          
  UINT8  DfxGen3TestCard[168];              
  UINT8  DfxGen3ManualPh2_Precursor[168];   
  UINT8  DfxGen3ManualPh2_Cursor[168];      
  UINT8  DfxGen3ManualPh2_Postcursor[168];  
  UINT8  DfxGen3ManualPh3_Precursor[168];   
  UINT8  DfxGen3ManualPh3_Cursor[168];      
  UINT8  DfxGen3ManualPh3_Postcursor[168];  
  UINT8  DfxDnTxPreset[168];                
  UINT8  DfxRxPreset[168];                  
  UINT8  DfxUpTxPreset[168];                

  UINT8  InboundConfiguration[168];         

} SOCKET_IIO_CONFIGURATION;
#pragma pack()

#line 287 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketIioVariable.h"
#line 35 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketVariable.h"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketCommonRcVariable.h"



































extern EFI_GUID { 0x4402ca38, 0x808f, 0x4279, { 0xbc, 0xec, 0x5b, 0xaf, 0x8d, 0x59, 0x09, 0x2f } };


#pragma pack(1)
typedef struct {
    
    
    
    UINT32   MmiohBase;
    UINT16   MmiohSize;
    UINT8    MmcfgBase;
    UINT8    MmcfgSize;
    UINT8    IsocEn;
    UINT8    NumaEn;
    UINT8    MirrorMode;
    UINT8    CpuType;
    UINT8    SubCpuType;
    UINT8    CpuStepping;
    UINT8    X2ApicForceEn;
    UINT8    SystemRasType;
    UINT8    NumCpus;
    UINT8    DfxRstCplBitsEn;
    UINT8    DfxB2PMailboxCmdEnMask[32];
    UINT8    OcCap;
} SOCKET_COMMONRC_CONFIGURATION;
#pragma pack()

#line 64 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketCommonRcVariable.h"


#line 36 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketVariable.h"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketPowermanagementVariable.h"



































extern EFI_GUID { 0xA1047342, 0xBDBA, 0x4DAE, { 0xA6, 0x7A, 0x40, 0x97, 0x9B, 0x65, 0xC7, 0xF8 } };




#pragma pack(1)

typedef struct {
  UINT8   LOT26UnusedVrPowerDownEnable;
  UINT8   WFRWAEnable;
  UINT8   UFSDisable;                       
  UINT8   ProcessorEistSupport;             
  UINT8   ProcessorEistEnable;              

  
  UINT8   ConfigTDP;
  UINT8   ConfigTDPLevel;

  
  
  
  UINT8   AcpiS3Enable;
  UINT8   AcpiS4Enable;

  
  
  
  UINT8   ProcessorHWPMEnable;
  UINT8   ProcessorAutonomousCstateEnable;
  UINT8   ProcessorHWPMInterrupt;
  UINT8   ProcessorEPPEnable;
  UINT8   ProcessorEppProfile;
  UINT8   ProcessorAPSrocketing;
  UINT8   ProcessorScalability;
  UINT8   ProcessorPerCoreRaplLimit;
  UINT8   ProcessorOutofBandAlternateEPB;
  
  
  
  UINT8   ProcessorEistPsdFunc;             
  UINT8   BootPState;                       

  
  
  
  UINT8   TurboMode;
  UINT8   EnableXe;

  
  UINT8   OverclockingLock;
  UINT8   AvxSupport;
  UINT8   AvxIccpLevel;

  UINT8   TurboRatioLimitRatio[8];
  UINT8   TurboRatioLimitCores[8];

  UINT8   C2C3TT;
  UINT8   DynamicL1;                        
  UINT8   ProcessorCcxEnable;               
  UINT8   PackageCState;                    
  UINT8   C3Enable;                         
  UINT8   C6Enable;                         
  UINT8   ProcessorC1eEnable;               
  UINT8   OSCx;                             
  UINT8   C1AutoDemotion;                   
  UINT8   C1AutoUnDemotion;                 
  UINT8   MonitorMWait;                     

  UINT8   CStateLatencyCtrlValid[6];       
  UINT8   CStateLatencyCtrlMultiplier[6];  
  UINT16  CStateLatencyCtrlValue[6];       

  UINT8   TStateEnable;                     
  UINT8   OnDieThermalThrottling;           
  UINT8   ProchotLock;
  UINT8   EnableProcHot;
  UINT8   EnableThermalMonitor;
  UINT8   ProchotResponse;
  UINT8   EETurboDisable;
  UINT8   SapmctlValCtl;
  UINT8   PwrPerfTuning;
  UINT8   AltEngPerfBIAS;
  UINT8   PwrPerfSwitch;
  UINT8   WorkLdConfig;
  UINT16  EngAvgTimeWdw1;

  UINT8   ProchotResponseRatio;
  UINT8   TCCActivationOffset;

  UINT8   P0TtlTimeLow1;
  UINT8   P0TtlTimeHigh1;

  UINT8   PkgCLatNeg;
  UINT8   LTRSwInput;
  UINT8   SAPMControl;
  UINT8   CurrentConfig;
  UINT8   PriPlnCurCfgValCtl;
  UINT8   Psi3Code;
  UINT16  CurrentLimit;

  UINT8   Psi3Thshld;
  UINT8   Psi2Code;
  UINT8   Psi2Thshld;
  UINT8   Psi1Code;
  UINT8   Psi1Thshld;

  
  UINT8   PkgCstEntryValCtl;

  
  UINT8   PpcccLock;

  UINT8   SnpLatVld;
  UINT8   SnpLatOvrd;
  UINT8   SnpLatMult;
  UINT16  SnpLatVal;
  UINT16  NonSnpLatVld;
  UINT8   NonSnpLatOvrd;
  UINT8   NonSnpLatMult;
  UINT16   NonSnpLatVal;

  
  UINT8   EepLOverride;
  UINT8   EepLOverrideEn;
  UINT8   ITurboOvrdEn;
  UINT8   CstDemotOvrdEN;
  UINT8   TrboDemotOvrdEn;
  UINT8   UncrPerfPlmtOvrdEn;
  UINT8   EetOverrideEn;
  UINT8   IoBwPlmtOvrdEn;
  UINT8   ImcApmOvrdEn;                      
  UINT8   IomApmOvrdEn;
  UINT8   KtiApmOvrdEn;
  UINT8   PerfPLmtThshld;

  
  UINT8   Iio0PkgcClkGateDis[4]; 
  UINT8   Iio1PkgcClkGateDis[4]; 
  UINT8   Iio2PkgcClkGateDis[4]; 
  UINT8   Kti01PkgcClkGateDis[4]; 
  UINT8   Kti23PkgcClkGateDis[4];  
  UINT8   P0pllOffEna[4]; 
  UINT8   P1pllOffEna[4]; 
  UINT8   P2pllOffEna[4]; 
  UINT8   Mc0pllOffEna[4]; 
  UINT8   Mc1pllOffEna[4]; 
  UINT8   Mc0PkgcClkGateDis[4]; 
  UINT8   Mc1PkgcClkGateDis[4]; 
  UINT8   Kti01pllOffEna[4];  
  UINT8   Kti23pllOffEna[4];  
  UINT8   SetvidDecayDisable[4];  
  UINT8   SapmCtlLock[4];  

  
  UINT8   PerfPLimitClip;
  UINT8   PerfPLimitEn;

  
  UINT8   PerfPlimitDifferential;
  UINT8   PerfPLimitClipC;

  
  UINT8   Kti0In[4];
  UINT8   Kti1In[4];
  UINT8   Kti2In[4];

  
  UINT8   PcieIio0In[4];
  UINT8   PcieIio1In[4];
  UINT8   PcieIio2In[4];
  UINT8   PcieIio3In[4];
  UINT8   PcieIio4In[4];
  UINT8   PcieIio5In[4];

  
  UINT8   EnablePkgcCriteria;
  UINT8   PkgCCriteriaLogicalIpType[4];
  UINT8   EnablePkgCCriteriaKti[4];
  UINT8   EnablePkgCCriteriaRlink[4];
  UINT8   EnablePkgCCriteriaFxr[4];
  UINT8   EnablePkgCCriteriaMcddr[4];
  UINT8   EnablePkgCCriteriaIio[4];
  UINT8   EnablePkgCCriteriaHqm[4];
  UINT8   EnablePkgCCriteriaNac[4];
  UINT8   EnablePkgCCriteriaTip[4];
  UINT8   PkgCCriteriaLogicalIpTypeMcddr[4];
  UINT8   PkgCCriteriaLogicalIpTypeIio[4];
  UINT8   PkgCCriteriaInstanceNoKti[4];
  UINT8   PkgcCriteraPsMaskKti[4];
  UINT8   PkgCCriteriaAllowedPsMaskKti[4];
  UINT8   PkgCCriteriaInstanceNoRlink[4];
  UINT8   PkgcCriteraPsMaskRlink[4];
  UINT8   PkgCCriteriaAllowedPsMaskRlink[4];
  UINT8   PkgCCriteriaInstanceNoFxr[4];
  UINT8   PkgcCriteraPsMaskFxr[4];
  UINT8   PkgCCriteriaAllowedPsMaskFxr[4];
  UINT8   PkgCCriteriaInstanceNoMcddr[4];
  UINT8   PkgcCriteraPsMaskMcddr[4];
  UINT8   PkgCCriteriaAllowedPsMaskMcddr[4];
  UINT8   PkgCCriteriaInstanceNoIio[4];
  UINT8   PkgcCriteraPsMaskIio[4];
  UINT8   PkgCCriteriaAllowedPsMaskIio[4];
  UINT8   PkgCCriteriaInstanceNoHqm[4];
  UINT8   PkgcCriteraPsMaskHqm[4];
  UINT8   PkgCCriteriaAllowedPsMaskHqm[4];
  UINT8   PkgCCriteriaInstanceNoNac[4];
  UINT8   PkgcCriteraPsMaskNac[4];
  UINT8   PkgCCriteriaAllowedPsMaskNac[4];
  UINT8   PkgCCriteriaInstanceNoTip[4];
  UINT8   PkgcCriteraPsMaskTip[4];
  UINT8   PkgCCriteriaAllowedPsMaskTip[4];

  UINT8   FastRaplDutyCycle;
  UINT8   TurboPowerLimitLock;
  UINT8   TurboPowerLimitCsrLock;
  UINT8   PowerLimit1En;
  UINT16  PowerLimit1Power;
  UINT8   PowerLimit1Time;
  UINT8   PowerLimit2En;
  UINT16  PowerLimit2Power;
  UINT8   PowerLimit2Time;

  UINT8   UsePmaxOffsetTable;
  UINT8   PmaxSign;
  UINT8   PmaxOffset;
  UINT8   PmaxDetectorIo;

  

  UINT8   MaxEfficiencyRatio[4];
  UINT8   MaxNonTurboRatio[4];

  UINT8   VccSAandVccIOdisable;
  
  UINT8   SwLtrOvrdCtl;

} SOCKET_POWERMANAGEMENT_CONFIGURATION;
#pragma pack()

#line 276 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketPowermanagementVariable.h"




#line 37 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketVariable.h"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketProcessorCoreVariable.h"



































extern EFI_GUID { 0x07013588, 0xC789, 0x4E12, { 0xA7, 0xC3, 0x88, 0xFA, 0xFA, 0xE7, 0x9F, 0x7C } };


#pragma pack(1)

typedef struct {

  UINT8   CpuidMaxValue;

  UINT8   PchTraceHubEn;                    
  UINT8   ProcessorHyperThreadingDisable;   
  UINT8   ProcessorSmxEnable;               
  UINT8   ThreeStrikeTimer;                 
  UINT8   FastStringEnable;                 
  UINT8   MachineCheckEnable;               
  UINT8   MlcStreamerPrefetcherEnable;      
  UINT8   MlcSpatialPrefetcherEnable;       
  UINT8   DCUStreamerPrefetcherEnable;      
  UINT8   DCUIPPrefetcherEnable;            
  UINT8   DCUModeSelection;                 
  UINT8   ProcessorX2apic;                  
  UINT8   ForceX2ApicIds;                   
  UINT8   BspSelection;                     
  UINT8   IedSize;                          
  UINT8   IedTraceSize;                     
  UINT8   TsegSize;                         
  UINT8   AllowMixedPowerOnCpuRatio;        
  UINT8   CheckCpuBist;                     
  UINT8   ProcessorFlexibleRatio;           
  UINT8   ProcessorFlexibleRatioOverrideEnable;         
  UINT8   MTRRDefTypeUncachable;            
  UINT8   ForcePhysicalModeEnable;          
  UINT8   LlcPrefetchEnable;                
  UINT8   ProcessorVirtualWireMode;

  UINT8   ExecuteDisableBit;
  UINT8   ProcessorLtsxEnable;              
  UINT8   ProcessorVmxEnable;               
  UINT8   ProcessorMsrLockControl;          
  UINT8   DebugInterface;                   
  UINT8   AesEnable;
  UINT8   PpinControl;                      
  UINT8   LockChipset;                      
  UINT8   BiosAcmErrorReset;                
  UINT8   AcmType;                          
  UINT8   EnableSgx;
  UINT8   SgxFactoryReset;
  UINT8   SgxOobManagement;
  UINT8   SgxPackageInfoInBandAccess;
  UINT8   EpochUpdate;
  UINT8   ShowEpoch;
  UINT64  PrmrrBase0;                       
  UINT64  PrmrrSize;
  UINT64  SgxEpoch0;
  UINT64  SgxEpoch1;
  UINT8   SgxQoS;
  UINT64  SgxLePubKeyHash0;
  UINT64  SgxLePubKeyHash1;
  UINT64  SgxLePubKeyHash2;
  UINT64  SgxLePubKeyHash3;
  UINT8   SgxLeWr;
  UINT8   SgxDebugMode;
  UINT8   EnableTme;
  UINT8   EnableTmeCR;
  UINT8   TmeCrSupport;
  UINT32  TmeExclusionBase;
  UINT32  TmeExclusionLength;
  UINT8   EnableMktme;
  UINT16  MktmeMaxKeys;

  UINT8   SkipStopPbet;                     

  UINT64  CoreDisableMask[4];      

  

    
    
    
    
    
    
#line 119 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketProcessorCoreVariable.h"
  UINT8   IotEn[4];
  UINT8   OclaMaxTorEntry[4];
  UINT8   OclaMinWay[4];
  UINT32  IioLlcWaysMask;                         
  UINT32  ExpandedIioLlcWaysMask;                 
  UINT32  RemoteWaysMask;                         


  UINT8   PCIeDownStreamPECIWrite;




  UINT8 TargetedSmi;



  UINT8 eSmmSaveState;

  UINT8 PeciInTrustControlBit; 

  UINT8  Poison;
  UINT8  Viral;
  UINT8  EVMode;
  UINT8  SmbusErrorRecovery;
  UINT8  CpuL1NextPagePrefetcherDisable;

} SOCKET_PROCESSORCORE_CONFIGURATION;
#pragma pack()

#line 150 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketProcessorCoreVariable.h"




#line 38 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketVariable.h"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"


































extern EFI_GUID { 0x2b9b22de, 0x2ad4, 0x4abc, { 0x95, 0x7d, 0x5f, 0x18, 0xc5, 0x04, 0xa0, 0x5c } };


#pragma pack(1)
typedef struct {
  
  UINT8  QpiSetupNvVariableStartTag;  

  
  
  
  
  
  
  
  
  UINT8  BusRatio[4];
  UINT8  LegacyVgaSoc;         
  UINT8  LegacyVgaStack;       
  UINT8  MmioP2pDis;           
  UINT8  DebugPrintLevel;      
  UINT8  DegradePrecedence;    

  
  
  
  UINT8  QpiLinkSpeedMode;         
  UINT8  QpiLinkSpeed;             
  UINT8  KtiLinkL0pEn;             
  UINT8  KtiLinkL1En;              
  UINT8  KtiFailoverEn;            
  UINT8  KtiLbEn;                  
  UINT8  KtiCrcMode;               
  UINT8  QpiCpuSktHotPlugEn;       
  UINT8  KtiCpuSktHotPlugTopology; 
  UINT8  KtiSkuMismatchCheck;      
  UINT8  KtiLinkVnaOverride;       
  UINT8  SncEn;                    
  UINT8  IoDcMode;                 
                                   
  UINT8  DirectoryModeEn;          
  UINT8  XptPrefetchEn;            
  UINT8  KtiPrefetchEn;            
  UINT8  XptRemotePrefetchEn;      
  UINT8  RdCurForXptPrefetchEn;    
  UINT8  IrqThreshold;             
  UINT8  TorThresLoctoremNorm;     
  UINT8  TorThresLoctoremEmpty;    
  UINT8  TscSyncEn;                
  UINT8  StaleAtoSOptEn;           
  UINT8  LLCDeadLineAlloc;         
  UINT8  SplitLock;                
                                   
  UINT8  DdrtQoSEn;                

  
  
  
  UINT8  DfxSystemWideParmStart;       
  UINT8  DfxHaltLinkFailReset;         
  UINT8  DfxKtiMaxInitAbort;           
  UINT8  DfxLlcShareDrdCrd;            
  UINT8  DfxBiasFwdMode;               
  UINT8  DfxSnoopFanoutEn;             
  UINT8  DfxHitMeEn;                   
  UINT8  DfxFrcfwdinv;                 
  UINT8  DfxDbpEnable;                 
  UINT8  DfxCleanEvictAlwaysLive;      
  UINT8  DfxModifiedEvictAlwaysLive;   
  UINT8  DfxOsbEn;                     
  UINT8  DfxHitMeRfoDirsEn;            
  UINT8  DfxGateOsbIodcAllocEn;        
  UINT8  DfxDualLinksInterleavingMode; 
  UINT8  DfxSystemDegradeMode;         
  UINT8  DfxVn1En;                     
  UINT8  DfxD2cEn;                     
  UINT8  DfxD2kEn;                     
  UINT8  DfxLockMaster;                
  UINT8  DfxOsbLocRd;                  
  UINT8  DfxOsbLocRdCur;               
  UINT8  DfxOsbRmtRd;                  
  UINT8  DfxSystemWideParmEnd;         


  UINT8  SvKtiSystemWideParmStartTag;  

  
  
  
  UINT8  SvMinCreditSocEn[4]; 
  UINT8  SvAkFifoThld;                 
  UINT8  SvM3KtiCountMismatchEn;       
  UINT8  SvDisIsocEgrRes;              
  UINT8  SvKtiForceUnusedL1En;         
  UINT8  SvMctpBroadcastEn;            
  UINT8  SvKtiEvDebugPrintEn;          

  UINT8  SvKtiSystemWideParmEndTag;    

#line 135 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"



  UINT8 KtiCpuPerPortStartTag;
  UINT8 Cpu0P0KtiPortDisable;UINT8 Cpu0P0KtiLinkSpeed;UINT8 Cpu0P0KtiLinkVnaOverride;
  UINT8 Cpu0P1KtiPortDisable;UINT8 Cpu0P1KtiLinkSpeed;UINT8 Cpu0P1KtiLinkVnaOverride;
  UINT8 Cpu0P2KtiPortDisable;UINT8 Cpu0P2KtiLinkSpeed;UINT8 Cpu0P2KtiLinkVnaOverride;

  UINT8 Cpu1P0KtiPortDisable;UINT8 Cpu1P0KtiLinkSpeed;UINT8 Cpu1P0KtiLinkVnaOverride;
  UINT8 Cpu1P1KtiPortDisable;UINT8 Cpu1P1KtiLinkSpeed;UINT8 Cpu1P1KtiLinkVnaOverride;
  UINT8 Cpu1P2KtiPortDisable;UINT8 Cpu1P2KtiLinkSpeed;UINT8 Cpu1P2KtiLinkVnaOverride;
#line 147 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"

  UINT8 Cpu2P0KtiPortDisable;UINT8 Cpu2P0KtiLinkSpeed;UINT8 Cpu2P0KtiLinkVnaOverride;
  UINT8 Cpu2P1KtiPortDisable;UINT8 Cpu2P1KtiLinkSpeed;UINT8 Cpu2P1KtiLinkVnaOverride;
  UINT8 Cpu2P2KtiPortDisable;UINT8 Cpu2P2KtiLinkSpeed;UINT8 Cpu2P2KtiLinkVnaOverride;
#line 152 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"

  UINT8 Cpu3P0KtiPortDisable;UINT8 Cpu3P0KtiLinkSpeed;UINT8 Cpu3P0KtiLinkVnaOverride;
  UINT8 Cpu3P1KtiPortDisable;UINT8 Cpu3P1KtiLinkSpeed;UINT8 Cpu3P1KtiLinkVnaOverride;
  UINT8 Cpu3P2KtiPortDisable;UINT8 Cpu3P2KtiLinkSpeed;UINT8 Cpu3P2KtiLinkVnaOverride;
#line 157 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"




#line 162 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"




#line 167 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"




#line 172 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"




#line 177 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"



  UINT8 DfxKtiCpuPerPortStartTag;
  UINT8 Cpu0P0DfxCrcMode;UINT8 Cpu0P0DfxL0pEnable;UINT8 Cpu0P0DfxL1Enable;UINT8 Cpu0P0DfxKtiFailoverEn;
  UINT8 Cpu0P1DfxCrcMode;UINT8 Cpu0P1DfxL0pEnable;UINT8 Cpu0P1DfxL1Enable;UINT8 Cpu0P1DfxKtiFailoverEn;
  UINT8 Cpu0P2DfxCrcMode;UINT8 Cpu0P2DfxL0pEnable;UINT8 Cpu0P2DfxL1Enable;UINT8 Cpu0P2DfxKtiFailoverEn;

  UINT8 Cpu1P0DfxCrcMode;UINT8 Cpu1P0DfxL0pEnable;UINT8 Cpu1P0DfxL1Enable;UINT8 Cpu1P0DfxKtiFailoverEn;
  UINT8 Cpu1P1DfxCrcMode;UINT8 Cpu1P1DfxL0pEnable;UINT8 Cpu1P1DfxL1Enable;UINT8 Cpu1P1DfxKtiFailoverEn;
  UINT8 Cpu1P2DfxCrcMode;UINT8 Cpu1P2DfxL0pEnable;UINT8 Cpu1P2DfxL1Enable;UINT8 Cpu1P2DfxKtiFailoverEn;
#line 189 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"

  UINT8 Cpu2P0DfxCrcMode;UINT8 Cpu2P0DfxL0pEnable;UINT8 Cpu2P0DfxL1Enable;UINT8 Cpu2P0DfxKtiFailoverEn;
  UINT8 Cpu2P1DfxCrcMode;UINT8 Cpu2P1DfxL0pEnable;UINT8 Cpu2P1DfxL1Enable;UINT8 Cpu2P1DfxKtiFailoverEn;
  UINT8 Cpu2P2DfxCrcMode;UINT8 Cpu2P2DfxL0pEnable;UINT8 Cpu2P2DfxL1Enable;UINT8 Cpu2P2DfxKtiFailoverEn;
#line 194 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"

  UINT8 Cpu3P0DfxCrcMode;UINT8 Cpu3P0DfxL0pEnable;UINT8 Cpu3P0DfxL1Enable;UINT8 Cpu3P0DfxKtiFailoverEn;
  UINT8 Cpu3P1DfxCrcMode;UINT8 Cpu3P1DfxL0pEnable;UINT8 Cpu3P1DfxL1Enable;UINT8 Cpu3P1DfxKtiFailoverEn;
  UINT8 Cpu3P2DfxCrcMode;UINT8 Cpu3P2DfxL0pEnable;UINT8 Cpu3P2DfxL1Enable;UINT8 Cpu3P2DfxKtiFailoverEn;
#line 199 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"




#line 204 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"




#line 209 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"




#line 214 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"




#line 219 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"

  UINT8  QpiSetupNvVariableEndTag;  
} SOCKET_MP_LINK_CONFIGURATION;

#pragma pack()

#line 226 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMpLinkVariable.h"

#line 39 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketVariable.h"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMemoryVariable.h"


































#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Platform\\10nm\\Include\\MemDefaults.h"























































































#line 89 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Platform\\10nm\\Include\\MemDefaults.h"
























































































































































#line 242 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Platform\\10nm\\Include\\MemDefaults.h"

#line 244 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Platform\\10nm\\Include\\MemDefaults.h"









#line 254 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Platform\\10nm\\Include\\MemDefaults.h"

#line 256 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Platform\\10nm\\Include\\MemDefaults.h"








































































































































































































































































































































































































































































































































#line 777 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Platform\\10nm\\Include\\MemDefaults.h"

#line 779 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Platform\\10nm\\Include\\MemDefaults.h"

































































































#line 877 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Platform\\10nm\\Include\\MemDefaults.h"
























































#line 934 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Platform\\10nm\\Include\\MemDefaults.h"





















































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1820 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Platform\\10nm\\Include\\MemDefaults.h"



#line 1824 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Platform\\10nm\\Include\\MemDefaults.h"
































































































































































































































































#line 2081 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Platform\\10nm\\Include\\MemDefaults.h"


#line 2084 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Platform\\10nm\\Include\\MemDefaults.h"














































































































































































#line 2259 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Platform\\10nm\\Include\\MemDefaults.h"

#line 36 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMemoryVariable.h"

extern EFI_GUID { 0x98cf19ed, 0x4109, 0x4681, { 0xb7, 0x9d, 0x91, 0x96, 0x75, 0x7c, 0x78, 0x24 } };


#pragma pack(1)
typedef struct {
  UINT8                   dfxMaxNodeInterleave;
  UINT8                   MemoryHotPlugBase;
  UINT8                   MemoryHotPlugLen;
  UINT8                   Srat;
  UINT8                   SratMemoryHotPlug;
  UINT8                   SratCpuHotPlug;
  UINT8                   PagePolicy;
  UINT8                   PatrolScrub;
  UINT8                   PatrolScrubDuration;
  UINT8                   PatrolScrubAddrMode;
  UINT8                   partialmirrorsad0;
  UINT8                   PartialMirrorUefi;
  UINT16                  PartialMirrorUefiPercent;
  UINT16                  partialmirrorsize[4]; 
  UINT8                   ImmediateFailoverAction;
  UINT8                   DemandScrubMode;
  UINT8                   SddcPlusOneEn;
  UINT8                   MemCeFloodPolicy;
  UINT16                  spareErrTh;
  UINT8                   DieSparing;
  UINT8                   DieSparingAggressivenessLevel;
  UINT8                   PclsEn;
  UINT8                   ADDDCEn;
  UINT8                   AdddcErrInjEn;
  UINT8                   ManualDeviceSpareEn; 
  UINT8                   leakyBktLo;
  UINT8                   leakyBktHi;
  UINT8                   txEqCalibration;
  UINT8                   CmdTxEqCalibration;
  UINT8                   RxDfe;
  UINT8                   TxRiseFallSlewRate;
  UINT8                   iModeTraining;
  UINT8                   RoundTripLatency;
  UINT8                   DutyCycleTraining;
  UINT8                   refreshMode;
  UINT8                   dllResetTestLoops;
  UINT8                   DdrMemoryType;
  UINT8                   HwMemTest;
  UINT16                  MemTestLoops;
  UINT8                   EccSupport;
  UINT8                   SocketInterleaveBelow4GB;

  UINT8                   ExtendedADDDCEn;
#line 86 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMemoryVariable.h"
  UINT8                   DfxInputRt;
  UINT8                   DfxInputIoLatency;
  UINT8                   DfxInputIoLatencyIoComp;
  UINT16                  DfxInputTxDqDelay;
  UINT16                  DfxInputTxDqsDelay;
  UINT16                  DfxInputTxDqBitDelay;
  UINT8                   DfxInputRxDqDelay;
  UINT16                  DfxInputRxDqsDelay;
  UINT8                   DfxInputRxDqBitDelay;
  UINT16                  DfxInputGnt2Erid;
  UINT8                   DfxCwlAdjPos;
  UINT8                   DfxCwlAdjNeg;
  UINT16                  DfxRcvEnDelay;
  UINT8                   DfxDdrtRt;
  UINT8                   dfxDimmManagement;
  UINT8                   dfxPartitionDDRTDimm;
  UINT8                   dfxPartitionRatio[16];    
  UINT8                   volMemMode;
  UINT8                   PmemCaching;
  UINT8                   dfxPerMemMode;
  UINT8                   memInterleaveGran1LM;
  UINT8                   dfxMemInterleaveGranPMemUMA;
  UINT8                   dfxCfgMask2LM;
  UINT8                   ImcInterleaving;
  UINT8                   ChannelInterleaving;
  UINT8                   RankInterleaving;
  UINT8                   CkeProgramming;
  UINT8                   SrefProgramming;
  UINT8                   PkgcSrefEn;
  UINT8                   CkeIdleTimer;
  UINT8                   ApdEn;
  UINT8                   PpdEn;
  UINT8                   DdrtCkeEn;
  UINT8                   OppSrefEn;
  UINT8                   DdrtSrefEn;
  UINT8                   MdllOffEn;
  UINT8                   CkMode;
  UINT8                   MemTestOnFastBoot;
  UINT8                   AttemptFastBoot;
  UINT8                   AttemptFastBootCold;
  UINT8                   bdatEn;
  UINT8                   ScrambleEnDDRT;
  UINT8                   ScrambleEn;  
  UINT8                   allowCorrectableError;
  UINT8                   allowCorrectableMemTestError;
  UINT16                  ScrambleSeedLow;
  UINT16                  ScrambleSeedHigh;
  UINT8                   CustomRefreshRateEn;
  UINT8                   CustomRefreshRate;
  UINT8                   mcBgfThreshold;
  UINT8                   readVrefCenter;
  UINT8                   wrVrefCenter;
  UINT8                   haltOnMemErr;
  UINT8                   thermalthrottlingsupport;
  UINT8                   OffPkgMemToThermTrip;
  UINT8                   OffPkgMemToMemTrip;
  UINT8                   InPkgMemToThermTrip;
  UINT8                   InPkgMemToMemTrip;
  UINT8                   DimmTempStatValue;
  UINT8                   XMPProfilesSup;
  UINT8                   XMPMode;
  UINT8                   tCAS;
  UINT8                   tRP;
  UINT8                   tRCD;
  UINT8                   tRAS;
  UINT8                   tWR;
  UINT16                  tRFC;
  UINT8                   tRRD;
  UINT8                   tRTP;
  UINT8                   tWTR;
  UINT8                   tFAW;
  UINT8                   tCWL;
  UINT8                   tRC;
  UINT8                   commandTiming;
  UINT16                  tREFI;
  UINT8                   DdrFreqLimit;
  UINT16                  Vdd;
  UINT8                   lrdimmModuleDelay;
  UINT32                  rmtPatternLength;
  UINT32                  rmtPatternLengthExt;
  UINT8                   check_pm_sts;
  UINT8                   check_platform_detect;
  UINT8                   MemPwrSave;
  UINT8                   ElectricalThrottlingMode;
  UINT8                   MultiThreaded;
  UINT8                   promoteMrcWarnings;
  UINT8                   promoteWarnings;
  UINT8                   oppReadInWmm;
  UINT16                  normOppInterval;
  UINT8                   sck0ch0;
  UINT8                   sck0ch1;
  UINT8                   sck0ch2;
  UINT8                   sck0ch3;
  UINT8                   sck0ch4;
  UINT8                   sck0ch5;
  UINT8                   sck0ch6;
  UINT8                   sck0ch7;
  UINT8                   sck1ch0;
  UINT8                   sck1ch1;
  UINT8                   sck1ch2;
  UINT8                   sck1ch3;
  UINT8                   sck1ch4;
  UINT8                   sck1ch5;
  UINT8                   sck1ch6;
  UINT8                   sck1ch7;
  UINT8                   sck2ch0;
  UINT8                   sck2ch1;
  UINT8                   sck2ch2;
  UINT8                   sck2ch3;
  UINT8                   sck2ch4;
  UINT8                   sck2ch5;
  UINT8                   sck2ch6;
  UINT8                   sck2ch7;
  UINT8                   sck3ch0;
  UINT8                   sck3ch1;
  UINT8                   sck3ch2;
  UINT8                   sck3ch3;
  UINT8                   sck3ch4;
  UINT8                   sck3ch5;
  UINT8                   sck3ch6;
  UINT8                   sck3ch7;
  UINT8                   mdllSden;
  UINT8                   memhotSupport;
  UINT8                   MemHotIn;
  UINT8                   MemHotOut;
  UINT8                   MemhotOutputOnlyOpt;
  UINT8                   ADREn;
  UINT8                   RankMargin;
  UINT8                   EnableBacksideRMT;
  UINT8                   EnableBacksideCMDRMT;
  UINT8                   EnableNgnBcomMargining;
  UINT8                   rankMaskEn;
  UINT8                   RankSparing;
  UINT8                   multiSparingRanks;
  UINT8                   caParity;
  UINT8                   dimmIsolation;
  UINT8                   smbSpeed;
  UINT8                   EnforcePOR;
  UINT8                   pda;
  UINT8                   turnaroundOpt;
    UINT8                 turnaroundOptDdrt;
  UINT8                   oneRankTimingMode;
  UINT8                   eyeDiagram;
  UINT8                   EnableBiosSsaLoader;
  UINT8                   EnableBiosSsaRMT;
  UINT8                   EnableBiosSsaHbmRmt;
  UINT8                   EnableBiosSsaRMTonFCB;
  UINT8                   BiosSsaPerBitMargining;
  UINT8                   BiosSsaDisplayTables;
  UINT8                   BiosSsaPerDisplayPlots;
  UINT8                   BiosSsaLoopCount;
  UINT8                   BiosSsaBacksideMargining;
  UINT8                   BiosSsaEarlyReadIdMargining;
  UINT8                   BiosSsaStepSizeOverride;
  UINT8                   BiosSsaRxDqs;
  UINT8                   BiosSsaRxVref;
  UINT8                   BiosSsaTxDq;
  UINT8                   BiosSsaTxVref;
  UINT8                   BiosSsaCmdAll;
  UINT8                   BiosSsaCmdVref;
  UINT8                   BiosSsaCtlAll;
  UINT8                   BiosSsaEridDelay;
  UINT8                   BiosSsaEridVref;
  UINT8                   BiosSsaDebugMessages;
  UINT8                   DramRaplInit;
  UINT8                   BwLimitTfOvrd;
  UINT8                   perbitmargin;
  UINT8                   DramRaplExtendedRange;
  UINT8                   CmsEnableDramPm;
  UINT8                   logParsing;
  UINT8                   WritePreamble;
  UINT8                   ReadPreamble;
  UINT8                   WrCRC;
  
  UINT8                   LockNgnCsr;
  UINT8                   NgnCmdTime;
  UINT8                   NgnEccCorr;
  UINT8                   NgnEccWrChk;
  UINT8                   NgnEccRdChk;
  UINT8                   CrMonetization;
  UINT8                   NgnDebugLock;
  UINT8                   NgnArsPublish;
  UINT8                   NgnArsOnBoot;
  UINT8                   NgnPowerMgmt;
  UINT8                   RmtOnColdFastBoot;
  UINT8                   mrcRepeatTest;
  UINT8                   dfxLowMemChannel;
  UINT8                   dfxHighAddressStartBitPosition;
  UINT8                   staggerref;
  UINT32                  memFlows;
  UINT32                  memFlowsExt;
  UINT8                   Blockgnt2cmd1cyc;
  UINT8                   Disddrtopprd;
  UINT16                  NgnPeakPower;
  UINT16                  NgnAveragePower;
  UINT8                   setSecureEraseAllDIMMs;
  UINT8                   setSecureEraseSktCh[48];
  
  
  
  UINT8                   pprType;
  UINT8                   pprErrInjTest;
  
  UINT8                   crQosConfig;
  
  UINT8                   dfxLoadDimmMgmtDriver;
  UINT8                   DfxLoadDimmDebugFw;
  UINT8                   LegacyADRModeEn;
  
  UINT8                   crMixedSKU;






  UINT8                   imcBclk;
  UINT8                   spdCrcCheck;
  UINT8                   DfxDdrtTransactor;
  UINT8                   SanitizeOverwriteNvmDimm;
  UINT8                   LatchSystemShutdownState;
  UINT8                   EliminateDirectoryInFarMemory;
  
  
  
  UINT8                   HbmCacheEnable;
  UINT8                   HbmCacheRatio;
  UINT8                   HbmCacheFmType;
  UINT8                   HbmCacheDdrtGran;
  UINT8                   HbmPagePolicy;
  UINT8                   HbmDbiMode;
  UINT8                   HbmRelaxedTurnaround;
  UINT8                   HbmRefreshMode;
  UINT8                   HbmSrefProgramming;
  UINT8                   HbmSrefIdleTimer;
  UINT8                   HbmOppSrefEn;
  UINT8                   HbmPkgcSrefEn;
  
  UINT8                   CmiInitOption;
  
  
  
  UINT8                   cmdSetupPercentOffset;
  UINT8                   ShortStroke2GB;
} SOCKET_MEMORY_CONFIGURATION;

#pragma pack()

#line 335 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketMemoryVariable.h"

#line 40 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketVariable.h"

#pragma pack(1)

typedef struct {
  SOCKET_IIO_CONFIGURATION       IioConfig;
  SOCKET_COMMONRC_CONFIGURATION  CommonRcConfig;
  SOCKET_MP_LINK_CONFIGURATION   CsiConfig;
  SOCKET_MEMORY_CONFIGURATION    MemoryConfig;
  SOCKET_POWERMANAGEMENT_CONFIGURATION PowerManagementConfig;
  SOCKET_PROCESSORCORE_CONFIGURATION   SocketProcessorCoreConfiguration;
} SOCKET_CONFIGURATION;



#pragma pack()
#line 56 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/SocketVariable.h"

#line 34 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"




#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Include\\PchSetupVariable.h"































#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\serverplatformpkg\\include\\PchSetupVariableLbg.h"
































extern EFI_GUID gEfiPchSetupGuid;



#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\SouthCluster\\PchLimits.h"
































#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Pch/SouthClusterLbg/Include/PchLimits.h"





























































































































#line 127 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Pch/SouthClusterLbg/Include/PchLimits.h"

#line 34 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\SouthCluster\\PchLimits.h"
#line 38 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\serverplatformpkg\\include\\PchSetupVariableLbg.h"







#pragma pack(1)
typedef struct {
  UINT8   BiosGuard;

  UINT8     MeType;
#line 51 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\serverplatformpkg\\include\\PchSetupVariableLbg.h"
  UINT8   Dwr_Enable;
  UINT8   Dwr_Stall;
  UINT8   Dwr_BmcRootPort;

  UINT8   DwrEn_PMCGBL;
  UINT8   DwrEn_CPUTHRM;
  UINT8   DwrEn_PCHTHRM;
  UINT8   DwrEn_PBO;
  UINT8   DwrEn_MEPBO;
  UINT8   DwrEn_MEWDT;
  UINT8   DwrEn_MEGBL;
  UINT8   DwrEn_CTWDT;
  UINT8   DwrEn_PMCWDT;
  UINT8   DwrEn_ME_UERR;
  UINT8   DwrEn_SYSPWR;
  UINT8   DwrEn_OCWDT;
  UINT8   DwrEn_IEPBO;
  UINT8   DwrEn_IEWDT;
  UINT8   DwrEn_IEGBLN;
  UINT8   DwrEn_IE_UERRN;
  UINT8   DwrEn_ACRU_ERR_2H_EN;

  UINT8   DwrPmcEn_HOST_RESET_TIMEOUT;
  UINT8   DwrPmcEn_SX_ENTRY_TIMEOUT;
  UINT8   DwrPmcEn_HOST_RST_PROM;
  UINT8   DwrPmcEn_HSMB_MSG;
  UINT8   DwrPmcEn_IE_MTP_TIMEOUT;
  UINT8   DwrPmcEn_MTP_TIMEOUT;
  UINT8   DwrPmcEn_ESPI_ERROR_DETECT;

  UINT8   Dwr_MeResetPrepDone;
  UINT8   Dwr_IeResetPrepDone;

  
  
  
  UINT8   BoardCapability;
  UINT8   DeepSxMode;
  UINT8   Gp27WakeFromDeepSx;
  UINT8   GbeRegionInvalid;
  UINT8   LomLanSupported;
  UINT8   PchWakeOnLan;
  UINT8   PchSlpLanLowDc;
  UINT8   PchSmbus;
  UINT8   PchPciClockRun;
  UINT8   PchDisplay;
  UINT8   PchCrid;
  UINT8   PchRtcLock;
  UINT8   PchBiosLock;
  UINT8   PchAllUnLock;
  UINT8   PchThermalUnlock;
  UINT8   PchSerm;
  UINT8   PchGbeFlashLockDown;
  UINT8   PchSmmBwp;

  UINT8   Hpet;
  UINT8   PchPort80Route;
  UINT8   EnableClockSpreadSpec;
  UINT8   IchPort80Route;
  UINT8   PchSirqMode;

  
  
  
  UINT8   PchUsbManualMode;
  UINT8   PchGpioLockDown;
  UINT8   RouteUsb2PinsToWhichHc;
  UINT8   RouteUsb2Pin0;
  UINT8   RouteUsb2Pin1;
  UINT8   RouteUsb2Pin2;
  UINT8   RouteUsb2Pin3;
  UINT8   RouteUsb2Pin4;
  UINT8   RouteUsb2Pin5;
  UINT8   RouteUsb2Pin6;
  UINT8   RouteUsb2Pin7;
  UINT8   RouteUsb2Pin8;
  UINT8   RouteUsb2Pin9;
  UINT8   RouteUsb2Pin10;
  UINT8   RouteUsb2Pin11;
  UINT8   RouteUsb2Pin12;
  UINT8   RouteUsb2Pin13;
  UINT8   Usb3PinsTermination;
  UINT8   EnableUsb3Pin[10];
  UINT8   PchUsbHsPort[16];
  UINT8   PchUsbSsPort[10];
  UINT8   PchUsbPortDisable;
  UINT8   UsbSensorHub;
  UINT8   UsbSsicSupport[2];
  UINT8   XhciDisMSICapability;
  UINT8   PchUsbPerPortCtl;
  UINT8   PchUsb30Port[6];
  UINT8   UsbPrecondition;
  UINT8   XhciIdleL1;
  UINT8   Btcg;
  UINT8   PchUsbDegradeBar;
  
  
  
  UINT8   XhciOcMapEnabled;
  
  
  
  UINT8   PchXdciSupport;
  
  
  
  UINT8   PchSata;
  
  
  
  
  UINT8   SataInterfaceMode;
  UINT8   SataPort[8];
  UINT8   SataHotPlug[8];
  UINT8   SataMechanicalSw[8];
  UINT8   SataSpinUp[8];
  UINT8   SataExternal[8];
  UINT8   SataType[8];
  UINT8   SataRaidR0;
  UINT8   SataRaidR1;
  UINT8   SataRaidR10;
  UINT8   SataRaidR5;
  UINT8   SataRaidIrrt;
  UINT8   SataRaidOub;
  UINT8   SataHddlk;
  UINT8   SataLedl;
  UINT8   SataRaidIooe;
  UINT8   SataRaidSrt;
  UINT8   SataRaidLoadEfiDriver[2];
  UINT8   SataRaidOromDelay;
  UINT8   SataAlternateId;
  UINT8   SataSalp;
  UINT8   SataTestMode;
  UINT8   PxDevSlp[8];
  UINT8   EnableDitoConfig[8];
  UINT16  DitoVal[8];
  UINT8   DmVal[8];
  UINT8   SataTopology[8];

  
  
  
  UINT8   PchsSata;
  
  
  
  
  UINT8   sSataInterfaceMode;
  UINT8   sSataPort[6];
  UINT8   sSataHotPlug[6];
  UINT8   sSataSpinUp[6];
  UINT8   sSataExternal[6];
  UINT8   sPxDevSlp[6];
  UINT8   sSataType[6];
  UINT8   sSataRaidR0;
  UINT8   sSataRaidR1;
  UINT8   sSataRaidR10;
  UINT8   sSataRaidR5;
  UINT8   sSataRaidIrrt;
  UINT8   sSataRaidOub;
  UINT8   sSataHddlk;
  UINT8   sSataLedl;
  UINT8   sSataRaidIooe;
  UINT8   sSataRaidSrt;
  UINT8   sSataRaidOromDelay;
  UINT8   sSataAlternateId;
  UINT8   sSataSalp;
  UINT8   sSataTestMode;
  UINT8   sEnableDitoConfig[6];
  UINT8   sDmVal[6];
  UINT8   sDitoVal[6];
  UINT8   sSataTopology[6];

  
  UINT8   ThermalDeviceEnable;
  UINT8   PchCrossThrottling;

  UINT8   PchDmiExtSync;
  UINT8   PcieDmiExtSync;
  
  UINT8   PciDelayOptimizationEcr;
  UINT8   PchPcieGlobalAspm;

  UINT8   PcieDmiStopAndScreamEnable;
  UINT8   DmiLinkDownHangBypass;
  UINT8   XTpmLen;
  UINT8   PcieRootPort8xhDecode;
  UINT8   Pcie8xhDecodePortIndex;
  UINT8   PcieRootPortPeerMemoryWriteEnable;
  UINT8   PcieComplianceTestMode;



  UINT8   ForceEnableAllPCIePorts;





  UINT8   PcieRootPortSBDE;
  UINT8   PcieSBDEPort;

  UINT8   RstPcieStorageRemap[3];
  UINT8   RstPcieStorageRemapPort[3];
  UINT8   PcieRootPortFunctionSwapping;
  UINT8   PcieRootPortEn[20];
  UINT8   PcieRootPortAspm[20];
  UINT8   PcieRootPortURE[20];
  UINT8   PcieRootPortFEE[20];
  UINT8   PcieRootPortNFE[20];
  UINT8   PcieRootPortCEE[20];
  UINT8   PcieRootPortMSIE[20];
  UINT8   PcieRootPortMaxPayLoadSize[20];
  UINT8   PcieRootPortAER[20];
  UINT8   PcieTopology[20];

  UINT8   PcieLaneCm[20];
  UINT8   PcieLaneCp[20];

  UINT8   PcieSwEqOverride;
  UINT8   PcieSwEqCoeffCm[5];
  UINT8   PcieSwEqCoeffCp[5];



  UINT8   TestPchPcieEqPh2Override[20];
  UINT8   TestPchPcieEqPh2Preset[20];



  UINT8   PchPcieUX8MaxPayloadSize;
  UINT8   PchPcieUX16MaxPayloadSize;
  UINT8   PcieRootPortCompletionTimeout[20];
  UINT8   PcieClockGatingDisabled;
  UINT8   PcieUsbGlitchWa;
  UINT8   PcieRootPortPIE[20];
  UINT8   PcieRootPortACS[20];
  UINT8   PcieRootPortEqPh3Method[20];
  UINT8   PcieRootPortMaxReadRequestSize;
  UINT8   PcieRootPortSFE[20];
  UINT8   PcieRootPortSNE[20];
  UINT8   PcieRootPortSCE[20];
  UINT8   PcieRootPortPMCE[20];
  UINT8   PcieRootPortHPE[20];
  UINT8   PcieRootPortSpeed[20];
  UINT8   PcieRootPortTHS[20];

  
  
  
  UINT8   PcieRootPortL1SubStates[20];
  UINT8   MemoryThermalManagement;
  UINT8   ExttsViaTsOnBoard;
  UINT8   ExttsViaTsOnDimm;
  UINT8   FixupPlatformSpecificSoftstraps;

  
  
  
  UINT8   TestSmbusSpdWriteDisable;

  
  
  
  UINT8   PchHdAudio;
  UINT8   PchHdAudioDsp;
  UINT8   PchHdAudioPme;
  UINT8   PchHdAudioIoBufferOwnership;
  UINT8   PchHdAudioIoBufferVoltage;
  UINT8   PchHdAudioCodecSelect;
  UINT8   PchHdAudioFeature[3];
  UINT8   PchHdAudioPostProcessingMod[2];

  UINT8   DfxHdaVcType;
  
  
  
  UINT8   PchDelayEnDmiAspm; 
  UINT8   TestDmiAspmCtrl;


  
  
  
  
  UINT8   PchPcieLtrEnable[20];
  UINT8   PchPcieLtrConfigLock[20];
  UINT8   PchPcieSnoopLatencyOverrideMode[20];
  UINT8   PchPcieSnoopLatencyOverrideMultiplier[20];
  UINT8   PchPcieNonSnoopLatencyOverrideMode[20];
  UINT8   PchPcieNonSnoopLatencyOverrideMultiplier[20];
  UINT16  PchPcieSnoopLatencyOverrideValue[20];
  UINT16  PchPcieNonSnoopLatencyOverrideValue[20];

  UINT8   PchPcieForceLtrOverride[20];
  UINT8   PchSataLtrOverride;
  UINT8   PchSataLtrEnable;
  UINT16  PchSataSnoopLatencyOverrideValue;
  UINT8   PchSataSnoopLatencyOverrideMultiplier;
  UINT8   PchSataLtrConfigLock;

  UINT8   PchSSataLtrOverride;
  UINT16  PchSSataSnoopLatencyOverrideValue;
  UINT8   PchSSataSnoopLatencyOverrideMultiplier;
  UINT8   PchSSataLtrEnable;
  UINT8   PchSSataLtrConfigLock;

  UINT8   PchPcieUX16CompletionTimeout;
  UINT8   PchPcieUX8CompletionTimeout;

  
  
  
  UINT8   PchIoApic24119Entries;

  
  
  
  UINT8   EnableDptf;
  UINT8   EnablePchDevice;

  
  
  
  UINT8   DebugDciEnable;
  UINT8   DebugInterfaceEnable;

  
  
  
  UINT8   OsDebugPort;
  UINT8   SlpLanLowDc;
  UINT8   PchLanK1Off;
  UINT8   PchWakeOnWlan;
  UINT8   PchWakeOnWlanDeepSx;
  UINT8   StateAfterG3;
  UINT8   PciePllSsc;
  UINT8   FirmwareConfiguration;
  UINT8   PchDciEn;
  UINT8   PchDciAutoDetect;

  
  UINT8   CSNotifyEC;
  UINT8   EcLowPowerMode;

  
  
  
  UINT8   TraceHubEnableMode;
  UINT8   MemRegion0BufferSize;
  UINT8   MemRegion1BufferSize;

  
  
  
  UINT8   PchP2sbDevReveal;
  UINT8   PchP2sbUnlock;

  
  
  
  UINT8   ShowSpiController;
  UINT8   FlashLockDown;

  
  
  
  UINT8   PmcReadDisable;




  
  
  
  UINT8   TestESPIIOMemoryProg;




  
  
  
  UINT8   PchAdrEn;
  UINT8   AdrTimerEn;
  UINT8   AdrTimerVal;
  UINT8   AdrMultiplierVal;
  UINT8   AdrGpioSel;
  UINT8   AdrHostPartitionReset;

  
  
  
  UINT8   PchAudioDsp;
  UINT8   PchAudioDspD3PowerGating;
  UINT8   PchAudioDspAcpiMode;
  UINT8   PchAudioDspBluetooth;
  UINT8   PchAudioDspAcpiInterruptMode;

  
  
  






















  
  
  
  UINT8   PchEvaMrom0HookEnable;
  UINT8   PchEvaMrom1HookEnable;
  UINT8   TestMctpBroadcastCycle;
  UINT8   PchEvaLockDown;
  UINT8   PchTraceHubHide;
} PCH_SETUP;
#pragma pack()

#line 487 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\serverplatformpkg\\include\\PchSetupVariableLbg.h"


#line 33 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Include\\PchSetupVariable.h"
#line 34 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Include\\PchSetupVariable.h"
#line 39 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"






#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\MeRcConfiguration.h"





































#line 39 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\MeRcConfiguration.h"
#line 46 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/MeRcVariable.h"
































extern EFI_GUID { 0x2b26358d, 0xf899, 0x41c4, { 0x9b, 0xc2, 0x82, 0xa3, 0x38, 0xb9, 0x93, 0xd8 }};





#pragma pack (1)
typedef struct {
  
  
  
  UINT8   Asf;
  
  
  
  UINT8   WatchDog;
  UINT16  WatchDogTimerBios;
  UINT8   WatchDogOs;
  UINT16  WatchDogTimerOs;
  
  
  
  UINT8   Amt;
  
  
  

  UINT8   MeDidEnabled;                
  UINT8   MeDidInitStat;               
  UINT8   HsioMessagingEnabled;
  UINT8   MeEndOfPostEnabled;

  UINT8   MeHeci1Enabled;
  UINT8   MeHeci2Enabled;
  UINT8   MeHeci3Enabled;



  UINT8   MeIderEnabled;
  UINT8   MeKtEnabled;

  UINT8   DisableD0I3SettingForHeci;
  UINT8   HostResetNotification;
  UINT8   DelayedAuthenticationModeEnabled; 
  UINT8   DelayedAuthenticationMode;        
#line 79 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/MeRcVariable.h"

  UINT8   CoreBiosDoneEnabled;
  UINT8   MeFwDowngrade;
  UINT8   LocalFwUpdEnabled;
  UINT8   OsPtpAware;

  UINT8   MePttEnabled;

  UINT16  SpsAltitude;
  UINT16  SpsMctpBusOwner;

  UINT8   SpsPmbusProxySupported;
  UINT8   SpsPsuAddress[4];

  UINT8   PreDidMeResetEnabled;

  UINT8   MeHeci1HideInMe;
  UINT8   MeHeci2HideInMe;
  UINT8   MeHeci3HideInMe;




  UINT8   MePttSupported;
  UINT8   NmPwrOptBoot;
  UINT8   NmCores2Disable;

  UINT8   MeTimeout;

  UINT8   MeHmrfpoLockEnabled;
  UINT8   MeHmrfpoEnableEnabled;
  UINT8   MeHmrfpoViaHeci3;

  UINT8   MeGrLockEnabled;
  UINT8   MeGrPromotionEnabled;
  UINT8   BreakRtcEnabled;

  UINT8   SpsIccClkOverride;           
  UINT8   SpsIccClkSscSetting;

  UINT8   NmPwrOptBootOverride;
  UINT8   NmCores2DisableOverride;

  UINT8   NmPowerMsmtOverride;
  UINT8   NmPowerMsmtSupport;
  UINT8   NmHwChangeOverride;
  UINT8   NmHwChangeStatus;
  UINT8   NmPtuLoadOverride;           




#line 132 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/MeRcVariable.h"

#line 134 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/MeRcVariable.h"

  UINT8     MeType;
  UINT8     MeFirmwareMode;

  UINT8     MeImageType;
  UINT8     MngState;
  UINT8     MdesCapability;
  UINT8     MeIsCorporateWs;
  UINT8     FWProgress;
  UINT8     RemoteSessionActive;
  UINT8     AmtCiraRequest;
  UINT8     AmtCiraTimeout;
  UINT8     UnConfigureMe;
  UINT8     HideUnConfigureMeConfirm;
  UINT8     MebxDebugMsg;
  UINT8     USBProvision;
  UINT8     AmtbxSelectionScreen;
  UINT8     AmtbxHotKeyPressed;
  UINT8     MebxNonUiTextMode;
  UINT8     MebxUiTextMode;
  UINT8     MebxGraphicsMode;
  UINT8     MeStateControl;





  
  UINT8   CpuTypeEmulation;
  UINT8   CLINKDisableOverride;
  UINT8   VproAllowed;



  UINT8   BiosReflash;
  UINT8   BiosSetup;
  UINT8   BiosPause;
  UINT8   SecureBootExposureToFw;
#line 173 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/MeRcVariable.h"
  UINT8   MeFirmwareInfo;
#line 175 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/MeRcVariable.h"
  
  
  


  UINT8   IccClkOverride;      
                               
  UINT8   IccProfile;
  UINT8   ShowProfile;
  UINT32  BClkFrequency;
  UINT32  BClkOverride;


#line 189 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/MeRcVariable.h"
  UINT16 Frequency[2];
  UINT8  Spread[2];
  UINT8  ShowClock[2];
  UINT8  ShowFrequency[2];
  UINT8  ShowSpread[2];
  UINT8  RegLock;
  UINT8  AllowAdvancedOptions;
  UINT8  PlatformType;
#line 198 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/MeRcVariable.h"

} ME_RC_CONFIGURATION;
#pragma pack ()

#line 203 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/MeRcVariable.h"


#line 47 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\MeTypeDefs.h"


































#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Me/MeLbg/Include/MeTypeDefs.h"





















































#line 55 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Me/MeLbg/Include/MeTypeDefs.h"
#line 36 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\MeTypeDefs.h"
#line 48 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 49 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"






#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\IeRcConfiguration.h"
































#line 34 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\IeRcConfiguration.h"
#line 56 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/IeRcVariable.h"

































extern EFI_GUID { 0xd8b85944, 0x13b2, 0x41f9, {0x85, 0xc6, 0xa0, 0xb1, 0x33, 0x78, 0x3e, 0x40 }};



#pragma pack(1)
typedef struct {
  UINT16  SubsystemVendorId;
  UINT16  SubsystemId;
  UINT8   IeHeci1Enabled;
  UINT8   IeHeci2Enabled;
  UINT8   IeHeci3Enabled;



  UINT8   IeIderEnabled;
  UINT8   IeKtEnabled;
  UINT8   IeDisabledInSoftStraps;
  UINT8   DfxIe;
  UINT8   IeUmaSupported;
  UINT8   IeDidEnabled;
  UINT8   IeUmaRequested;
  UINT8   IePassUmaBaseAddress;

} IE_RC_CONFIGURATION;
#pragma pack()

#line 61 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/IeRcVariable.h"

#line 63 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Guid/IeRcVariable.h"


#line 57 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 58 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"




#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerRestrictedPkg\\CpuSv\\Include\\SvConfiguration.h"






























































































#line 63 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerRestrictedPkg\\CpuSv\\Include\\Guid/SvOtherVariable.h"




































extern EFI_GUID { 0x422ed87f, 0x8ea3, 0x4aac, { 0x80, 0xd8, 0x50, 0x8d, 0xe1, 0x52, 0x08, 0xef } };








#pragma pack(1)


typedef struct {





  UINT8   SvBootMode;
  UINT8   CpuSvBootFlag;
  UINT8   FinalSVLoop;
  UINT8   SvDrng;
  UINT8   SvRtitResvMem;
  UINT32  SvRtitOutMemSize;
  UINT8   USB_Stop;
  UINT16  InitStartUpCodeSegment;
  UINT16  InitStartUpCodeOffset;
  UINT8   Reserve_Lower_4K;
  UINT8   SvITPasCpuSvHIF;
  UINT8   EnableCloaking;
  UINT8   EnableErrCtrlLockUnlock;
  UINT8   XmlKnobsFormat;
  UINT8   CpuSvPublishSmmMcaCap;

} SV_OTHER_CONFIGURATION;
#line 73 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerRestrictedPkg\\CpuSv\\Include\\Guid/SvOtherVariable.h"
#pragma pack()
#line 75 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerRestrictedPkg\\CpuSv\\Include\\Guid/SvOtherVariable.h"

#line 64 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 65 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"

  
  
  




#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerRestrictedPkg\\Include\\Guid/BmcLanCfg.h"






































#pragma pack(2)











typedef struct _BMC_LAN_IPV4_INFO {
  UINT8 Source;
  CHAR16 Address [16];
  CHAR16 SubnetMask [16];
  CHAR16 Gateway [16];
} BMC_LAN_IPV4_INFO;

typedef struct _BMC_LAN_IPV6_INFO {
  UINT8 Enable;
  UINT8 Source;
  UINT8 PrefixLength;
  CHAR16 Address [40];
  CHAR16 Gateway [40];
} BMC_LAN_IPV6_INFO;

typedef struct _BMC_LAN_USER_INFO {
  CHAR16 Name [20];
  CHAR16 Password [20];
  UINT8 Status;
  UINT8 Privilege;
} BMC_LAN_USER_INFO;

typedef struct _BMC_LAN_CFG_DATA {
  UINT8 NicPresent;
  UINT8 RmmPresent;
  UINT8 UserSelect;
  CHAR16 DhcpName [64];
  BMC_LAN_IPV4_INFO NicIpv4;
  BMC_LAN_IPV6_INFO NicIpv6;
  BMC_LAN_IPV4_INFO RmmIpv4;
  BMC_LAN_IPV6_INFO RmmIpv6;
  BMC_LAN_USER_INFO User1;      
  BMC_LAN_USER_INFO User2;      
  BMC_LAN_USER_INFO User3;      
  BMC_LAN_USER_INFO User4;      
  BMC_LAN_USER_INFO User5;      
} BMC_LAN_CFG_DATA;
#pragma pack()

#line 91 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerRestrictedPkg\\Include\\Guid/BmcLanCfg.h"
#line 74 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 75 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
  
  
  

#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\Common.hfr"

















































    
  
  
  
  
  




  




  
  
  






#line 80 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\ResetMisc.h"










































#line 44 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\ResetMisc.h"
#line 81 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerPlatformPkg\\Include\\../Platform/Dxe/SocketSetup/VariableCommon.hfr"


























































#line 82 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"

formset
>00000000: 0E A7 43 D6 87 EC A4 EB B5 4B A1 E5 3F 3E 36 B2 0D A9 AD 07 AE 07 01 71 99 03 93 45 85 04 4B B4 5E 32 EB 83 26 04 0E 
>00000051: 5C 06 77 07 00 00 
>00000057: 5C 06 78 07 01 00 
    guid      = { 0xec87d643, 0xeba4, 0x4bb5, 0xa1, 0xe5, 0x3f, 0x3e, 0x36, 0xb2, 0xd, 0xa9 },
    title     = STRING_TOKEN(0x07AD),
    help      = STRING_TOKEN(0x07AE),
    class     = 0x02,
>00000027: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 03 02 00 
    subclass  = 0,
>0000003C: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 04 00 00 

    efivarstore SYSTEM_CONFIGURATION, attribute = 0x7, name = Setup, guid = { 0xec87d643, 0xeba4, 0x4bb5, 0xa1, 0xe5, 0x3f, 0x3e, 0x36, 0xb2, 0xd, 0xa9 };
>0000005D: 26 20 01 00 43 D6 87 EC A4 EB B5 4B A1 E5 3F 3E 36 B2 0D A9 07 00 00 00 C6 01 53 65 74 75 70 00 
    efivarstore PCH_SETUP,                  attribute = 0x7,  name = PchSetup,             guid = { 0x4570b7f1, 0xade8, 0x4943, 0x8d, 0xc3, 0x40, 0x64, 0x72, 0x84, 0x23, 0x84 };
>0000007D: 26 23 02 00 F1 B7 70 45 E8 AD 43 49 8D C3 40 64 72 84 23 84 07 00 00 00 92 04 50 63 68 53 65 74 75 70 00 


    efivarstore ME_RC_CONFIGURATION,        attribute = 0x7,  name = MeRcConfiguration,    guid = {0x2b26358d, 0xf899, 0x41c4, 0x9b, 0xc2, 0x82, 0xa3, 0x38, 0xb9, 0x93, 0xd8 };
>000000A0: 26 2C 03 00 8D 35 26 2B 99 F8 C4 41 9B C2 82 A3 38 B9 93 D8 07 00 00 00 70 00 4D 65 52 63 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 00 
#line 96 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"



        efivarstore IE_RC_CONFIGURATION,
>000000CC: 26 2C 04 00 44 59 B8 D8 B2 13 F9 41 85 C6 A0 B1 33 78 3E 40 07 00 00 00 0F 00 49 65 52 63 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 00 
                attribute =  0x7, 
                name = IeRcConfiguration,
                guid = { 0xd8b85944, 0x13b2, 0x41f9, 0x85, 0xc6, 0xa0, 0xb1, 0x33, 0x78, 0x3e, 0x40 };
#line 104 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"








    efivarstore SV_OTHER_CONFIGURATION,        attribute = 0x7, name = SvOtherConfiguration, guid = { 0x422ed87f, 0x8ea3, 0x4aac, 0x80, 0xd8, 0x50, 0x8d, 0xe1, 0x52, 0x8, 0xef };
>000000F8: 26 2F 05 00 7F D8 2E 42 A3 8E AC 4A 80 D8 50 8D E1 52 08 EF 07 00 00 00 14 00 53 76 4F 74 68 65 72 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 00 
#line 114 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
    efivarstore SOCKET_IIO_CONFIGURATION, attribute = 0x7, name = SocketIioConfig, guid = { 0xdd84017e, 0x7f52, 0x48f9, 0xb1, 0x6e, 0x50, 0xed, 0x9e, 0xd, 0xbe, 0x27 }; efivarstore SOCKET_COMMONRC_CONFIGURATION, attribute = 0x7, name = SocketCommonRcConfig, guid = { 0x4402ca38, 0x808f, 0x4279, 0xbc, 0xec, 0x5b, 0xaf, 0x8d, 0x59, 0x09, 0x2f }; efivarstore SOCKET_MP_LINK_CONFIGURATION, attribute = 0x7, name = SocketMpLinkConfig, guid = { 0x2b9b22de, 0x2ad4, 0x4abc, 0x95, 0x7d, 0x5f, 0x18, 0xc5, 0x04, 0xa0, 0x5c }; efivarstore SOCKET_MEMORY_CONFIGURATION, attribute = 0x7, name = SocketMemoryConfig, guid = { 0x98cf19ed, 0x4109, 0x4681, 0xb7, 0x9d, 0x91, 0x96, 0x75, 0x7c, 0x78, 0x24 }; efivarstore SOCKET_POWERMANAGEMENT_CONFIGURATION, attribute = 0x7, name = SocketPowerManagementConfig, guid = { 0xA1047342, 0xBDBA, 0x4DAE, 0xA6, 0x7A, 0x40, 0x97, 0x9B, 0x65, 0xC7, 0xF8 }; efivarstore SOCKET_PROCESSORCORE_CONFIGURATION, attribute = 0x7, name = SocketProcessorCoreConfig, guid = { 0x07013588, 0xC789, 0x4E12, 0xA7, 0xC3, 0x88, 0xFA, 0xFA, 0xE7, 0x9F, 0x7C };
>00000127: 26 2A 06 00 7E 01 84 DD 52 7F F9 48 B1 6E 50 ED 9E 0D BE 27 07 00 00 00 84 27 53 6F 63 6B 65 74 49 69 6F 43 6F 6E 66 69 67 00 
>00000151: 26 2F 07 00 38 CA 02 44 8F 80 79 42 BC EC 5B AF 8D 59 09 2F 07 00 00 00 33 00 53 6F 63 6B 65 74 43 6F 6D 6D 6F 6E 52 63 43 6F 6E 66 69 67 00 
>00000180: 26 2D 08 00 DE 22 9B 2B D4 2A BC 4A 95 7D 5F 18 C5 04 A0 5C 07 00 00 00 9F 00 53 6F 63 6B 65 74 4D 70 4C 69 6E 6B 43 6F 6E 66 69 67 00 
>000001AD: 26 2D 09 00 ED 19 CF 98 09 41 81 46 B7 9D 91 96 75 7C 78 24 07 00 00 00 6C 01 53 6F 63 6B 65 74 4D 65 6D 6F 72 79 43 6F 6E 66 69 67 00 
>000001DA: 26 36 0A 00 42 73 04 A1 BA BD AE 4D A6 7A 40 97 9B 65 C7 F8 07 00 00 00 92 01 53 6F 63 6B 65 74 50 6F 77 65 72 4D 61 6E 61 67 65 6D 65 6E 74 43 6F 6E 66 69 67 00 
>00000210: 26 34 0B 00 88 35 01 07 89 C7 12 4E A7 C3 88 FA FA E7 9F 7C 07 00 00 00 BD 00 53 6F 63 6B 65 74 50 72 6F 63 65 73 73 6F 72 43 6F 72 65 43 6F 6E 66 69 67 00 
  
  
  

    varstore BMC_LAN_CFG_DATA, key = 0, name = BmcLan, guid = {0xa0ec86da, 0x446d, 0x453e, {0x91, 0x44, 0x52, 0x6d, 0xfa, 0xd, 0x9e, 0x8c}};
>00000244: 24 1D DA 86 EC A0 6D 44 3E 45 91 44 52 6D FA 0D 9E 8C 0C 00 2A 04 42 6D 63 4C 61 6E 00 


#line 123 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
  
  
  

  varstore FAKE_VARSTORE, varid = 0x1234, name = FakeVar, guid = { 0xe57d5cb9, 0x148f, 0x444d, 0x9e, 0xcb, 0x9d, 0xf8, 0x65, 0x30, 0xa0, 0xb4 };
>00000261: 24 1E B9 5C 7D E5 8F 14 4D 44 9E CB 9D F8 65 30 A0 B4 34 12 01 00 46 61 6B 65 56 61 72 00 

    defaultstore MyStandardDefault,
      prompt      = STRING_TOKEN(0x0777),
      attribute   = 0x0000;                         

    defaultstore MyManufactureDefault,
      prompt      = STRING_TOKEN(0x0778),
      attribute   = 0x0001;

    form formid = 0x01,
>0000027F: 01 86 01 00 AD 07 

        title = STRING_TOKEN(0x07AD);

        suppressif TRUE;
>00000285: 0A 82 
>00000287: 46 02 
          oneof varid     = FAKE_VARSTORE.FakeItem,
>00000289: 05 91 C2 07 C3 07 01 00 34 12 00 00 10 10 00 01 00 
              prompt      = STRING_TOKEN(0x07C2),
              help        = STRING_TOKEN(0x07C3),
              option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000029A: 09 07 A7 00 30 00 00 
              option text = STRING_TOKEN(0x00A7),  value = 1, flags = RESET_REQUIRED;
>000002A1: 09 07 A7 00 00 00 01 
          endoneof;
>000002A8: 29 02 
        endif;
>000002AA: 29 02 

        disableif TRUE;
>000002AC: 1E 82 
>000002AE: 46 02 
            numeric varid     = SYSTEM_CONFIGURATION.VariablePlatId,
>000002B0: 07 94 75 07 76 07 02 00 01 00 33 01 00 11 00 00 01 00 01 00 
            prompt      = STRING_TOKEN(0x0775),
            help        = STRING_TOKEN(0x0776),
              minimum = 0,
              maximum = 0x1,
              step    = 1,
            endnumeric;
>000002C4: 29 02 
        endif;
>000002C6: 29 02 

        
        
        
        
        
        
        
        
        suppressif TRUE;
>000002C8: 0A 82 
>000002CA: 46 02 
          checkbox varid = SYSTEM_CONFIGURATION.PlatformOCSupport,
>000002CC: 06 8E CF 07 D0 07 03 00 01 00 03 01 00 00 
            prompt  = STRING_TOKEN(0x07CF),
            help    = STRING_TOKEN(0x07D0),
            flags    = 0,
            default  = 0, defaultstore = MyStandardDefault,
>000002DA: 5B 06 00 00 00 00 
            default  = 0, defaultstore = MyManufactureDefault,
>000002E0: 5B 06 01 00 00 00 
          endcheckbox;
>000002E6: 29 02 
        endif;
>000002E8: 29 02 

        suppressif TRUE;
>000002EA: 0A 82 
>000002EC: 46 02 
          checkbox varid = SYSTEM_CONFIGURATION.AntiFlashWearoutSupported,
>000002EE: 06 8E D1 07 D2 07 04 00 01 00 C2 00 00 00 
            prompt   = STRING_TOKEN(0x07D1),
            help     = STRING_TOKEN(0x07D2),
            flags    = 0,
            default  = 0, defaultstore = MyStandardDefault,
>000002FC: 5B 06 00 00 00 00 
            default  = 0, defaultstore = MyManufactureDefault,
>00000302: 5B 06 01 00 00 00 
          endcheckbox;
>00000308: 29 02 
        endif;
>0000030A: 29 02 

        suppressif TRUE;
>0000030C: 0A 82 
>0000030E: 46 02 
          checkbox varid = SYSTEM_CONFIGURATION.BiosGuardPlatformSupported,
>00000310: 06 8E D3 07 D4 07 05 00 01 00 C0 00 00 00 
            prompt   = STRING_TOKEN(0x07D3),
            help     = STRING_TOKEN(0x07D4),
            flags    = 0,
            default  = 0, defaultstore = MyStandardDefault,
>0000031E: 5B 06 00 00 00 00 
            default  = 0, defaultstore = MyManufactureDefault,
>00000324: 5B 06 01 00 00 00 
          endcheckbox;
>0000032A: 29 02 
        endif;
>0000032C: 29 02 

        
        
        goto 0x06,
>0000032E: 0F 0F 03 03 04 03 06 00 00 00 FF FF 00 06 00 
            prompt = STRING_TOKEN(0x0303),
            help   = STRING_TOKEN(0x0304);


        
        
        suppressif  ideqval SYSTEM_CONFIGURATION.PlatformOCSupport == 0;
>0000033D: 0A 82 
>0000033F: 12 06 03 00 00 00 
          goto 0x3F0,
>00000345: 0F 0F F0 01 F1 01 07 00 00 00 FF FF 00 F0 03 
              prompt = STRING_TOKEN(0x01F0),
              help   = STRING_TOKEN(0x01F1);
        endif;
>00000354: 29 02 

        
        
        
        goto 0x09,
>00000356: 0F 0F C4 07 C5 07 08 00 00 00 FF FF 00 09 00 
            prompt = STRING_TOKEN(0x07C4),
            help   = STRING_TOKEN(0x07C5);

        
        
        
        goto 0x88,
>00000365: 0F 0F 4F 00 50 00 09 00 00 00 FF FF 00 88 00 
            prompt = STRING_TOKEN(0x004F),
            help   = STRING_TOKEN(0x0050);

        
        
        
        goto 0x0B,
>00000374: 0F 0F B6 07 B7 07 0A 00 00 00 FF FF 00 0B 00 
            prompt = STRING_TOKEN(0x07B6),
            help   = STRING_TOKEN(0x07B7);





        
        
        
        suppressif NOT ideqval ME_RC_CONFIGURATION.MeType == 0xFF;
>00000383: 0A 82 
>00000385: 12 86 E9 04 FF 00 
>0000038B: 17 02 
>0000038D: 29 02 
          goto 0x5C,
>0000038F: 0F 0F EA 00 EB 00 0B 00 00 00 FF FF 00 5C 00 
           prompt  = STRING_TOKEN(0x00EA),
           help    = STRING_TOKEN(0x00EB);
        endif; 
>0000039E: 29 02 

        
        
        
        suppressif NOT ideqval ME_RC_CONFIGURATION.MeType == 0x03;
>000003A0: 0A 82 
>000003A2: 12 86 E9 04 03 00 
>000003A8: 17 02 
>000003AA: 29 02 
          goto 0x50,
>000003AC: 0F 0F EA 00 EB 00 0C 00 00 00 FF FF 00 50 00 
           prompt  = STRING_TOKEN(0x00EA),
           help    = STRING_TOKEN(0x00EB);
        endif; 
>000003BB: 29 02 


        
        
        
        suppressif NOT ideqval ME_RC_CONFIGURATION.MeType == 0x03;
>000003BD: 0A 82 
>000003BF: 12 86 E9 04 03 00 
>000003C5: 17 02 
>000003C7: 29 02 
          goto 0x51,
>000003C9: 0F 0F 5E 01 5F 01 0D 00 00 00 FF FF 00 51 00 
            prompt  = STRING_TOKEN(0x015E),
            help    = STRING_TOKEN(0x015F);
        endif; 
>000003D8: 29 02 
#line 266 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"

#line 268 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"


        
        
        
        suppressif NOT ideqval ME_RC_CONFIGURATION.MeType == 0x01;
>000003DA: 0A 82 
>000003DC: 12 86 E9 04 01 00 
>000003E2: 17 02 
>000003E4: 29 02 
          goto 0x54,
>000003E6: 0F 0F A2 01 A3 01 0E 00 00 00 FF FF 00 54 00 
           prompt  = STRING_TOKEN(0x01A2),
           help    = STRING_TOKEN(0x01A3);
        endif; 
>000003F5: 29 02 


        
        
        
        suppressif NOT ideqval ME_RC_CONFIGURATION.MeType == 0x01;
>000003F7: 0A 82 
>000003F9: 12 86 E9 04 01 00 
>000003FF: 17 02 
>00000401: 29 02 
          goto 0x55,
>00000403: 0F 0F C8 01 C9 01 0F 00 00 00 FF FF 00 55 00 
           prompt  = STRING_TOKEN(0x01C8),
           help    = STRING_TOKEN(0x01C9);
        endif; 
>00000412: 29 02 
#line 289 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"

#line 291 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"


        
        
        
        suppressif NOT ideqval ME_RC_CONFIGURATION.MeType == 0x0F;
>00000414: 0A 82 
>00000416: 12 86 E9 04 0F 00 
>0000041C: 17 02 
>0000041E: 29 02 
          goto 0x58,
>00000420: 0F 0F E4 00 E5 00 10 00 00 00 FF FF 00 58 00 
           prompt  = STRING_TOKEN(0x00E4),
           help    = STRING_TOKEN(0x00E5);
        endif; 
>0000042F: 29 02 
#line 302 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"

#line 304 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"

  
  
  

        goto 0x22,
>00000431: 0F 0F C4 00 C5 00 11 00 00 00 FF FF 00 22 00 
            prompt = STRING_TOKEN(0x00C4),
            help   = STRING_TOKEN(0x00C5);
#line 313 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"



        
        
        
        goto 0x0C,
>00000440: 0F 0F 02 00 03 00 12 00 00 00 FF FF 00 0C 00 
            prompt = STRING_TOKEN(0x0002),
            help   = STRING_TOKEN(0x0003);
#line 323 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"

  
  
  

        
        
        
        goto 0x500,
>0000044F: 0F 0F 80 08 81 08 13 00 00 00 FF FF 00 00 05 
            prompt = STRING_TOKEN(0x0880),
            help   = STRING_TOKEN(0x0881);

        
        
        
        goto 0x19,
>0000045E: 0F 0F 35 08 36 08 14 00 00 00 FF FF 00 19 00 
            prompt = STRING_TOKEN(0x0835),
            help   = STRING_TOKEN(0x0836);

        
        
        
        goto 0x3D1,
>0000046D: 0F 0F 69 08 6A 08 15 00 00 00 FF FF 00 D1 03 
            prompt = STRING_TOKEN(0x0869),
            help   = STRING_TOKEN(0x086A);

        
        
        
        goto 0x23,
>0000047C: 0F 0F 51 07 AA 00 16 00 00 00 FF FF 00 23 00 
            prompt = STRING_TOKEN(0x0751),
            help   = STRING_TOKEN(0x00AA);

        subtitle text = STRING_TOKEN(0x00AA);
>0000048B: 02 87 AA 00 00 00 00 
>00000492: 29 02 


        subtitle text = STRING_TOKEN(0x0762);
>00000494: 02 87 62 07 00 00 00 
>0000049B: 29 02 
        subtitle text = STRING_TOKEN(0x07AF);
>0000049D: 02 87 AF 07 00 00 00 
>000004A4: 29 02 
        subtitle text = STRING_TOKEN(0x07B0);
>000004A6: 02 87 B0 07 00 00 00 
>000004AD: 29 02 
        subtitle text = STRING_TOKEN(0x07B1);
>000004AF: 02 87 B1 07 00 00 00 
>000004B6: 29 02 

    endform;
>000004B8: 29 02 



    
    
    
    form formid = 0x09,
>000004BA: 01 86 09 00 C4 07 

        title    = STRING_TOKEN(0x07C4);

        subtitle text = STRING_TOKEN(0x07C4);
>000004C0: 02 87 C4 07 00 00 00 
>000004C7: 29 02 
        subtitle text = STRING_TOKEN(0x0762);
>000004C9: 02 87 62 07 00 00 00 
>000004D0: 29 02 
        subtitle text = STRING_TOKEN(0x00AA);
>000004D2: 02 87 AA 00 00 00 00 
>000004D9: 29 02 

        
        
        
        oneof varid     = SYSTEM_CONFIGURATION.Benchmark,
>000004DB: 05 91 C6 07 C7 07 50 06 01 00 50 00 14 10 00 06 00 
            questionid  = 0x650,
            prompt      = STRING_TOKEN(0x07C6),
            help        = STRING_TOKEN(0x07C7),
            flags       = INTERACTIVE,
            option text = STRING_TOKEN(0x07C8),  value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>000004EC: 09 07 C8 07 30 00 00 
            option text = STRING_TOKEN(0x07C9),  value = 1, flags = RESET_REQUIRED;
>000004F3: 09 07 C9 07 00 00 01 
            option text = STRING_TOKEN(0x07CA),  value = 2, flags = RESET_REQUIRED;
>000004FA: 09 07 CA 07 00 00 02 
            option text = STRING_TOKEN(0x07CB),  value = 3, flags = RESET_REQUIRED;
>00000501: 09 07 CB 07 00 00 03 
            option text = STRING_TOKEN(0x07CC),  value = 4, flags = RESET_REQUIRED;
>00000508: 09 07 CC 07 00 00 04 
            option text = STRING_TOKEN(0x07CD),  value = 5, flags = RESET_REQUIRED;
>0000050F: 09 07 CD 07 00 00 05 
            option text = STRING_TOKEN(0x07CE),  value = 6, flags = RESET_REQUIRED;
>00000516: 09 07 CE 07 00 00 06 
        endoneof;
>0000051D: 29 02 

        
        
        
        oneof varid     = SYSTEM_CONFIGURATION.CloudProfile,
>0000051F: 05 91 31 08 32 08 B7 10 01 00 32 01 10 10 00 01 00 
            questionid =  0x10B7,
            prompt      = STRING_TOKEN(0x0831),
            help        = STRING_TOKEN(0x0832),
            option text = STRING_TOKEN(0x0833), value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00000530: 09 07 33 08 30 00 00 
            option text = STRING_TOKEN(0x0834),  value = 1, flags = RESET_REQUIRED;
>00000537: 09 07 34 08 00 00 01 
        endoneof;
>0000053E: 29 02 

        oneof varid     = SYSTEM_CONFIGURATION.Use1GPageTable,
>00000540: 05 91 2D 08 2E 08 17 00 01 00 C4 00 10 10 00 01 00 
            prompt      = STRING_TOKEN(0x082D),
            help        = STRING_TOKEN(0x082E),
            option text = STRING_TOKEN(0x0830), value = 0, flags = RESET_REQUIRED;
>00000551: 09 07 30 08 00 00 00 
            option text = STRING_TOKEN(0x082F),  value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00000558: 09 07 2F 08 30 00 01 
        endoneof;
>0000055F: 29 02 

        
        
        
        checkbox varid = SYSTEM_CONFIGURATION.ResetOnMemMapChange,
>00000561: 06 8E 41 08 42 08 18 00 01 00 BD 00 10 00 
              prompt     = STRING_TOKEN(0x0841),
              help       = STRING_TOKEN(0x0842),
              flags      = RESET_REQUIRED,
        endcheckbox;
>0000056F: 29 02 
#line 423 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
        
        
        
        numeric varid = SYSTEM_CONFIGURATION.FanPwmOffset,
>00000571: 07 91 DB 07 DC 07 19 00 01 00 4F 00 10 10 00 64 00 
            prompt    = STRING_TOKEN(0x07DB),
            help      = STRING_TOKEN(0x07DC),
            flags     = RESET_REQUIRED,
            minimum   = 0, maximum = 100,
            default   = 0, defaultstore = MyStandardDefault,
>00000582: 5B 06 00 00 00 00 
            default   = 0, defaultstore = MyManufactureDefault,
>00000588: 5B 06 01 00 00 00 
        endnumeric;
>0000058E: 29 02 

        oneof varid   = SYSTEM_CONFIGURATION.WakeOnLanSupport,
>00000590: 05 91 6D 08 6E 08 1A 00 01 00 52 00 10 10 00 01 00 
            prompt        = STRING_TOKEN(0x086D),
            help          = STRING_TOKEN(0x086E),
            option text   = STRING_TOKEN(0x00A7),        value = 0, flags = RESET_REQUIRED  | MANUFACTURING | DEFAULT;
>000005A1: 09 07 A7 00 30 00 00 
            option text   = STRING_TOKEN(0x00A6),         value = 1, flags = RESET_REQUIRED;
>000005A8: 09 07 A6 00 00 00 01 
        endoneof;
>000005AF: 29 02 
        
        
        
        oneof varid = SYSTEM_CONFIGURATION.ValidationBreakpointType,
>000005B1: 05 91 DD 07 DE 07 1B 00 01 00 46 00 10 10 00 06 00 
            prompt  = STRING_TOKEN(0x07DD),
            help    = STRING_TOKEN(0x07DE),
            option text = STRING_TOKEN(0x006F),           value = 0,  flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000005C2: 09 07 6F 00 30 00 00 
            option text = STRING_TOKEN(0x07DF),     value = 1,  flags = RESET_REQUIRED;
>000005C9: 09 07 DF 07 00 00 01 
            option text = STRING_TOKEN(0x07E0),   value = 2,  flags = RESET_REQUIRED;
>000005D0: 09 07 E0 07 00 00 02 
            option text = STRING_TOKEN(0x07E1), value = 3,  flags = RESET_REQUIRED;
>000005D7: 09 07 E1 07 00 00 03 
            option text = STRING_TOKEN(0x07E2), value = 4,  flags = RESET_REQUIRED;
>000005DE: 09 07 E2 07 00 00 04 
            option text = STRING_TOKEN(0x07E3), value = 5,  flags = RESET_REQUIRED;
>000005E5: 09 07 E3 07 00 00 05 
            option text = STRING_TOKEN(0x07E4), value = 6, flags = RESET_REQUIRED;
>000005EC: 09 07 E4 07 00 00 06 
        endoneof;
>000005F3: 29 02 

        numeric varid   = SYSTEM_CONFIGURATION.bsdBreakpoint,
>000005F5: 07 94 E5 07 E6 07 1C 00 01 00 47 00 10 21 00 00 FF FF 01 00 
          prompt      = STRING_TOKEN(0x07E5),
          help        = STRING_TOKEN(0x07E6),
          flags     = RESET_REQUIRED | DISPLAY_UINT_HEX,
          minimum   = 0,
          maximum   = 0xFFFF,
          step      = 1, 
          default   = 0, defaultstore = MyStandardDefault,
>00000609: 5B 07 00 00 01 00 00 
          default   = 0, defaultstore = MyManufactureDefault,
>00000610: 5B 07 01 00 01 00 00 
        endnumeric;
>00000617: 29 02 

         
         
         
         checkbox varid = SYSTEM_CONFIGURATION.ForceSetup,
>00000619: 06 8E 25 08 26 08 1D 00 01 00 BE 00 00 00 
              prompt   = STRING_TOKEN(0x0825),
              help     = STRING_TOKEN(0x0826),
              flags    = 0,
         endcheckbox;
>00000627: 29 02 


        
        
        
        grayoutif ideqval SYSTEM_CONFIGURATION.BiosGuardPlatformSupported == 0;
>00000629: 19 82 
>0000062B: 12 06 05 00 00 00 
         checkbox varid = SYSTEM_CONFIGURATION.BiosGuardEnabled,
>00000631: 06 8E 27 08 28 08 1E 00 01 00 BF 00 10 00 
              prompt   = STRING_TOKEN(0x0827),
              help     = STRING_TOKEN(0x0828),
              flags    = RESET_REQUIRED,
              default  = 0, defaultstore = MyStandardDefault,
>0000063F: 5B 06 00 00 00 00 
              default  = 0, defaultstore = MyManufactureDefault,
>00000645: 5B 06 01 00 00 00 
         endcheckbox;
>0000064B: 29 02 
        endif;
>0000064D: 29 02 

        
        
        
        suppressif ideqval SYSTEM_CONFIGURATION.BiosGuardEnabled == 0;
>0000064F: 0A 82 
>00000651: 12 06 1E 00 00 00 
         checkbox varid = SYSTEM_CONFIGURATION.DfxPopulateBGDirectory,
>00000657: 06 8E 29 08 2A 08 1F 00 01 00 C3 00 10 00 
              prompt   = STRING_TOKEN(0x0829),
              help     = STRING_TOKEN(0x082A),
              flags    = RESET_REQUIRED,
              default  = 0, defaultstore = MyStandardDefault,
>00000665: 5B 06 00 00 00 00 
              default  = 0, defaultstore = MyManufactureDefault,
>0000066B: 5B 06 01 00 00 00 
         endcheckbox;
>00000671: 29 02 
        endif;         
>00000673: 29 02 

        
        
        
        suppressif ideqval SYSTEM_CONFIGURATION.AntiFlashWearoutSupported == 0;
>00000675: 0A 82 
>00000677: 12 06 04 00 00 00 
         checkbox varid = SYSTEM_CONFIGURATION.EnableAntiFlashWearout,
>0000067D: 06 8E 2B 08 2C 08 20 00 01 00 C1 00 10 00 
              prompt   = STRING_TOKEN(0x082B),
              help     = STRING_TOKEN(0x082C),
              flags    = RESET_REQUIRED,
              default  = 0, defaultstore = MyStandardDefault,
>0000068B: 5B 06 00 00 00 00 
              default  = 0, defaultstore = MyManufactureDefault,
>00000691: 5B 06 01 00 00 00 
         endcheckbox;
>00000697: 29 02 
        endif;
>00000699: 29 02 

        oneof varid   = SYSTEM_CONFIGURATION.SkipXmlComprs,
>0000069B: 05 91 73 08 74 08 21 00 01 00 B1 01 10 10 00 01 00 
          prompt      = STRING_TOKEN (0x0873),
          help        = STRING_TOKEN (0x0874),
          option text = STRING_TOKEN(0x0738), value  = 0x0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000006AC: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value  = 0x1, flags = RESET_REQUIRED; 
>000006B3: 09 07 39 07 00 00 01 
        endoneof;
>000006BA: 29 02 

        
        
        
        oneof varid   = SYSTEM_CONFIGURATION.DfxAdvDebugJumper,
>000006BC: 05 91 75 08 76 08 22 00 01 00 B2 01 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x0875),
          help        = STRING_TOKEN (0x0876),




#line 534 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
          option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000006CD: 09 07 A8 00 30 00 02 
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000006D4: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>000006DB: 09 07 39 07 00 00 01 
#line 538 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
        endoneof;
>000006E2: 29 02 

        
        
        
        oneof varid   = SYSTEM_CONFIGURATION.DfxAltPostCode,
>000006E4: 05 91 F0 07 F1 07 23 00 01 00 B3 01 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x07F0),
          help        = STRING_TOKEN(0x07F1),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>000006F5: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED ;
>000006FC: 09 07 39 07 00 00 01 
        endoneof;
>00000703: 29 02 
		
        
        
        
        goto 0x24,
>00000705: 0F 0F 77 08 78 08 24 00 00 00 FF FF 00 24 00 
          prompt = STRING_TOKEN(0x0877),
          help   = STRING_TOKEN(0x0878);

        
        
        



        oneof varid = SYSTEM_CONFIGURATION.serialDebugMsgLvl,
>00000714: 05 91 EB 07 EC 07 B6 10 01 00 BA 00 14 10 00 04 00 
          questionid =  0x10B6,
          prompt      = STRING_TOKEN(0x07EB),
          help        = STRING_TOKEN(0x07EC),
          option text = STRING_TOKEN(0x00A7),                 value = 0, flags = INTERACTIVE | RESET_REQUIRED;
>00000725: 09 07 A7 00 00 00 00 
          option text = STRING_TOKEN(0x07ED),    value = 1, flags = INTERACTIVE | RESET_REQUIRED | MANUFACTURING;
>0000072C: 09 07 ED 07 20 00 01 
          option text = STRING_TOKEN(0x07EE),     value = 2, flags = INTERACTIVE | RESET_REQUIRED | DEFAULT;
>00000733: 09 07 EE 07 10 00 02 
          option text = STRING_TOKEN(0x07EF),    value = 3, flags = INTERACTIVE | RESET_REQUIRED;
>0000073A: 09 07 EF 07 00 00 03 
          option text = STRING_TOKEN(0x00A8),                    value = 4, flags = INTERACTIVE | RESET_REQUIRED;
>00000741: 09 07 A8 00 00 00 04 
        endoneof;
>00000748: 29 02 







        oneof varid = SYSTEM_CONFIGURATION.serialDebugTrace,
>0000074A: 05 91 F2 07 F3 07 25 00 01 00 BB 00 10 10 00 40 00 
          prompt      = STRING_TOKEN(0x07F2),
          help        = STRING_TOKEN(0x07F3),
          option text = STRING_TOKEN(0x02FA),  value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000075B: 09 07 FA 02 30 00 00 
          option text = STRING_TOKEN(0x02F9),   value = 4, flags = RESET_REQUIRED;
>00000762: 09 07 F9 02 00 00 04 
          option text = STRING_TOKEN(0x07F4), value = 64, flags = RESET_REQUIRED;
>00000769: 09 07 F4 07 00 00 40 
        endoneof;
>00000770: 29 02 







        oneof varid = SYSTEM_CONFIGURATION.serialDebugMsgLvlTrainResults,
>00000772: 05 91 F5 07 F6 07 26 00 01 00 BC 00 10 10 00 08 00 
          prompt      = STRING_TOKEN(0x07F5),
          help        = STRING_TOKEN(0x07F6),

          option text = STRING_TOKEN(0x02FA),  value = 0, flags = RESET_REQUIRED | MANUFACTURING;
>00000783: 09 07 FA 02 20 00 00 
          option text = STRING_TOKEN(0x02F9),   value = 8, flags = RESET_REQUIRED | DEFAULT;
>0000078A: 09 07 F9 02 10 00 08 



#line 604 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
        endoneof;
>00000791: 29 02 




        
        
        
        oneof varid     = SYSTEM_CONFIGURATION.VideoSelect,
>00000793: 05 91 F7 07 F8 07 27 00 01 00 4C 00 10 10 00 02 00 
            prompt      = STRING_TOKEN(0x07F7),
            help        = STRING_TOKEN(0x07F8),
            option text = STRING_TOKEN(0x00A8),                 value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>000007A4: 09 07 A8 00 30 00 00 
            option text = STRING_TOKEN(0x07F9), value = 1, flags = RESET_REQUIRED;
>000007AB: 09 07 F9 07 00 00 01 
            option text = STRING_TOKEN(0x07FA),    value = 2, flags = RESET_REQUIRED;
>000007B2: 09 07 FA 07 00 00 02 
        endoneof;
>000007B9: 29 02 

        
        
        
        oneof varid = SYSTEM_CONFIGURATION.Pmtt,
>000007BB: 05 91 7E 08 7F 08 28 00 01 00 90 01 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x087E),
             help     = STRING_TOKEN(0x087F),
             option text  = STRING_TOKEN (0x02F9), value = 1, flags = RESET_REQUIRED;
>000007CC: 09 07 F9 02 00 00 01 
             option text  = STRING_TOKEN (0x02FA), value = 0, flags = MANUFACTURING | DEFAULT | RESET_REQUIRED;
>000007D3: 09 07 FA 02 30 00 00 
        endoneof;
>000007DA: 29 02 
        
        
        
        
        oneof varid     = SYSTEM_CONFIGURATION.Ps2PortSwap,
>000007DC: 05 91 E7 07 E8 07 29 00 01 00 42 00 10 10 00 01 00 
            prompt      = STRING_TOKEN(0x07E7),
            help        = STRING_TOKEN(0x07E8),
            option text = STRING_TOKEN(0x00A7),  value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>000007ED: 09 07 A7 00 30 00 00 
            option text = STRING_TOKEN(0x00A6),   value = 1, flags = RESET_REQUIRED;
>000007F4: 09 07 A6 00 00 00 01 
        endoneof;
>000007FB: 29 02 

        
        
        
        oneof varid     = SYSTEM_CONFIGURATION.Numlock,
>000007FD: 05 91 E9 07 EA 07 2A 00 01 00 41 00 10 10 00 01 00 
            prompt      = STRING_TOKEN(0x07E9),
            help        = STRING_TOKEN(0x07EA),
            option text = STRING_TOKEN(0x00A7),  value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000080E: 09 07 A7 00 30 00 00 
            option text = STRING_TOKEN(0x00A6),   value = 1, flags = RESET_REQUIRED;
>00000815: 09 07 A6 00 00 00 01 
        endoneof;
>0000081C: 29 02 

        
        
        
        oneof varid     = SYSTEM_CONFIGURATION.WakeOnLanS5,
>0000081E: 05 91 04 08 05 08 2B 00 01 00 4A 00 14 10 00 01 00 
            prompt      = STRING_TOKEN(0x0804),
            help        = STRING_TOKEN(0x0805),
            option text = STRING_TOKEN(0x00A7), value = 0, flags = INTERACTIVE | RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000082F: 09 07 A7 00 30 00 00 
            option text = STRING_TOKEN(0x00A6),  value = 1, flags = INTERACTIVE | RESET_REQUIRED;
>00000836: 09 07 A6 00 00 00 01 
        endoneof;
>0000083D: 29 02 

        
        
        
        oneof varid     = SYSTEM_CONFIGURATION.BootNetwork,
>0000083F: 05 91 02 08 03 08 2C 00 01 00 4B 00 14 10 00 01 00 
            prompt      = STRING_TOKEN(0x0802),
            help        = STRING_TOKEN(0x0803),
            option text = STRING_TOKEN(0x00A7), value = 0, flags = INTERACTIVE | RESET_REQUIRED | DEFAULT | MANUFACTURING;
>00000850: 09 07 A7 00 30 00 00 
            option text = STRING_TOKEN(0x00A6),  value = 1, flags = INTERACTIVE | RESET_REQUIRED;
>00000857: 09 07 A6 00 00 00 01 
        endoneof;
>0000085E: 29 02 

        
        
        
        oneof varid     = SYSTEM_CONFIGURATION.ARIEnable,
>00000860: 05 91 4A 08 4B 08 2D 00 01 00 F7 00 14 10 00 01 00 
            prompt      = STRING_TOKEN(0x084A),
            help        = STRING_TOKEN(0x084B),
            option text = STRING_TOKEN(0x00A7), value = 0, flags = INTERACTIVE | RESET_REQUIRED ;
>00000871: 09 07 A7 00 00 00 00 
            option text = STRING_TOKEN(0x00A6),  value = 1, flags = INTERACTIVE | RESET_REQUIRED | DEFAULT | MANUFACTURING;
>00000878: 09 07 A6 00 30 00 01 
        endoneof;
>0000087F: 29 02 
		
        
        
        
        oneof varid     = SYSTEM_CONFIGURATION.ARIForward,
>00000881: 05 91 4C 08 4D 08 2E 00 01 00 F8 00 14 10 00 01 00 
            prompt      = STRING_TOKEN(0x084C),
            help        = STRING_TOKEN(0x084D),
            option text = STRING_TOKEN(0x00A7), value = 0, flags = INTERACTIVE | RESET_REQUIRED | DEFAULT | MANUFACTURING;
>00000892: 09 07 A7 00 30 00 00 
            option text = STRING_TOKEN(0x00A6),  value = 1, flags = INTERACTIVE | RESET_REQUIRED ;
>00000899: 09 07 A6 00 00 00 01 
        endoneof;
>000008A0: 29 02 

        
        
        
        oneof varid     = SYSTEM_CONFIGURATION.SRIOVEnable,
>000008A2: 05 91 4E 08 4F 08 2F 00 01 00 F9 00 14 10 00 01 00 
            prompt      = STRING_TOKEN(0x084E),
            help        = STRING_TOKEN(0x084F),
            option text = STRING_TOKEN(0x00A7), value = 0, flags = INTERACTIVE | RESET_REQUIRED;
>000008B3: 09 07 A7 00 00 00 00 
            option text = STRING_TOKEN(0x00A6),  value = 1, flags = INTERACTIVE | RESET_REQUIRED | DEFAULT | MANUFACTURING;
>000008BA: 09 07 A6 00 30 00 01 
        endoneof;
>000008C1: 29 02 

       grayoutif ideqval SYSTEM_CONFIGURATION.SRIOVEnable == 0;
>000008C3: 19 82 
>000008C5: 12 06 2F 00 00 00 
            oneof varid     = SYSTEM_CONFIGURATION.SystemPageSize,
>000008CB: 05 91 52 08 53 08 30 00 01 00 F6 00 10 10 00 0A 00 
                prompt      = STRING_TOKEN(0x0852),
                help        = STRING_TOKEN(0x0853),
                option text = STRING_TOKEN(0x0854),   value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>000008DC: 09 07 54 08 30 00 00 
                option text = STRING_TOKEN(0x0855),   value = 1, flags = RESET_REQUIRED;
>000008E3: 09 07 55 08 00 00 01 
                option text = STRING_TOKEN(0x0856),  value = 4, flags = RESET_REQUIRED;
>000008EA: 09 07 56 08 00 00 04 
                option text = STRING_TOKEN(0x0857), value = 6, flags = RESET_REQUIRED;
>000008F1: 09 07 57 08 00 00 06 
                option text = STRING_TOKEN(0x0858),   value = 8, flags = RESET_REQUIRED;
>000008F8: 09 07 58 08 00 00 08 
                option text = STRING_TOKEN(0x0859),   value = 10, flags = RESET_REQUIRED;
>000008FF: 09 07 59 08 00 00 0A 
            endoneof;
>00000906: 29 02 
        endif;
>00000908: 29 02 

        
        
        
        oneof varid     = SYSTEM_CONFIGURATION.MRIOVEnable,
>0000090A: 05 91 50 08 51 08 31 00 01 00 FA 00 14 10 00 01 00 
            prompt      = STRING_TOKEN(0x0850),
            help        = STRING_TOKEN(0x0851),
            option text = STRING_TOKEN(0x00A7), value = 0, flags = INTERACTIVE | RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000091B: 09 07 A7 00 30 00 00 
            option text = STRING_TOKEN(0x00A6),  value = 1, flags = INTERACTIVE | RESET_REQUIRED;
>00000922: 09 07 A6 00 00 00 01 
        endoneof;
>00000929: 29 02 
#line 723 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"

        






































            oneof   varid   = SYSTEM_CONFIGURATION.WakeOnRTCS4S5,
>0000092B: 05 91 5C 08 5D 08 32 00 01 00 54 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x085C),
        help        = STRING_TOKEN(0x085D),
        option text = STRING_TOKEN(0x00A7), value=0, flags=  DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000093C: 09 07 A7 00 30 00 00 
        option text = STRING_TOKEN(0x00A6), value= 1, flags= RESET_REQUIRED;
>00000943: 09 07 A6 00 00 00 01 
          endoneof;
>0000094A: 29 02 

      suppressif  ideqval SYSTEM_CONFIGURATION.WakeOnRTCS4S5 == 0;
>0000094C: 0A 82 
>0000094E: 12 06 32 00 00 00 
        numeric varid  = SYSTEM_CONFIGURATION.RTCWakeupTimeHour,
>00000954: 07 91 5E 08 5F 08 33 00 01 00 55 00 10 10 00 17 01 
          prompt      = STRING_TOKEN(0x085E),
          help        = STRING_TOKEN(0x085F),
          flags       = RESET_REQUIRED,
          minimum     = 0,
          maximum     = 23,
          step        = 1,
          default     = 0, defaultstore = MyStandardDefault, 
>00000965: 5B 06 00 00 00 00 
          default     = 0, defaultstore = MyManufactureDefault,
>0000096B: 5B 06 01 00 00 00 
        endnumeric;
>00000971: 29 02 

        numeric varid  = SYSTEM_CONFIGURATION.RTCWakeupTimeMinute,
>00000973: 07 91 60 08 8F 07 34 00 01 00 56 00 10 10 00 3B 01 
          prompt      = STRING_TOKEN(0x0860),
          help        = STRING_TOKEN(0x078F),
          flags       = RESET_REQUIRED,
          minimum       = 0,
          maximum       = 59,
          step          = 1,
          default       = 0, defaultstore = MyStandardDefault,
>00000984: 5B 06 00 00 00 00 
          default       = 0, defaultstore = MyManufactureDefault,
>0000098A: 5B 06 01 00 00 00 
        endnumeric;
>00000990: 29 02 

        numeric varid  = SYSTEM_CONFIGURATION.RTCWakeupTimeSecond,
>00000992: 07 91 61 08 90 07 35 00 01 00 57 00 10 10 00 3B 01 
          prompt      = STRING_TOKEN(0x0861),
          help        = STRING_TOKEN(0x0790),
          flags       = RESET_REQUIRED,
          minimum       = 0,
          maximum       = 59,
          step          = 1,
          default       = 0, defaultstore = MyStandardDefault,
>000009A3: 5B 06 00 00 00 00 
          default       = 0, defaultstore = MyManufactureDefault,
>000009A9: 5B 06 01 00 00 00 
        endnumeric;
>000009AF: 29 02 
           endif;
>000009B1: 29 02 

        oneof varid = PCH_SETUP.FirmwareConfiguration,
>000009B3: 05 91 62 08 63 08 36 00 02 00 74 04 10 10 00 03 00 
          prompt   = STRING_TOKEN(0x0862),
          help     = STRING_TOKEN(0x0863),
          option text = STRING_TOKEN(0x0864), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000009C4: 09 07 64 08 30 00 00 
          option text = STRING_TOKEN(0x0865), value = 1, flags = RESET_REQUIRED;
>000009CB: 09 07 65 08 00 00 01 
          option text = STRING_TOKEN(0x0866), value = 2, flags = RESET_REQUIRED; 
>000009D2: 09 07 66 08 00 00 02 
          option text = STRING_TOKEN(0x0867), value = 3, flags = RESET_REQUIRED; 
>000009D9: 09 07 67 08 00 00 03 
        endoneof;
>000009E0: 29 02 
        
        suppressif TRUE;
>000009E2: 0A 82 
>000009E4: 46 02 
        oneof varid = SYSTEM_CONFIGURATION.StorageOpROMSuppression,
>000009E6: 05 91 7C 08 7D 08 37 00 01 00 C4 01 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x087C),
             help     = STRING_TOKEN(0x087D),
             option text  = STRING_TOKEN (0x02F9), value = 1, flags = MANUFACTURING | RESET_REQUIRED;
>000009F7: 09 07 F9 02 20 00 01 
             option text  = STRING_TOKEN (0x02FA), value = 0, flags = DEFAULT | RESET_REQUIRED;
>000009FE: 09 07 FA 02 10 00 00 
        endoneof;
>00000A05: 29 02 
        endif;   
>00000A07: 29 02 
        
        oneof varid   = SYSTEM_CONFIGURATION.RsaSupport,
>00000A09: 05 91 6F 08 70 08 38 00 01 00 C5 01 10 10 00 01 00 
            prompt        = STRING_TOKEN(0x086F),
            help          = STRING_TOKEN(0x0870),
            option text   = STRING_TOKEN(0x00A7),        value = 0, flags = RESET_REQUIRED  | MANUFACTURING | DEFAULT;
>00000A1A: 09 07 A7 00 30 00 00 
            option text   = STRING_TOKEN(0x00A6),         value = 1, flags = RESET_REQUIRED;
>00000A21: 09 07 A6 00 00 00 01 
        endoneof;
>00000A28: 29 02 
    endform;
>00000A2A: 29 02 

  form formid = 0x0B,
>00000A2C: 01 86 0B 00 B6 07 

    title     = STRING_TOKEN(0x07B6);

    oneof varid = SYSTEM_CONFIGURATION.LegacyPxeRom,
>00000A32: 05 91 B8 07 B9 07 39 00 01 00 FB 00 10 10 00 01 00 
      prompt   = STRING_TOKEN(0x07B8),
      help     = STRING_TOKEN(0x07B9),
      option text = STRING_TOKEN(0x02F9), value = 1, flags =  RESET_REQUIRED;
>00000A43: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
>00000A4A: 09 07 FA 02 30 00 00 
    endoneof;
>00000A51: 29 02 

    oneof varid = SYSTEM_CONFIGURATION.EfiNetworkSupport,
>00000A53: 05 91 BA 07 BB 07 3A 00 01 00 FC 00 10 10 00 01 00 
      prompt   = STRING_TOKEN(0x07BA),
      help     = STRING_TOKEN(0x07BB),
      option text = STRING_TOKEN(0x02F9), value = 1, flags =  RESET_REQUIRED;
>00000A64: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
>00000A6B: 09 07 FA 02 30 00 00 
    endoneof;
>00000A72: 29 02 

    oneof varid = SYSTEM_CONFIGURATION.LomDisableByGpio,
>00000A74: 05 91 BC 07 BD 07 3B 00 01 00 53 00 10 10 00 01 00 
      prompt   = STRING_TOKEN(0x07BC),
      help     = STRING_TOKEN(0x07BD),
      option text = STRING_TOKEN(0x02F9), value = 1, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000A85: 09 07 F9 02 30 00 01 
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00000A8C: 09 07 FA 02 00 00 00 
    endoneof;
>00000A93: 29 02 
    
  endform;
>00000A95: 29 02 

  form formid = 0x19,
>00000A97: 01 86 19 00 35 08 

    title     = STRING_TOKEN(0x0835);

    
    
    

    checkbox varid = SYSTEM_CONFIGURATION.ReserveMem,
>00000A9D: 06 8E 37 08 38 08 3C 00 01 00 C6 00 00 00 
      prompt   = STRING_TOKEN(0x0837),
      help     = STRING_TOKEN(0x0838),
      flags    = 0,
      default  = 0, defaultstore = MyStandardDefault,
>00000AAB: 5B 06 00 00 00 00 
      default  = 0, defaultstore = MyManufactureDefault,
>00000AB1: 5B 06 01 00 00 00 
    endcheckbox;
>00000AB7: 29 02 


    grayoutif ideqval SYSTEM_CONFIGURATION.ReserveMem == 0;
>00000AB9: 19 82 
>00000ABB: 12 06 3C 00 00 00 
      numeric varid = SYSTEM_CONFIGURATION.ReserveStartAddr,
>00000AC1: 07 A6 39 08 3A 08 3D 00 01 00 C7 00 00 23 00 00 10 00 00 00 00 00 FF FF FF FF FF FF FF FF 00 10 00 00 00 00 00 00 
        prompt    = STRING_TOKEN(0x0839),
        help      = STRING_TOKEN(0x083A),
        flags     = DISPLAY_UINT_HEX,
        minimum   = 0x100000,
        maximum   = 0xFFFFFFFFFFFFFFFF,
        step      = 0x1000,
        default   = 0x100000, defaultstore = MyStandardDefault,
>00000AE7: 5B 0D 00 00 03 00 00 10 00 00 00 00 00 
        default   = 0x100000, defaultstore = MyManufactureDefault,
>00000AF4: 5B 0D 01 00 03 00 00 10 00 00 00 00 00 

      endnumeric;
>00000B01: 29 02 
    endif;
>00000B03: 29 02 

    
    
    
    suppressif ideqval SYSTEM_CONFIGURATION.ReserveMem == 0;
>00000B05: 0A 82 
>00000B07: 12 06 3C 00 00 00 
      text
>00000B0D: 03 08 3B 08 AA 00 3C 08 
          help   = STRING_TOKEN(0x00AA),
          text   = STRING_TOKEN(0x083B),
          text   = STRING_TOKEN(0x083C),
          flags  = 0, key = 0;
    endif;
>00000B15: 29 02 

    
    
    
    oneof varid   = SYSTEM_CONFIGURATION.TagecMem,
>00000B17: 05 91 3D 08 3E 08 3E 00 01 00 CF 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x083D),
        help        = STRING_TOKEN(0x083E),
        option text = STRING_TOKEN(0x00A7),        value = 0, flags = RESET_REQUIRED | DEFAULT;
>00000B28: 09 07 A7 00 10 00 00 
        option text = STRING_TOKEN(0x00A6),         value = 1, flags = RESET_REQUIRED | MANUFACTURING;
>00000B2F: 09 07 A6 00 20 00 01 
    endoneof;
>00000B36: 29 02 

  endform;
>00000B38: 29 02 

  form formid = 0x23,
>00000B3A: 01 86 23 00 51 07 

    title = STRING_TOKEN(0x0751);

    subtitle text = STRING_TOKEN(0x0752);
>00000B40: 02 87 52 07 00 00 00 
>00000B47: 29 02 
    subtitle text = STRING_TOKEN(0x0762);
>00000B49: 02 87 62 07 00 00 00 
>00000B50: 29 02 
    subtitle text = STRING_TOKEN(0x00AA);
>00000B52: 02 87 AA 00 00 00 00 
>00000B59: 29 02 

    oneof varid = SYSTEM_CONFIGURATION.ValidationResetType,
>00000B5B: 05 91 53 07 54 07 3F 00 01 00 B4 01 10 10 00 04 00 
        prompt  = STRING_TOKEN(0x0753),
        help    = STRING_TOKEN(0x0754),
        option text = STRING_TOKEN(0x006F),                value = 0x00,                flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000B6C: 09 07 6F 00 30 00 00 
        option text = STRING_TOKEN(0x0755),        value = 0x01,        flags = RESET_REQUIRED;
>00000B73: 09 07 55 07 00 00 01 
        option text = STRING_TOKEN(0x0756), value = 0x04, flags = RESET_REQUIRED;
>00000B7A: 09 07 56 07 00 00 04 
    endoneof;
>00000B81: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.ValidationResetType == 0x00;
>00000B83: 0A 82 
>00000B85: 12 06 3F 00 00 00 
            oneof varid = SYSTEM_CONFIGURATION.ValidationCountOuter,
>00000B8B: 05 94 57 07 58 07 40 00 01 00 B5 01 10 11 00 00 10 27 00 00 
                    prompt  = STRING_TOKEN(0x0757),
                    help    = STRING_TOKEN(0x0758),
                    option text = STRING_TOKEN(0x0076),              value = 1, flags = RESET_REQUIRED;
>00000B9F: 09 08 76 00 01 01 01 00 
                    option text = STRING_TOKEN(0x021C),             value = 10, flags = RESET_REQUIRED;
>00000BA7: 09 08 1C 02 01 01 0A 00 
                    option text = STRING_TOKEN(0x075B),             value = 20, flags = RESET_REQUIRED;
>00000BAF: 09 08 5B 07 01 01 14 00 
                    option text = STRING_TOKEN(0x075C),            value = 100, flags = RESET_REQUIRED;
>00000BB7: 09 08 5C 07 01 01 64 00 
                    option text = STRING_TOKEN(0x075D),            value = 500, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000BBF: 09 08 5D 07 31 01 F4 01 
                    option text = STRING_TOKEN(0x075E),           value = 1000, flags = RESET_REQUIRED;
>00000BC7: 09 08 5E 07 01 01 E8 03 
                    option text = STRING_TOKEN(0x075F),           value = 5000, flags = RESET_REQUIRED;
>00000BCF: 09 08 5F 07 01 01 88 13 
                    option text = STRING_TOKEN(0x0760),          value = 10000, flags = RESET_REQUIRED;
>00000BD7: 09 08 60 07 01 01 10 27 
                    option text = STRING_TOKEN(0x0761),       value = 0, flags = RESET_REQUIRED;
>00000BDF: 09 08 61 07 01 01 00 00 
            endoneof;
>00000BE7: 29 02 

            oneof varid = SYSTEM_CONFIGURATION.ValidationCountInner,
>00000BE9: 05 94 59 07 5A 07 41 00 01 00 B7 01 10 11 00 00 10 27 00 00 
                    prompt  = STRING_TOKEN(0x0759),
                    help    = STRING_TOKEN(0x075A),
                    option text = STRING_TOKEN(0x021C),             value = 10, flags = RESET_REQUIRED;
>00000BFD: 09 08 1C 02 01 01 0A 00 
                    option text = STRING_TOKEN(0x075B),             value = 20, flags = RESET_REQUIRED;
>00000C05: 09 08 5B 07 01 01 14 00 
                    option text = STRING_TOKEN(0x075C),            value = 100, flags = RESET_REQUIRED;
>00000C0D: 09 08 5C 07 01 01 64 00 
                    option text = STRING_TOKEN(0x075D),            value = 500, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000C15: 09 08 5D 07 31 01 F4 01 
                    option text = STRING_TOKEN(0x075E),           value = 1000, flags = RESET_REQUIRED;
>00000C1D: 09 08 5E 07 01 01 E8 03 
                    option text = STRING_TOKEN(0x075F),           value = 5000, flags = RESET_REQUIRED;
>00000C25: 09 08 5F 07 01 01 88 13 
                    option text = STRING_TOKEN(0x0760),          value = 10000, flags = RESET_REQUIRED;
>00000C2D: 09 08 60 07 01 01 10 27 
                    option text = STRING_TOKEN(0x0761),       value = 0, flags = RESET_REQUIRED;
>00000C35: 09 08 61 07 01 01 00 00 
            endoneof;
>00000C3D: 29 02 

            oneof varid = SYSTEM_CONFIGURATION.ValidationStopOnError,
>00000C3F: 05 91 63 07 64 07 42 00 01 00 B9 01 10 10 00 01 00 
                    prompt  = STRING_TOKEN(0x0763),
                    help    = STRING_TOKEN(0x0764),
                    option text = STRING_TOKEN(0x00A1),             value = 0, flags = RESET_REQUIRED;
>00000C50: 09 07 A1 00 00 00 00 
                    option text = STRING_TOKEN(0x00A0),            value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000C57: 09 07 A0 00 30 00 01 
            endoneof;
>00000C5E: 29 02 

            oneof varid = SYSTEM_CONFIGURATION.ValidationBootWhenDone,
>00000C60: 05 91 65 07 66 07 43 00 01 00 BA 01 10 10 00 01 00 
                    prompt  = STRING_TOKEN(0x0765),
                    help    = STRING_TOKEN(0x0766),
                    option text = STRING_TOKEN(0x00A1),             value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000C71: 09 07 A1 00 30 00 00 
                    option text = STRING_TOKEN(0x00A0),            value = 1, flags = RESET_REQUIRED;
>00000C78: 09 07 A0 00 00 00 01 
            endoneof;
>00000C7F: 29 02 

            oneof varid = SYSTEM_CONFIGURATION.ValidationSkxPciError,
>00000C81: 05 91 67 07 68 07 44 00 01 00 BB 01 10 10 00 01 00 
                    prompt  = STRING_TOKEN(0x0767),
                    help    = STRING_TOKEN(0x0768),
                    option text = STRING_TOKEN(0x00A1),             value = 0, flags = RESET_REQUIRED;
>00000C92: 09 07 A1 00 00 00 00 
                    option text = STRING_TOKEN(0x00A0),            value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000C99: 09 07 A0 00 30 00 01 
            endoneof;
>00000CA0: 29 02 

            oneof varid = SYSTEM_CONFIGURATION.ValidationSkxPciLinkError,
>00000CA2: 05 91 69 07 6A 07 45 00 01 00 BC 01 10 10 00 01 00 
                    prompt  = STRING_TOKEN(0x0769),
                    help    = STRING_TOKEN(0x076A),
                    option text = STRING_TOKEN(0x00A1),             value = 0, flags = RESET_REQUIRED;
>00000CB3: 09 07 A1 00 00 00 00 
                    option text = STRING_TOKEN(0x00A0),            value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000CBA: 09 07 A0 00 30 00 01 
            endoneof;
>00000CC1: 29 02 

            oneof varid = SYSTEM_CONFIGURATION.ValidationSkxPciLinkRecoveryCountError,
>00000CC3: 05 91 6B 07 6C 07 46 00 01 00 BE 01 10 10 00 01 00 
                    prompt  = STRING_TOKEN(0x076B),
                    help    = STRING_TOKEN(0x076C),
                    option text = STRING_TOKEN(0x00A1),             value = 0, flags = RESET_REQUIRED;
>00000CD4: 09 07 A1 00 00 00 00 
                    option text = STRING_TOKEN(0x00A0),            value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000CDB: 09 07 A0 00 30 00 01 
            endoneof;
>00000CE2: 29 02 

            numeric varid   = SYSTEM_CONFIGURATION.ValidationSkxPciLinkRecoveryCountThreshold,
>00000CE4: 07 94 6D 07 6E 07 47 00 01 00 BF 01 10 11 00 00 FF FF 01 00 
                prompt      = STRING_TOKEN(0x076D),
                help        = STRING_TOKEN(0x076E),
                flags       = RESET_REQUIRED,
                minimum     = 0,
                maximum     = 0xFFFF,
                step        = 1,
               default      = 4, defaultstore = MyStandardDefault,
>00000CF8: 5B 07 00 00 01 04 00 
               default      = 4, defaultstore = MyManufactureDefault,
>00000CFF: 5B 07 01 00 01 04 00 
            endnumeric;
>00000D06: 29 02 

            oneof varid = SYSTEM_CONFIGURATION.ValidationPchPciError,
>00000D08: 05 91 6F 07 70 07 48 00 01 00 BD 01 10 10 00 01 00 
                    prompt  = STRING_TOKEN(0x076F),
                    help    = STRING_TOKEN(0x0770),
                    option text = STRING_TOKEN(0x00A1),             value = 0, flags = RESET_REQUIRED;
>00000D19: 09 07 A1 00 00 00 00 
                    option text = STRING_TOKEN(0x00A0),            value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000D20: 09 07 A0 00 30 00 01 
            endoneof;
>00000D27: 29 02 

            oneof varid = SYSTEM_CONFIGURATION.ValidationKtiError,
>00000D29: 05 91 71 07 72 07 49 00 01 00 C1 01 10 10 00 01 00 
                    prompt  = STRING_TOKEN(0x0771),
                    help    = STRING_TOKEN(0x0772),
                    option text = STRING_TOKEN(0x00A1),             value = 0, flags = RESET_REQUIRED;
>00000D3A: 09 07 A1 00 00 00 00 
                    option text = STRING_TOKEN(0x00A0),            value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000D41: 09 07 A0 00 30 00 01 
            endoneof;
>00000D48: 29 02 

    endif;
>00000D4A: 29 02 
  endform;
>00000D4C: 29 02 

  #line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"





























#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\MeTypeDefs.h"






























#line 32 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\MeTypeDefs.h"




#line 31 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
#line 32 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
#line 33 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

  
  
  

  form formid = 0x06,
>00000D4E: 01 86 06 00 03 03 

    title    = STRING_TOKEN(0x0303);

    subtitle text = STRING_TOKEN(0x0303);
>00000D54: 02 87 03 03 00 00 00 
>00000D5B: 29 02 
    subtitle text = STRING_TOKEN(0x0762);
>00000D5D: 02 87 62 07 00 00 00 
>00000D64: 29 02 
    subtitle text = STRING_TOKEN(0x00AA);
>00000D66: 02 87 AA 00 00 00 00 
>00000D6D: 29 02 

    suppressif TRUE;
>00000D6F: 0A 82 
>00000D71: 46 02 
        oneof varid = PCH_SETUP.GbeRegionInvalid,
>00000D73: 05 91 E7 03 E7 03 08 20 02 00 22 00 04 10 00 01 00 
             questionid  = 0x2008,
             prompt    = STRING_TOKEN(0x03E7),
             help      = STRING_TOKEN(0x03E7),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT| INTERACTIVE;
>00000D84: 09 07 FA 02 10 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = 0 | INTERACTIVE;
>00000D8B: 09 07 F9 02 00 00 01 
        endoneof;
>00000D92: 29 02 

        oneof varid = PCH_SETUP.LomLanSupported,
>00000D94: 05 91 EA 03 EB 03 09 20 02 00 23 00 04 10 00 01 00 
             questionid  = 0x2009,
             prompt    = STRING_TOKEN(0x03EA),
             help      = STRING_TOKEN(0x03EB),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT| INTERACTIVE;
>00000DA5: 09 07 FA 02 10 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = 0 | INTERACTIVE;
>00000DAC: 09 07 F9 02 00 00 01 
        endoneof;
>00000DB3: 29 02 

        numeric varid     = SYSTEM_CONFIGURATION.PchStepping,
>00000DB5: 07 91 05 03 06 03 0B 20 01 00 62 00 04 10 00 FF 00 
            questionid  = 0x200B,
            prompt      = STRING_TOKEN(0x0305),
            help        = STRING_TOKEN(0x0306),
            flags       = INTERACTIVE,
            minimum     = 0,
            maximum     = 255,
        endnumeric;
>00000DC6: 29 02 
    endif;
>00000DC8: 29 02 









    goto 0x60,
>00000DCA: 0F 0F 07 03 08 03 4A 00 00 00 FF FF 00 60 00 
         prompt = STRING_TOKEN(0x0307),
         help = STRING_TOKEN(0x0308),
         flags = 0,
         key = 0;

    goto 0x10E,
>00000DD9: 0F 0F F6 03 F7 03 4B 00 00 00 FF FF 00 0E 01 
         prompt = STRING_TOKEN(0x03F6),
         help = STRING_TOKEN(0x03F7),
         flags = 0,
         key = 0;

    goto 0x68,
>00000DE8: 0F 0F 81 03 82 03 4C 00 00 00 FF FF 00 68 00 
         prompt = STRING_TOKEN(0x0381),
         help   = STRING_TOKEN(0x0382),
         flags = 0,
         key = 0;


    goto 0x119,
>00000DF7: 0F 0F C8 04 C9 04 4D 00 00 00 FF FF 00 19 01 
         prompt = STRING_TOKEN(0x04C8),
         help   = STRING_TOKEN(0x04C9),
         flags  = 0,
         key    = 0;
#line 106 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

    goto 0x107,
>00000E06: 0F 0F 45 03 46 03 4E 00 00 00 FF FF 00 07 01 
         prompt = STRING_TOKEN(0x0345),
         help = STRING_TOKEN(0x0346),
         flags = 0,
         key = 0;

    goto 0x10F,
>00000E15: 0F 0F 39 03 3A 03 4F 00 00 00 FF FF 00 0F 01 
        prompt = STRING_TOKEN(0x0339),
        help   = STRING_TOKEN(0x033A),
        flags = 0,
        key = 0;

    goto 0x10B,
>00000E24: 0F 0F 2B 03 2C 03 50 00 00 00 FF FF 00 0B 01 
         prompt = STRING_TOKEN(0x032B),
         help = STRING_TOKEN(0x032C),
         flags = 0,
         key = 0;

    goto 0x61,
>00000E33: 0F 0F E8 03 E9 03 51 00 00 00 FF FF 00 61 00 
         prompt = STRING_TOKEN(0x03E8),
         help = STRING_TOKEN(0x03E9),
         flags = 0,
         key = 0;

    goto 0x10C,
>00000E42: 0F 0F 10 05 11 05 52 00 00 00 FF FF 00 0C 01 
        prompt = STRING_TOKEN(0x0510),
        help   = STRING_TOKEN(0x0511),
        flags = 0,
        key = 0;

    goto 0x11D,
>00000E51: 0F 0F 1A 05 1B 05 53 00 00 00 FF FF 00 1D 01 
         prompt = STRING_TOKEN(0x051A),
         help = STRING_TOKEN(0x051B),
         flags = 0,
         key = 0;

    goto 0x11E,
>00000E60: 0F 0F 40 05 41 05 54 00 00 00 FF FF 00 1E 01 
        prompt = STRING_TOKEN(0x0540),
        help   = STRING_TOKEN(0x0541),
        flags = 0,
        key = 0;

    grayoutif ideqval PCH_SETUP.MeType == 0x03;
>00000E6F: 19 82 
>00000E71: 12 06 DF 03 03 00 
    
#line 152 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
      goto 0x123,
>00000E77: 0F 0F 29 05 2A 05 55 00 00 00 FF FF 00 23 01 
        prompt = STRING_TOKEN(0x0529),
        help   = STRING_TOKEN(0x052A),
        flags = 0,
        key = 0;

    endif; 
>00000E86: 29 02 
#line 160 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

    oneof varid = PCH_SETUP.PchDciEn,
>00000E88: 05 91 4B 06 4C 06 56 00 02 00 75 04 10 10 00 01 00 
      prompt   = STRING_TOKEN(0x064B),
      help     = STRING_TOKEN(0x064C),
      option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000E99: 09 07 38 07 30 00 00 
      option text = STRING_TOKEN(0x0739), value = 1, flags = RESET_REQUIRED;
>00000EA0: 09 07 39 07 00 00 01 
    endoneof;
>00000EA7: 29 02 

    suppressif ideqval PCH_SETUP.PchDciEn == 1;
>00000EA9: 0A 82 
>00000EAB: 12 06 56 00 01 00 
    oneof varid = PCH_SETUP.PchDciAutoDetect,
>00000EB1: 05 91 4D 06 4E 06 57 00 02 00 76 04 10 10 00 01 00 
      prompt   = STRING_TOKEN(0x064D),
      help     = STRING_TOKEN(0x064E),
      option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000EC2: 09 07 38 07 30 00 00 
      option text = STRING_TOKEN(0x0739), value = 1, flags = RESET_REQUIRED;
>00000EC9: 09 07 39 07 00 00 01 
    endoneof;
>00000ED0: 29 02 
    endif;
>00000ED2: 29 02 

  endform;
>00000ED4: 29 02 

  form formid = 0x60,
>00000ED6: 01 86 60 00 07 03 

     title     = STRING_TOKEN(0x0307);

     oneof varid    = PCH_SETUP.BoardCapability,
>00000EDC: 05 91 0D 03 0E 03 58 00 02 00 1F 00 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x030D),
         help     = STRING_TOKEN(0x030E),
         option text = STRING_TOKEN(0x030F), value = 0, flags = RESET_REQUIRED;
>00000EED: 09 07 0F 03 00 00 00 
         option text = STRING_TOKEN(0x0310), value = 1, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
>00000EF4: 09 07 10 03 30 00 01 
     endoneof;
>00000EFB: 29 02 

     oneof varid    = PCH_SETUP.DeepSxMode,
>00000EFD: 05 91 11 03 12 03 59 00 02 00 20 00 10 10 00 06 00 
         prompt   = STRING_TOKEN(0x0311),
         help     = STRING_TOKEN(0x0312),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000F0E: 09 07 FA 02 30 00 00 
        option text = STRING_TOKEN(0x0313), value = 2, flags = RESET_REQUIRED;
>00000F15: 09 07 13 03 00 00 02 
        option text = STRING_TOKEN(0x0314), value = 4, flags = RESET_REQUIRED;
>00000F1C: 09 07 14 03 00 00 04 
        option text = STRING_TOKEN(0x0315), value = 6, flags = RESET_REQUIRED;
>00000F23: 09 07 15 03 00 00 06 
     endoneof;
>00000F2A: 29 02 

      oneof varid = PCH_SETUP.Gp27WakeFromDeepSx,
>00000F2C: 05 91 16 03 17 03 5A 00 02 00 21 00 10 10 00 01 00 
        prompt   = STRING_TOKEN(0x0316),
        help     = STRING_TOKEN(0x0317),
        option text = STRING_TOKEN(0x02F9), value = 1, flags =  RESET_REQUIRED;
>00000F3D: 09 07 F9 02 00 00 01 
        option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000F44: 09 07 FA 02 30 00 00 
      endoneof;
>00000F4B: 29 02 

     oneof varid    = PCH_SETUP.PchSmbus,
>00000F4D: 05 91 18 03 19 03 5B 00 02 00 26 00 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0318),
         help     = STRING_TOKEN(0x0319),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00000F5E: 09 07 FA 02 00 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
>00000F65: 09 07 F9 02 30 00 01 
     endoneof;
>00000F6C: 29 02 

     oneof varid  = PCH_SETUP.PchSerm,
>00000F6E: 05 91 1A 03 1B 03 5C 00 02 00 2E 00 10 10 00 01 00 
      prompt   = STRING_TOKEN(0x031A),
      help     = STRING_TOKEN(0x031B),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00000F7F: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00000F86: 09 07 F9 02 30 00 01 
     endoneof;
>00000F8D: 29 02 

     oneof varid  = PCH_SETUP.PchDisplay,
>00000F8F: 05 91 1C 03 1D 03 5D 00 02 00 28 00 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x031C),
         help     = STRING_TOKEN(0x031D),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00000FA0: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x02F9), value = 1, flags =  DEFAULT| MANUFACTURING |RESET_REQUIRED;
>00000FA7: 09 07 F9 02 30 00 01 
     endoneof;
>00000FAE: 29 02 

     oneof varid  = PCH_SETUP.PchPciClockRun,
>00000FB0: 05 91 0B 03 0C 03 5E 00 02 00 27 00 10 10 00 01 00 
      prompt   = STRING_TOKEN(0x030B),
      help     = STRING_TOKEN(0x030C),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00000FC1: 09 07 FA 02 00 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000FC8: 09 07 F9 02 30 00 01 
     endoneof;
>00000FCF: 29 02 

     oneof varid  = PCH_SETUP.PchSirqMode,
>00000FD1: 05 91 1E 03 1F 03 5F 00 02 00 35 00 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x031E),
         help     = STRING_TOKEN(0x031F),
         option text = STRING_TOKEN(0x0320), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00000FE2: 09 07 20 03 30 00 00 
         option text = STRING_TOKEN(0x0321), value = 1, flags = RESET_REQUIRED;
>00000FE9: 09 07 21 03 00 00 01 
     endoneof;
>00000FF0: 29 02 










     oneof varid  =  PCH_SETUP.EnableClockSpreadSpec,
>00000FF2: 05 91 5A 08 5B 08 60 00 02 00 33 00 10 10 00 01 00 
      prompt   = STRING_TOKEN(0x085A),
      help     = STRING_TOKEN(0x085B),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00001003: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000100A: 09 07 F9 02 30 00 01 
     endoneof;
>00001011: 29 02 

     oneof varid  =  PCH_SETUP.StateAfterG3,
>00001013: 05 91 22 03 23 03 61 00 02 00 72 04 10 10 00 FF 00 
       prompt   = STRING_TOKEN(0x0322),
       help     = STRING_TOKEN(0x0323),
       option text = STRING_TOKEN(0x0324),                value = 0,      flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
>00001024: 09 07 24 03 30 00 00 
       option text = STRING_TOKEN(0x0325),                value = 1,      flags = RESET_REQUIRED;
>0000102B: 09 07 25 03 00 00 01 
       option text = STRING_TOKEN(0x0326), value = 0xFF, flags = RESET_REQUIRED;
>00001032: 09 07 26 03 00 00 FF 
     endoneof;
>00001039: 29 02 

     oneof varid  = PCH_SETUP.IchPort80Route,
>0000103B: 05 91 09 03 0A 03 62 00 02 00 34 00 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0309),
         help     = STRING_TOKEN(0x030A),
         option text = STRING_TOKEN(0x02FB), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000104C: 09 07 FB 02 30 00 00 
         option text = STRING_TOKEN(0x02FC), value = 1, flags = RESET_REQUIRED;
>00001053: 09 07 FC 02 00 00 01 
     endoneof;
>0000105A: 29 02 

   oneof varid  = PCH_SETUP.PchCrossThrottling,
>0000105C: 05 91 29 03 2A 03 63 00 02 00 3D 01 10 10 00 01 00 
      prompt   = STRING_TOKEN(0x0329),
      help     = STRING_TOKEN(0x032A),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000106D: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001074: 09 07 F9 02 30 00 01 
    endoneof;
>0000107B: 29 02 

     oneof varid  = PCH_SETUP.PchCrid,
>0000107D: 05 91 27 03 28 03 64 00 02 00 29 00 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0327),
         help     = STRING_TOKEN(0x0328),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000108E: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00001095: 09 07 F9 02 00 00 01 
     endoneof;
>0000109C: 29 02 

    oneof varid     = PCH_SETUP.PchIoApic24119Entries,
>0000109E: 05 91 35 03 36 03 65 00 02 00 68 04 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0335),
        help        = STRING_TOKEN(0x0336),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000010AF: 09 07 FA 02 30 00 00 
        option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000010B6: 09 07 F9 02 00 00 01 
    endoneof;
>000010BD: 29 02 

    disableif NOT ideqval SYSTEM_CONFIGURATION.PchStepping == 0x30;
>000010BF: 1E 82 
>000010C1: 12 86 0B 20 30 00 
>000010C7: 17 02 
>000010C9: 29 02 
      oneof varid = PCH_SETUP.PciePllSsc,
>000010CB: 05 91 08 07 09 07 66 00 02 00 73 04 10 10 00 FF 00 
        prompt   = STRING_TOKEN(0x0708),
        help     = STRING_TOKEN(0x0709),
        option text = STRING_TOKEN(0x02FA),   value = 0xff, flags = RESET_REQUIRED;
>000010DC: 09 07 FA 02 00 00 FF 
        option text = STRING_TOKEN(0x02F8),       value = 0xfe, flags = RESET_REQUIRED;
>000010E3: 09 07 F8 02 00 00 FE 
        option text = STRING_TOKEN(0x070A),      value = 0, flags = RESET_REQUIRED;
>000010EA: 09 07 0A 07 00 00 00 
        option text = STRING_TOKEN(0x070B), value = 1, flags = RESET_REQUIRED;
>000010F1: 09 07 0B 07 00 00 01 
        option text = STRING_TOKEN(0x070C), value = 2, flags = RESET_REQUIRED;
>000010F8: 09 07 0C 07 00 00 02 
        option text = STRING_TOKEN(0x070D), value = 3, flags = RESET_REQUIRED;
>000010FF: 09 07 0D 07 00 00 03 
        option text = STRING_TOKEN(0x070E), value = 4, flags = RESET_REQUIRED;
>00001106: 09 07 0E 07 00 00 04 
        option text = STRING_TOKEN(0x070F), value = 5, flags = RESET_REQUIRED;
>0000110D: 09 07 0F 07 00 00 05 
        option text = STRING_TOKEN(0x0710), value = 6, flags = RESET_REQUIRED;
>00001114: 09 07 10 07 00 00 06 
        option text = STRING_TOKEN(0x0711), value = 7, flags = RESET_REQUIRED;
>0000111B: 09 07 11 07 00 00 07 
        option text = STRING_TOKEN(0x0712), value = 8, flags = RESET_REQUIRED;
>00001122: 09 07 12 07 00 00 08 
        option text = STRING_TOKEN(0x0713), value = 9, flags = RESET_REQUIRED;
>00001129: 09 07 13 07 00 00 09 
        option text = STRING_TOKEN(0x0714), value = 10, flags = RESET_REQUIRED;
>00001130: 09 07 14 07 00 00 0A 
        option text = STRING_TOKEN(0x0715), value = 11, flags = RESET_REQUIRED;
>00001137: 09 07 15 07 00 00 0B 
        option text = STRING_TOKEN(0x0716), value = 12, flags = RESET_REQUIRED;
>0000113E: 09 07 16 07 00 00 0C 
        option text = STRING_TOKEN(0x0717), value = 13, flags = RESET_REQUIRED;
>00001145: 09 07 17 07 00 00 0D 
        option text = STRING_TOKEN(0x0718), value = 14, flags = RESET_REQUIRED;
>0000114C: 09 07 18 07 00 00 0E 
        option text = STRING_TOKEN(0x0719), value = 15, flags = RESET_REQUIRED;
>00001153: 09 07 19 07 00 00 0F 
        option text = STRING_TOKEN(0x071A), value = 16, flags = RESET_REQUIRED;
>0000115A: 09 07 1A 07 00 00 10 
        option text = STRING_TOKEN(0x071B), value = 17, flags = RESET_REQUIRED;
>00001161: 09 07 1B 07 00 00 11 
        option text = STRING_TOKEN(0x071C), value = 18, flags = RESET_REQUIRED;
>00001168: 09 07 1C 07 00 00 12 
        option text = STRING_TOKEN(0x071D), value = 19, flags = RESET_REQUIRED;
>0000116F: 09 07 1D 07 00 00 13 
        option text = STRING_TOKEN(0x071E),          value = 20, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001176: 09 07 1E 07 30 00 14 
      endoneof;
>0000117D: 29 02 
    endif;
>0000117F: 29 02 
    disableif ideqval SYSTEM_CONFIGURATION.PchStepping == 0x30;
>00001181: 1E 82 
>00001183: 12 06 0B 20 30 00 
      oneof varid = PCH_SETUP.PciePllSsc,
>00001189: 05 91 08 07 09 07 67 00 02 00 73 04 10 10 05 FF 00 
        prompt   = STRING_TOKEN(0x0708),
        help     = STRING_TOKEN(0x0709),
        option text = STRING_TOKEN(0x02F8),       value = 0xfe, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000119A: 09 07 F8 02 30 00 FE 
        option text = STRING_TOKEN(0x02FA),   value = 0xff, flags = RESET_REQUIRED;
>000011A1: 09 07 FA 02 00 00 FF 
        option text = STRING_TOKEN(0x070F), value = 5,    flags = RESET_REQUIRED;
>000011A8: 09 07 0F 07 00 00 05 
      endoneof;
>000011AF: 29 02 
    endif;
>000011B1: 29 02 

  endform;
>000011B3: 29 02 
































































































































  form formid = 0x107,
>000011B5: 01 86 07 01 45 03 

    title = STRING_TOKEN(0x0345);

    subtitle text = STRING_TOKEN(0x02F7);
>000011BB: 02 87 F7 02 00 00 00 
>000011C2: 29 02 

    oneof varid   = PCH_SETUP.UsbPrecondition,
>000011C4: 05 91 4F 03 50 03 68 00 02 00 78 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x034F),
      help        = STRING_TOKEN(0x0350),
      option text = STRING_TOKEN(0x02F9), value = 1, flags =  RESET_REQUIRED;
>000011D5: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000011DC: 09 07 FA 02 30 00 00 
    endoneof;
>000011E3: 29 02 

    oneof varid    = PCH_SETUP.PchUsbManualMode,
>000011E5: 05 91 47 03 48 03 69 00 02 00 36 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0347),
        help        = STRING_TOKEN(0x0348),
        option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000011F6: 09 07 F9 02 00 00 01 
        option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000011FD: 09 07 FA 02 30 00 00 
    endoneof;
>00001204: 29 02 

    suppressif NOT ideqval PCH_SETUP.PchUsbManualMode == 0x1;
>00001206: 0A 82 
>00001208: 12 86 69 00 01 00 
>0000120E: 17 02 
>00001210: 29 02 
      oneof varid   = PCH_SETUP.Btcg,
>00001212: 05 91 53 03 54 03 6A 00 02 00 7A 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0353),
        help        = STRING_TOKEN(0x0354),
        option text = STRING_TOKEN(0x02F9), value = 1, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001223: 09 07 F9 02 30 00 01 
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000122A: 09 07 FA 02 00 00 00 
      endoneof;
>00001231: 29 02 
    endif; 
>00001233: 29 02 

    suppressif NOT ideqval PCH_SETUP.PchUsbManualMode == 0x1;
>00001235: 0A 82 
>00001237: 12 86 69 00 01 00 
>0000123D: 17 02 
>0000123F: 29 02 

    endif; 
>00001241: 29 02 










    suppressif NOT ideqval PCH_SETUP.PchUsbManualMode == 0x1;
>00001243: 0A 82 
>00001245: 12 86 69 00 01 00 
>0000124B: 17 02 
>0000124D: 29 02 

      oneof varid   = PCH_SETUP.Usb3PinsTermination,
>0000124F: 05 91 57 03 58 03 6B 00 02 00 47 00 10 10 00 02 00 
        prompt      = STRING_TOKEN(0x0357),
        help        = STRING_TOKEN(0x0358),
        option text = STRING_TOKEN(0x0359), value = 0, flags = RESET_REQUIRED;
>00001260: 09 07 59 03 00 00 00 
        option text = STRING_TOKEN(0x035A   ), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001267: 09 07 5A 03 30 00 01 
        option text = STRING_TOKEN(0x035B    ), value = 2, flags = RESET_REQUIRED;
>0000126E: 09 07 5B 03 00 00 02 
      endoneof;
>00001275: 29 02 

    endif; 
>00001277: 29 02 

    suppressif ideqval PCH_SETUP.Usb3PinsTermination == 0x1 OR
>00001279: 0A 82 
>0000127B: 12 86 6B 00 01 00 
>00001287: 16 02 
>00001291: 29 02 
               ideqval PCH_SETUP.Usb3PinsTermination == 0x2 OR
>00001281: 12 06 6B 00 02 00 
>0000128F: 16 02 
               ideqval PCH_SETUP.PchUsbManualMode == 0x0;
>00001289: 12 06 69 00 00 00 

    oneof varid   = PCH_SETUP.EnableUsb3Pin[0],
>00001293: 05 91 5C 03 02 03 6C 00 02 00 48 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x035C),
      help        = STRING_TOKEN(0x0302),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000012A4: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9 ), value = 1, flags = RESET_REQUIRED;
>000012AB: 09 07 F9 02 00 00 01 
    endoneof;
>000012B2: 29 02 

    oneof varid   = PCH_SETUP.EnableUsb3Pin[1],
>000012B4: 05 91 5D 03 02 03 6D 00 02 00 49 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x035D),
      help        = STRING_TOKEN(0x0302),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000012C5: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9 ), value = 1, flags = RESET_REQUIRED;
>000012CC: 09 07 F9 02 00 00 01 
    endoneof;
>000012D3: 29 02 

    oneof varid   = PCH_SETUP.EnableUsb3Pin[2],
>000012D5: 05 91 5E 03 02 03 6E 00 02 00 4A 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x035E),
      help        = STRING_TOKEN(0x0302),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000012E6: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9 ), value = 1, flags = RESET_REQUIRED;
>000012ED: 09 07 F9 02 00 00 01 
    endoneof;
>000012F4: 29 02 

    oneof varid   = PCH_SETUP.EnableUsb3Pin[3],
>000012F6: 05 91 5F 03 02 03 6F 00 02 00 4B 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x035F),
      help        = STRING_TOKEN(0x0302),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001307: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9 ), value = 1, flags = RESET_REQUIRED;
>0000130E: 09 07 F9 02 00 00 01 
    endoneof;
>00001315: 29 02 

    oneof varid   = PCH_SETUP.EnableUsb3Pin[4],
>00001317: 05 91 60 03 02 03 70 00 02 00 4C 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0360),
      help        = STRING_TOKEN(0x0302),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001328: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9 ), value = 1, flags = RESET_REQUIRED;
>0000132F: 09 07 F9 02 00 00 01 
    endoneof;
>00001336: 29 02 

    oneof varid   = PCH_SETUP.EnableUsb3Pin[5],
>00001338: 05 91 61 03 02 03 71 00 02 00 4D 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0361),
      help        = STRING_TOKEN(0x0302),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001349: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9 ), value = 1, flags = RESET_REQUIRED;
>00001350: 09 07 F9 02 00 00 01 
    endoneof;
>00001357: 29 02 

    oneof varid   = PCH_SETUP.EnableUsb3Pin[6],
>00001359: 05 91 62 03 02 03 72 00 02 00 4E 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0362),
      help        = STRING_TOKEN(0x0302),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000136A: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9 ), value = 1, flags = RESET_REQUIRED;
>00001371: 09 07 F9 02 00 00 01 
    endoneof;
>00001378: 29 02 

    oneof varid   = PCH_SETUP.EnableUsb3Pin[7],
>0000137A: 05 91 63 03 02 03 73 00 02 00 4F 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0363),
      help        = STRING_TOKEN(0x0302),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000138B: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9 ), value = 1, flags = RESET_REQUIRED;
>00001392: 09 07 F9 02 00 00 01 
    endoneof;
>00001399: 29 02 

    oneof varid   = PCH_SETUP.EnableUsb3Pin[8],
>0000139B: 05 91 64 03 02 03 74 00 02 00 50 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0364),
      help        = STRING_TOKEN(0x0302),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000013AC: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9 ), value = 1, flags = RESET_REQUIRED;
>000013B3: 09 07 F9 02 00 00 01 
    endoneof;
>000013BA: 29 02 

    oneof varid   = PCH_SETUP.EnableUsb3Pin[9],
>000013BC: 05 91 65 03 02 03 75 00 02 00 51 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0365),
      help        = STRING_TOKEN(0x0302),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000013CD: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9 ), value = 1, flags = RESET_REQUIRED;
>000013D4: 09 07 F9 02 00 00 01 
    endoneof;
>000013DB: 29 02 

    endif; 
>000013DD: 29 02 

    
    
    
    

    
    
    
    oneof varid    = PCH_SETUP.PchUsbPerPortCtl,
>000013DF: 05 91 66 03 67 03 76 00 02 00 71 00 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0366),
         help     = STRING_TOKEN(0x0367),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000013F0: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000013F7: 09 07 F9 02 00 00 01 
    endoneof;
>000013FE: 29 02 

    suppressif ideqval PCH_SETUP.PchUsbPerPortCtl == 0x0;
>00001400: 0A 82 
>00001402: 12 06 76 00 00 00 
         oneof varid    = PCH_SETUP.PchUsbHsPort[0],
>00001408: 05 91 69 03 68 03 77 00 02 00 52 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0369),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00001419: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001420: 09 07 F9 02 30 00 01 
         endoneof;
>00001427: 29 02 

         oneof varid    = PCH_SETUP.PchUsbHsPort[1],
>00001429: 05 91 6A 03 68 03 78 00 02 00 53 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x036A),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000143A: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001441: 09 07 F9 02 30 00 01 
         endoneof;
>00001448: 29 02 

         oneof varid    = PCH_SETUP.PchUsbHsPort[2],
>0000144A: 05 91 6B 03 68 03 79 00 02 00 54 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x036B),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000145B: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001462: 09 07 F9 02 30 00 01 
         endoneof;
>00001469: 29 02 

         oneof varid    = PCH_SETUP.PchUsbHsPort[3],
>0000146B: 05 91 6C 03 68 03 7A 00 02 00 55 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x036C),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000147C: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001483: 09 07 F9 02 30 00 01 
         endoneof;
>0000148A: 29 02 

         oneof varid    = PCH_SETUP.PchUsbHsPort[4],
>0000148C: 05 91 6D 03 68 03 7B 00 02 00 56 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x036D),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000149D: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000014A4: 09 07 F9 02 30 00 01 
         endoneof;
>000014AB: 29 02 

         oneof varid    = PCH_SETUP.PchUsbHsPort[5],
>000014AD: 05 91 6E 03 68 03 7C 00 02 00 57 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x036E),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000014BE: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000014C5: 09 07 F9 02 30 00 01 
         endoneof;
>000014CC: 29 02 

         oneof varid    = PCH_SETUP.PchUsbHsPort[6],
>000014CE: 05 91 6F 03 68 03 7D 00 02 00 58 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x036F),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000014DF: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000014E6: 09 07 F9 02 30 00 01 
         endoneof;
>000014ED: 29 02 

         oneof varid    = PCH_SETUP.PchUsbHsPort[7],
>000014EF: 05 91 70 03 68 03 7E 00 02 00 59 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0370),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00001500: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001507: 09 07 F9 02 30 00 01 
         endoneof;
>0000150E: 29 02 

         oneof varid    = PCH_SETUP.PchUsbHsPort[8],
>00001510: 05 91 71 03 68 03 7F 00 02 00 5A 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0371),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00001521: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001528: 09 07 F9 02 30 00 01 
         endoneof;
>0000152F: 29 02 

         oneof varid    = PCH_SETUP.PchUsbHsPort[9],
>00001531: 05 91 72 03 68 03 80 00 02 00 5B 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0372),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00001542: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001549: 09 07 F9 02 30 00 01 
         endoneof;
>00001550: 29 02 

         oneof varid    = PCH_SETUP.PchUsbHsPort[10],
>00001552: 05 91 73 03 68 03 81 00 02 00 5C 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0373),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00001563: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000156A: 09 07 F9 02 30 00 01 
         endoneof;
>00001571: 29 02 

         oneof varid    = PCH_SETUP.PchUsbHsPort[11],
>00001573: 05 91 74 03 68 03 82 00 02 00 5D 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0374),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00001584: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000158B: 09 07 F9 02 30 00 01 
         endoneof;
>00001592: 29 02 

         oneof varid    = PCH_SETUP.PchUsbHsPort[12],
>00001594: 05 91 75 03 68 03 83 00 02 00 5E 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0375),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000015A5: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000015AC: 09 07 F9 02 30 00 01 
         endoneof;
>000015B3: 29 02 

         oneof varid    = PCH_SETUP.PchUsbHsPort[13],
>000015B5: 05 91 76 03 68 03 84 00 02 00 5F 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0376),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000015C6: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000015CD: 09 07 F9 02 30 00 01 
         endoneof;
>000015D4: 29 02 

     oneof varid    = PCH_SETUP.PchUsbSsPort[0],
>000015D6: 05 91 77 03 68 03 85 00 02 00 62 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0377),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000015E7: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000015EE: 09 07 F9 02 30 00 01 
         endoneof;
>000015F5: 29 02 

         oneof varid    = PCH_SETUP.PchUsbSsPort[1],
>000015F7: 05 91 78 03 68 03 86 00 02 00 63 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0378),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00001608: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000160F: 09 07 F9 02 30 00 01 
         endoneof;
>00001616: 29 02 

         oneof varid    = PCH_SETUP.PchUsbSsPort[2],
>00001618: 05 91 79 03 68 03 87 00 02 00 64 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0379),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00001629: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001630: 09 07 F9 02 30 00 01 
         endoneof;
>00001637: 29 02 

         oneof varid    = PCH_SETUP.PchUsbSsPort[3],
>00001639: 05 91 7A 03 68 03 88 00 02 00 65 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x037A),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000164A: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001651: 09 07 F9 02 30 00 01 
         endoneof;
>00001658: 29 02 

         oneof varid    = PCH_SETUP.PchUsbSsPort[4],
>0000165A: 05 91 7B 03 68 03 89 00 02 00 66 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x037B),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000166B: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001672: 09 07 F9 02 30 00 01 
         endoneof;
>00001679: 29 02 

         oneof varid    = PCH_SETUP.PchUsbSsPort[5],
>0000167B: 05 91 7C 03 68 03 8A 00 02 00 67 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x037C),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000168C: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001693: 09 07 F9 02 30 00 01 
         endoneof;
>0000169A: 29 02 

         oneof varid    = PCH_SETUP.PchUsbSsPort[6],
>0000169C: 05 91 7D 03 68 03 8B 00 02 00 68 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x037D),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000016AD: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000016B4: 09 07 F9 02 30 00 01 
         endoneof;
>000016BB: 29 02 

         oneof varid    = PCH_SETUP.PchUsbSsPort[7],
>000016BD: 05 91 7E 03 68 03 8C 00 02 00 69 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x037E),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000016CE: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000016D5: 09 07 F9 02 30 00 01 
         endoneof;
>000016DC: 29 02 

         oneof varid    = PCH_SETUP.PchUsbSsPort[8],
>000016DE: 05 91 7F 03 68 03 8D 00 02 00 6A 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x037F),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000016EF: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000016F6: 09 07 F9 02 30 00 01 
         endoneof;
>000016FD: 29 02 

         oneof varid    = PCH_SETUP.PchUsbSsPort[9],
>000016FF: 05 91 80 03 68 03 8E 00 02 00 6B 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0380),
             help     = STRING_TOKEN(0x0368),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00001710: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001717: 09 07 F9 02 30 00 01 
         endoneof;
>0000171E: 29 02 

    endif;  
>00001720: 29 02 

    oneof varid   = PCH_SETUP.XhciIdleL1,
>00001722: 05 91 51 03 52 03 8F 00 02 00 79 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0351),
      help        = STRING_TOKEN(0x0352),
      option text = STRING_TOKEN(0x02F9), value = 1, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001733: 09 07 F9 02 30 00 01 
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000173A: 09 07 FA 02 00 00 00 
    endoneof;
>00001741: 29 02 
    oneof varid   = PCH_SETUP.XhciDisMSICapability,
>00001743: 05 91 55 03 56 03 90 00 02 00 70 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0355),
      help        = STRING_TOKEN(0x0356),
      option text = STRING_TOKEN(0x02F9), value = 1, flags =  RESET_REQUIRED;
>00001754: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000175B: 09 07 FA 02 30 00 00 
    endoneof;
>00001762: 29 02 
    oneof varid   = PCH_SETUP.XhciOcMapEnabled,
>00001764: 05 91 49 03 4A 03 91 00 02 00 7C 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0349),
      help        = STRING_TOKEN(0x034A),
      option text = STRING_TOKEN(0x02F9), value = 1, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001775: 09 07 F9 02 30 00 01 
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000177C: 09 07 FA 02 00 00 00 
    endoneof;
>00001783: 29 02 
    oneof varid   = SYSTEM_CONFIGURATION.XhciWakeOnUsbEnabled,
>00001785: 05 91 4B 03 4C 03 92 00 01 00 63 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x034B),
      help        = STRING_TOKEN(0x034C),
      option text = STRING_TOKEN(0x02F9), value = 1, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001796: 09 07 F9 02 30 00 01 
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000179D: 09 07 FA 02 00 00 00 
    endoneof;
>000017A4: 29 02 
    oneof varid   = PCH_SETUP.PchUsbDegradeBar,
>000017A6: 05 91 4D 03 4E 03 93 00 02 00 7B 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x034D),
      help        = STRING_TOKEN(0x034E),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000017B7: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000017BE: 09 07 F9 02 00 00 01 
    endoneof;
>000017C5: 29 02 

#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\UsbConfigData.hfr"































    
    
    
    
    

    

	


		oneof varid     = SYSTEM_CONFIGURATION.UsbLegacySupport,
>000017C7: 05 91 3B 09 3C 09 94 00 01 00 D1 00 10 10 00 02 00 
			prompt      = STRING_TOKEN(0x093B),
			help        = STRING_TOKEN(0x093C),
			option text = STRING_TOKEN(0x0938),	value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000017D8: 09 07 38 09 30 00 00 
			option text = STRING_TOKEN(0x0939),	value = 1, flags = RESET_REQUIRED;
>000017DF: 09 07 39 09 00 00 01 
			option text = STRING_TOKEN(0x093A),		value = 2, flags = RESET_REQUIRED;
>000017E6: 09 07 3A 09 00 00 02 
		endoneof;
>000017ED: 29 02 


		oneof varid  = SYSTEM_CONFIGURATION.UsbEmul6064,
>000017EF: 05 91 43 09 44 09 95 00 01 00 D2 00 10 10 00 01 00 
			prompt = STRING_TOKEN(0x0943),
       		help = STRING_TOKEN(0x0944),
			option text = STRING_TOKEN(0x0939), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001800: 09 07 39 09 30 00 00 
			option text = STRING_TOKEN(0x0938), value = 1, flags =  RESET_REQUIRED;
>00001807: 09 07 38 09 00 00 01 
		endoneof;
>0000180E: 29 02 



		oneof varid     = SYSTEM_CONFIGURATION.UsbMassResetDelay,
>00001810: 05 91 3D 09 3E 09 96 00 01 00 D3 00 10 10 00 03 00 
			prompt      = STRING_TOKEN(0x093D),
			help        = STRING_TOKEN(0x093E),
			option text = STRING_TOKEN(0x093F),	value = 0, flags = RESET_REQUIRED;
>00001821: 09 07 3F 09 00 00 00 
			option text = STRING_TOKEN(0x0940),	value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00001828: 09 07 40 09 30 00 01 
			option text = STRING_TOKEN(0x0941),	value = 2, flags = RESET_REQUIRED;
>0000182F: 09 07 41 09 00 00 02 
			option text = STRING_TOKEN(0x0942),	value = 3, flags = RESET_REQUIRED;
>00001836: 09 07 42 09 00 00 03 
		endoneof;
>0000183D: 29 02 


                grayoutif ideqval SYSTEM_CONFIGURATION.UsbLegacySupport == 1;
>0000183F: 19 82 
>00001841: 12 06 94 00 01 00 
                oneof varid     = SYSTEM_CONFIGURATION.UsbNonBoot,
>00001847: 05 91 45 09 46 09 97 00 01 00 D4 00 10 10 00 01 00 
                        prompt      = STRING_TOKEN(0x0945),
                        help        = STRING_TOKEN(0x0946),
                        option text = STRING_TOKEN(0x0938),    value = 1, flags = RESET_REQUIRED;
>00001858: 09 07 38 09 00 00 01 
                        option text = STRING_TOKEN(0x0939),   value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000185F: 09 07 39 09 30 00 00 
                endoneof;
>00001866: 29 02 
                endif;
>00001868: 29 02 

	
#line 809 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

  endform;    
>0000186A: 29 02 

  form formid = 0x10B,
>0000186C: 01 86 0B 01 2B 03 

    title     = STRING_TOKEN(0x032B);
    subtitle text = STRING_TOKEN(0x02F7);
>00001872: 02 87 F7 02 00 00 00 
>00001879: 29 02 

    oneof varid  = PCH_SETUP.PchHdAudio,
>0000187B: 05 91 2D 03 2E 03 98 00 02 00 70 03 10 10 00 02 00 
         prompt   = STRING_TOKEN(0x032D),
         help     = STRING_TOKEN(0x032E),










         option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000188C: 09 07 FA 02 00 00 00 
         option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>00001893: 09 07 F9 02 30 00 01 
         option text = STRING_TOKEN(0x02F8),     value = 2, flags = RESET_REQUIRED;
>0000189A: 09 07 F8 02 00 00 02 
#line 834 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
#line 835 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
    endoneof;
>000018A1: 29 02 


    suppressif ideqval PCH_SETUP.PchHdAudio == 0x0;
>000018A3: 0A 82 
>000018A5: 12 06 98 00 00 00 

      oneof varid  = PCH_SETUP.PchHdAudioCodecSelect,
>000018AB: 05 91 47 06 48 06 99 00 02 00 75 03 10 10 00 01 00 
        prompt   = STRING_TOKEN(0x0647),
        help     = STRING_TOKEN(0x0648),
        option text = STRING_TOKEN(0x0649), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000018BC: 09 07 49 06 30 00 00 
        option text = STRING_TOKEN(0x064A), value = 1, flags = RESET_REQUIRED;
>000018C3: 09 07 4A 06 00 00 01 
      endoneof;
>000018CA: 29 02 

         oneof varid    = PCH_SETUP.PchHdAudioPme,
>000018CC: 05 91 2F 03 30 03 9A 00 02 00 72 03 10 10 00 01 00 
             prompt     = STRING_TOKEN(0x032F),
             help       = STRING_TOKEN(0x0330),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000018DD: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000018E4: 09 07 F9 02 00 00 01 
         endoneof;
>000018EB: 29 02 

      oneof varid    = PCH_SETUP.DfxHdaVcType,
>000018ED: 05 91 31 03 32 03 9B 00 02 00 7B 03 10 10 00 01 00 
        prompt     = STRING_TOKEN(0x0331),
        help       = STRING_TOKEN(0x0332),
        option text = STRING_TOKEN(0x0333), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000018FE: 09 07 33 03 30 00 00 
        option text = STRING_TOKEN(0x0334), value = 1, flags = RESET_REQUIRED;
>00001905: 09 07 34 03 00 00 01 
      endoneof;
>0000190C: 29 02 

    endif;
>0000190E: 29 02 
  endform;
>00001910: 29 02 

  form formid = 0x68,
>00001912: 01 86 68 00 81 03 
    
    

    
    title = STRING_TOKEN(0x0381);

    subtitle text = STRING_TOKEN(0x0381);
>00001918: 02 87 81 03 00 00 00 
>0000191F: 29 02 
    subtitle text = STRING_TOKEN(0x0762);
>00001921: 02 87 62 07 00 00 00 
>00001928: 29 02 
    subtitle text = STRING_TOKEN(0x00AA);
>0000192A: 02 87 AA 00 00 00 00 
>00001931: 29 02 

    oneof varid     = PCH_SETUP.PchSata,
>00001933: 05 91 9A 03 9B 03 9C 00 02 00 7E 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x039A),
        help        = STRING_TOKEN(0x039B),
        option text = STRING_TOKEN(0x02FA),  value = 0, flags = RESET_REQUIRED;
>00001944: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x02F9),   value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000194B: 09 07 F9 02 30 00 01 
    endoneof;
>00001952: 29 02 

    suppressif ideqval  PCH_SETUP.PchSata == 0;
>00001954: 0A 82 
>00001956: 12 06 9C 00 00 00 
        oneof varid     = PCH_SETUP.SataInterfaceMode,
>0000195C: 05 91 9C 03 9D 03 9D 00 02 00 7F 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x039C),
             help        = STRING_TOKEN(0x039D),

             option text = STRING_TOKEN(0x039E),  value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000196D: 09 07 9E 03 30 00 00 
             option text = STRING_TOKEN(0x039F),  value = 1, flags = RESET_REQUIRED;
>00001974: 09 07 9F 03 00 00 01 



#line 893 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         endoneof;
>0000197B: 29 02 

         oneof varid       = PCH_SETUP.SataTestMode,
>0000197D: 05 91 A0 03 A1 03 9E 00 02 00 BF 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x03A0),
             help     = STRING_TOKEN(0x03A1),
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000198E: 09 07 F9 02 00 00 01 
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001995: 09 07 FA 02 30 00 00 
         endoneof;
>0000199C: 29 02 
    endif;
>0000199E: 29 02 

         goto 0x10D,
>000019A0: 0F 0F A2 03 A3 03 9F 00 00 00 FF FF 00 0D 01 
             prompt = STRING_TOKEN(0x03A2),
             help = STRING_TOKEN(0x03A3);
        oneof varid   = PCH_SETUP.SataSalp,
>000019AF: 05 91 BE 03 BF 03 A0 00 02 00 BE 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x03BE),
             help     = STRING_TOKEN(0x03BF),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000019C0: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000019C7: 09 07 F9 02 30 00 01 
        endoneof;
>000019CE: 29 02 

    suppressif NOT ideqval PCH_SETUP.SataInterfaceMode == 1;
>000019D0: 0A 82 
>000019D2: 12 86 9D 00 01 00 
>000019D8: 17 02 
>000019DA: 29 02 
      oneof varid = PCH_SETUP.SataAlternateId,
>000019DC: 05 91 CE 03 CF 03 A1 00 02 00 BD 00 10 10 00 01 00 
          prompt   = STRING_TOKEN(0x03CE),
          help     = STRING_TOKEN(0x03CF),
          option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000019ED: 09 07 F9 02 00 00 01 
          option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
>000019F4: 09 07 FA 02 30 00 00 
      endoneof;
>000019FB: 29 02 

    oneof varid = PCH_SETUP.SataRaidLoadEfiDriver[0],
>000019FD: 05 91 C0 03 C1 03 A2 00 02 00 BA 00 10 10 00 01 00 
          prompt   = STRING_TOKEN(0x03C0),
          help     = STRING_TOKEN(0x03C1),
          option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00001A0E: 09 07 F9 02 00 00 01 
          option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
>00001A15: 09 07 FA 02 30 00 00 
      endoneof;
>00001A1C: 29 02 
    endif;
>00001A1E: 29 02 

    oneof varid    = PCH_SETUP.RstPcieStorageRemap[0],
>00001A20: 05 91 C2 03 C3 03 A3 00 02 00 4C 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x03C2),
         help     = STRING_TOKEN(0x03C3),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001A31: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00001A38: 09 07 F9 02 00 00 01 
    endoneof;
>00001A3F: 29 02 
    oneof varid       = PCH_SETUP.RstPcieStorageRemapPort[0],
>00001A41: 05 91 C8 03 C9 03 A4 00 02 00 4F 01 04 10 00 FF 00 
         prompt      = STRING_TOKEN(0x03C8),
         help        = STRING_TOKEN(0x03C9),
         option text = STRING_TOKEN(0x042F), value = 0, flags=DEFAULT | INTERACTIVE;
>00001A52: 09 07 2F 04 10 00 00 
         option text = STRING_TOKEN(0x0430), value = 1, flags=0 | INTERACTIVE;
>00001A59: 09 07 30 04 00 00 01 
         option text = STRING_TOKEN(0x0431), value = 2, flags=0 | INTERACTIVE;
>00001A60: 09 07 31 04 00 00 02 
         option text = STRING_TOKEN(0x0432), value = 3, flags=0 | INTERACTIVE;
>00001A67: 09 07 32 04 00 00 03 
         option text = STRING_TOKEN(0x0433), value = 4, flags=0 | INTERACTIVE;
>00001A6E: 09 07 33 04 00 00 04 
         option text = STRING_TOKEN(0x0434), value = 5, flags=0 | INTERACTIVE;
>00001A75: 09 07 34 04 00 00 05 
         option text = STRING_TOKEN(0x0435), value = 6, flags=0 | INTERACTIVE;
>00001A7C: 09 07 35 04 00 00 06 
         option text = STRING_TOKEN(0x0436), value = 7, flags=0 | INTERACTIVE;
>00001A83: 09 07 36 04 00 00 07 
         option text = STRING_TOKEN(0x0437), value = 8, flags=0 | INTERACTIVE;
>00001A8A: 09 07 37 04 00 00 08 
         option text = STRING_TOKEN(0x0438), value = 9, flags=0 | INTERACTIVE;
>00001A91: 09 07 38 04 00 00 09 
         option text = STRING_TOKEN(0x0439), value = 10, flags=0 | INTERACTIVE;
>00001A98: 09 07 39 04 00 00 0A 
         option text = STRING_TOKEN(0x043A), value = 11, flags=0 | INTERACTIVE;
>00001A9F: 09 07 3A 04 00 00 0B 
         option text = STRING_TOKEN(0x043B), value = 12, flags=0 | INTERACTIVE;
>00001AA6: 09 07 3B 04 00 00 0C 
         option text = STRING_TOKEN(0x043C), value = 13, flags=0 | INTERACTIVE;
>00001AAD: 09 07 3C 04 00 00 0D 
         option text = STRING_TOKEN(0x043D), value = 14, flags=0 | INTERACTIVE;
>00001AB4: 09 07 3D 04 00 00 0E 
         option text = STRING_TOKEN(0x043E), value = 15, flags=0 | INTERACTIVE;
>00001ABB: 09 07 3E 04 00 00 0F 
         option text = STRING_TOKEN(0x043F), value = 16, flags=0 | INTERACTIVE;
>00001AC2: 09 07 3F 04 00 00 10 
         option text = STRING_TOKEN(0x0440), value = 17, flags=0 | INTERACTIVE;
>00001AC9: 09 07 40 04 00 00 11 
         option text = STRING_TOKEN(0x0441), value = 18, flags=0 | INTERACTIVE;
>00001AD0: 09 07 41 04 00 00 12 
         option text = STRING_TOKEN(0x0442), value = 19, flags=0 | INTERACTIVE;
>00001AD7: 09 07 42 04 00 00 13 
         option text = STRING_TOKEN(0x0443), value = 255, flags=0 | INTERACTIVE;
>00001ADE: 09 07 43 04 00 00 FF 
    endoneof;
>00001AE5: 29 02 

    oneof varid    = PCH_SETUP.RstPcieStorageRemap[1],
>00001AE7: 05 91 C4 03 C5 03 A5 00 02 00 4D 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x03C4),
         help     = STRING_TOKEN(0x03C5),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001AF8: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00001AFF: 09 07 F9 02 00 00 01 
    endoneof;
>00001B06: 29 02 
    oneof varid       = PCH_SETUP.RstPcieStorageRemapPort[1],
>00001B08: 05 91 CA 03 CB 03 A6 00 02 00 50 01 04 10 00 FF 00 
         prompt      = STRING_TOKEN(0x03CA),
         help        = STRING_TOKEN(0x03CB),
         option text = STRING_TOKEN(0x042F), value = 0, flags=DEFAULT | INTERACTIVE;
>00001B19: 09 07 2F 04 10 00 00 
         option text = STRING_TOKEN(0x0430), value = 1, flags=0 | INTERACTIVE;
>00001B20: 09 07 30 04 00 00 01 
         option text = STRING_TOKEN(0x0431), value = 2, flags=0 | INTERACTIVE;
>00001B27: 09 07 31 04 00 00 02 
         option text = STRING_TOKEN(0x0432), value = 3, flags=0 | INTERACTIVE;
>00001B2E: 09 07 32 04 00 00 03 
         option text = STRING_TOKEN(0x0433), value = 4, flags=0 | INTERACTIVE;
>00001B35: 09 07 33 04 00 00 04 
         option text = STRING_TOKEN(0x0434), value = 5, flags=0 | INTERACTIVE;
>00001B3C: 09 07 34 04 00 00 05 
         option text = STRING_TOKEN(0x0435), value = 6, flags=0 | INTERACTIVE;
>00001B43: 09 07 35 04 00 00 06 
         option text = STRING_TOKEN(0x0436), value = 7, flags=0 | INTERACTIVE;
>00001B4A: 09 07 36 04 00 00 07 
         option text = STRING_TOKEN(0x0437), value = 8, flags=0 | INTERACTIVE;
>00001B51: 09 07 37 04 00 00 08 
         option text = STRING_TOKEN(0x0438), value = 9, flags=0 | INTERACTIVE;
>00001B58: 09 07 38 04 00 00 09 
         option text = STRING_TOKEN(0x0439), value = 10, flags=0 | INTERACTIVE;
>00001B5F: 09 07 39 04 00 00 0A 
         option text = STRING_TOKEN(0x043A), value = 11, flags=0 | INTERACTIVE;
>00001B66: 09 07 3A 04 00 00 0B 
         option text = STRING_TOKEN(0x043B), value = 12, flags=0 | INTERACTIVE;
>00001B6D: 09 07 3B 04 00 00 0C 
         option text = STRING_TOKEN(0x043C), value = 13, flags=0 | INTERACTIVE;
>00001B74: 09 07 3C 04 00 00 0D 
         option text = STRING_TOKEN(0x043D), value = 14, flags=0 | INTERACTIVE;
>00001B7B: 09 07 3D 04 00 00 0E 
         option text = STRING_TOKEN(0x043E), value = 15, flags=0 | INTERACTIVE;
>00001B82: 09 07 3E 04 00 00 0F 
         option text = STRING_TOKEN(0x043F), value = 16, flags=0 | INTERACTIVE;
>00001B89: 09 07 3F 04 00 00 10 
         option text = STRING_TOKEN(0x0440), value = 17, flags=0 | INTERACTIVE;
>00001B90: 09 07 40 04 00 00 11 
         option text = STRING_TOKEN(0x0441), value = 18, flags=0 | INTERACTIVE;
>00001B97: 09 07 41 04 00 00 12 
         option text = STRING_TOKEN(0x0442), value = 19, flags=0 | INTERACTIVE;
>00001B9E: 09 07 42 04 00 00 13 
         option text = STRING_TOKEN(0x0443), value = 255, flags=0 | INTERACTIVE;
>00001BA5: 09 07 43 04 00 00 FF 
    endoneof;
>00001BAC: 29 02 

    oneof varid    = PCH_SETUP.RstPcieStorageRemap[2],
>00001BAE: 05 91 C6 03 C7 03 A7 00 02 00 4E 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x03C6),
         help     = STRING_TOKEN(0x03C7),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001BBF: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00001BC6: 09 07 F9 02 00 00 01 
    endoneof;
>00001BCD: 29 02 
    oneof varid       = PCH_SETUP.RstPcieStorageRemapPort[2],
>00001BCF: 05 91 CC 03 CD 03 A8 00 02 00 51 01 04 10 00 FF 00 
         prompt      = STRING_TOKEN(0x03CC),
         help        = STRING_TOKEN(0x03CD),
         option text = STRING_TOKEN(0x042F), value = 0, flags=DEFAULT | INTERACTIVE;
>00001BE0: 09 07 2F 04 10 00 00 
         option text = STRING_TOKEN(0x0430), value = 1, flags=0 | INTERACTIVE;
>00001BE7: 09 07 30 04 00 00 01 
         option text = STRING_TOKEN(0x0431), value = 2, flags=0 | INTERACTIVE;
>00001BEE: 09 07 31 04 00 00 02 
         option text = STRING_TOKEN(0x0432), value = 3, flags=0 | INTERACTIVE;
>00001BF5: 09 07 32 04 00 00 03 
         option text = STRING_TOKEN(0x0433), value = 4, flags=0 | INTERACTIVE;
>00001BFC: 09 07 33 04 00 00 04 
         option text = STRING_TOKEN(0x0434), value = 5, flags=0 | INTERACTIVE;
>00001C03: 09 07 34 04 00 00 05 
         option text = STRING_TOKEN(0x0435), value = 6, flags=0 | INTERACTIVE;
>00001C0A: 09 07 35 04 00 00 06 
         option text = STRING_TOKEN(0x0436), value = 7, flags=0 | INTERACTIVE;
>00001C11: 09 07 36 04 00 00 07 
         option text = STRING_TOKEN(0x0437), value = 8, flags=0 | INTERACTIVE;
>00001C18: 09 07 37 04 00 00 08 
         option text = STRING_TOKEN(0x0438), value = 9, flags=0 | INTERACTIVE;
>00001C1F: 09 07 38 04 00 00 09 
         option text = STRING_TOKEN(0x0439), value = 10, flags=0 | INTERACTIVE;
>00001C26: 09 07 39 04 00 00 0A 
         option text = STRING_TOKEN(0x043A), value = 11, flags=0 | INTERACTIVE;
>00001C2D: 09 07 3A 04 00 00 0B 
         option text = STRING_TOKEN(0x043B), value = 12, flags=0 | INTERACTIVE;
>00001C34: 09 07 3B 04 00 00 0C 
         option text = STRING_TOKEN(0x043C), value = 13, flags=0 | INTERACTIVE;
>00001C3B: 09 07 3C 04 00 00 0D 
         option text = STRING_TOKEN(0x043D), value = 14, flags=0 | INTERACTIVE;
>00001C42: 09 07 3D 04 00 00 0E 
         option text = STRING_TOKEN(0x043E), value = 15, flags=0 | INTERACTIVE;
>00001C49: 09 07 3E 04 00 00 0F 
         option text = STRING_TOKEN(0x043F), value = 16, flags=0 | INTERACTIVE;
>00001C50: 09 07 3F 04 00 00 10 
         option text = STRING_TOKEN(0x0440), value = 17, flags=0 | INTERACTIVE;
>00001C57: 09 07 40 04 00 00 11 
         option text = STRING_TOKEN(0x0441), value = 18, flags=0 | INTERACTIVE;
>00001C5E: 09 07 41 04 00 00 12 
         option text = STRING_TOKEN(0x0442), value = 19, flags=0 | INTERACTIVE;
>00001C65: 09 07 42 04 00 00 13 
         option text = STRING_TOKEN(0x0443), value = 255, flags=0 | INTERACTIVE;
>00001C6C: 09 07 43 04 00 00 FF 
    endoneof;
>00001C73: 29 02 

    subtitle text = STRING_TOKEN(0x00AA);
>00001C75: 02 87 AA 00 00 00 00 
>00001C7C: 29 02 

    text
>00001C7E: 03 08 85 03 AA 00 86 03 
        help   = STRING_TOKEN(0x00AA),
        text   = STRING_TOKEN(0x0385),
        text   = STRING_TOKEN(0x0386);

    text
>00001C86: 03 08 D7 03 F7 02 D8 03 
      help   = STRING_TOKEN(0x02F7),
      text   = STRING_TOKEN(0x03D7),
      text   = STRING_TOKEN(0x03D8),
      flags  = 0,
      key    = 0;

    suppressif ideqvallist  PCH_SETUP.SataTestMode == 1;
>00001C8E: 0A 82 
>00001C90: 14 08 9E 00 01 00 01 00 

         oneof varid   = PCH_SETUP.SataPort[0],
>00001C98: 05 91 91 03 99 03 A9 00 02 00 80 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x0391),
             help        = STRING_TOKEN(0x0399),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00001CA9: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001CB0: 09 07 F9 02 30 00 01 
         endoneof;
>00001CB7: 29 02 
    endif;
>00001CB9: 29 02 

         oneof varid   = PCH_SETUP.SataHotPlug[0],
>00001CBB: 05 91 BA 03 BB 03 AA 00 02 00 88 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03BA),
             help        = STRING_TOKEN(0x03BB),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001CCC: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00001CD3: 09 07 F9 02 00 00 01 
         endoneof;
>00001CDA: 29 02 
        oneof varid   = PCH_SETUP.SataExternal[0],
>00001CDC: 05 91 D2 03 D3 03 AB 00 02 00 A0 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03D2),
             help        = STRING_TOKEN(0x03D3),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001CED: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00001CF4: 09 07 F9 02 00 00 01 
        endoneof;
>00001CFB: 29 02 
         oneof varid   = PCH_SETUP.SataMechanicalSw[0],
>00001CFD: 05 91 BC 03 BD 03 AC 00 02 00 90 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03BC),
             help        = STRING_TOKEN(0x03BD),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00001D0E: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001D15: 09 07 F9 02 30 00 01 
         endoneof;
>00001D1C: 29 02 
         oneof varid   = PCH_SETUP.SataSpinUp[0],
>00001D1E: 05 91 D0 03 D1 03 AD 00 02 00 98 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03D0),
             help        = STRING_TOKEN(0x03D1),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001D2F: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00001D36: 09 07 F9 02 00 00 01 
         endoneof;
>00001D3D: 29 02 

    oneof varid   = PCH_SETUP.SataType[0],
>00001D3F: 05 91 D4 03 9D 03 AE 00 02 00 A8 00 10 10 00 01 00 
         prompt      = STRING_TOKEN(0x03D4),
         help        = STRING_TOKEN(0x039D),
         option text = STRING_TOKEN(0x03D5), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001D50: 09 07 D5 03 30 00 00 
         option text = STRING_TOKEN(0x03D6), value = 1, flags = RESET_REQUIRED;
>00001D57: 09 07 D6 03 00 00 01 
    endoneof;
>00001D5E: 29 02 

    oneof varid = PCH_SETUP.SataTopology[0],
>00001D60: 05 91 D9 03 E1 03 AF 00 02 00 E8 00 10 10 00 04 00 
       prompt = STRING_TOKEN(0x03D9),
       help = STRING_TOKEN(0x03E1),
       option text = STRING_TOKEN(0x03E2), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001D71: 09 07 E2 03 30 00 00 
       option text = STRING_TOKEN(0x03E3), value = 1, flags = RESET_REQUIRED;
>00001D78: 09 07 E3 03 00 00 01 
       option text = STRING_TOKEN(0x03E4), value = 2, flags = RESET_REQUIRED;
>00001D7F: 09 07 E4 03 00 00 02 
       option text = STRING_TOKEN(0x03E5), value = 3, flags = RESET_REQUIRED;
>00001D86: 09 07 E5 03 00 00 03 
       option text = STRING_TOKEN(0x03E6), value = 4, flags = RESET_REQUIRED;
>00001D8D: 09 07 E6 03 00 00 04 
    endoneof;
>00001D94: 29 02 


    text
>00001D96: 03 08 87 03 AA 00 88 03 
        help   = STRING_TOKEN(0x00AA),
        text   = STRING_TOKEN(0x0387),
        text   = STRING_TOKEN(0x0388);

    text
>00001D9E: 03 08 D7 03 F7 02 D8 03 
      help   = STRING_TOKEN(0x02F7),
      text   = STRING_TOKEN(0x03D7),
      text   = STRING_TOKEN(0x03D8),
      flags  = 0,
      key    = 0;

    suppressif ideqvallist  PCH_SETUP.SataTestMode == 1;
>00001DA6: 0A 82 
>00001DA8: 14 08 9E 00 01 00 01 00 
         oneof varid   = PCH_SETUP.SataPort[1],
>00001DB0: 05 91 92 03 99 03 B0 00 02 00 81 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x0392),
             help        = STRING_TOKEN(0x0399),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00001DC1: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001DC8: 09 07 F9 02 30 00 01 
         endoneof;
>00001DCF: 29 02 
     endif;
>00001DD1: 29 02 

         oneof varid   = PCH_SETUP.SataHotPlug[1],
>00001DD3: 05 91 BA 03 BB 03 B1 00 02 00 89 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03BA),
             help        = STRING_TOKEN(0x03BB),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001DE4: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00001DEB: 09 07 F9 02 00 00 01 
         endoneof;
>00001DF2: 29 02 
        oneof varid   = PCH_SETUP.SataExternal[1],
>00001DF4: 05 91 D2 03 D3 03 B2 00 02 00 A1 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03D2),
             help        = STRING_TOKEN(0x03D3),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001E05: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00001E0C: 09 07 F9 02 00 00 01 
        endoneof;
>00001E13: 29 02 
         oneof varid   = PCH_SETUP.SataMechanicalSw[1],
>00001E15: 05 91 BC 03 BD 03 B3 00 02 00 91 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03BC),
             help        = STRING_TOKEN(0x03BD),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00001E26: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001E2D: 09 07 F9 02 30 00 01 
         endoneof;
>00001E34: 29 02 
         oneof varid   = PCH_SETUP.SataSpinUp[1],
>00001E36: 05 91 D0 03 D1 03 B4 00 02 00 99 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03D0),
             help        = STRING_TOKEN(0x03D1),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001E47: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00001E4E: 09 07 F9 02 00 00 01 
         endoneof;
>00001E55: 29 02 

    oneof varid   = PCH_SETUP.SataType[1],
>00001E57: 05 91 D4 03 9D 03 B5 00 02 00 A9 00 10 10 00 01 00 
         prompt      = STRING_TOKEN(0x03D4),
         help        = STRING_TOKEN(0x039D),
         option text = STRING_TOKEN(0x03D5), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001E68: 09 07 D5 03 30 00 00 
         option text = STRING_TOKEN(0x03D6), value = 1, flags = RESET_REQUIRED;
>00001E6F: 09 07 D6 03 00 00 01 
    endoneof;
>00001E76: 29 02 

    oneof varid = PCH_SETUP.SataTopology[1],
>00001E78: 05 91 DA 03 E1 03 B6 00 02 00 E9 00 10 10 00 04 00 
       prompt = STRING_TOKEN(0x03DA),
       help = STRING_TOKEN(0x03E1),
       option text = STRING_TOKEN(0x03E2), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001E89: 09 07 E2 03 30 00 00 
       option text = STRING_TOKEN(0x03E3), value = 1, flags = RESET_REQUIRED;
>00001E90: 09 07 E3 03 00 00 01 
       option text = STRING_TOKEN(0x03E4), value = 2, flags = RESET_REQUIRED;
>00001E97: 09 07 E4 03 00 00 02 
       option text = STRING_TOKEN(0x03E5), value = 3, flags = RESET_REQUIRED;
>00001E9E: 09 07 E5 03 00 00 03 
       option text = STRING_TOKEN(0x03E6), value = 4, flags = RESET_REQUIRED;
>00001EA5: 09 07 E6 03 00 00 04 
    endoneof;
>00001EAC: 29 02 

    text
>00001EAE: 03 08 89 03 AA 00 8A 03 
        help   = STRING_TOKEN(0x00AA),
        text   = STRING_TOKEN(0x0389),
        text   = STRING_TOKEN(0x038A);

    text
>00001EB6: 03 08 D7 03 F7 02 D8 03 
      help   = STRING_TOKEN(0x02F7),
      text   = STRING_TOKEN(0x03D7),
      text   = STRING_TOKEN(0x03D8),
      flags  = 0,
      key    = 0;

    suppressif ideqvallist  PCH_SETUP.SataTestMode == 1;
>00001EBE: 0A 82 
>00001EC0: 14 08 9E 00 01 00 01 00 
         oneof varid   = PCH_SETUP.SataPort[2],
>00001EC8: 05 91 93 03 99 03 B7 00 02 00 82 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x0393),
             help        = STRING_TOKEN(0x0399),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00001ED9: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001EE0: 09 07 F9 02 30 00 01 
         endoneof;
>00001EE7: 29 02 

   oneof varid   = PCH_SETUP.PxDevSlp[2],
>00001EE9: 05 91 83 03 84 03 B8 00 02 00 C2 00 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0383),
          help        = STRING_TOKEN(0x0384),
          option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001EFA: 09 07 FA 02 30 00 00 
          option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00001F01: 09 07 F9 02 00 00 01 
        endoneof;
>00001F08: 29 02 
    endif;
>00001F0A: 29 02 

         oneof varid   = PCH_SETUP.SataHotPlug[2],
>00001F0C: 05 91 BA 03 BB 03 B9 00 02 00 8A 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03BA),
             help        = STRING_TOKEN(0x03BB),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001F1D: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00001F24: 09 07 F9 02 00 00 01 
         endoneof;
>00001F2B: 29 02 
        oneof varid   = PCH_SETUP.SataExternal[2],
>00001F2D: 05 91 D2 03 D3 03 BA 00 02 00 A2 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03D2),
             help        = STRING_TOKEN(0x03D3),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001F3E: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00001F45: 09 07 F9 02 00 00 01 
        endoneof;
>00001F4C: 29 02 
         oneof varid   = PCH_SETUP.SataMechanicalSw[2],
>00001F4E: 05 91 BC 03 BD 03 BB 00 02 00 92 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03BC),
             help        = STRING_TOKEN(0x03BD),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00001F5F: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001F66: 09 07 F9 02 30 00 01 
         endoneof;
>00001F6D: 29 02 
         oneof varid   = PCH_SETUP.SataSpinUp[2],
>00001F6F: 05 91 D0 03 D1 03 BC 00 02 00 9A 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03D0),
             help        = STRING_TOKEN(0x03D1),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001F80: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00001F87: 09 07 F9 02 00 00 01 
         endoneof;
>00001F8E: 29 02 

    oneof varid   = PCH_SETUP.SataType[2],
>00001F90: 05 91 D4 03 9D 03 BD 00 02 00 AA 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x03D4),
      help        = STRING_TOKEN(0x039D),
      option text = STRING_TOKEN(0x03D5), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001FA1: 09 07 D5 03 30 00 00 
      option text = STRING_TOKEN(0x03D6), value = 1, flags = RESET_REQUIRED;
>00001FA8: 09 07 D6 03 00 00 01 
    endoneof;
>00001FAF: 29 02 

    oneof varid = PCH_SETUP.SataTopology[2],
>00001FB1: 05 91 DB 03 E1 03 BE 00 02 00 EA 00 10 10 00 04 00 
       prompt = STRING_TOKEN(0x03DB),
       help = STRING_TOKEN(0x03E1),
       option text = STRING_TOKEN(0x03E2), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00001FC2: 09 07 E2 03 30 00 00 
       option text = STRING_TOKEN(0x03E3), value = 1, flags = RESET_REQUIRED;
>00001FC9: 09 07 E3 03 00 00 01 
       option text = STRING_TOKEN(0x03E4), value = 2, flags = RESET_REQUIRED;
>00001FD0: 09 07 E4 03 00 00 02 
       option text = STRING_TOKEN(0x03E5), value = 3, flags = RESET_REQUIRED;
>00001FD7: 09 07 E5 03 00 00 03 
       option text = STRING_TOKEN(0x03E6), value = 4, flags = RESET_REQUIRED;
>00001FDE: 09 07 E6 03 00 00 04 
    endoneof;
>00001FE5: 29 02 

    text
>00001FE7: 03 08 8B 03 AA 00 8C 03 
        help   = STRING_TOKEN(0x00AA),
        text   = STRING_TOKEN(0x038B),
        text   = STRING_TOKEN(0x038C);

    text
>00001FEF: 03 08 D7 03 F7 02 D8 03 
      help   = STRING_TOKEN(0x02F7),
      text   = STRING_TOKEN(0x03D7),
      text   = STRING_TOKEN(0x03D8),
      flags  = 0,
      key    = 0;

    suppressif ideqvallist  PCH_SETUP.SataTestMode == 1;
>00001FF7: 0A 82 
>00001FF9: 14 08 9E 00 01 00 01 00 
         oneof varid   = PCH_SETUP.SataPort[3],
>00002001: 05 91 94 03 99 03 BF 00 02 00 83 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x0394),
             help        = STRING_TOKEN(0x0399),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002012: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002019: 09 07 F9 02 30 00 01 
         endoneof;
>00002020: 29 02 
     endif;
>00002022: 29 02 

         oneof varid   = PCH_SETUP.SataHotPlug[3],
>00002024: 05 91 BA 03 BB 03 C0 00 02 00 8B 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03BA),
             help        = STRING_TOKEN(0x03BB),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002035: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000203C: 09 07 F9 02 00 00 01 
         endoneof;
>00002043: 29 02 
        oneof varid   = PCH_SETUP.SataExternal[3],
>00002045: 05 91 D2 03 D3 03 C1 00 02 00 A3 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03D2),
             help        = STRING_TOKEN(0x03D3),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002056: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000205D: 09 07 F9 02 00 00 01 
        endoneof;
>00002064: 29 02 
      oneof varid   = PCH_SETUP.SataMechanicalSw[3],
>00002066: 05 91 BC 03 BD 03 C2 00 02 00 93 00 10 10 00 01 00 
         prompt      = STRING_TOKEN(0x03BC),
         help        = STRING_TOKEN(0x03BD),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002077: 09 07 FA 02 00 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000207E: 09 07 F9 02 30 00 01 
      endoneof;
>00002085: 29 02 
         oneof varid   = PCH_SETUP.SataSpinUp[3],
>00002087: 05 91 D0 03 D1 03 C3 00 02 00 9B 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03D0),
             help        = STRING_TOKEN(0x03D1),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002098: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000209F: 09 07 F9 02 00 00 01 
         endoneof;
>000020A6: 29 02 

    oneof varid   = PCH_SETUP.SataType[3],
>000020A8: 05 91 D4 03 9D 03 C4 00 02 00 AB 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x03D4),
      help        = STRING_TOKEN(0x039D),
      option text = STRING_TOKEN(0x03D5), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000020B9: 09 07 D5 03 30 00 00 
      option text = STRING_TOKEN(0x03D6), value = 1, flags = RESET_REQUIRED;
>000020C0: 09 07 D6 03 00 00 01 
    endoneof;
>000020C7: 29 02 

    oneof varid = PCH_SETUP.SataTopology[3],
>000020C9: 05 91 DC 03 E1 03 C5 00 02 00 EB 00 10 10 00 04 00 
       prompt = STRING_TOKEN(0x03DC),
       help = STRING_TOKEN(0x03E1),
       option text = STRING_TOKEN(0x03E2), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000020DA: 09 07 E2 03 30 00 00 
       option text = STRING_TOKEN(0x03E3), value = 1, flags = RESET_REQUIRED;
>000020E1: 09 07 E3 03 00 00 01 
       option text = STRING_TOKEN(0x03E4), value = 2, flags = RESET_REQUIRED;
>000020E8: 09 07 E4 03 00 00 02 
       option text = STRING_TOKEN(0x03E5), value = 3, flags = RESET_REQUIRED;
>000020EF: 09 07 E5 03 00 00 03 
       option text = STRING_TOKEN(0x03E6), value = 4, flags = RESET_REQUIRED;
>000020F6: 09 07 E6 03 00 00 04 
    endoneof;
>000020FD: 29 02 

    text
>000020FF: 03 08 8D 03 AA 00 8E 03 
        help   = STRING_TOKEN(0x00AA),
        text   = STRING_TOKEN(0x038D),
        text   = STRING_TOKEN(0x038E);

      text
>00002107: 03 08 D7 03 F7 02 D8 03 
        help   = STRING_TOKEN(0x02F7),
        text   = STRING_TOKEN(0x03D7),
        text   = STRING_TOKEN(0x03D8),
        flags  = 0,
        key    = 0;

    suppressif ideqvallist  PCH_SETUP.SataTestMode == 1;
>0000210F: 0A 82 
>00002111: 14 08 9E 00 01 00 01 00 

         oneof varid   = PCH_SETUP.SataPort[4],
>00002119: 05 91 95 03 99 03 C6 00 02 00 84 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x0395),
             help        = STRING_TOKEN(0x0399),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000212A: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002131: 09 07 F9 02 30 00 01 
         endoneof;
>00002138: 29 02 
    endif;
>0000213A: 29 02 

         oneof varid   = PCH_SETUP.SataHotPlug[4],
>0000213C: 05 91 BA 03 BB 03 C7 00 02 00 8C 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03BA),
             help        = STRING_TOKEN(0x03BB),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000214D: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002154: 09 07 F9 02 00 00 01 
         endoneof;
>0000215B: 29 02 
        oneof varid   = PCH_SETUP.SataExternal[4],
>0000215D: 05 91 D2 03 D3 03 C8 00 02 00 A4 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03D2),
             help        = STRING_TOKEN(0x03D3),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000216E: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002175: 09 07 F9 02 00 00 01 
        endoneof;
>0000217C: 29 02 
      oneof varid   = PCH_SETUP.SataMechanicalSw[4],
>0000217E: 05 91 BC 03 BD 03 C9 00 02 00 94 00 10 10 00 01 00 
         prompt      = STRING_TOKEN(0x03BC),
         help        = STRING_TOKEN(0x03BD),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000218F: 09 07 FA 02 00 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002196: 09 07 F9 02 30 00 01 
      endoneof;
>0000219D: 29 02 
         oneof varid   = PCH_SETUP.SataSpinUp[4],
>0000219F: 05 91 D0 03 D1 03 CA 00 02 00 9C 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03D0),
             help        = STRING_TOKEN(0x03D1),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000021B0: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000021B7: 09 07 F9 02 00 00 01 
         endoneof;
>000021BE: 29 02 

    oneof varid   = PCH_SETUP.SataType[4],
>000021C0: 05 91 D4 03 9D 03 CB 00 02 00 AC 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x03D4),
      help        = STRING_TOKEN(0x039D),
      option text = STRING_TOKEN(0x03D5), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000021D1: 09 07 D5 03 30 00 00 
      option text = STRING_TOKEN(0x03D6), value = 1, flags = RESET_REQUIRED;
>000021D8: 09 07 D6 03 00 00 01 
    endoneof;
>000021DF: 29 02 

    oneof varid = PCH_SETUP.SataTopology[4],
>000021E1: 05 91 DD 03 E1 03 CC 00 02 00 EC 00 10 10 00 04 00 
       prompt = STRING_TOKEN(0x03DD),
       help = STRING_TOKEN(0x03E1),
       option text = STRING_TOKEN(0x03E2), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000021F2: 09 07 E2 03 30 00 00 
       option text = STRING_TOKEN(0x03E3), value = 1, flags = RESET_REQUIRED;
>000021F9: 09 07 E3 03 00 00 01 
       option text = STRING_TOKEN(0x03E4), value = 2, flags = RESET_REQUIRED;
>00002200: 09 07 E4 03 00 00 02 
       option text = STRING_TOKEN(0x03E5), value = 3, flags = RESET_REQUIRED;
>00002207: 09 07 E5 03 00 00 03 
       option text = STRING_TOKEN(0x03E6), value = 4, flags = RESET_REQUIRED;
>0000220E: 09 07 E6 03 00 00 04 
    endoneof;
>00002215: 29 02 

    text
>00002217: 03 08 8F 03 AA 00 90 03 
        help   = STRING_TOKEN(0x00AA),
        text   = STRING_TOKEN(0x038F),
        text   = STRING_TOKEN(0x0390);

      text
>0000221F: 03 08 D7 03 F7 02 D8 03 
        help   = STRING_TOKEN(0x02F7),
        text   = STRING_TOKEN(0x03D7),
        text   = STRING_TOKEN(0x03D8),
        flags  = 0,
        key    = 0;

    suppressif ideqvallist  PCH_SETUP.SataTestMode == 1;
>00002227: 0A 82 
>00002229: 14 08 9E 00 01 00 01 00 

         oneof varid   = PCH_SETUP.SataPort[5],
>00002231: 05 91 96 03 99 03 CD 00 02 00 85 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x0396),
             help        = STRING_TOKEN(0x0399),
             option text = STRING_TOKEN(0x02FA),  value = 0, flags = RESET_REQUIRED;
>00002242: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002249: 09 07 F9 02 30 00 01 
         endoneof;
>00002250: 29 02 
    endif;
>00002252: 29 02 

         oneof varid   = PCH_SETUP.SataHotPlug[5],
>00002254: 05 91 BA 03 BB 03 CE 00 02 00 8D 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03BA),
             help        = STRING_TOKEN(0x03BB),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002265: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000226C: 09 07 F9 02 00 00 01 
        endoneof;
>00002273: 29 02 
      oneof varid   = PCH_SETUP.SataMechanicalSw[5],
>00002275: 05 91 BC 03 BD 03 CF 00 02 00 95 00 10 10 00 01 00 
         prompt      = STRING_TOKEN(0x03BC),
         help        = STRING_TOKEN(0x03BD),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002286: 09 07 FA 02 00 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000228D: 09 07 F9 02 30 00 01 
      endoneof;
>00002294: 29 02 
        oneof varid   = PCH_SETUP.SataExternal[5],
>00002296: 05 91 D2 03 D3 03 D0 00 02 00 A5 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03D2),
             help        = STRING_TOKEN(0x03D3),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000022A7: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000022AE: 09 07 F9 02 00 00 01 
        endoneof;
>000022B5: 29 02 
         oneof varid   = PCH_SETUP.SataSpinUp[5],
>000022B7: 05 91 D0 03 D1 03 D1 00 02 00 9D 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03D0),
             help        = STRING_TOKEN(0x03D1),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000022C8: 09 07 FA 02 30 00 00 
            option text = STRING_TOKEN(0x02F9),   value = 1, flags = RESET_REQUIRED;
>000022CF: 09 07 F9 02 00 00 01 
        endoneof;
>000022D6: 29 02 
    oneof varid   = PCH_SETUP.SataType[5],
>000022D8: 05 91 D4 03 9D 03 D2 00 02 00 AD 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x03D4),
      help        = STRING_TOKEN(0x039D),
      option text = STRING_TOKEN(0x03D5), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000022E9: 09 07 D5 03 30 00 00 
      option text = STRING_TOKEN(0x03D6), value = 1, flags = RESET_REQUIRED;
>000022F0: 09 07 D6 03 00 00 01 
    endoneof;
>000022F7: 29 02 

    oneof varid = PCH_SETUP.SataTopology[5],
>000022F9: 05 91 DE 03 E1 03 D3 00 02 00 ED 00 10 10 00 04 00 
       prompt = STRING_TOKEN(0x03DE),
       help = STRING_TOKEN(0x03E1),
       option text = STRING_TOKEN(0x03E2), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000230A: 09 07 E2 03 30 00 00 
       option text = STRING_TOKEN(0x03E3), value = 1, flags = RESET_REQUIRED;
>00002311: 09 07 E3 03 00 00 01 
       option text = STRING_TOKEN(0x03E4), value = 2, flags = RESET_REQUIRED;
>00002318: 09 07 E4 03 00 00 02 
       option text = STRING_TOKEN(0x03E5), value = 3, flags = RESET_REQUIRED;
>0000231F: 09 07 E5 03 00 00 03 
       option text = STRING_TOKEN(0x03E6), value = 4, flags = RESET_REQUIRED;
>00002326: 09 07 E6 03 00 00 04 
    endoneof;
>0000232D: 29 02 

    text
>0000232F: 03 08 B2 07 AA 00 B3 07 
      help   = STRING_TOKEN(0x00AA),
      text   = STRING_TOKEN(0x07B2),
      text   = STRING_TOKEN(0x07B3);

    text
>00002337: 03 08 D7 03 F7 02 D8 03 
      help   = STRING_TOKEN(0x02F7),
      text   = STRING_TOKEN(0x03D7),
      text   = STRING_TOKEN(0x03D8),
      flags  = 0,
      key    = 0;

    suppressif ideqvallist  PCH_SETUP.SataTestMode == 1;
>0000233F: 0A 82 
>00002341: 14 08 9E 00 01 00 01 00 
      oneof varid   = PCH_SETUP.SataPort[6],
>00002349: 05 91 97 03 99 03 D4 00 02 00 86 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0397),
        help        = STRING_TOKEN(0x0399),
        option text = STRING_TOKEN(0x02FA),  value = 0, flags = RESET_REQUIRED;
>0000235A: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002361: 09 07 F9 02 30 00 01 
      endoneof;
>00002368: 29 02 
    endif;
>0000236A: 29 02 

    suppressif ideqval PCH_SETUP.SataExternal[6] == 1;
>0000236C: 0A 82 
>0000236E: 12 06 D7 00 01 00 
      oneof varid   = PCH_SETUP.SataHotPlug[6],
>00002374: 05 91 BA 03 BB 03 D5 00 02 00 8E 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x03BA),
        help        = STRING_TOKEN(0x03BB),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002385: 09 07 FA 02 30 00 00 
        option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000238C: 09 07 F9 02 00 00 01 
      endoneof;
>00002393: 29 02 
    endif;
>00002395: 29 02 

    suppressif ideqval PCH_SETUP.SataHotPlug[6] == 0;
>00002397: 0A 82 
>00002399: 12 06 D5 00 00 00 
      oneof varid   = PCH_SETUP.SataMechanicalSw[6],
>0000239F: 05 91 BC 03 BD 03 D6 00 02 00 96 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x03BC),
        help        = STRING_TOKEN(0x03BD),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000023B0: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000023B7: 09 07 F9 02 30 00 01 
      endoneof;
>000023BE: 29 02 
    endif;
>000023C0: 29 02 

    oneof varid   = PCH_SETUP.SataExternal[6],
>000023C2: 05 91 D2 03 D3 03 D7 00 02 00 A6 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x03D2),
      help        = STRING_TOKEN(0x03D3),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000023D3: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000023DA: 09 07 F9 02 00 00 01 
    endoneof;
>000023E1: 29 02 

    oneof varid   = PCH_SETUP.SataSpinUp[6],
>000023E3: 05 91 D0 03 D1 03 D8 00 02 00 9E 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x03D0),
      help        = STRING_TOKEN(0x03D1),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000023F4: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9),   value = 1, flags = RESET_REQUIRED;
>000023FB: 09 07 F9 02 00 00 01 
    endoneof;
>00002402: 29 02 

    oneof varid   = PCH_SETUP.SataType[6],
>00002404: 05 91 D4 03 9D 03 D9 00 02 00 AE 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x03D4),
      help        = STRING_TOKEN(0x039D),
      option text = STRING_TOKEN(0x03D5), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002415: 09 07 D5 03 30 00 00 
      option text = STRING_TOKEN(0x03D6), value = 1, flags = RESET_REQUIRED;
>0000241C: 09 07 D6 03 00 00 01 
    endoneof;
>00002423: 29 02 

    oneof varid = PCH_SETUP.SataTopology[6],
>00002425: 05 91 DF 03 E1 03 DA 00 02 00 EE 00 10 10 00 04 00 
       prompt = STRING_TOKEN(0x03DF),
       help = STRING_TOKEN(0x03E1),
       option text = STRING_TOKEN(0x03E2), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002436: 09 07 E2 03 30 00 00 
       option text = STRING_TOKEN(0x03E3), value = 1, flags = RESET_REQUIRED;
>0000243D: 09 07 E3 03 00 00 01 
       option text = STRING_TOKEN(0x03E4), value = 2, flags = RESET_REQUIRED;
>00002444: 09 07 E4 03 00 00 02 
       option text = STRING_TOKEN(0x03E5), value = 3, flags = RESET_REQUIRED;
>0000244B: 09 07 E5 03 00 00 03 
       option text = STRING_TOKEN(0x03E6), value = 4, flags = RESET_REQUIRED;
>00002452: 09 07 E6 03 00 00 04 
    endoneof;
>00002459: 29 02 

    text
>0000245B: 03 08 B4 07 AA 00 B5 07 
      help   = STRING_TOKEN(0x00AA),
      text   = STRING_TOKEN(0x07B4),
      text   = STRING_TOKEN(0x07B5);

    text
>00002463: 03 08 D7 03 F7 02 D8 03 
      help   = STRING_TOKEN(0x02F7),
      text   = STRING_TOKEN(0x03D7),
      text   = STRING_TOKEN(0x03D8),
      flags  = 0,
      key    = 0;

    suppressif ideqvallist  PCH_SETUP.SataTestMode == 1;
>0000246B: 0A 82 
>0000246D: 14 08 9E 00 01 00 01 00 
      oneof varid   = PCH_SETUP.SataPort[7],
>00002475: 05 91 98 03 99 03 DB 00 02 00 87 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0398),
        help        = STRING_TOKEN(0x0399),
        option text = STRING_TOKEN(0x02FA),  value = 0, flags = RESET_REQUIRED;
>00002486: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000248D: 09 07 F9 02 30 00 01 
      endoneof;
>00002494: 29 02 
    endif;
>00002496: 29 02 

    suppressif ideqval PCH_SETUP.SataExternal[7] == 1;
>00002498: 0A 82 
>0000249A: 12 06 DE 00 01 00 
      oneof varid   = PCH_SETUP.SataHotPlug[7],
>000024A0: 05 91 BA 03 BB 03 DC 00 02 00 8F 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x03BA),
        help        = STRING_TOKEN(0x03BB),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000024B1: 09 07 FA 02 30 00 00 
        option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000024B8: 09 07 F9 02 00 00 01 
      endoneof;
>000024BF: 29 02 
    endif;
>000024C1: 29 02 

    suppressif ideqval PCH_SETUP.SataHotPlug[7] == 0;
>000024C3: 0A 82 
>000024C5: 12 06 DC 00 00 00 
      oneof varid   = PCH_SETUP.SataMechanicalSw[7],
>000024CB: 05 91 BC 03 BD 03 DD 00 02 00 97 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x03BC),
        help        = STRING_TOKEN(0x03BD),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000024DC: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000024E3: 09 07 F9 02 30 00 01 
      endoneof;
>000024EA: 29 02 
    endif;
>000024EC: 29 02 

      oneof varid   = PCH_SETUP.SataExternal[7],
>000024EE: 05 91 D2 03 D3 03 DE 00 02 00 A7 00 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x03D2),
          help        = STRING_TOKEN(0x03D3),
          option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000024FF: 09 07 FA 02 30 00 00 
          option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002506: 09 07 F9 02 00 00 01 
      endoneof;
>0000250D: 29 02 

    oneof varid   = PCH_SETUP.SataSpinUp[7],
>0000250F: 05 91 D0 03 D1 03 DF 00 02 00 9F 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x03D0),
      help        = STRING_TOKEN(0x03D1),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002520: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9),   value = 1, flags = RESET_REQUIRED;
>00002527: 09 07 F9 02 00 00 01 
    endoneof;
>0000252E: 29 02 

    oneof varid   = PCH_SETUP.SataType[7],
>00002530: 05 91 D4 03 9D 03 E0 00 02 00 AF 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x03D4),
      help        = STRING_TOKEN(0x039D),
      option text = STRING_TOKEN(0x03D5), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002541: 09 07 D5 03 30 00 00 
      option text = STRING_TOKEN(0x03D6), value = 1, flags = RESET_REQUIRED;
>00002548: 09 07 D6 03 00 00 01 
    endoneof;
>0000254F: 29 02 

    oneof varid = PCH_SETUP.SataTopology[7],
>00002551: 05 91 E0 03 E1 03 E1 00 02 00 EF 00 10 10 00 04 00 
       prompt = STRING_TOKEN(0x03E0),
       help = STRING_TOKEN(0x03E1),
       option text = STRING_TOKEN(0x03E2), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002562: 09 07 E2 03 30 00 00 
       option text = STRING_TOKEN(0x03E3), value = 1, flags = RESET_REQUIRED;
>00002569: 09 07 E3 03 00 00 01 
       option text = STRING_TOKEN(0x03E4), value = 2, flags = RESET_REQUIRED;
>00002570: 09 07 E4 03 00 00 02 
       option text = STRING_TOKEN(0x03E5), value = 3, flags = RESET_REQUIRED;
>00002577: 09 07 E5 03 00 00 03 
       option text = STRING_TOKEN(0x03E6), value = 4, flags = RESET_REQUIRED;
>0000257E: 09 07 E6 03 00 00 04 
    endoneof;
>00002585: 29 02 


endform;
>00002587: 29 02 

  form formid = 0x10D,
>00002589: 01 86 0D 01 A2 03 

     title = STRING_TOKEN(0x03A2);

     oneof varid   = PCH_SETUP.SataHddlk,
>0000258F: 05 91 A4 03 A5 03 E2 00 02 00 B6 00 10 10 00 01 00 
         prompt      = STRING_TOKEN(0x03A4),
         help        = STRING_TOKEN(0x03A5),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000025A0: 09 07 FA 02 00 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000025A7: 09 07 F9 02 30 00 01 
    endoneof;
>000025AE: 29 02 

    oneof varid   = PCH_SETUP.SataLedl,
>000025B0: 05 91 A6 03 A7 03 E3 00 02 00 B7 00 10 10 00 01 00 
         prompt      = STRING_TOKEN(0x03A6),
         help        = STRING_TOKEN(0x03A7),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000025C1: 09 07 FA 02 00 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000025C8: 09 07 F9 02 30 00 01 
    endoneof;
>000025CF: 29 02 

    suppressif NOT ideqval PCH_SETUP.SataInterfaceMode == 1;
>000025D1: 0A 82 
>000025D3: 12 86 9D 00 01 00 
>000025D9: 17 02 
>000025DB: 29 02 
         oneof varid   = PCH_SETUP.SataRaidR0,
>000025DD: 05 91 A8 03 A9 03 E4 00 02 00 B0 00 10 10 00 01 00 
             prompt    = STRING_TOKEN(0x03A8),
             help      = STRING_TOKEN(0x03A9),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000025EE: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000025F5: 09 07 F9 02 30 00 01 
         endoneof;
>000025FC: 29 02 

         oneof varid   = PCH_SETUP.SataRaidR1,
>000025FE: 05 91 AA 03 AB 03 E5 00 02 00 B1 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03AA),
             help        = STRING_TOKEN(0x03AB),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000260F: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002616: 09 07 F9 02 30 00 01 
         endoneof;
>0000261D: 29 02 

         oneof varid   = PCH_SETUP.SataRaidR10,
>0000261F: 05 91 AE 03 AF 03 E6 00 02 00 B2 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03AE),
             help        = STRING_TOKEN(0x03AF),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002630: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002637: 09 07 F9 02 30 00 01 
         endoneof;
>0000263E: 29 02 

         oneof varid   = PCH_SETUP.SataRaidR5,
>00002640: 05 91 AC 03 AD 03 E7 00 02 00 B3 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03AC),
             help        = STRING_TOKEN(0x03AD),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002651: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002658: 09 07 F9 02 30 00 01 
         endoneof;
>0000265F: 29 02 

         oneof varid   = PCH_SETUP.SataRaidIrrt,
>00002661: 05 91 B0 03 B1 03 E8 00 02 00 B4 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03B0),
             help        = STRING_TOKEN(0x03B1),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002672: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002679: 09 07 F9 02 30 00 01 
         endoneof;
>00002680: 29 02 

         oneof varid   = PCH_SETUP.SataRaidOub,
>00002682: 05 91 B2 03 B3 03 E9 00 02 00 B5 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03B2),
             help        = STRING_TOKEN(0x03B3),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002693: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000269A: 09 07 F9 02 30 00 01 
         endoneof;
>000026A1: 29 02 

         oneof varid   = PCH_SETUP.SataRaidIooe,
>000026A3: 05 91 B4 03 B5 03 EA 00 02 00 B8 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03B4),
             help        = STRING_TOKEN(0x03B5),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000026B4: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000026BB: 09 07 F9 02 30 00 01 
         endoneof;
>000026C2: 29 02 

         oneof varid   = PCH_SETUP.SataRaidSrt,
>000026C4: 05 91 B6 03 B7 03 EB 00 02 00 B9 00 10 10 00 01 00 
            prompt      = STRING_TOKEN(0x03B6),
            help        = STRING_TOKEN(0x03B7),
            option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000026D5: 09 07 FA 02 00 00 00 
            option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000026DC: 09 07 F9 02 30 00 01 
         endoneof;
>000026E3: 29 02 

         oneof varid   = PCH_SETUP.SataRaidOromDelay,
>000026E5: 05 91 B8 03 B9 03 EC 00 02 00 BC 00 10 10 00 03 00 
             prompt      = STRING_TOKEN(0x03B8),
             help        = STRING_TOKEN(0x03B9),
             option text = STRING_TOKEN(0x02FE), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000026F6: 09 07 FE 02 30 00 00 
             option text = STRING_TOKEN(0x02FF), value = 1, flags = RESET_REQUIRED;
>000026FD: 09 07 FF 02 00 00 01 
             option text = STRING_TOKEN(0x0300), value = 2, flags = RESET_REQUIRED;
>00002704: 09 07 00 03 00 00 02 
             option text = STRING_TOKEN(0x0301), value = 3, flags = RESET_REQUIRED;
>0000270B: 09 07 01 03 00 00 03 
         endoneof;
>00002712: 29 02 

    endif;
>00002714: 29 02 
  endform;
>00002716: 29 02 

  form formid = 0x119,
>00002718: 01 86 19 01 C8 04 

    title = STRING_TOKEN(0x04C8);

    subtitle text = STRING_TOKEN(0x04C8);
>0000271E: 02 87 C8 04 00 00 00 
>00002725: 29 02 
    subtitle text = STRING_TOKEN(0x0762);
>00002727: 02 87 62 07 00 00 00 
>0000272E: 29 02 
    subtitle text = STRING_TOKEN(0x00AA);
>00002730: 02 87 AA 00 00 00 00 
>00002737: 29 02 

    oneof varid     = PCH_SETUP.PchsSata,
>00002739: 05 91 DC 04 DD 04 ED 00 02 00 F0 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x04DC),
        help        = STRING_TOKEN(0x04DD),
        option text = STRING_TOKEN(0x02F9),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED ;
>0000274A: 09 07 F9 02 30 00 01 
        option text = STRING_TOKEN(0x02FA),  value = 0, flags = RESET_REQUIRED;
>00002751: 09 07 FA 02 00 00 00 
    endoneof;
>00002758: 29 02 

    suppressif ideqval  PCH_SETUP.PchsSata == 0;
>0000275A: 0A 82 
>0000275C: 12 06 ED 00 00 00 
        oneof varid     = PCH_SETUP.sSataInterfaceMode,
>00002762: 05 91 E2 04 E3 04 EE 00 02 00 F1 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x04E2),
             help        = STRING_TOKEN(0x04E3),
             option text = STRING_TOKEN(0x04E4),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002773: 09 07 E4 04 30 00 00 
             option text = STRING_TOKEN(0x04E5),  value = 1, flags = RESET_REQUIRED;
>0000277A: 09 07 E5 04 00 00 01 
         endoneof;
>00002781: 29 02 

         oneof varid       = PCH_SETUP.sSataTestMode,
>00002783: 05 91 DE 04 DF 04 EF 00 02 00 23 01 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x04DE),
             help     = STRING_TOKEN(0x04DF),
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002794: 09 07 F9 02 00 00 01 
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000279B: 09 07 FA 02 30 00 00 
         endoneof;
>000027A2: 29 02 
    endif;
>000027A4: 29 02 

         goto 0x11A,
>000027A6: 0F 0F E6 04 E7 04 F0 00 00 00 FF FF 00 1A 01 
             prompt = STRING_TOKEN(0x04E6),
             help = STRING_TOKEN(0x04E7);
        oneof varid   = PCH_SETUP.sSataSalp,
>000027B5: 05 91 E0 04 E1 04 F1 00 02 00 22 01 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x04E0),
             help     = STRING_TOKEN(0x04E1),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000027C6: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000027CD: 09 07 F9 02 30 00 01 
        endoneof;
>000027D4: 29 02 
    suppressif NOT ideqval PCH_SETUP.sSataInterfaceMode == 1;
>000027D6: 0A 82 
>000027D8: 12 86 EE 00 01 00 
>000027DE: 17 02 
>000027E0: 29 02 
      oneof varid = PCH_SETUP.sSataAlternateId,
>000027E2: 05 91 02 05 03 05 F2 00 02 00 21 01 10 10 00 01 00 
          prompt   = STRING_TOKEN(0x0502),
          help     = STRING_TOKEN(0x0503),
          option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000027F3: 09 07 F9 02 00 00 01 
          option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
>000027FA: 09 07 FA 02 30 00 00 
      endoneof;
>00002801: 29 02 

      oneof varid = PCH_SETUP.SataRaidLoadEfiDriver[1],
>00002803: 05 91 04 05 05 05 F3 00 02 00 BB 00 10 10 00 01 00 
          prompt   = STRING_TOKEN(0x0504),
          help     = STRING_TOKEN(0x0505),
          option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002814: 09 07 F9 02 00 00 01 
          option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
>0000281B: 09 07 FA 02 30 00 00 
      endoneof;
>00002822: 29 02 
    endif;
>00002824: 29 02 

    subtitle text = STRING_TOKEN(0x00AA);
>00002826: 02 87 AA 00 00 00 00 
>0000282D: 29 02 

    text
>0000282F: 03 08 CA 04 AA 00 CB 04 
        help   = STRING_TOKEN(0x00AA),
        text   = STRING_TOKEN(0x04CA),
        text   = STRING_TOKEN(0x04CB);

    suppressif ideqvallist  PCH_SETUP.sSataTestMode == 1;
>00002837: 0A 82 
>00002839: 14 08 EF 00 01 00 01 00 
         oneof varid   = PCH_SETUP.sSataPort[0],
>00002841: 05 91 D5 04 DB 04 F4 00 02 00 F2 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x04D5),
             help        = STRING_TOKEN(0x04DB),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002852: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002859: 09 07 F9 02 30 00 01 
         endoneof;
>00002860: 29 02 
    endif;
>00002862: 29 02 

         oneof varid   = PCH_SETUP.sSataHotPlug[0],
>00002864: 05 91 FE 04 FF 04 F5 00 02 00 F8 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x04FE),
             help        = STRING_TOKEN(0x04FF),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002875: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000287C: 09 07 F9 02 00 00 01 
         endoneof;
>00002883: 29 02 
        oneof varid   = PCH_SETUP.sSataExternal[0],
>00002885: 05 91 D2 03 D3 03 F6 00 02 00 04 01 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03D2),
             help        = STRING_TOKEN(0x03D3),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002896: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000289D: 09 07 F9 02 00 00 01 
        endoneof;
>000028A4: 29 02 
         oneof varid   = PCH_SETUP.sSataSpinUp[0],
>000028A6: 05 91 00 05 01 05 F7 00 02 00 FE 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x0500),
             help        = STRING_TOKEN(0x0501),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000028B7: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000028BE: 09 07 F9 02 00 00 01 
         endoneof;
>000028C5: 29 02 

    oneof varid   = PCH_SETUP.sSataType[0],
>000028C7: 05 91 06 05 E3 04 F8 00 02 00 10 01 10 10 00 01 00 
         prompt      = STRING_TOKEN(0x0506),
         help        = STRING_TOKEN(0x04E3),
         option text = STRING_TOKEN(0x0507), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000028D8: 09 07 07 05 30 00 00 
         option text = STRING_TOKEN(0x0508), value = 1, flags = RESET_REQUIRED;
>000028DF: 09 07 08 05 00 00 01 
    endoneof;
>000028E6: 29 02 

    oneof varid = PCH_SETUP.sSataTopology[0],
>000028E8: 05 91 09 05 0F 05 F9 00 02 00 36 01 10 10 00 04 00 
       prompt = STRING_TOKEN(0x0509),
       help = STRING_TOKEN(0x050F),
       option text = STRING_TOKEN(0x03E2), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000028F9: 09 07 E2 03 30 00 00 
       option text = STRING_TOKEN(0x03E3), value = 1, flags = RESET_REQUIRED;
>00002900: 09 07 E3 03 00 00 01 
       option text = STRING_TOKEN(0x03E4), value = 2, flags = RESET_REQUIRED;
>00002907: 09 07 E4 03 00 00 02 
       option text = STRING_TOKEN(0x03E5), value = 3, flags = RESET_REQUIRED;
>0000290E: 09 07 E5 03 00 00 03 
       option text = STRING_TOKEN(0x03E6), value = 4, flags = RESET_REQUIRED;
>00002915: 09 07 E6 03 00 00 04 
    endoneof;
>0000291C: 29 02 

    text
>0000291E: 03 08 CC 04 AA 00 CD 04 
        help   = STRING_TOKEN(0x00AA),
        text   = STRING_TOKEN(0x04CC),
        text   = STRING_TOKEN(0x04CD);

    suppressif ideqvallist  PCH_SETUP.sSataTestMode == 1;
>00002926: 0A 82 
>00002928: 14 08 EF 00 01 00 01 00 
         oneof varid   = PCH_SETUP.sSataPort[1],
>00002930: 05 91 D6 04 DB 04 FA 00 02 00 F3 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x04D6),
             help        = STRING_TOKEN(0x04DB),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002941: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002948: 09 07 F9 02 30 00 01 
         endoneof;
>0000294F: 29 02 

     endif;
>00002951: 29 02 
         oneof varid   = PCH_SETUP.sSataHotPlug[1],
>00002953: 05 91 FE 04 FF 04 FB 00 02 00 F9 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x04FE),
             help        = STRING_TOKEN(0x04FF),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002964: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000296B: 09 07 F9 02 00 00 01 
         endoneof;
>00002972: 29 02 
        oneof varid   = PCH_SETUP.sSataExternal[1],
>00002974: 05 91 D2 03 D3 03 FC 00 02 00 05 01 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03D2),
             help        = STRING_TOKEN(0x03D3),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002985: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000298C: 09 07 F9 02 00 00 01 
        endoneof;
>00002993: 29 02 
         oneof varid   = PCH_SETUP.sSataSpinUp[1],
>00002995: 05 91 00 05 01 05 FD 00 02 00 FF 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x0500),
             help        = STRING_TOKEN(0x0501),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000029A6: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000029AD: 09 07 F9 02 00 00 01 
         endoneof;
>000029B4: 29 02 

    oneof varid   = PCH_SETUP.sSataType[1],
>000029B6: 05 91 06 05 E3 04 FE 00 02 00 11 01 10 10 00 01 00 
         prompt      = STRING_TOKEN(0x0506),
         help        = STRING_TOKEN(0x04E3),
         option text = STRING_TOKEN(0x0507), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000029C7: 09 07 07 05 30 00 00 
         option text = STRING_TOKEN(0x0508), value = 1, flags = RESET_REQUIRED;
>000029CE: 09 07 08 05 00 00 01 
    endoneof;
>000029D5: 29 02 

    oneof varid = PCH_SETUP.sSataTopology[1],
>000029D7: 05 91 0A 05 0F 05 FF 00 02 00 37 01 10 10 00 04 00 
       prompt = STRING_TOKEN(0x050A),
       help = STRING_TOKEN(0x050F),
       option text = STRING_TOKEN(0x03E2), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000029E8: 09 07 E2 03 30 00 00 
       option text = STRING_TOKEN(0x03E3), value = 1, flags = RESET_REQUIRED;
>000029EF: 09 07 E3 03 00 00 01 
       option text = STRING_TOKEN(0x03E4), value = 2, flags = RESET_REQUIRED;
>000029F6: 09 07 E4 03 00 00 02 
       option text = STRING_TOKEN(0x03E5), value = 3, flags = RESET_REQUIRED;
>000029FD: 09 07 E5 03 00 00 03 
       option text = STRING_TOKEN(0x03E6), value = 4, flags = RESET_REQUIRED;
>00002A04: 09 07 E6 03 00 00 04 
    endoneof;
>00002A0B: 29 02 

    text
>00002A0D: 03 08 CE 04 AA 00 CF 04 
        help   = STRING_TOKEN(0x00AA),
        text   = STRING_TOKEN(0x04CE),
        text   = STRING_TOKEN(0x04CF);

    suppressif ideqvallist  PCH_SETUP.sSataTestMode == 1;
>00002A15: 0A 82 
>00002A17: 14 08 EF 00 01 00 01 00 
         oneof varid   = PCH_SETUP.sSataPort[2],
>00002A1F: 05 91 D7 04 DB 04 00 01 02 00 F4 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x04D7),
             help        = STRING_TOKEN(0x04DB),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002A30: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002A37: 09 07 F9 02 30 00 01 
         endoneof;
>00002A3E: 29 02 

    endif;
>00002A40: 29 02 
         oneof varid   = PCH_SETUP.sSataHotPlug[2],
>00002A42: 05 91 FE 04 FF 04 01 01 02 00 FA 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x04FE),
             help        = STRING_TOKEN(0x04FF),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002A53: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002A5A: 09 07 F9 02 00 00 01 
         endoneof;
>00002A61: 29 02 
        oneof varid   = PCH_SETUP.sSataExternal[2],
>00002A63: 05 91 D2 03 D3 03 02 01 02 00 06 01 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03D2),
             help        = STRING_TOKEN(0x03D3),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002A74: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002A7B: 09 07 F9 02 00 00 01 
        endoneof;
>00002A82: 29 02 
         oneof varid   = PCH_SETUP.sSataSpinUp[2],
>00002A84: 05 91 00 05 01 05 03 01 02 00 00 01 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x0500),
             help        = STRING_TOKEN(0x0501),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002A95: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002A9C: 09 07 F9 02 00 00 01 
         endoneof;
>00002AA3: 29 02 
    oneof varid   = PCH_SETUP.sSataType[2],
>00002AA5: 05 91 06 05 E3 04 04 01 02 00 12 01 10 10 00 01 00 
         prompt      = STRING_TOKEN(0x0506),
         help        = STRING_TOKEN(0x04E3),
         option text = STRING_TOKEN(0x0507), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002AB6: 09 07 07 05 30 00 00 
         option text = STRING_TOKEN(0x0508), value = 1, flags = RESET_REQUIRED;
>00002ABD: 09 07 08 05 00 00 01 
    endoneof;
>00002AC4: 29 02 

    oneof varid = PCH_SETUP.sSataTopology[2],
>00002AC6: 05 91 0B 05 0F 05 05 01 02 00 38 01 10 10 00 04 00 
       prompt = STRING_TOKEN(0x050B),
       help = STRING_TOKEN(0x050F),
       option text = STRING_TOKEN(0x03E2), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002AD7: 09 07 E2 03 30 00 00 
       option text = STRING_TOKEN(0x03E3), value = 1, flags = RESET_REQUIRED;
>00002ADE: 09 07 E3 03 00 00 01 
       option text = STRING_TOKEN(0x03E4), value = 2, flags = RESET_REQUIRED;
>00002AE5: 09 07 E4 03 00 00 02 
       option text = STRING_TOKEN(0x03E5), value = 3, flags = RESET_REQUIRED;
>00002AEC: 09 07 E5 03 00 00 03 
       option text = STRING_TOKEN(0x03E6), value = 4, flags = RESET_REQUIRED;
>00002AF3: 09 07 E6 03 00 00 04 
    endoneof;
>00002AFA: 29 02 

    text
>00002AFC: 03 08 D0 04 AA 00 C7 04 
        help   = STRING_TOKEN(0x00AA),
        text   = STRING_TOKEN(0x04D0),
        text   = STRING_TOKEN(0x04C7);

    suppressif ideqvallist  PCH_SETUP.sSataTestMode == 1;
>00002B04: 0A 82 
>00002B06: 14 08 EF 00 01 00 01 00 
         oneof varid   = PCH_SETUP.sSataPort[3],
>00002B0E: 05 91 D8 04 DB 04 06 01 02 00 F5 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x04D8),
             help        = STRING_TOKEN(0x04DB),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002B1F: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002B26: 09 07 F9 02 30 00 01 
         endoneof;
>00002B2D: 29 02 

     endif;
>00002B2F: 29 02 
         oneof varid   = PCH_SETUP.sSataHotPlug[3],
>00002B31: 05 91 FE 04 FF 04 07 01 02 00 FB 00 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x04FE),
             help        = STRING_TOKEN(0x04FF),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002B42: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002B49: 09 07 F9 02 00 00 01 
         endoneof;
>00002B50: 29 02 
        oneof varid   = PCH_SETUP.sSataExternal[3],
>00002B52: 05 91 D2 03 D3 03 08 01 02 00 07 01 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x03D2),
             help        = STRING_TOKEN(0x03D3),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002B63: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002B6A: 09 07 F9 02 00 00 01 
        endoneof;
>00002B71: 29 02 
         oneof varid   = PCH_SETUP.sSataSpinUp[3],
>00002B73: 05 91 00 05 01 05 09 01 02 00 01 01 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x0500),
             help        = STRING_TOKEN(0x0501),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002B84: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002B8B: 09 07 F9 02 00 00 01 
         endoneof;
>00002B92: 29 02 
    oneof varid   = PCH_SETUP.sSataType[3],
>00002B94: 05 91 06 05 E3 04 0A 01 02 00 13 01 10 10 00 01 00 
         prompt      = STRING_TOKEN(0x0506),
         help        = STRING_TOKEN(0x04E3),
         option text = STRING_TOKEN(0x0507), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002BA5: 09 07 07 05 30 00 00 
         option text = STRING_TOKEN(0x0508), value = 1, flags = RESET_REQUIRED;
>00002BAC: 09 07 08 05 00 00 01 
    endoneof;
>00002BB3: 29 02 

    oneof varid = PCH_SETUP.sSataTopology[3],
>00002BB5: 05 91 0C 05 0F 05 0B 01 02 00 39 01 10 10 00 04 00 
       prompt = STRING_TOKEN(0x050C),
       help = STRING_TOKEN(0x050F),
       option text = STRING_TOKEN(0x03E2), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002BC6: 09 07 E2 03 30 00 00 
       option text = STRING_TOKEN(0x03E3), value = 1, flags = RESET_REQUIRED;
>00002BCD: 09 07 E3 03 00 00 01 
       option text = STRING_TOKEN(0x03E4), value = 2, flags = RESET_REQUIRED;
>00002BD4: 09 07 E4 03 00 00 02 
       option text = STRING_TOKEN(0x03E5), value = 3, flags = RESET_REQUIRED;
>00002BDB: 09 07 E5 03 00 00 03 
       option text = STRING_TOKEN(0x03E6), value = 4, flags = RESET_REQUIRED;
>00002BE2: 09 07 E6 03 00 00 04 
    endoneof;
>00002BE9: 29 02 

    text
>00002BEB: 03 08 D1 04 AA 00 D2 04 
      help   = STRING_TOKEN(0x00AA),
      text   = STRING_TOKEN(0x04D1),
      text   = STRING_TOKEN(0x04D2);

   suppressif ideqvallist  PCH_SETUP.sSataTestMode == 1;
>00002BF3: 0A 82 
>00002BF5: 14 08 EF 00 01 00 01 00 
    oneof varid   = PCH_SETUP.sSataPort[4],
>00002BFD: 05 91 D9 04 DB 04 0C 01 02 00 F6 00 10 10 00 01 00 

      prompt      = STRING_TOKEN(0x04D9),
      help        = STRING_TOKEN(0x04DB),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002C0E: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002C15: 09 07 F9 02 30 00 01 
    endoneof;
>00002C1C: 29 02 
   endif;
>00002C1E: 29 02 

    suppressif ideqval PCH_SETUP.sSataExternal[4] == 1;
>00002C20: 0A 82 
>00002C22: 12 06 0E 01 01 00 
      oneof varid   = PCH_SETUP.sSataHotPlug[4],
>00002C28: 05 91 FE 04 FF 04 0D 01 02 00 FC 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x04FE),
        help        = STRING_TOKEN(0x04FF),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002C39: 09 07 FA 02 30 00 00 
        option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002C40: 09 07 F9 02 00 00 01 
      endoneof;
>00002C47: 29 02 
    endif;
>00002C49: 29 02 

    oneof varid   = PCH_SETUP.sSataExternal[4],
>00002C4B: 05 91 D2 03 D3 03 0E 01 02 00 08 01 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x03D2),
      help        = STRING_TOKEN(0x03D3),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002C5C: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002C63: 09 07 F9 02 00 00 01 
    endoneof;
>00002C6A: 29 02 

    oneof varid   = PCH_SETUP.sSataSpinUp[4],
>00002C6C: 05 91 00 05 01 05 0F 01 02 00 02 01 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0500),
      help        = STRING_TOKEN(0x0501),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002C7D: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002C84: 09 07 F9 02 00 00 01 
    endoneof;
>00002C8B: 29 02 

    oneof varid   = PCH_SETUP.sSataType[4],
>00002C8D: 05 91 06 05 E3 04 10 01 02 00 14 01 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0506),
      help        = STRING_TOKEN(0x04E3),
      option text = STRING_TOKEN(0x0507), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002C9E: 09 07 07 05 30 00 00 
      option text = STRING_TOKEN(0x0508), value = 1, flags = RESET_REQUIRED;
>00002CA5: 09 07 08 05 00 00 01 
    endoneof;
>00002CAC: 29 02 

    oneof varid = PCH_SETUP.sSataTopology[4],
>00002CAE: 05 91 0D 05 0F 05 11 01 02 00 3A 01 10 10 00 04 00 
       prompt = STRING_TOKEN(0x050D),
       help = STRING_TOKEN(0x050F),
       option text = STRING_TOKEN(0x03E2), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002CBF: 09 07 E2 03 30 00 00 
       option text = STRING_TOKEN(0x03E3), value = 1, flags = RESET_REQUIRED;
>00002CC6: 09 07 E3 03 00 00 01 
       option text = STRING_TOKEN(0x03E4), value = 2, flags = RESET_REQUIRED;
>00002CCD: 09 07 E4 03 00 00 02 
       option text = STRING_TOKEN(0x03E5), value = 3, flags = RESET_REQUIRED;
>00002CD4: 09 07 E5 03 00 00 03 
       option text = STRING_TOKEN(0x03E6), value = 4, flags = RESET_REQUIRED;
>00002CDB: 09 07 E6 03 00 00 04 
    endoneof;
>00002CE2: 29 02 

    text
>00002CE4: 03 08 D3 04 AA 00 D4 04 
      help   = STRING_TOKEN(0x00AA),
      text   = STRING_TOKEN(0x04D3),
      text   = STRING_TOKEN(0x04D4);


   suppressif ideqvallist  PCH_SETUP.sSataTestMode == 1;
>00002CEC: 0A 82 
>00002CEE: 14 08 EF 00 01 00 01 00 
    oneof varid   = PCH_SETUP.sSataPort[5],
>00002CF6: 05 91 DA 04 DB 04 12 01 02 00 F7 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x04DA),
      help        = STRING_TOKEN(0x04DB),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002D07: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002D0E: 09 07 F9 02 30 00 01 
    endoneof;
>00002D15: 29 02 
   endif;
>00002D17: 29 02 

    suppressif ideqval PCH_SETUP.sSataExternal[5] == 1;
>00002D19: 0A 82 
>00002D1B: 12 06 14 01 01 00 
      oneof varid   = PCH_SETUP.sSataHotPlug[5],
>00002D21: 05 91 FE 04 FF 04 13 01 02 00 FD 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x04FE),
        help        = STRING_TOKEN(0x04FF),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002D32: 09 07 FA 02 30 00 00 
        option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002D39: 09 07 F9 02 00 00 01 
      endoneof;
>00002D40: 29 02 
    endif;
>00002D42: 29 02 

    oneof varid   = PCH_SETUP.sSataExternal[5],
>00002D44: 05 91 D2 03 D3 03 14 01 02 00 09 01 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x03D2),

      help        = STRING_TOKEN(0x03D3),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002D55: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002D5C: 09 07 F9 02 00 00 01 
    endoneof;
>00002D63: 29 02 

    oneof varid   = PCH_SETUP.sSataSpinUp[5],
>00002D65: 05 91 00 05 01 05 15 01 02 00 03 01 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0500),
      help        = STRING_TOKEN(0x0501),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002D76: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00002D7D: 09 07 F9 02 00 00 01 
    endoneof;
>00002D84: 29 02 

    oneof varid   = PCH_SETUP.sSataType[5],
>00002D86: 05 91 06 05 E3 04 16 01 02 00 15 01 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0506),
      help        = STRING_TOKEN(0x04E3),
      option text = STRING_TOKEN(0x0507), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002D97: 09 07 07 05 30 00 00 
      option text = STRING_TOKEN(0x0508), value = 1, flags = RESET_REQUIRED;
>00002D9E: 09 07 08 05 00 00 01 
    endoneof;
>00002DA5: 29 02 

    oneof varid = PCH_SETUP.sSataTopology[5],
>00002DA7: 05 91 0E 05 0F 05 17 01 02 00 3B 01 10 10 00 04 00 
       prompt = STRING_TOKEN(0x050E),
       help = STRING_TOKEN(0x050F),
       option text = STRING_TOKEN(0x03E2), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002DB8: 09 07 E2 03 30 00 00 
       option text = STRING_TOKEN(0x03E3), value = 1, flags = RESET_REQUIRED;
>00002DBF: 09 07 E3 03 00 00 01 
       option text = STRING_TOKEN(0x03E4), value = 2, flags = RESET_REQUIRED;
>00002DC6: 09 07 E4 03 00 00 02 
       option text = STRING_TOKEN(0x03E5), value = 3, flags = RESET_REQUIRED;
>00002DCD: 09 07 E5 03 00 00 03 
       option text = STRING_TOKEN(0x03E6), value = 4, flags = RESET_REQUIRED;
>00002DD4: 09 07 E6 03 00 00 04 
    endoneof;
>00002DDB: 29 02 


endform;
>00002DDD: 29 02 

  form formid = 0x11A,
>00002DDF: 01 86 1A 01 E6 04 

     title = STRING_TOKEN(0x04E6);

     oneof varid   = PCH_SETUP.sSataHddlk,
>00002DE5: 05 91 E8 04 E9 04 18 01 02 00 1C 01 10 10 00 01 00 
         prompt      = STRING_TOKEN(0x04E8),
         help        = STRING_TOKEN(0x04E9),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002DF6: 09 07 FA 02 00 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002DFD: 09 07 F9 02 30 00 01 
    endoneof;
>00002E04: 29 02 

    oneof varid   = PCH_SETUP.sSataLedl,
>00002E06: 05 91 EA 04 EB 04 19 01 02 00 1D 01 10 10 00 01 00 
         prompt      = STRING_TOKEN(0x04EA),
         help        = STRING_TOKEN(0x04EB),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002E17: 09 07 FA 02 00 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002E1E: 09 07 F9 02 30 00 01 
    endoneof;
>00002E25: 29 02 

    suppressif NOT ideqval PCH_SETUP.sSataInterfaceMode == 1;
>00002E27: 0A 82 
>00002E29: 12 86 EE 00 01 00 
>00002E2F: 17 02 
>00002E31: 29 02 
         oneof varid   = PCH_SETUP.sSataRaidR0,
>00002E33: 05 91 EC 04 ED 04 1A 01 02 00 16 01 10 10 00 01 00 
             prompt    = STRING_TOKEN(0x04EC),
             help      = STRING_TOKEN(0x04ED),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002E44: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002E4B: 09 07 F9 02 30 00 01 
         endoneof;
>00002E52: 29 02 

         oneof varid   = PCH_SETUP.sSataRaidR1,
>00002E54: 05 91 EE 04 EF 04 1B 01 02 00 17 01 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x04EE),
             help        = STRING_TOKEN(0x04EF),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002E65: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002E6C: 09 07 F9 02 30 00 01 
         endoneof;
>00002E73: 29 02 

         oneof varid   = PCH_SETUP.sSataRaidR10,
>00002E75: 05 91 F2 04 F3 04 1C 01 02 00 18 01 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x04F2),
             help        = STRING_TOKEN(0x04F3),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002E86: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002E8D: 09 07 F9 02 30 00 01 
         endoneof;
>00002E94: 29 02 

         oneof varid   = PCH_SETUP.sSataRaidR5,
>00002E96: 05 91 F0 04 F1 04 1D 01 02 00 19 01 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x04F0),
             help        = STRING_TOKEN(0x04F1),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002EA7: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002EAE: 09 07 F9 02 30 00 01 
         endoneof;
>00002EB5: 29 02 

         oneof varid   = PCH_SETUP.sSataRaidIrrt,
>00002EB7: 05 91 F4 04 F5 04 1E 01 02 00 1A 01 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x04F4),
             help        = STRING_TOKEN(0x04F5),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002EC8: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002ECF: 09 07 F9 02 30 00 01 
         endoneof;
>00002ED6: 29 02 

         oneof varid   = PCH_SETUP.sSataRaidOub,
>00002ED8: 05 91 F6 04 F7 04 1F 01 02 00 1B 01 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x04F6),
             help        = STRING_TOKEN(0x04F7),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002EE9: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002EF0: 09 07 F9 02 30 00 01 
         endoneof;
>00002EF7: 29 02 

         oneof varid   = PCH_SETUP.sSataRaidIooe,
>00002EF9: 05 91 F8 04 F9 04 20 01 02 00 1E 01 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x04F8),
             help        = STRING_TOKEN(0x04F9),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002F0A: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002F11: 09 07 F9 02 30 00 01 
         endoneof;
>00002F18: 29 02 

         oneof varid   = PCH_SETUP.sSataRaidSrt,
>00002F1A: 05 91 FA 04 FB 04 21 01 02 00 1F 01 10 10 00 01 00 
            prompt      = STRING_TOKEN(0x04FA),
            help        = STRING_TOKEN(0x04FB),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002F2B: 09 07 FA 02 00 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002F32: 09 07 F9 02 30 00 01 
         endoneof;
>00002F39: 29 02 

         oneof varid   = PCH_SETUP.sSataRaidOromDelay,
>00002F3B: 05 91 FC 04 FD 04 22 01 02 00 20 01 10 10 00 03 00 
             prompt      = STRING_TOKEN(0x04FC),
             help        = STRING_TOKEN(0x04FD),
             option text = STRING_TOKEN(0x02FE), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002F4C: 09 07 FE 02 30 00 00 
             option text = STRING_TOKEN(0x02FF), value = 1, flags = RESET_REQUIRED;
>00002F53: 09 07 FF 02 00 00 01 
             option text = STRING_TOKEN(0x0300), value = 2, flags = RESET_REQUIRED;
>00002F5A: 09 07 00 03 00 00 02 
             option text = STRING_TOKEN(0x0301), value = 3, flags = RESET_REQUIRED;
>00002F61: 09 07 01 03 00 00 03 
         endoneof;
>00002F68: 29 02 

    endif;
>00002F6A: 29 02 
  endform;
>00002F6C: 29 02 
#line 2102 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

  form formid = 0x61,
>00002F6E: 01 86 61 00 E8 03 

    title     = STRING_TOKEN(0x03E8);











    suppressif TRUE;
>00002F74: 0A 82 
>00002F76: 46 02 
      oneof varid       = SYSTEM_CONFIGURATION.GbeEnabled,
>00002F78: 05 91 F4 03 F5 03 0A 20 01 00 61 00 04 10 00 01 00 
            questionid  = 0x200A,
            prompt      = STRING_TOKEN(0x03F4),
            help        = STRING_TOKEN(0x03F5),
            option text = STRING_TOKEN(0x02FA), value = 0, flags=DEFAULT | INTERACTIVE;
>00002F89: 09 07 FA 02 10 00 00 
            option text = STRING_TOKEN(0x02F9),  value = 1, flags=0 | INTERACTIVE;
>00002F90: 09 07 F9 02 00 00 01 
      endoneof;
>00002F97: 29 02 
    endif;
>00002F99: 29 02 
#line 2127 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"


    suppressif ideqval SYSTEM_CONFIGURATION.GbeEnabled == 0;
>00002F9B: 0A 82 
>00002F9D: 12 06 0A 20 00 00 


#line 2133 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid = PCH_SETUP.PchWakeOnLan,
>00002FA3: 05 91 EE 03 EF 03 23 01 02 00 24 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x03EE),
             help     = STRING_TOKEN(0x03EF),
             
             
             
             
             option text = STRING_TOKEN(0x02F9), value = 1, flags =  RESET_REQUIRED;
>00002FB4: 09 07 F9 02 00 00 01 
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002FBB: 09 07 FA 02 30 00 00 
         endoneof;
>00002FC2: 29 02 

         oneof varid = PCH_SETUP.PchSlpLanLowDc,
>00002FC4: 05 91 F2 03 F3 03 24 01 02 00 25 00 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x03F2),
             help     = STRING_TOKEN(0x03F3),
             option text = STRING_TOKEN(0x02F9), value = 1, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002FD5: 09 07 F9 02 30 00 01 
             option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00002FDC: 09 07 FA 02 00 00 00 
         endoneof;
>00002FE3: 29 02 
         oneof varid = PCH_SETUP.PchLanK1Off,
>00002FE5: 05 91 F0 03 F1 03 25 01 02 00 6F 04 10 10 00 01 00 
            prompt   = STRING_TOKEN(0x03F0),
            help     = STRING_TOKEN(0x03F1),
            option text = STRING_TOKEN(0x02F9), value = 1, flags =  RESET_REQUIRED;
>00002FF6: 09 07 F9 02 00 00 01 
            option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00002FFD: 09 07 FA 02 30 00 00 
         endoneof;
>00003004: 29 02 
      endif;
>00003006: 29 02 


    suppressif ideqval PCH_SETUP.GbeRegionInvalid == 0;
>00003008: 0A 82 
>0000300A: 12 06 08 20 00 00 
    text
>00003010: 03 08 EC 03 F7 02 ED 03 
      help   = STRING_TOKEN(0x02F7),
      text   = STRING_TOKEN(0x03EC),
      text   = STRING_TOKEN(0x03ED),
      flags = 0, key = 0;
    endif;
>00003018: 29 02 

  endform;
>0000301A: 29 02 

  form formid = 0x10E,
>0000301C: 01 86 0E 01 F6 03 
    title     = STRING_TOKEN(0x03F6);
    subtitle text = STRING_TOKEN(0x00AA);
>00003022: 02 87 AA 00 00 00 00 
>00003029: 29 02 

    
    
    
    oneof varid     = PCH_SETUP.PciDelayOptimizationEcr,
>0000302B: 05 91 23 04 24 04 26 01 02 00 40 01 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0423),
      help        = STRING_TOKEN(0x0424),
      option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000303C: 09 07 38 07 30 00 00 
      option text = STRING_TOKEN(0x0739), value = 1, flags = RESET_REQUIRED;
>00003043: 09 07 39 07 00 00 01 
    endoneof;
>0000304A: 29 02 

    oneof varid   = PCH_SETUP.PcieComplianceTestMode,
>0000304C: 05 91 C5 04 C6 04 27 01 02 00 48 01 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x04C5),
      help        = STRING_TOKEN(0x04C6),
      option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000305D: 09 07 38 07 30 00 00 
      option text = STRING_TOKEN(0x0739), value = 1, flags = RESET_REQUIRED;
>00003064: 09 07 39 07 00 00 01 
    endoneof;
>0000306B: 29 02 



    goto 0x124,
>0000306D: 0F 0F 9E 05 9F 05 28 01 00 00 FF FF 00 24 01 
      prompt = STRING_TOKEN(0x059E),
      help   = STRING_TOKEN(0x059F);





    
    
    
    oneof varid = PCH_SETUP.PchPcieGlobalAspm,
>0000307C: 05 91 20 04 21 04 29 01 02 00 41 01 10 10 00 02 00 
          prompt  = STRING_TOKEN(0x0420),
          help    = STRING_TOKEN(0x0421),
          option text = STRING_TOKEN(0x0422),     value = 0, flags = RESET_REQUIRED;
>0000308D: 09 07 22 04 00 00 00 
          option text = STRING_TOKEN(0x0519),      value = 2, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
>00003094: 09 07 19 05 30 00 02 
    endoneof;
>0000309B: 29 02 

    
    
    
    oneof varid = PCH_SETUP.PchPcieUX16CompletionTimeout,
>0000309D: 05 91 6B 04 6C 04 2A 01 02 00 66 04 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x046B),
          help    = STRING_TOKEN(0x046C),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>000030AE: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>000030B5: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>000030BC: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>000030C3: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>000030CA: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>000030D1: 09 07 A7 00 00 00 09 
    endoneof;
>000030D8: 29 02 
    oneof varid = PCH_SETUP.PchPcieUX8CompletionTimeout,
>000030DA: 05 91 6D 04 6E 04 2B 01 02 00 67 04 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x046D),
          help    = STRING_TOKEN(0x046E),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>000030EB: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>000030F2: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>000030F9: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>00003100: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>00003107: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>0000310E: 09 07 A7 00 00 00 09 
    endoneof;
>00003115: 29 02 

    oneof varid = PCH_SETUP.PchPcieUX16MaxPayloadSize,
>00003117: 05 91 74 04 75 04 2C 01 02 00 77 02 10 10 00 02 00 
          prompt  = STRING_TOKEN(0x0474),
          help    = STRING_TOKEN(0x0475),
          option text = STRING_TOKEN(0x0484), value = 0, flags = RESET_REQUIRED;
>00003128: 09 07 84 04 00 00 00 
          option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>0000312F: 09 07 85 04 00 00 01 
          option text = STRING_TOKEN(0x0486), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00003136: 09 07 86 04 30 00 02 
    endoneof;
>0000313D: 29 02 
    oneof varid = PCH_SETUP.PchPcieUX8MaxPayloadSize,
>0000313F: 05 91 76 04 77 04 2D 01 02 00 76 02 10 10 00 02 00 
          prompt  = STRING_TOKEN(0x0476),
          help    = STRING_TOKEN(0x0477),
          option text = STRING_TOKEN(0x0484), value = 0, flags = RESET_REQUIRED;
>00003150: 09 07 84 04 00 00 00 
          option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>00003157: 09 07 85 04 00 00 01 
          option text = STRING_TOKEN(0x0486), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000315E: 09 07 86 04 30 00 02 
    endoneof;
>00003165: 29 02 

#line 2250 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

    suppressif TRUE;
>00003167: 0A 82 
>00003169: 46 02 

        oneof varid       = SYSTEM_CONFIGURATION.PciePortConfig1,
>0000316B: 05 91 25 04 2A 04 01 20 01 00 5C 00 04 10 00 03 00 
             questionid  = 0x2001,
             prompt      = STRING_TOKEN(0x0425),
             help        = STRING_TOKEN(0x042A),
             option text = STRING_TOKEN(0x00AA), value=0, flags = DEFAULT | INTERACTIVE;
>0000317C: 09 07 AA 00 10 00 00 
             option text = STRING_TOKEN(0x02FA), value=1, flags= 0 | INTERACTIVE;
>00003183: 09 07 FA 02 00 00 01 
             option text = STRING_TOKEN(0x02F9 ), value=2, flags=0 | INTERACTIVE;
>0000318A: 09 07 F9 02 00 00 02 
             option text = STRING_TOKEN(0x02F8), value=3, flags=0 | INTERACTIVE;
>00003191: 09 07 F8 02 00 00 03 
        endoneof;
>00003198: 29 02 

        oneof varid       = SYSTEM_CONFIGURATION.PciePortConfig2,
>0000319A: 05 91 26 04 2B 04 02 20 01 00 5D 00 04 10 00 03 00 
             questionid  = 0x2002,
             prompt      = STRING_TOKEN(0x0426),
             help        = STRING_TOKEN(0x042B),
             option text = STRING_TOKEN(0x00AA), value = 0, flags = DEFAULT | INTERACTIVE;
>000031AB: 09 07 AA 00 10 00 00 
             option text = STRING_TOKEN(0x02FA), value = 1, flags= 0 |INTERACTIVE;
>000031B2: 09 07 FA 02 00 00 01 
             option text = STRING_TOKEN(0x02F9 ), value = 2, flags=0 | INTERACTIVE;
>000031B9: 09 07 F9 02 00 00 02 
             option text = STRING_TOKEN(0x02F8), value = 3, flags=0 | INTERACTIVE;
>000031C0: 09 07 F8 02 00 00 03 
        endoneof;
>000031C7: 29 02 

        oneof varid       = SYSTEM_CONFIGURATION.PciePortConfig3,
>000031C9: 05 91 27 04 2C 04 03 20 01 00 5E 00 04 10 00 03 00 
             questionid  = 0x2003,
             prompt      = STRING_TOKEN(0x0427),
             help        = STRING_TOKEN(0x042C),
             option text = STRING_TOKEN(0x00AA), value = 0, flags = DEFAULT | INTERACTIVE;
>000031DA: 09 07 AA 00 10 00 00 
             option text = STRING_TOKEN(0x02FA), value = 1, flags= 0 |INTERACTIVE;
>000031E1: 09 07 FA 02 00 00 01 
             option text = STRING_TOKEN(0x02F9 ), value = 2, flags=0 | INTERACTIVE;
>000031E8: 09 07 F9 02 00 00 02 
             option text = STRING_TOKEN(0x02F8), value = 3, flags=0 | INTERACTIVE;
>000031EF: 09 07 F8 02 00 00 03 
        endoneof;
>000031F6: 29 02 

        oneof varid       = SYSTEM_CONFIGURATION.PciePortConfig4,
>000031F8: 05 91 28 04 2D 04 04 20 01 00 5F 00 04 10 00 03 00 
             questionid  = 0x2004,
             prompt      = STRING_TOKEN(0x0428),
             help        = STRING_TOKEN(0x042D),
             option text = STRING_TOKEN(0x00AA), value = 0, flags = DEFAULT | INTERACTIVE;
>00003209: 09 07 AA 00 10 00 00 
             option text = STRING_TOKEN(0x02FA), value = 1, flags= 0 |INTERACTIVE;
>00003210: 09 07 FA 02 00 00 01 
             option text = STRING_TOKEN(0x02F9 ), value = 2, flags=0 | INTERACTIVE;
>00003217: 09 07 F9 02 00 00 02 
             option text = STRING_TOKEN(0x02F8), value = 3, flags=0 | INTERACTIVE;
>0000321E: 09 07 F8 02 00 00 03 
        endoneof;
>00003225: 29 02 

        oneof varid       = SYSTEM_CONFIGURATION.PciePortConfig5,
>00003227: 05 91 29 04 2E 04 05 20 01 00 60 00 04 10 00 03 00 
             questionid  = 0x2005,
             prompt      = STRING_TOKEN(0x0429),
             help        = STRING_TOKEN(0x042E),
             option text = STRING_TOKEN(0x00AA), value = 0, flags = DEFAULT | INTERACTIVE;
>00003238: 09 07 AA 00 10 00 00 
             option text = STRING_TOKEN(0x02FA), value = 1, flags= 0 |INTERACTIVE;
>0000323F: 09 07 FA 02 00 00 01 
             option text = STRING_TOKEN(0x02F9 ), value = 2, flags=0 | INTERACTIVE;
>00003246: 09 07 F9 02 00 00 02 
             option text = STRING_TOKEN(0x02F8), value = 3, flags=0 | INTERACTIVE;
>0000324D: 09 07 F8 02 00 00 03 
        endoneof;
>00003254: 29 02 

        oneof varid       = SYSTEM_CONFIGURATION.PcieSBDE,
>00003256: 05 91 BB 04 BC 04 06 20 01 00 5A 00 04 10 00 01 00 
             questionid  = 0x2006,
             prompt      = STRING_TOKEN(0x04BB),
             help        = STRING_TOKEN(0x04BC),
             option text = STRING_TOKEN(0x02F9), value = 0, flags=DEFAULT | INTERACTIVE;
>00003267: 09 07 F9 02 10 00 00 
             option text = STRING_TOKEN(0x02FA), value = 1, flags=0 | INTERACTIVE;
>0000326E: 09 07 FA 02 00 00 01 
       endoneof;
>00003275: 29 02 

    endif;
>00003277: 29 02 

     oneof varid  = SYSTEM_CONFIGURATION.PcieClockGatingDisabled,
>00003279: 05 91 5D 04 5E 04 2E 01 01 00 58 00 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x045D),
         help     = STRING_TOKEN(0x045E),
       option text = STRING_TOKEN(0x02FA), value = 1, flags = RESET_REQUIRED;
>0000328A: 09 07 FA 02 00 00 01 
       option text = STRING_TOKEN(0x02F9),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00003291: 09 07 F9 02 30 00 00 
     endoneof;
>00003298: 29 02 

     oneof varid   = SYSTEM_CONFIGURATION.PcieDmiAspm,
>0000329A: 05 91 4E 04 4F 04 2F 01 01 00 59 00 10 10 00 FF 00 
        prompt      = STRING_TOKEN(0x044E),
        help        = STRING_TOKEN(0x044F),
       option text = STRING_TOKEN(0x0450),           value = 0, flags =  DEFAULT | RESET_REQUIRED;
>000032AB: 09 07 50 04 10 00 00 
        option text = STRING_TOKEN(0x044B),    value = 2, flags = RESET_REQUIRED;
>000032B2: 09 07 4B 04 00 00 02 
        option text = STRING_TOKEN(0x02FA), value = 0xFF, flags = RESET_REQUIRED;
>000032B9: 09 07 FA 02 00 00 FF 
     endoneof;
>000032C0: 29 02 

    oneof varid   = PCH_SETUP.PcieDmiExtSync,
>000032C2: 05 91 5B 04 5C 04 30 01 02 00 3F 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x045B),
        help        = STRING_TOKEN(0x045C),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000032D3: 09 07 FA 02 30 00 00 
        option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000032DA: 09 07 F9 02 00 00 01 
    endoneof;
>000032E1: 29 02 

    oneof varid = PCH_SETUP.PcieDmiStopAndScreamEnable,
>000032E3: 05 91 C1 04 C2 04 31 01 02 00 42 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x04C1),
        help        = STRING_TOKEN(0x04C2),
        option text = STRING_TOKEN(0x0738),     value = 0, flags = DEFAULT | RESET_REQUIRED |  MANUFACTURING;
>000032F4: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = RESET_REQUIRED;
>000032FB: 09 07 39 07 00 00 01 
    endoneof;
>00003302: 29 02 


    oneof varid   = PCH_SETUP.XTpmLen,
>00003304: 05 91 C3 04 C4 04 32 01 02 00 44 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x04C3),
        help        = STRING_TOKEN(0x04C4),
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00003315: 09 07 39 07 30 00 01 
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000331C: 09 07 38 07 00 00 00 
    endoneof;
>00003323: 29 02 
#line 2350 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"


    numeric varid =  SYSTEM_CONFIGURATION.GbePciePortNum,
>00003325: 07 91 45 04 46 04 07 20 01 00 5B 00 05 10 00 14 00 
        questionid  = 0x2007,
        prompt      = STRING_TOKEN (0x0445),
        help        = STRING_TOKEN(0x0446),
        flags       = READ_ONLY | INTERACTIVE,
        minimum     = 0,
        maximum     = 20,
    endnumeric;
>00003336: 29 02 


    grayoutif  ideqval SYSTEM_CONFIGURATION.PcieSBDE == 0;
>00003338: 19 82 
>0000333A: 12 06 06 20 00 00 
         oneof varid   = PCH_SETUP.PcieRootPortSBDE,
>00003340: 05 91 BD 04 BE 04 33 01 02 00 4A 01 10 10 00 01 00 
             prompt      = STRING_TOKEN(0x04BD),
             help        = STRING_TOKEN(0x04BE),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00003351: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00003358: 09 07 F9 02 00 00 01 
         endoneof;
>0000335F: 29 02 
    endif;
>00003361: 29 02 

    suppressif ideqval  PCH_SETUP.PcieRootPortSBDE == 0 OR
>00003363: 0A 82 
>00003365: 12 86 33 01 00 00 
>00003371: 16 02 
>00003373: 29 02 
               ideqval  SYSTEM_CONFIGURATION.PcieSBDE == 0;
>0000336B: 12 06 06 20 00 00 
      numeric varid =  PCH_SETUP.PcieSBDEPort,
>00003375: 07 91 BF 04 C0 04 34 01 02 00 4B 01 10 10 00 07 01 
        prompt      = STRING_TOKEN (0x04BF),
        help        = STRING_TOKEN (0x04C0),
        flags   = RESET_REQUIRED,
        minimum     = 0,
        maximum     = 7,
        step        = 1,    
        default     = 0, defaultstore = MyStandardDefault,
>00003386: 5B 06 00 00 00 00 
        default     = 0, defaultstore = MyManufactureDefault,    
>0000338C: 5B 06 01 00 00 00 
      endnumeric;
>00003392: 29 02 
    endif;
>00003394: 29 02 

    subtitle text = STRING_TOKEN(0x00AA);
>00003396: 02 87 AA 00 00 00 00 
>0000339D: 29 02 

    oneof varid   = PCH_SETUP.PcieRootPortFunctionSwapping,
>0000339F: 05 91 5F 04 60 04 35 01 02 00 52 01 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x045F),
      help        = STRING_TOKEN(0x0460),
      option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000033B0: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000033B7: 09 07 39 07 30 00 01 
    endoneof;
>000033BE: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMaxReadRequestSize,
>000033C0: 05 91 87 04 88 04 36 01 02 00 CA 02 10 10 00 05 00 
        prompt    = STRING_TOKEN(0x0487),
        help    = STRING_TOKEN(0x0488),
        option text = STRING_TOKEN(0x0489), value = 0, flags = RESET_REQUIRED;
>000033D1: 09 07 89 04 00 00 00 
        option text = STRING_TOKEN(0x048A), value = 1, flags = RESET_REQUIRED;
>000033D8: 09 07 8A 04 00 00 01 
        option text = STRING_TOKEN(0x048B), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000033DF: 09 07 8B 04 30 00 02 
        option text = STRING_TOKEN(0x048C), value = 3, flags = RESET_REQUIRED;
>000033E6: 09 07 8C 04 00 00 03 
        option text = STRING_TOKEN(0x048D), value = 4, flags = RESET_REQUIRED;
>000033ED: 09 07 8D 04 00 00 04 
        option text = STRING_TOKEN(0x048E), value = 5, flags = RESET_REQUIRED;
>000033F4: 09 07 8E 04 00 00 05 
      endoneof;
>000033FB: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 1;
>000033FD: 0A 82 
>000033FF: 12 06 07 20 01 00 
         goto 0x62,
>00003405: 0F 0F F8 03 F9 03 37 01 00 00 FF FF 00 62 00 
             prompt = STRING_TOKEN(0x03F8),
             help = STRING_TOKEN(0x03F9),
             flags = 0,
             key = 0;
    endif;
>00003414: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 2 OR
>00003416: 0A 82 
>00003418: 12 86 07 20 02 00 
>00003426: 16 02 
>00003428: 29 02 
               NOT ideqval SYSTEM_CONFIGURATION.PciePortConfig1 == 0;
>0000341E: 12 06 01 20 00 00 
>00003424: 17 02 
         goto 0x63,
>0000342A: 0F 0F FA 03 FB 03 38 01 00 00 FF FF 00 63 00 
             prompt = STRING_TOKEN(0x03FA),
             help = STRING_TOKEN(0x03FB),
             flags = 0,
             key = 0;
    endif;
>00003439: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 3 OR
>0000343B: 0A 82 
>0000343D: 12 86 07 20 03 00 
>00003449: 16 02 
>0000344B: 29 02 
               ideqval SYSTEM_CONFIGURATION.PciePortConfig1 == 3;
>00003443: 12 06 01 20 03 00 
         goto 0x64,
>0000344D: 0F 0F FC 03 FD 03 39 01 00 00 FF FF 00 64 00 
             prompt = STRING_TOKEN(0x03FC),
             help = STRING_TOKEN(0x03FD),
             flags = 0,
             key = 0;
    endif;
>0000345C: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 4 OR
>0000345E: 0A 82 
>00003460: 12 86 07 20 04 00 
>0000346C: 16 02 
>00003476: 29 02 
               ideqval SYSTEM_CONFIGURATION.PciePortConfig1 == 3 OR
>00003466: 12 06 01 20 03 00 
>00003474: 16 02 
               ideqval SYSTEM_CONFIGURATION.PciePortConfig1 == 2;
>0000346E: 12 06 01 20 02 00 
         goto 0x65,
>00003478: 0F 0F FE 03 FF 03 3A 01 00 00 FF FF 00 65 00 
             prompt = STRING_TOKEN(0x03FE),
             help = STRING_TOKEN(0x03FF),
             flags = 0,
             key = 0;
    endif;
>00003487: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 5;
>00003489: 0A 82 
>0000348B: 12 06 07 20 05 00 
         goto 0x66,
>00003491: 0F 0F 00 04 01 04 3B 01 00 00 FF FF 00 66 00 
             prompt = STRING_TOKEN(0x0400),
             help = STRING_TOKEN(0x0401),
             flags = 0,
             key = 0;
    endif;
>000034A0: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 6 OR
>000034A2: 0A 82 
>000034A4: 12 86 07 20 06 00 
>000034B2: 16 02 
>000034B4: 29 02 
               NOT ideqval SYSTEM_CONFIGURATION.PciePortConfig2 == 0;
>000034AA: 12 06 02 20 00 00 
>000034B0: 17 02 
         goto 0x67,
>000034B6: 0F 0F 02 04 03 04 3C 01 00 00 FF FF 00 67 00 
             prompt = STRING_TOKEN(0x0402),
             help = STRING_TOKEN(0x0403),
             flags = 0,
             key = 0;
    endif;
>000034C5: 29 02 


    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 7 OR
>000034C7: 0A 82 
>000034C9: 12 86 07 20 07 00 
>000034D5: 16 02 
>000034D7: 29 02 
           ideqval SYSTEM_CONFIGURATION.PciePortConfig2 == 3;
>000034CF: 12 06 02 20 03 00 
         goto 0x102,
>000034D9: 0F 0F 04 04 05 04 3D 01 00 00 FF FF 00 02 01 
             prompt = STRING_TOKEN(0x0404),
             help = STRING_TOKEN(0x0405),
             flags = 0,
             key = 0;
    endif;
>000034E8: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 8 OR
>000034EA: 0A 82 
>000034EC: 12 86 07 20 08 00 
>000034F8: 16 02 
>00003502: 29 02 
               ideqval SYSTEM_CONFIGURATION.PciePortConfig2 == 3 OR
>000034F2: 12 06 02 20 03 00 
>00003500: 16 02 
               ideqval SYSTEM_CONFIGURATION.PciePortConfig2 == 2;
>000034FA: 12 06 02 20 02 00 
     goto 0x103,
>00003504: 0F 0F 06 04 07 04 3E 01 00 00 FF FF 00 03 01 
         prompt = STRING_TOKEN(0x0406),
         help = STRING_TOKEN(0x0407),
         flags = 0,
         key = 0;
    endif;
>00003513: 29 02 
#line 2478 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 9;
>00003515: 0A 82 
>00003517: 12 06 07 20 09 00 
         goto 0x69,
>0000351D: 0F 0F 08 04 09 04 3F 01 00 00 FF FF 00 69 00 
             prompt = STRING_TOKEN(0x0408),
             help = STRING_TOKEN(0x0409),
             flags = 0,
             key = 0;
    endif;
>0000352C: 29 02 

     suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 10 OR
>0000352E: 0A 82 
>00003530: 12 86 07 20 0A 00 
>0000353E: 16 02 
>00003540: 29 02 
                NOT ideqval SYSTEM_CONFIGURATION.PciePortConfig3 == 0;
>00003536: 12 06 03 20 00 00 
>0000353C: 17 02 
         goto 0x6A,
>00003542: 0F 0F 0A 04 0B 04 40 01 00 00 FF FF 00 6A 00 
             prompt = STRING_TOKEN(0x040A),
             help = STRING_TOKEN(0x040B),
             flags = 0,
             key = 0;
    endif;
>00003551: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 11 OR
>00003553: 0A 82 
>00003555: 12 86 07 20 0B 00 
>00003561: 16 02 
>00003563: 29 02 
               ideqval SYSTEM_CONFIGURATION.PciePortConfig3 == 3;
>0000355B: 12 06 03 20 03 00 
         goto 0x6B,
>00003565: 0F 0F 0C 04 0D 04 41 01 00 00 FF FF 00 6B 00 
             prompt = STRING_TOKEN(0x040C),
             help = STRING_TOKEN(0x040D),
             flags = 0,
             key = 0;
    endif;
>00003574: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 12 OR
>00003576: 0A 82 
>00003578: 12 86 07 20 0C 00 
>00003584: 16 02 
>0000358E: 29 02 
               ideqval SYSTEM_CONFIGURATION.PciePortConfig3 == 3 OR
>0000357E: 12 06 03 20 03 00 
>0000358C: 16 02 
               ideqval SYSTEM_CONFIGURATION.PciePortConfig3 == 2;
>00003586: 12 06 03 20 02 00 
         goto 0x6C,
>00003590: 0F 0F 0E 04 0F 04 42 01 00 00 FF FF 00 6C 00 
             prompt = STRING_TOKEN(0x040E),
             help = STRING_TOKEN(0x040F),
             flags = 0,
             key = 0;
    endif;
>0000359F: 29 02 
    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 13;
>000035A1: 0A 82 
>000035A3: 12 06 07 20 0D 00 
         goto 0x6D,
>000035A9: 0F 0F 10 04 11 04 43 01 00 00 FF FF 00 6D 00 
             prompt = STRING_TOKEN(0x0410),
             help = STRING_TOKEN(0x0411),
             flags = 0,
             key = 0;
    endif;
>000035B8: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 14 OR
>000035BA: 0A 82 
>000035BC: 12 86 07 20 0E 00 
>000035CA: 16 02 
>000035CC: 29 02 
               NOT ideqval SYSTEM_CONFIGURATION.PciePortConfig4 == 0;
>000035C2: 12 06 04 20 00 00 
>000035C8: 17 02 
         goto 0x6E,
>000035CE: 0F 0F 12 04 13 04 44 01 00 00 FF FF 00 6E 00 
             prompt = STRING_TOKEN(0x0412),
             help = STRING_TOKEN(0x0413),
             flags = 0,
             key = 0;
    endif;
>000035DD: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 15 OR
>000035DF: 0A 82 
>000035E1: 12 86 07 20 0F 00 
>000035ED: 16 02 
>000035EF: 29 02 
               ideqval SYSTEM_CONFIGURATION.PciePortConfig4 == 3;
>000035E7: 12 06 04 20 03 00 
         goto 0x6F,
>000035F1: 0F 0F 14 04 15 04 45 01 00 00 FF FF 00 6F 00 
             prompt = STRING_TOKEN(0x0414),
             help = STRING_TOKEN(0x0415),
             flags = 0,
             key = 0;
    endif;
>00003600: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 16 OR
>00003602: 0A 82 
>00003604: 12 86 07 20 10 00 
>00003610: 16 02 
>0000361A: 29 02 
               ideqval SYSTEM_CONFIGURATION.PciePortConfig4 == 3 OR
>0000360A: 12 06 04 20 03 00 
>00003618: 16 02 
               ideqval SYSTEM_CONFIGURATION.PciePortConfig4 == 2;
>00003612: 12 06 04 20 02 00 
         goto 0x70,
>0000361C: 0F 0F 16 04 17 04 46 01 00 00 FF FF 00 70 00 
             prompt = STRING_TOKEN(0x0416),
             help = STRING_TOKEN(0x0417),
             flags = 0,
             key = 0;
    endif;
>0000362B: 29 02 
    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 17;
>0000362D: 0A 82 
>0000362F: 12 06 07 20 11 00 
         goto 0x71,
>00003635: 0F 0F 18 04 19 04 47 01 00 00 FF FF 00 71 00 
             prompt = STRING_TOKEN(0x0418),
             help = STRING_TOKEN(0x0419),
             flags = 0,
             key = 0;
    endif;
>00003644: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 18 OR
>00003646: 0A 82 
>00003648: 12 86 07 20 12 00 
>00003656: 16 02 
>00003658: 29 02 
               NOT ideqval SYSTEM_CONFIGURATION.PciePortConfig5 == 0;
>0000364E: 12 06 05 20 00 00 
>00003654: 17 02 
         goto 0x72,
>0000365A: 0F 0F 1A 04 1B 04 48 01 00 00 FF FF 00 72 00 
             prompt = STRING_TOKEN(0x041A),
             help = STRING_TOKEN(0x041B),
             flags = 0,
             key = 0;
    endif;
>00003669: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 19 OR
>0000366B: 0A 82 
>0000366D: 12 86 07 20 13 00 
>00003679: 16 02 
>0000367B: 29 02 
               ideqval SYSTEM_CONFIGURATION.PciePortConfig5 == 3;
>00003673: 12 06 05 20 03 00 
         goto 0x73,
>0000367D: 0F 0F 1C 04 1D 04 49 01 00 00 FF FF 00 73 00 
             prompt = STRING_TOKEN(0x041C),
             help = STRING_TOKEN(0x041D),
             flags = 0,
             key = 0;
    endif;
>0000368C: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.GbePciePortNum == 20 OR
>0000368E: 0A 82 
>00003690: 12 86 07 20 14 00 
>0000369C: 16 02 
>000036A6: 29 02 
               ideqval SYSTEM_CONFIGURATION.PciePortConfig5 == 3 OR
>00003696: 12 06 05 20 03 00 
>000036A4: 16 02 
               ideqval SYSTEM_CONFIGURATION.PciePortConfig5 == 2;
>0000369E: 12 06 05 20 02 00 
         goto 0x74,
>000036A8: 0F 0F 1E 04 1F 04 4A 01 00 00 FF FF 00 74 00 
             prompt = STRING_TOKEN(0x041E),
             help = STRING_TOKEN(0x041F),
             flags = 0,
             key = 0;

    endif;
>000036B7: 29 02 

  endform;
>000036B9: 29 02 



  form formid = 0x124,
>000036BB: 01 86 24 01 9E 05 
    title     = STRING_TOKEN(0x059E);

    goto 0x121,
>000036C1: 0F 0F A0 05 A1 05 4B 01 00 00 FF FF 00 21 01 
      prompt = STRING_TOKEN(0x05A0),
      help   = STRING_TOKEN(0x05A1);

    goto 0x125,
>000036D0: 0F 0F 09 06 0A 06 4C 01 00 00 FF FF 00 25 01 
      prompt = STRING_TOKEN(0x0609),
      help   = STRING_TOKEN(0x060A);

    goto 0x126,
>000036DF: 0F 0F CA 05 CB 05 4D 01 00 00 FF FF 00 26 01 
      prompt = STRING_TOKEN(0x05CA),
      help   = STRING_TOKEN(0x05CB);
  endform;
>000036EE: 29 02 

  form formid = 0x126,
>000036F0: 01 86 26 01 CA 05 
    title     = STRING_TOKEN(0x05CA);

    subtitle text = STRING_TOKEN(0x05F5);
>000036F6: 02 87 F5 05 00 00 00 
>000036FD: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[0],
>000036FF: 05 91 CC 05 E0 05 4E 01 02 00 4E 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05CC),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00003710: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>00003717: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>0000371E: 09 07 A8 00 30 00 02 
    endoneof;
>00003725: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[0] == 0;
>00003727: 0A 82 
>00003729: 12 06 4E 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[0],
>0000372F: 07 91 E1 05 F7 02 4F 01 02 00 62 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05E1),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>00003740: 5B 06 00 00 00 08 
      endnumeric;
>00003746: 29 02 
    endif;
>00003748: 29 02 

    subtitle text = STRING_TOKEN(0x05F6);
>0000374A: 02 87 F6 05 00 00 00 
>00003751: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[1],
>00003753: 05 91 CD 05 E0 05 50 01 02 00 4F 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05CD),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00003764: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>0000376B: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>00003772: 09 07 A8 00 30 00 02 
    endoneof;
>00003779: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[1] == 0;
>0000377B: 0A 82 
>0000377D: 12 06 50 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[1],
>00003783: 07 91 E2 05 F7 02 51 01 02 00 63 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05E2),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>00003794: 5B 06 00 00 00 08 
      endnumeric;
>0000379A: 29 02 
    endif;
>0000379C: 29 02 

    subtitle text = STRING_TOKEN(0x05F7);
>0000379E: 02 87 F7 05 00 00 00 
>000037A5: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[2],
>000037A7: 05 91 CE 05 E0 05 52 01 02 00 50 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05CE),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000037B8: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>000037BF: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>000037C6: 09 07 A8 00 30 00 02 
    endoneof;
>000037CD: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[2] == 0;
>000037CF: 0A 82 
>000037D1: 12 06 52 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[2],
>000037D7: 07 91 E3 05 F7 02 53 01 02 00 64 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05E3),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>000037E8: 5B 06 00 00 00 08 
      endnumeric;
>000037EE: 29 02 
    endif;
>000037F0: 29 02 

    subtitle text = STRING_TOKEN(0x05F8);
>000037F2: 02 87 F8 05 00 00 00 
>000037F9: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[3],
>000037FB: 05 91 CF 05 E0 05 54 01 02 00 51 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05CF),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000380C: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>00003813: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>0000381A: 09 07 A8 00 30 00 02 
    endoneof;
>00003821: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[3] == 0;
>00003823: 0A 82 
>00003825: 12 06 54 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[3],
>0000382B: 07 91 E4 05 F7 02 55 01 02 00 65 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05E4),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>0000383C: 5B 06 00 00 00 08 
      endnumeric;
>00003842: 29 02 
    endif;
>00003844: 29 02 

    subtitle text = STRING_TOKEN(0x05F9);
>00003846: 02 87 F9 05 00 00 00 
>0000384D: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[4],
>0000384F: 05 91 D0 05 E0 05 56 01 02 00 52 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05D0),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00003860: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>00003867: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>0000386E: 09 07 A8 00 30 00 02 
    endoneof;
>00003875: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[4] == 0;
>00003877: 0A 82 
>00003879: 12 06 56 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[4],
>0000387F: 07 91 E5 05 F7 02 57 01 02 00 66 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05E5),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>00003890: 5B 06 00 00 00 08 
      endnumeric;
>00003896: 29 02 
    endif;
>00003898: 29 02 

    subtitle text = STRING_TOKEN(0x05FA);
>0000389A: 02 87 FA 05 00 00 00 
>000038A1: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[5],
>000038A3: 05 91 D1 05 E0 05 58 01 02 00 53 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05D1),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000038B4: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>000038BB: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>000038C2: 09 07 A8 00 30 00 02 
    endoneof;
>000038C9: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[5] == 0;
>000038CB: 0A 82 
>000038CD: 12 06 58 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[5],
>000038D3: 07 91 E6 05 F7 02 59 01 02 00 67 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05E6),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>000038E4: 5B 06 00 00 00 08 
      endnumeric;
>000038EA: 29 02 
    endif;
>000038EC: 29 02 

    subtitle text = STRING_TOKEN(0x05FB);
>000038EE: 02 87 FB 05 00 00 00 
>000038F5: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[6],
>000038F7: 05 91 D2 05 E0 05 5A 01 02 00 54 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05D2),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00003908: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>0000390F: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>00003916: 09 07 A8 00 30 00 02 
    endoneof;
>0000391D: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[6] == 0;
>0000391F: 0A 82 
>00003921: 12 06 5A 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[6],
>00003927: 07 91 E7 05 F7 02 5B 01 02 00 68 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05E7),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>00003938: 5B 06 00 00 00 08 
      endnumeric;
>0000393E: 29 02 
    endif;
>00003940: 29 02 

    subtitle text = STRING_TOKEN(0x05FC);
>00003942: 02 87 FC 05 00 00 00 
>00003949: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[7],
>0000394B: 05 91 D3 05 E0 05 5C 01 02 00 55 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05D3),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000395C: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>00003963: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>0000396A: 09 07 A8 00 30 00 02 
    endoneof;
>00003971: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[7] == 0;
>00003973: 0A 82 
>00003975: 12 06 5C 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[7],
>0000397B: 07 91 E8 05 F7 02 5D 01 02 00 69 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05E8),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>0000398C: 5B 06 00 00 00 08 
      endnumeric;
>00003992: 29 02 
    endif;
>00003994: 29 02 

    subtitle text = STRING_TOKEN(0x05FD);
>00003996: 02 87 FD 05 00 00 00 
>0000399D: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[8],
>0000399F: 05 91 D4 05 E0 05 5E 01 02 00 56 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05D4),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000039B0: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>000039B7: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>000039BE: 09 07 A8 00 30 00 02 
    endoneof;
>000039C5: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[8] == 0;
>000039C7: 0A 82 
>000039C9: 12 06 5E 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[8],
>000039CF: 07 91 E9 05 F7 02 5F 01 02 00 6A 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05E9),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>000039E0: 5B 06 00 00 00 08 
      endnumeric;
>000039E6: 29 02 
    endif;
>000039E8: 29 02 

    subtitle text = STRING_TOKEN(0x05FE);
>000039EA: 02 87 FE 05 00 00 00 
>000039F1: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[9],
>000039F3: 05 91 D5 05 E0 05 60 01 02 00 57 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05D5),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00003A04: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>00003A0B: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>00003A12: 09 07 A8 00 30 00 02 
    endoneof;
>00003A19: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[9] == 0;
>00003A1B: 0A 82 
>00003A1D: 12 06 60 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[9],
>00003A23: 07 91 EA 05 F7 02 61 01 02 00 6B 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05EA),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>00003A34: 5B 06 00 00 00 08 
      endnumeric;
>00003A3A: 29 02 
    endif;
>00003A3C: 29 02 

    subtitle text = STRING_TOKEN(0x05FF);
>00003A3E: 02 87 FF 05 00 00 00 
>00003A45: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[10],
>00003A47: 05 91 D6 05 E0 05 62 01 02 00 58 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05D6),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00003A58: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>00003A5F: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>00003A66: 09 07 A8 00 30 00 02 
    endoneof;
>00003A6D: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[10] == 0;
>00003A6F: 0A 82 
>00003A71: 12 06 62 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[10],
>00003A77: 07 91 EB 05 F7 02 63 01 02 00 6C 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05EB),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>00003A88: 5B 06 00 00 00 08 
      endnumeric;
>00003A8E: 29 02 
    endif;
>00003A90: 29 02 

    subtitle text = STRING_TOKEN(0x0600);
>00003A92: 02 87 00 06 00 00 00 
>00003A99: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[11],
>00003A9B: 05 91 D7 05 E0 05 64 01 02 00 59 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05D7),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00003AAC: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>00003AB3: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>00003ABA: 09 07 A8 00 30 00 02 
    endoneof;
>00003AC1: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[11] == 0;
>00003AC3: 0A 82 
>00003AC5: 12 06 64 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[11],
>00003ACB: 07 91 EC 05 F7 02 65 01 02 00 6D 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05EC),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>00003ADC: 5B 06 00 00 00 08 
      endnumeric;
>00003AE2: 29 02 
    endif;
>00003AE4: 29 02 

    subtitle text = STRING_TOKEN(0x0601);
>00003AE6: 02 87 01 06 00 00 00 
>00003AED: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[12],
>00003AEF: 05 91 D8 05 E0 05 66 01 02 00 5A 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05D8),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00003B00: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>00003B07: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>00003B0E: 09 07 A8 00 30 00 02 
    endoneof;
>00003B15: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[12] == 0;
>00003B17: 0A 82 
>00003B19: 12 06 66 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[12],
>00003B1F: 07 91 ED 05 F7 02 67 01 02 00 6E 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05ED),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>00003B30: 5B 06 00 00 00 08 
      endnumeric;
>00003B36: 29 02 
    endif;
>00003B38: 29 02 

    subtitle text = STRING_TOKEN(0x0602);
>00003B3A: 02 87 02 06 00 00 00 
>00003B41: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[13],
>00003B43: 05 91 D9 05 E0 05 68 01 02 00 5B 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05D9),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00003B54: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>00003B5B: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>00003B62: 09 07 A8 00 30 00 02 
    endoneof;
>00003B69: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[13] == 0;
>00003B6B: 0A 82 
>00003B6D: 12 06 68 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[13],
>00003B73: 07 91 EE 05 F7 02 69 01 02 00 6F 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05EE),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>00003B84: 5B 06 00 00 00 08 
      endnumeric;
>00003B8A: 29 02 
    endif;
>00003B8C: 29 02 

    subtitle text = STRING_TOKEN(0x0603);
>00003B8E: 02 87 03 06 00 00 00 
>00003B95: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[14],
>00003B97: 05 91 DA 05 E0 05 6A 01 02 00 5C 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05DA),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00003BA8: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>00003BAF: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>00003BB6: 09 07 A8 00 30 00 02 
    endoneof;
>00003BBD: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[14] == 0;
>00003BBF: 0A 82 
>00003BC1: 12 06 6A 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[14],
>00003BC7: 07 91 EF 05 F7 02 6B 01 02 00 70 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05EF),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>00003BD8: 5B 06 00 00 00 08 
      endnumeric;
>00003BDE: 29 02 
    endif;
>00003BE0: 29 02 

    subtitle text = STRING_TOKEN(0x0604);
>00003BE2: 02 87 04 06 00 00 00 
>00003BE9: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[15],
>00003BEB: 05 91 DB 05 E0 05 6C 01 02 00 5D 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05DB),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00003BFC: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>00003C03: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>00003C0A: 09 07 A8 00 30 00 02 
    endoneof;
>00003C11: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[15] == 0;
>00003C13: 0A 82 
>00003C15: 12 06 6C 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[15],
>00003C1B: 07 91 F0 05 F7 02 6D 01 02 00 71 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05F0),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>00003C2C: 5B 06 00 00 00 08 
      endnumeric;
>00003C32: 29 02 
    endif;
>00003C34: 29 02 

    subtitle text = STRING_TOKEN(0x0605);
>00003C36: 02 87 05 06 00 00 00 
>00003C3D: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[16],
>00003C3F: 05 91 DC 05 E0 05 6E 01 02 00 5E 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05DC),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00003C50: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>00003C57: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>00003C5E: 09 07 A8 00 30 00 02 
    endoneof;
>00003C65: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[16] == 0;
>00003C67: 0A 82 
>00003C69: 12 06 6E 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[16],
>00003C6F: 07 91 F1 05 F7 02 6F 01 02 00 72 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05F1),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>00003C80: 5B 06 00 00 00 08 
      endnumeric;
>00003C86: 29 02 
    endif;
>00003C88: 29 02 

    subtitle text = STRING_TOKEN(0x0606);
>00003C8A: 02 87 06 06 00 00 00 
>00003C91: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[17],
>00003C93: 05 91 DD 05 E0 05 70 01 02 00 5F 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05DD),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00003CA4: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>00003CAB: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>00003CB2: 09 07 A8 00 30 00 02 
    endoneof;
>00003CB9: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[17] == 0;
>00003CBB: 0A 82 
>00003CBD: 12 06 70 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[17],
>00003CC3: 07 91 F2 05 F7 02 71 01 02 00 73 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05F2),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>00003CD4: 5B 06 00 00 00 08 
      endnumeric;
>00003CDA: 29 02 
    endif;
>00003CDC: 29 02 

    subtitle text = STRING_TOKEN(0x0607);
>00003CDE: 02 87 07 06 00 00 00 
>00003CE5: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[18],
>00003CE7: 05 91 DE 05 E0 05 72 01 02 00 60 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05DE),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00003CF8: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>00003CFF: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>00003D06: 09 07 A8 00 30 00 02 
    endoneof;
>00003D0D: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[18] == 0;
>00003D0F: 0A 82 
>00003D11: 12 06 72 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[18],
>00003D17: 07 91 F3 05 F7 02 73 01 02 00 74 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05F3),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>00003D28: 5B 06 00 00 00 08 
      endnumeric;
>00003D2E: 29 02 
    endif;
>00003D30: 29 02 

    subtitle text = STRING_TOKEN(0x0608);
>00003D32: 02 87 08 06 00 00 00 
>00003D39: 29 02 
    oneof varid   = PCH_SETUP.TestPchPcieEqPh2Override[19],
>00003D3B: 05 91 DF 05 E0 05 74 01 02 00 61 02 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x05DF),
      help        = STRING_TOKEN(0x05E0),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00003D4C: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>00003D53: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = DEFAULT | MANUFACTURING |  RESET_REQUIRED;
>00003D5A: 09 07 A8 00 30 00 02 
    endoneof;
>00003D61: 29 02 
    suppressif ideqval PCH_SETUP.TestPchPcieEqPh2Override[19] == 0;
>00003D63: 0A 82 
>00003D65: 12 06 74 01 00 00 
      numeric varid = PCH_SETUP.TestPchPcieEqPh2Preset[19],
>00003D6B: 07 91 F4 05 F7 02 75 01 02 00 75 02 00 10 00 0A 01 
        prompt      = STRING_TOKEN (0x05F4),
        help        = STRING_TOKEN (0x02F7),
        minimum     = 0,
        maximum     = 10,
        step        = 1,
        default     = 8,
>00003D7C: 5B 06 00 00 00 08 
      endnumeric;
>00003D82: 29 02 
    endif;
>00003D84: 29 02 

  endform;
>00003D86: 29 02 




  form formid = 0x121,
>00003D88: 01 86 21 01 A0 05 
    title     = STRING_TOKEN(0x05A0);

    numeric varid = PCH_SETUP.PcieLaneCm[0],
>00003D8E: 07 91 A2 05 F7 02 76 01 02 00 1B 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05A2),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003D9F: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003DA5: 5B 06 01 00 00 06 
    endnumeric;
>00003DAB: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[0],
>00003DAD: 07 91 B6 05 F7 02 77 01 02 00 2F 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05B6),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003DBE: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003DC4: 5B 06 01 00 00 06 
    endnumeric;
>00003DCA: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[1],
>00003DCC: 07 91 A3 05 F7 02 78 01 02 00 1C 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05A3),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003DDD: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003DE3: 5B 06 01 00 00 06 
    endnumeric;
>00003DE9: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[1],
>00003DEB: 07 91 B7 05 F7 02 79 01 02 00 30 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05B7),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003DFC: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003E02: 5B 06 01 00 00 06 
    endnumeric;
>00003E08: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[2],
>00003E0A: 07 91 A4 05 F7 02 7A 01 02 00 1D 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05A4),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003E1B: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003E21: 5B 06 01 00 00 06 
    endnumeric;
>00003E27: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[2],
>00003E29: 07 91 B8 05 F7 02 7B 01 02 00 31 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05B8),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003E3A: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003E40: 5B 06 01 00 00 06 
    endnumeric;
>00003E46: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[3],
>00003E48: 07 91 A5 05 F7 02 7C 01 02 00 1E 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05A5),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003E59: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003E5F: 5B 06 01 00 00 06 
    endnumeric;
>00003E65: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[3],
>00003E67: 07 91 B9 05 F7 02 7D 01 02 00 32 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05B9),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003E78: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003E7E: 5B 06 01 00 00 06 
    endnumeric;
>00003E84: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[4],
>00003E86: 07 91 A6 05 F7 02 7E 01 02 00 1F 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05A6),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003E97: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003E9D: 5B 06 01 00 00 06 
    endnumeric;
>00003EA3: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[4],
>00003EA5: 07 91 BA 05 F7 02 7F 01 02 00 33 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05BA),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003EB6: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003EBC: 5B 06 01 00 00 06 
    endnumeric;
>00003EC2: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[5],
>00003EC4: 07 91 A7 05 F7 02 80 01 02 00 20 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05A7),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003ED5: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003EDB: 5B 06 01 00 00 06 
    endnumeric;
>00003EE1: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[5],
>00003EE3: 07 91 BB 05 F7 02 81 01 02 00 34 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05BB),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003EF4: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003EFA: 5B 06 01 00 00 06 
    endnumeric;
>00003F00: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[6],
>00003F02: 07 91 A8 05 F7 02 82 01 02 00 21 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05A8),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003F13: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003F19: 5B 06 01 00 00 06 
    endnumeric;
>00003F1F: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[6],
>00003F21: 07 91 BC 05 F7 02 83 01 02 00 35 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05BC),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003F32: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003F38: 5B 06 01 00 00 06 
    endnumeric;
>00003F3E: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[7],
>00003F40: 07 91 A9 05 F7 02 84 01 02 00 22 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05A9),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003F51: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003F57: 5B 06 01 00 00 06 
    endnumeric;
>00003F5D: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[7],
>00003F5F: 07 91 BD 05 F7 02 85 01 02 00 36 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05BD),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003F70: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003F76: 5B 06 01 00 00 06 
    endnumeric;
>00003F7C: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[8],
>00003F7E: 07 91 AA 05 F7 02 86 01 02 00 23 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05AA),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003F8F: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003F95: 5B 06 01 00 00 06 
    endnumeric;
>00003F9B: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[8],
>00003F9D: 07 91 BE 05 F7 02 87 01 02 00 37 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05BE),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003FAE: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003FB4: 5B 06 01 00 00 06 
    endnumeric;
>00003FBA: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[9],
>00003FBC: 07 91 AB 05 F7 02 88 01 02 00 24 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05AB),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003FCD: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003FD3: 5B 06 01 00 00 06 
    endnumeric;
>00003FD9: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[9],
>00003FDB: 07 91 BF 05 F7 02 89 01 02 00 38 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05BF),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00003FEC: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00003FF2: 5B 06 01 00 00 06 
    endnumeric;
>00003FF8: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[10],
>00003FFA: 07 91 AC 05 F7 02 8A 01 02 00 25 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05AC),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>0000400B: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00004011: 5B 06 01 00 00 06 
    endnumeric;
>00004017: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[10],
>00004019: 07 91 C0 05 F7 02 8B 01 02 00 39 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05C0),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>0000402A: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00004030: 5B 06 01 00 00 06 
    endnumeric;
>00004036: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[11],
>00004038: 07 91 AD 05 F7 02 8C 01 02 00 26 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05AD),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00004049: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>0000404F: 5B 06 01 00 00 06 
    endnumeric;
>00004055: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[11],
>00004057: 07 91 C1 05 F7 02 8D 01 02 00 3A 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05C1),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00004068: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>0000406E: 5B 06 01 00 00 06 
    endnumeric;
>00004074: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[12],
>00004076: 07 91 AE 05 F7 02 8E 01 02 00 27 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05AE),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00004087: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>0000408D: 5B 06 01 00 00 06 
    endnumeric;
>00004093: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[12],
>00004095: 07 91 C2 05 F7 02 8F 01 02 00 3B 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05C2),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>000040A6: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>000040AC: 5B 06 01 00 00 06 
    endnumeric;
>000040B2: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[13],
>000040B4: 07 91 AF 05 F7 02 90 01 02 00 28 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05AF),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>000040C5: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>000040CB: 5B 06 01 00 00 06 
    endnumeric;
>000040D1: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[13],
>000040D3: 07 91 C3 05 F7 02 91 01 02 00 3C 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05C3),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>000040E4: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>000040EA: 5B 06 01 00 00 06 
    endnumeric;
>000040F0: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[14],
>000040F2: 07 91 B0 05 F7 02 92 01 02 00 29 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05B0),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00004103: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00004109: 5B 06 01 00 00 06 
    endnumeric;
>0000410F: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[14],
>00004111: 07 91 C4 05 F7 02 93 01 02 00 3D 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05C4),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00004122: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00004128: 5B 06 01 00 00 06 
    endnumeric;
>0000412E: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[15],
>00004130: 07 91 B1 05 F7 02 94 01 02 00 2A 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05B1),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00004141: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00004147: 5B 06 01 00 00 06 
    endnumeric;
>0000414D: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[15],
>0000414F: 07 91 C5 05 F7 02 95 01 02 00 3E 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05C5),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00004160: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00004166: 5B 06 01 00 00 06 
    endnumeric;
>0000416C: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[16],
>0000416E: 07 91 B2 05 F7 02 96 01 02 00 2B 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05B2),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>0000417F: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00004185: 5B 06 01 00 00 06 
    endnumeric;
>0000418B: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[16],
>0000418D: 07 91 C6 05 F7 02 97 01 02 00 3F 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05C6),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>0000419E: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>000041A4: 5B 06 01 00 00 06 
    endnumeric;
>000041AA: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[17],
>000041AC: 07 91 B3 05 F7 02 98 01 02 00 2C 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05B3),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>000041BD: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>000041C3: 5B 06 01 00 00 06 
    endnumeric;
>000041C9: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[17],
>000041CB: 07 91 C7 05 F7 02 99 01 02 00 40 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05C7),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>000041DC: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>000041E2: 5B 06 01 00 00 06 
    endnumeric;
>000041E8: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[18],
>000041EA: 07 91 B4 05 F7 02 9A 01 02 00 2D 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05B4),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>000041FB: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00004201: 5B 06 01 00 00 06 
    endnumeric;
>00004207: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[18],
>00004209: 07 91 C8 05 F7 02 9B 01 02 00 41 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05C8),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>0000421A: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>00004220: 5B 06 01 00 00 06 
    endnumeric;
>00004226: 29 02 

    numeric varid = PCH_SETUP.PcieLaneCm[19],
>00004228: 07 91 B5 05 F7 02 9C 01 02 00 2E 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05B5),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00004239: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>0000423F: 5B 06 01 00 00 06 
    endnumeric;
>00004245: 29 02 
    numeric varid = PCH_SETUP.PcieLaneCp[19],
>00004247: 07 91 C9 05 F7 02 9D 01 02 00 42 02 00 10 00 3F 01 
      prompt      = STRING_TOKEN (0x05C9),
      help        = STRING_TOKEN (0x02F7),
      minimum     = 0,
      maximum     = 63,
      step        = 1,
      default     = 6, defaultstore = MyStandardDefault,
>00004258: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>0000425E: 5B 06 01 00 00 06 
    endnumeric;
>00004264: 29 02 
  endform;
>00004266: 29 02 

  form formid = 0x125,
>00004268: 01 86 25 01 09 06 
  title     = STRING_TOKEN(0x0609);

    oneof varid   = PCH_SETUP.PcieSwEqOverride,
>0000426E: 05 91 0B 06 0C 06 9E 01 02 00 43 02 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x060B),
      help        = STRING_TOKEN(0x060C),
      option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000427F: 09 07 38 07 30 00 00 
      option text = STRING_TOKEN(0x0739), value = 1, flags = RESET_REQUIRED;
>00004286: 09 07 39 07 00 00 01 
    endoneof;
>0000428D: 29 02 

    suppressif ideqval PCH_SETUP.PcieSwEqOverride == 0;
>0000428F: 0A 82 
>00004291: 12 06 9E 01 00 00 
      numeric varid = PCH_SETUP.PcieSwEqCoeffCm[0],
>00004297: 07 91 0D 06 F7 02 9F 01 02 00 44 02 10 10 00 3F 01 
        prompt      = STRING_TOKEN(0x060D),
        help        = STRING_TOKEN(0x02F7),
        flags       = RESET_REQUIRED,
        minimum     = 0,
        maximum     = 63,
        step        = 1,
        default     = 6, defaultstore = MyStandardDefault,
>000042A8: 5B 06 00 00 00 06 
      default     = 6, defaultstore = MyManufactureDefault,
>000042AE: 5B 06 01 00 00 06 
      endnumeric;
>000042B4: 29 02 
      numeric varid = PCH_SETUP.PcieSwEqCoeffCp[0],
>000042B6: 07 91 12 06 F7 02 A0 01 02 00 49 02 10 10 00 3F 01 
        prompt      = STRING_TOKEN(0x0612),
        help        = STRING_TOKEN(0x02F7),
        flags       = RESET_REQUIRED,
        minimum     = 0,
        maximum     = 63,
        step        = 1,
        default     = 2, defaultstore = MyStandardDefault,
>000042C7: 5B 06 00 00 00 02 
        default     = 2, defaultstore = MyManufactureDefault,
>000042CD: 5B 06 01 00 00 02 
      endnumeric;
>000042D3: 29 02 
      numeric varid = PCH_SETUP.PcieSwEqCoeffCm[1],
>000042D5: 07 91 0E 06 F7 02 A1 01 02 00 45 02 10 10 00 3F 01 
        prompt      = STRING_TOKEN(0x060E),
        help        = STRING_TOKEN(0x02F7),
        flags       = RESET_REQUIRED,
        minimum     = 0,
        maximum     = 63,
        step        = 1,
        default     = 4, defaultstore = MyStandardDefault,
>000042E6: 5B 06 00 00 00 04 
        default     = 4, defaultstore = MyManufactureDefault,
>000042EC: 5B 06 01 00 00 04 
      endnumeric;
>000042F2: 29 02 
      numeric varid = PCH_SETUP.PcieSwEqCoeffCp[1],
>000042F4: 07 91 13 06 F7 02 A2 01 02 00 4A 02 10 10 00 3F 01 
        prompt      = STRING_TOKEN(0x0613),
        help        = STRING_TOKEN(0x02F7),
        flags       = RESET_REQUIRED,
        minimum     = 0,
        maximum     = 63,
        step        = 1,
        default     = 2, defaultstore = MyStandardDefault,
>00004305: 5B 06 00 00 00 02 
        default     = 2, defaultstore = MyManufactureDefault,
>0000430B: 5B 06 01 00 00 02 
      endnumeric;
>00004311: 29 02 
      numeric varid = PCH_SETUP.PcieSwEqCoeffCm[2],
>00004313: 07 91 0F 06 F7 02 A3 01 02 00 46 02 10 10 00 3F 01 
        prompt      = STRING_TOKEN(0x060F),
        help        = STRING_TOKEN(0x02F7),
        flags       = RESET_REQUIRED,
        minimum     = 0,
        maximum     = 63,
        step        = 1,
        default     = 8, defaultstore = MyStandardDefault,
>00004324: 5B 06 00 00 00 08 
        default     = 8, defaultstore = MyManufactureDefault,
>0000432A: 5B 06 01 00 00 08 
      endnumeric;
>00004330: 29 02 
      numeric varid = PCH_SETUP.PcieSwEqCoeffCp[2],
>00004332: 07 91 14 06 F7 02 A4 01 02 00 4B 02 10 10 00 3F 01 
        prompt      = STRING_TOKEN(0x0614),
        help        = STRING_TOKEN(0x02F7),
        flags       = RESET_REQUIRED,
        minimum     = 0,
        maximum     = 63,
        step        = 1,
        default     = 2, defaultstore = MyStandardDefault,
>00004343: 5B 06 00 00 00 02 
        default     = 2, defaultstore = MyManufactureDefault,
>00004349: 5B 06 01 00 00 02 
      endnumeric;
>0000434F: 29 02 
      numeric varid = PCH_SETUP.PcieSwEqCoeffCm[3],
>00004351: 07 91 10 06 F7 02 A5 01 02 00 47 02 10 10 00 3F 01 
        prompt      = STRING_TOKEN(0x0610),
        help        = STRING_TOKEN(0x02F7),
        flags       = RESET_REQUIRED,
        minimum     = 0,
        maximum     = 63,
        step        = 1,
        default     = 2, defaultstore = MyStandardDefault,
>00004362: 5B 06 00 00 00 02 
        default     = 2, defaultstore = MyManufactureDefault,
>00004368: 5B 06 01 00 00 02 
      endnumeric;
>0000436E: 29 02 
      numeric varid = PCH_SETUP.PcieSwEqCoeffCp[3],
>00004370: 07 91 15 06 F7 02 A6 01 02 00 4C 02 10 10 00 3F 01 
        prompt      = STRING_TOKEN(0x0615),
        help        = STRING_TOKEN(0x02F7),
        flags       = RESET_REQUIRED,
        minimum     = 0,
        maximum     = 63,
        step        = 1,
        default     = 2, defaultstore = MyStandardDefault,
>00004381: 5B 06 00 00 00 02 
        default     = 2, defaultstore = MyManufactureDefault,
>00004387: 5B 06 01 00 00 02 
      endnumeric;
>0000438D: 29 02 
      numeric varid = PCH_SETUP.PcieSwEqCoeffCm[4],
>0000438F: 07 91 11 06 F7 02 A7 01 02 00 48 02 10 10 00 3F 01 
        prompt      = STRING_TOKEN(0x0611),
        help        = STRING_TOKEN(0x02F7),
        flags       = RESET_REQUIRED,
        minimum     = 0,
        maximum     = 63,
        step        = 1,
        default     = 10, defaultstore = MyStandardDefault,
>000043A0: 5B 06 00 00 00 0A 
        default     = 10, defaultstore = MyManufactureDefault,
>000043A6: 5B 06 01 00 00 0A 
      endnumeric;
>000043AC: 29 02 
      numeric varid = PCH_SETUP.PcieSwEqCoeffCp[4],
>000043AE: 07 91 16 06 F7 02 A8 01 02 00 4D 02 10 10 00 3F 01 
        prompt      = STRING_TOKEN(0x0616),
        help        = STRING_TOKEN(0x02F7),
        flags       = RESET_REQUIRED,
        minimum     = 0,
        maximum     = 63,
        step        = 1,
        default     = 2, defaultstore = MyStandardDefault,
>000043BF: 5B 06 00 00 00 02 
        default     = 2, defaultstore = MyManufactureDefault,
>000043C5: 5B 06 01 00 00 02 
      endnumeric;
>000043CB: 29 02 
    endif;
>000043CD: 29 02 

  endform;
>000043CF: 29 02 

  form formid = 0x62,
>000043D1: 01 86 62 00 F8 03 

    title     = STRING_TOKEN(0x03F8);

    checkbox varid    = PCH_SETUP.PcieRootPortEn[0],
>000043D7: 06 8E 2F 04 44 04 A9 01 02 00 53 01 00 03 
             prompt   = STRING_TOKEN(0x042F),
             help     = STRING_TOKEN(0x0444),
             
             
             flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
    endcheckbox;
>000043E5: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[0] == 0x0;
>000043E7: 0A 82 
>000043E9: 12 06 A9 01 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>000043EF: 0A 82 
>000043F1: 12 06 29 01 02 00 
#line 3509 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
        oneof varid    = PCH_SETUP.PcieRootPortAspm[0],
>000043F7: 05 91 47 04 48 04 AA 01 02 00 67 01 10 10 00 04 00 
               prompt   = STRING_TOKEN(0x0447),
               help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
>00004408: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>0000440F: 09 07 4B 04 00 00 02 




#line 3520 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
               option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>00004416: 09 07 4D 04 00 00 04 
        endoneof;
>0000441D: 29 02 

      endif;
>0000441F: 29 02 
#line 3525 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[0],
>00004421: 05 91 51 04 52 04 AB 01 02 00 57 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00004432: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>00004439: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>00004440: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004447: 09 07 55 04 30 00 03 
      endoneof;
>0000444E: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[0],
>00004450: 05 91 17 06 2B 06 AC 01 02 00 B6 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x0617),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>00004461: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>00004468: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>0000446F: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>00004476: 09 07 2E 06 00 00 02 
      endoneof;
>0000447D: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[0],
>0000447F: 05 91 30 06 44 06 AD 01 02 00 A2 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0630),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00004490: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004497: 09 07 39 07 30 00 01 
      endoneof;
>0000449E: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[0],
>000044A0: 05 91 61 04 62 04 AE 01 02 00 7B 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000044B1: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000044B8: 09 07 F9 02 00 00 01 
      endoneof;
>000044BF: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[0],
>000044C1: 05 91 63 04 64 04 AF 01 02 00 8F 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000044D2: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000044D9: 09 07 F9 02 00 00 01 
      endoneof;
>000044E0: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[0],
>000044E2: 05 91 65 04 66 04 B0 01 02 00 A3 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000044F3: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000044FA: 09 07 F9 02 00 00 01 
      endoneof;
>00004501: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[0],
>00004503: 05 91 67 04 68 04 B1 01 02 00 B7 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004514: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000451B: 09 07 F9 02 00 00 01 
      endoneof;
>00004522: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[0],
>00004524: 05 91 78 04 79 04 B2 01 02 00 CB 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004535: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000453C: 09 07 F9 02 00 00 01 
      endoneof;
>00004543: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[0],
>00004545: 05 91 7A 04 7B 04 B3 01 02 00 DF 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004556: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000455D: 09 07 F9 02 00 00 01 
      endoneof;
>00004564: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[0],
>00004566: 05 91 7C 04 7D 04 B4 01 02 00 F3 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004577: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000457E: 09 07 F9 02 00 00 01 
      endoneof;
>00004585: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[0],
>00004587: 05 91 7E 04 7F 04 B5 01 02 00 07 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004598: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000459F: 09 07 F9 02 00 00 01 
      endoneof;
>000045A6: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[0],
>000045A8: 05 91 B9 04 BA 04 B6 01 02 00 1B 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000045B9: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000045C0: 09 07 F9 02 00 00 01 
      endoneof;
>000045C7: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[0],
>000045C9: 05 91 45 06 46 06 B7 01 02 00 F3 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000045DA: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000045E1: 09 07 39 07 30 00 01 
      endoneof;
>000045E8: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSpeed[0],
>000045EA: 05 91 56 04 57 04 B8 01 02 00 2F 03 10 10 00 03 00 
         prompt   = STRING_TOKEN(0x0456),
         help     = STRING_TOKEN(0x0457),
         option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000045FB: 09 07 A8 00 30 00 00 
         option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>00004602: 09 07 58 04 00 00 01 
         option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>00004609: 09 07 59 04 00 00 02 
         option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>00004610: 09 07 5A 04 00 00 03 
      endoneof;
>00004617: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[0],
>00004619: 05 91 80 04 81 04 B9 01 02 00 CB 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000462A: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004631: 09 07 39 07 30 00 01 
      endoneof;
>00004638: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[0],
>0000463A: 05 91 EE 06 02 07 BA 01 02 00 07 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06EE),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000464B: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>00004652: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>00004659: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>00004660: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>00004667: 09 07 07 07 00 00 04 
      endoneof;
>0000466E: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[0],
>00004670: 05 91 82 04 83 04 BB 01 02 00 DF 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),

        
        
        
        
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004681: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>00004688: 09 07 85 04 00 00 01 

      endoneof;
>0000468F: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[0],
>00004691: 05 91 69 04 6A 04 BC 01 02 00 78 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>000046A2: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>000046A9: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>000046B0: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>000046B7: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>000046BE: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>000046C5: 09 07 A7 00 00 00 09 
      endoneof;
>000046CC: 29 02 

      text
>000046CE: 03 08 8F 04 AA 00 90 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x0490),
        flags  = 0, key = 0;

      text
>000046D6: 03 08 A4 04 AA 00 A5 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04A5),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>000046DE: 02 87 57 06 00 00 00 
>000046E5: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[0],
>000046E7: 05 91 58 06 6C 06 BD 01 02 00 7E 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0658),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>000046F8: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000046FF: 09 07 39 07 30 00 01 
      endoneof;
>00004706: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[0] == 0;
>00004708: 0A 82 
>0000470A: 12 06 BD 01 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[0],
>00004710: 05 91 6D 06 D3 06 BE 01 02 00 A6 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066D),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00004721: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00004728: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000472F: 09 07 F8 02 30 00 02 
        endoneof;
>00004736: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[0] == 1;
>00004738: 0A 82 
>0000473A: 12 86 BE 01 01 00 
>00004740: 17 02 
>00004742: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[0],
>00004744: 07 94 6F 06 D5 06 BF 01 02 00 F6 03 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x066F),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00004758: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>0000475F: 5B 07 01 00 01 3C 00 
          endnumeric;
>00004766: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[0],
>00004768: 05 91 70 06 D6 06 C0 01 02 00 BA 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x0670),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00004779: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00004780: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004787: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>0000478E: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00004795: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>0000479C: 09 07 56 06 00 00 05 
          endoneof;
>000047A3: 29 02 
        endif;
>000047A5: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[0],
>000047A7: 05 91 6E 06 D4 06 C1 01 02 00 CE 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000047B8: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>000047BF: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000047C6: 09 07 F8 02 30 00 02 
        endoneof;
>000047CD: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[0] == 1;
>000047CF: 0A 82 
>000047D1: 12 86 C1 01 01 00 
>000047D7: 17 02 
>000047D9: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[0],
>000047DB: 07 94 71 06 D7 06 C2 01 02 00 1E 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x0671),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>000047EF: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>000047F6: 5B 07 01 00 01 3C 00 
          endnumeric;
>000047FD: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[0],
>000047FF: 05 91 72 06 D8 06 C3 01 02 00 E2 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x0672),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00004810: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00004817: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000481E: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00004825: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>0000482C: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00004833: 09 07 56 06 00 00 05 
          endoneof;
>0000483A: 29 02 
        endif;
>0000483C: 29 02 
      endif;
>0000483E: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>00004840: 02 87 AA 00 00 00 00 
>00004847: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[0],
>00004849: 05 91 D9 06 ED 06 C4 01 02 00 92 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06D9),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000485A: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>00004861: 09 07 39 07 00 00 01 
      endoneof;
>00004868: 29 02 
     endif;
>0000486A: 29 02 
  endform;
>0000486C: 29 02 

  form formid = 0x63,
>0000486E: 01 86 63 00 FA 03 

    title     = STRING_TOKEN(0x03FA);


    checkbox varid    = PCH_SETUP.PcieRootPortEn[1],
>00004874: 06 8E 30 04 44 04 C5 01 02 00 54 01 00 03 
         prompt   = STRING_TOKEN(0x0430),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
    endcheckbox;
>00004882: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[1] == 0x0;
>00004884: 0A 82 
>00004886: 12 06 C5 01 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>0000488C: 0A 82 
>0000488E: 12 06 29 01 02 00 
#line 3784 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
      oneof varid    = PCH_SETUP.PcieRootPortAspm[1],
>00004894: 05 91 47 04 48 04 C6 01 02 00 68 01 10 10 00 04 00 
               prompt   = STRING_TOKEN(0x0447),
               help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
>000048A5: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>000048AC: 09 07 4B 04 00 00 02 




#line 3795 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
               option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>000048B3: 09 07 4D 04 00 00 04 
      endoneof;
>000048BA: 29 02 

      endif;
>000048BC: 29 02 
#line 3800 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[1],
>000048BE: 05 91 51 04 52 04 C7 01 02 00 58 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000048CF: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>000048D6: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>000048DD: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000048E4: 09 07 55 04 30 00 03 
      endoneof;
>000048EB: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[1],
>000048ED: 05 91 18 06 2B 06 C8 01 02 00 B7 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x0618),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>000048FE: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>00004905: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>0000490C: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>00004913: 09 07 2E 06 00 00 02 
      endoneof;
>0000491A: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[1],
>0000491C: 05 91 31 06 44 06 C9 01 02 00 A3 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0631),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000492D: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004934: 09 07 39 07 30 00 01 
      endoneof;
>0000493B: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[1],
>0000493D: 05 91 61 04 62 04 CA 01 02 00 7C 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000494E: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00004955: 09 07 F9 02 00 00 01 
      endoneof;
>0000495C: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[1],
>0000495E: 05 91 63 04 64 04 CB 01 02 00 90 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000496F: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00004976: 09 07 F9 02 00 00 01 
      endoneof;
>0000497D: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[1],
>0000497F: 05 91 65 04 66 04 CC 01 02 00 A4 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004990: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00004997: 09 07 F9 02 00 00 01 
      endoneof;
>0000499E: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[1],
>000049A0: 05 91 67 04 68 04 CD 01 02 00 B8 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000049B1: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000049B8: 09 07 F9 02 00 00 01 
      endoneof;
>000049BF: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[1],
>000049C1: 05 91 78 04 79 04 CE 01 02 00 CC 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000049D2: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000049D9: 09 07 F9 02 00 00 01 
      endoneof;
>000049E0: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[1],
>000049E2: 05 91 7A 04 7B 04 CF 01 02 00 E0 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000049F3: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000049FA: 09 07 F9 02 00 00 01 
      endoneof;
>00004A01: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[1],
>00004A03: 05 91 7C 04 7D 04 D0 01 02 00 F4 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004A14: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00004A1B: 09 07 F9 02 00 00 01 
      endoneof;
>00004A22: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[1],
>00004A24: 05 91 7E 04 7F 04 D1 01 02 00 08 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004A35: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00004A3C: 09 07 F9 02 00 00 01 
      endoneof;
>00004A43: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[1],
>00004A45: 05 91 B9 04 BA 04 D2 01 02 00 1C 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004A56: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00004A5D: 09 07 F9 02 00 00 01 
      endoneof;
>00004A64: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[1],
>00004A66: 05 91 45 06 46 06 D3 01 02 00 F4 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00004A77: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004A7E: 09 07 39 07 30 00 01 
      endoneof;
>00004A85: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[1],
>00004A87: 05 91 56 04 57 04 D4 01 02 00 30 03 10 10 00 03 00 
        prompt   = STRING_TOKEN (0x0456),
        help     = STRING_TOKEN (0x0457),
        option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004A98: 09 07 A8 00 30 00 00 
        option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>00004A9F: 09 07 58 04 00 00 01 
        option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>00004AA6: 09 07 59 04 00 00 02 
        option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>00004AAD: 09 07 5A 04 00 00 03 
      endoneof;
>00004AB4: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[1],
>00004AB6: 05 91 80 04 81 04 D5 01 02 00 CC 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00004AC7: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004ACE: 09 07 39 07 30 00 01 
      endoneof;
>00004AD5: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[1],
>00004AD7: 05 91 EF 06 02 07 D6 01 02 00 08 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06EF),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004AE8: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>00004AEF: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>00004AF6: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>00004AFD: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>00004B04: 09 07 07 07 00 00 04 
      endoneof;
>00004B0B: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[1],
>00004B0D: 05 91 82 04 83 04 D7 01 02 00 E0 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004B1E: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>00004B25: 09 07 85 04 00 00 01 
      endoneof;
>00004B2C: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[1],
>00004B2E: 05 91 69 04 6A 04 D8 01 02 00 79 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00004B3F: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>00004B46: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>00004B4D: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>00004B54: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>00004B5B: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>00004B62: 09 07 A7 00 00 00 09 
      endoneof;
>00004B69: 29 02 

      text
>00004B6B: 03 08 8F 04 AA 00 91 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x0491),
        flags  = 0, key = 0;

      text
>00004B73: 03 08 A4 04 AA 00 A6 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04A6),
        flags  = 0, key = 0;


      subtitle text = STRING_TOKEN(0x0657);
>00004B7B: 02 87 57 06 00 00 00 
>00004B82: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[1],
>00004B84: 05 91 59 06 6C 06 D9 01 02 00 7F 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0659),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>00004B95: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004B9C: 09 07 39 07 30 00 01 
      endoneof;
>00004BA3: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[1] == 0;
>00004BA5: 0A 82 
>00004BA7: 12 06 D9 01 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[1],
>00004BAD: 05 91 73 06 D3 06 DA 01 02 00 A7 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x0673),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00004BBE: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00004BC5: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004BCC: 09 07 F8 02 30 00 02 
        endoneof;
>00004BD3: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[1] == 1;
>00004BD5: 0A 82 
>00004BD7: 12 86 DA 01 01 00 
>00004BDD: 17 02 
>00004BDF: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[1],
>00004BE1: 07 94 74 06 D5 06 DB 01 02 00 F8 03 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x0674),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00004BF5: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00004BFC: 5B 07 01 00 01 3C 00 
          endnumeric;
>00004C03: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[1],
>00004C05: 05 91 75 06 D6 06 DC 01 02 00 BB 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x0675),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00004C16: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00004C1D: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004C24: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00004C2B: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00004C32: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00004C39: 09 07 56 06 00 00 05 
          endoneof;
>00004C40: 29 02 
        endif;
>00004C42: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[1],
>00004C44: 05 91 6E 06 D4 06 DD 01 02 00 CF 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00004C55: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00004C5C: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004C63: 09 07 F8 02 30 00 02 
        endoneof;
>00004C6A: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[1] == 1;
>00004C6C: 0A 82 
>00004C6E: 12 86 DD 01 01 00 
>00004C74: 17 02 
>00004C76: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[1],
>00004C78: 07 94 76 06 D7 06 DE 01 02 00 20 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x0676),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00004C8C: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00004C93: 5B 07 01 00 01 3C 00 
          endnumeric;
>00004C9A: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[1],
>00004C9C: 05 91 77 06 D8 06 DF 01 02 00 E3 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x0677),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00004CAD: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00004CB4: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004CBB: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00004CC2: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00004CC9: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00004CD0: 09 07 56 06 00 00 05 
          endoneof;
>00004CD7: 29 02 
        endif;
>00004CD9: 29 02 
      endif;
>00004CDB: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>00004CDD: 02 87 AA 00 00 00 00 
>00004CE4: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[1],
>00004CE6: 05 91 DA 06 ED 06 E0 01 02 00 93 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06DA),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004CF7: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>00004CFE: 09 07 39 07 00 00 01 
      endoneof;
>00004D05: 29 02 

    endif;
>00004D07: 29 02 

  endform;
>00004D09: 29 02 

  form formid = 0x64,
>00004D0B: 01 86 64 00 FC 03 

    title     = STRING_TOKEN(0x03FC);


    checkbox varid    = PCH_SETUP.PcieRootPortEn[2],
>00004D11: 06 8E 31 04 44 04 E1 01 02 00 55 01 00 03 
         prompt   = STRING_TOKEN(0x0431),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
    endcheckbox;
>00004D1F: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[2] == 0x0;
>00004D21: 0A 82 
>00004D23: 12 06 E1 01 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>00004D29: 0A 82 
>00004D2B: 12 06 29 01 02 00 
#line 4055 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
      oneof varid    = PCH_SETUP.PcieRootPortAspm[2],
>00004D31: 05 91 47 04 48 04 E2 01 02 00 69 01 10 10 00 04 00 
               prompt   = STRING_TOKEN(0x0447),
               help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004D42: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>00004D49: 09 07 4B 04 00 00 02 




#line 4066 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
               option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>00004D50: 09 07 4D 04 00 00 04 
      endoneof;
>00004D57: 29 02 

      endif;
>00004D59: 29 02 
#line 4071 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[2],
>00004D5B: 05 91 51 04 52 04 E3 01 02 00 59 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00004D6C: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>00004D73: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>00004D7A: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004D81: 09 07 55 04 30 00 03 
      endoneof;
>00004D88: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[2],
>00004D8A: 05 91 19 06 2B 06 E4 01 02 00 B8 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x0619),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>00004D9B: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>00004DA2: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>00004DA9: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>00004DB0: 09 07 2E 06 00 00 02 
      endoneof;
>00004DB7: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[2],
>00004DB9: 05 91 32 06 44 06 E5 01 02 00 A4 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0632),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00004DCA: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004DD1: 09 07 39 07 30 00 01 
      endoneof;
>00004DD8: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[2],
>00004DDA: 05 91 61 04 62 04 E6 01 02 00 7D 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004DEB: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00004DF2: 09 07 F9 02 00 00 01 
      endoneof;
>00004DF9: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[2],
>00004DFB: 05 91 63 04 64 04 E7 01 02 00 91 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004E0C: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00004E13: 09 07 F9 02 00 00 01 
      endoneof;
>00004E1A: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[2],
>00004E1C: 05 91 65 04 66 04 E8 01 02 00 A5 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004E2D: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00004E34: 09 07 F9 02 00 00 01 
      endoneof;
>00004E3B: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[2],
>00004E3D: 05 91 67 04 68 04 E9 01 02 00 B9 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004E4E: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00004E55: 09 07 F9 02 00 00 01 
      endoneof;
>00004E5C: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[2],
>00004E5E: 05 91 78 04 79 04 EA 01 02 00 CD 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004E6F: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00004E76: 09 07 F9 02 00 00 01 
      endoneof;
>00004E7D: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[2],
>00004E7F: 05 91 7A 04 7B 04 EB 01 02 00 E1 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004E90: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00004E97: 09 07 F9 02 00 00 01 
      endoneof;
>00004E9E: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[2],
>00004EA0: 05 91 7C 04 7D 04 EC 01 02 00 F5 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004EB1: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00004EB8: 09 07 F9 02 00 00 01 
      endoneof;
>00004EBF: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[2],
>00004EC1: 05 91 7E 04 7F 04 ED 01 02 00 09 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004ED2: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00004ED9: 09 07 F9 02 00 00 01 
      endoneof;
>00004EE0: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[2],
>00004EE2: 05 91 B9 04 BA 04 EE 01 02 00 1D 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004EF3: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00004EFA: 09 07 F9 02 00 00 01 
      endoneof;
>00004F01: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[2],
>00004F03: 05 91 45 06 46 06 EF 01 02 00 F5 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00004F14: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004F1B: 09 07 39 07 30 00 01 
      endoneof;
>00004F22: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[2],
>00004F24: 05 91 56 04 57 04 F0 01 02 00 31 03 10 10 00 03 00 
        prompt   = STRING_TOKEN (0x0456),
        help     = STRING_TOKEN (0x0457),
        option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004F35: 09 07 A8 00 30 00 00 
        option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>00004F3C: 09 07 58 04 00 00 01 
        option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>00004F43: 09 07 59 04 00 00 02 
        option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>00004F4A: 09 07 5A 04 00 00 03 
      endoneof;
>00004F51: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[2],
>00004F53: 05 91 80 04 81 04 F1 01 02 00 CD 01 10 10 00 01 00 
      prompt    = STRING_TOKEN(0x0480),
      help    = STRING_TOKEN(0x0481),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00004F64: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004F6B: 09 07 39 07 30 00 01 
      endoneof;
>00004F72: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[2],
>00004F74: 05 91 F0 06 02 07 F2 01 02 00 09 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06F0),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004F85: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>00004F8C: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>00004F93: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>00004F9A: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>00004FA1: 09 07 07 07 00 00 04 
      endoneof;
>00004FA8: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[2],
>00004FAA: 05 91 82 04 83 04 F3 01 02 00 E1 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00004FBB: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>00004FC2: 09 07 85 04 00 00 01 
      endoneof;
>00004FC9: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[2],
>00004FCB: 05 91 69 04 6A 04 F4 01 02 00 7A 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00004FDC: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>00004FE3: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>00004FEA: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>00004FF1: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>00004FF8: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>00004FFF: 09 07 A7 00 00 00 09 
      endoneof;
>00005006: 29 02 

      text
>00005008: 03 08 8F 04 AA 00 92 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x0492),
        flags  = 0, key = 0;

      text
>00005010: 03 08 A4 04 AA 00 A7 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04A7),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>00005018: 02 87 57 06 00 00 00 
>0000501F: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[2],
>00005021: 05 91 5A 06 6C 06 F5 01 02 00 80 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x065A),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>00005032: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005039: 09 07 39 07 30 00 01 
      endoneof;
>00005040: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[2] == 0;
>00005042: 0A 82 
>00005044: 12 06 F5 01 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[2],
>0000504A: 05 91 78 06 D3 06 F6 01 02 00 A8 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x0678),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000505B: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00005062: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005069: 09 07 F8 02 30 00 02 
        endoneof;
>00005070: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[2] == 1;
>00005072: 0A 82 
>00005074: 12 86 F6 01 01 00 
>0000507A: 17 02 
>0000507C: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[2],
>0000507E: 07 94 79 06 D5 06 F7 01 02 00 FA 03 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x0679),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00005092: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00005099: 5B 07 01 00 01 3C 00 
          endnumeric;
>000050A0: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[2],
>000050A2: 05 91 7A 06 D6 06 F8 01 02 00 BC 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x067A),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>000050B3: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>000050BA: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000050C1: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>000050C8: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>000050CF: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>000050D6: 09 07 56 06 00 00 05 
          endoneof;
>000050DD: 29 02 
        endif;
>000050DF: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[2],
>000050E1: 05 91 6E 06 D4 06 F9 01 02 00 D0 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000050F2: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>000050F9: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005100: 09 07 F8 02 30 00 02 
        endoneof;
>00005107: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[2] == 1;
>00005109: 0A 82 
>0000510B: 12 86 F9 01 01 00 
>00005111: 17 02 
>00005113: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[2],
>00005115: 07 94 7B 06 D7 06 FA 01 02 00 22 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x067B),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00005129: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00005130: 5B 07 01 00 01 3C 00 
          endnumeric;
>00005137: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[2],
>00005139: 05 91 7C 06 D8 06 FB 01 02 00 E4 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x067C),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>0000514A: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00005151: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005158: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>0000515F: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00005166: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>0000516D: 09 07 56 06 00 00 05 
          endoneof;
>00005174: 29 02 
        endif;
>00005176: 29 02 
      endif;
>00005178: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>0000517A: 02 87 AA 00 00 00 00 
>00005181: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[2],
>00005183: 05 91 DB 06 ED 06 FC 01 02 00 94 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06DB),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005194: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000519B: 09 07 39 07 00 00 01 
      endoneof;
>000051A2: 29 02 

    endif;
>000051A4: 29 02 
  endform;
>000051A6: 29 02 

  form formid = 0x65,
>000051A8: 01 86 65 00 FE 03 

    title     = STRING_TOKEN(0x03FE);

     checkbox varid    = PCH_SETUP.PcieRootPortEn[3],
>000051AE: 06 8E 32 04 44 04 FD 01 02 00 56 01 00 03 
         prompt   = STRING_TOKEN(0x0432),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
     endcheckbox;
>000051BC: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[3] == 0x0;
>000051BE: 0A 82 
>000051C0: 12 06 FD 01 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>000051C6: 0A 82 
>000051C8: 12 06 29 01 02 00 
#line 4323 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid   = PCH_SETUP.PcieRootPortAspm[3],
>000051CE: 05 91 47 04 48 04 FE 01 02 00 6A 01 10 10 00 04 00 
             prompt   = STRING_TOKEN(0x0447),
             help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000051DF: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>000051E6: 09 07 4B 04 00 00 02 




#line 4334 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
             option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>000051ED: 09 07 4D 04 00 00 04 
         endoneof;
>000051F4: 29 02 

     endif;
>000051F6: 29 02 
#line 4339 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[3],
>000051F8: 05 91 51 04 52 04 FF 01 02 00 5A 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00005209: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>00005210: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>00005217: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000521E: 09 07 55 04 30 00 03 
      endoneof;
>00005225: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[3],
>00005227: 05 91 1A 06 2B 06 00 02 02 00 B9 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x061A),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>00005238: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>0000523F: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>00005246: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>0000524D: 09 07 2E 06 00 00 02 
      endoneof;
>00005254: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[3],
>00005256: 05 91 33 06 44 06 01 02 02 00 A5 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0633),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00005267: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000526E: 09 07 39 07 30 00 01 
      endoneof;
>00005275: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[3],
>00005277: 05 91 61 04 62 04 02 02 02 00 7E 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005288: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000528F: 09 07 F9 02 00 00 01 
      endoneof;
>00005296: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[3],
>00005298: 05 91 63 04 64 04 03 02 02 00 92 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000052A9: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000052B0: 09 07 F9 02 00 00 01 
      endoneof;
>000052B7: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[3],
>000052B9: 05 91 65 04 66 04 04 02 02 00 A6 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000052CA: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000052D1: 09 07 F9 02 00 00 01 
      endoneof;
>000052D8: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[3],
>000052DA: 05 91 67 04 68 04 05 02 02 00 BA 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000052EB: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000052F2: 09 07 F9 02 00 00 01 
      endoneof;
>000052F9: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[3],
>000052FB: 05 91 78 04 79 04 06 02 02 00 CE 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000530C: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00005313: 09 07 F9 02 00 00 01 
      endoneof;
>0000531A: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[3],
>0000531C: 05 91 7A 04 7B 04 07 02 02 00 E2 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000532D: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00005334: 09 07 F9 02 00 00 01 
      endoneof;
>0000533B: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[3],
>0000533D: 05 91 7C 04 7D 04 08 02 02 00 F6 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000534E: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00005355: 09 07 F9 02 00 00 01 
      endoneof;
>0000535C: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[3],
>0000535E: 05 91 7E 04 7F 04 09 02 02 00 0A 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000536F: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00005376: 09 07 F9 02 00 00 01 
      endoneof;
>0000537D: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[3],
>0000537F: 05 91 B9 04 BA 04 0A 02 02 00 1E 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005390: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00005397: 09 07 F9 02 00 00 01 
      endoneof;
>0000539E: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[3],
>000053A0: 05 91 45 06 46 06 0B 02 02 00 F6 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000053B1: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000053B8: 09 07 39 07 30 00 01 
      endoneof;
>000053BF: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[3],
>000053C1: 05 91 56 04 57 04 0C 02 02 00 32 03 10 10 00 03 00 
         prompt   = STRING_TOKEN (0x0456),
         help     = STRING_TOKEN (0x0457),
         option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000053D2: 09 07 A8 00 30 00 00 
         option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>000053D9: 09 07 58 04 00 00 01 
         option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>000053E0: 09 07 59 04 00 00 02 
         option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>000053E7: 09 07 5A 04 00 00 03 
      endoneof;
>000053EE: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[3],
>000053F0: 05 91 80 04 81 04 0D 02 02 00 CE 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00005401: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005408: 09 07 39 07 30 00 01 
      endoneof;
>0000540F: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[3],
>00005411: 05 91 F1 06 02 07 0E 02 02 00 0A 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06F1),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005422: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>00005429: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>00005430: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>00005437: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>0000543E: 09 07 07 07 00 00 04 
      endoneof;
>00005445: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[3],
>00005447: 05 91 82 04 83 04 0F 02 02 00 E2 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005458: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>0000545F: 09 07 85 04 00 00 01 
      endoneof;
>00005466: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[3],
>00005468: 05 91 69 04 6A 04 10 02 02 00 7B 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00005479: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>00005480: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>00005487: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>0000548E: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>00005495: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>0000549C: 09 07 A7 00 00 00 09 
      endoneof;
>000054A3: 29 02 

      text
>000054A5: 03 08 8F 04 AA 00 93 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x0493),
        flags  = 0, key = 0;

      text
>000054AD: 03 08 A4 04 AA 00 A8 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04A8),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>000054B5: 02 87 57 06 00 00 00 
>000054BC: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[3],
>000054BE: 05 91 5B 06 6C 06 11 02 02 00 81 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x065B),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>000054CF: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000054D6: 09 07 39 07 30 00 01 
      endoneof;
>000054DD: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[3] == 0;
>000054DF: 0A 82 
>000054E1: 12 06 11 02 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[3],
>000054E7: 05 91 7D 06 D3 06 12 02 02 00 A9 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x067D),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000054F8: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>000054FF: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005506: 09 07 F8 02 30 00 02 
        endoneof;
>0000550D: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[3] == 1;
>0000550F: 0A 82 
>00005511: 12 86 12 02 01 00 
>00005517: 17 02 
>00005519: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[3],
>0000551B: 07 94 7E 06 D5 06 13 02 02 00 FC 03 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x067E),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>0000552F: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00005536: 5B 07 01 00 01 3C 00 
          endnumeric;
>0000553D: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[3],
>0000553F: 05 91 7F 06 D6 06 14 02 02 00 BD 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x067F),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00005550: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00005557: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000555E: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00005565: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>0000556C: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00005573: 09 07 56 06 00 00 05 
          endoneof;
>0000557A: 29 02 
        endif;
>0000557C: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[3],
>0000557E: 05 91 6E 06 D4 06 15 02 02 00 D1 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000558F: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00005596: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000559D: 09 07 F8 02 30 00 02 
        endoneof;
>000055A4: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[3] == 1;
>000055A6: 0A 82 
>000055A8: 12 86 15 02 01 00 
>000055AE: 17 02 
>000055B0: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[3],
>000055B2: 07 94 80 06 D7 06 16 02 02 00 24 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x0680),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>000055C6: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>000055CD: 5B 07 01 00 01 3C 00 
          endnumeric;
>000055D4: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[3],
>000055D6: 05 91 81 06 D8 06 17 02 02 00 E5 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x0681),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>000055E7: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>000055EE: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000055F5: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>000055FC: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00005603: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>0000560A: 09 07 56 06 00 00 05 
          endoneof;
>00005611: 29 02 
        endif;
>00005613: 29 02 
      endif;
>00005615: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>00005617: 02 87 AA 00 00 00 00 
>0000561E: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[3],
>00005620: 05 91 DC 06 ED 06 18 02 02 00 95 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06DC),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005631: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>00005638: 09 07 39 07 00 00 01 
      endoneof;
>0000563F: 29 02 

    endif;
>00005641: 29 02 
  endform;
>00005643: 29 02 

  form formid = 0x66,
>00005645: 01 86 66 00 00 04 

    title     = STRING_TOKEN(0x0400);

    checkbox varid    = PCH_SETUP.PcieRootPortEn[4],
>0000564B: 06 8E 33 04 44 04 19 02 02 00 57 01 00 03 
         prompt   = STRING_TOKEN(0x0433),
         help     = STRING_TOKEN(0x0444),
         
         
          flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
    endcheckbox;
>00005659: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[4] == 0x0;
>0000565B: 0A 82 
>0000565D: 12 06 19 02 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>00005663: 0A 82 
>00005665: 12 06 29 01 02 00 
#line 4592 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
      oneof varid    = PCH_SETUP.PcieRootPortAspm[4],
>0000566B: 05 91 47 04 48 04 1A 02 02 00 6B 01 10 10 00 04 00 
               prompt   = STRING_TOKEN(0x0447),
               help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000567C: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>00005683: 09 07 4B 04 00 00 02 




#line 4603 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
               option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>0000568A: 09 07 4D 04 00 00 04 
      endoneof;
>00005691: 29 02 

      endif;
>00005693: 29 02 
#line 4608 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[4],
>00005695: 05 91 51 04 52 04 1B 02 02 00 5B 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000056A6: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>000056AD: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>000056B4: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000056BB: 09 07 55 04 30 00 03 
      endoneof;
>000056C2: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[4],
>000056C4: 05 91 1B 06 2B 06 1C 02 02 00 BA 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x061B),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>000056D5: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>000056DC: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>000056E3: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>000056EA: 09 07 2E 06 00 00 02 
      endoneof;
>000056F1: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[4],
>000056F3: 05 91 34 06 44 06 1D 02 02 00 A6 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0634),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00005704: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000570B: 09 07 39 07 30 00 01 
      endoneof;
>00005712: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[4],
>00005714: 05 91 61 04 62 04 1E 02 02 00 7F 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005725: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000572C: 09 07 F9 02 00 00 01 
      endoneof;
>00005733: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[4],
>00005735: 05 91 63 04 64 04 1F 02 02 00 93 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005746: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000574D: 09 07 F9 02 00 00 01 
      endoneof;
>00005754: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[4],
>00005756: 05 91 65 04 66 04 20 02 02 00 A7 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005767: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000576E: 09 07 F9 02 00 00 01 
      endoneof;
>00005775: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[4],
>00005777: 05 91 67 04 68 04 21 02 02 00 BB 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005788: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000578F: 09 07 F9 02 00 00 01 
      endoneof;
>00005796: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[4],
>00005798: 05 91 78 04 79 04 22 02 02 00 CF 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000057A9: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000057B0: 09 07 F9 02 00 00 01 
      endoneof;
>000057B7: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[4],
>000057B9: 05 91 7A 04 7B 04 23 02 02 00 E3 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000057CA: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000057D1: 09 07 F9 02 00 00 01 
      endoneof;
>000057D8: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[4],
>000057DA: 05 91 7C 04 7D 04 24 02 02 00 F7 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000057EB: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000057F2: 09 07 F9 02 00 00 01 
      endoneof;
>000057F9: 29 02 


      oneof varid    = PCH_SETUP.PcieRootPortPMCE[4],
>000057FB: 05 91 7E 04 7F 04 25 02 02 00 0B 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000580C: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00005813: 09 07 F9 02 00 00 01 
      endoneof;
>0000581A: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[4],
>0000581C: 05 91 B9 04 BA 04 26 02 02 00 1F 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000582D: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00005834: 09 07 F9 02 00 00 01 
      endoneof;
>0000583B: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[4],
>0000583D: 05 91 45 06 46 06 27 02 02 00 F7 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000584E: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005855: 09 07 39 07 30 00 01 
      endoneof;
>0000585C: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[4],
>0000585E: 05 91 56 04 57 04 28 02 02 00 33 03 10 10 00 03 00 
        prompt   = STRING_TOKEN (0x0456),
        help     = STRING_TOKEN (0x0457),
        option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000586F: 09 07 A8 00 30 00 00 
        option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>00005876: 09 07 58 04 00 00 01 
        option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>0000587D: 09 07 59 04 00 00 02 
        option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>00005884: 09 07 5A 04 00 00 03 
      endoneof;
>0000588B: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[4],
>0000588D: 05 91 80 04 81 04 29 02 02 00 CF 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000589E: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000058A5: 09 07 39 07 30 00 01 
      endoneof;
>000058AC: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[4],
>000058AE: 05 91 F2 06 02 07 2A 02 02 00 0B 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06F2),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000058BF: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>000058C6: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>000058CD: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>000058D4: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>000058DB: 09 07 07 07 00 00 04 
      endoneof;
>000058E2: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[4],
>000058E4: 05 91 82 04 83 04 2B 02 02 00 E3 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000058F5: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>000058FC: 09 07 85 04 00 00 01 
      endoneof;
>00005903: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[4],
>00005905: 05 91 69 04 6A 04 2C 02 02 00 7C 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00005916: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>0000591D: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>00005924: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>0000592B: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>00005932: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>00005939: 09 07 A7 00 00 00 09 
      endoneof;
>00005940: 29 02 

      text
>00005942: 03 08 8F 04 AA 00 94 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x0494),
        flags  = 0, key = 0;

      text
>0000594A: 03 08 A4 04 AA 00 A9 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04A9),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>00005952: 02 87 57 06 00 00 00 
>00005959: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[4],
>0000595B: 05 91 5C 06 6C 06 2D 02 02 00 82 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x065C),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000596C: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005973: 09 07 39 07 30 00 01 
      endoneof;
>0000597A: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[4] == 0;
>0000597C: 0A 82 
>0000597E: 12 06 2D 02 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[4],
>00005984: 05 91 82 06 D3 06 2E 02 02 00 AA 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x0682),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00005995: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>0000599C: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000059A3: 09 07 F8 02 30 00 02 
        endoneof;
>000059AA: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[4] == 1;
>000059AC: 0A 82 
>000059AE: 12 86 2E 02 01 00 
>000059B4: 17 02 
>000059B6: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[4],
>000059B8: 07 94 83 06 D5 06 2F 02 02 00 FE 03 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x0683),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>000059CC: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>000059D3: 5B 07 01 00 01 3C 00 
          endnumeric;
>000059DA: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[4],
>000059DC: 05 91 84 06 D6 06 30 02 02 00 BE 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x0684),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>000059ED: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>000059F4: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000059FB: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00005A02: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00005A09: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00005A10: 09 07 56 06 00 00 05 
          endoneof;
>00005A17: 29 02 
        endif;
>00005A19: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[4],
>00005A1B: 05 91 6E 06 D4 06 31 02 02 00 D2 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00005A2C: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00005A33: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005A3A: 09 07 F8 02 30 00 02 
        endoneof;
>00005A41: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[4] == 1;
>00005A43: 0A 82 
>00005A45: 12 86 31 02 01 00 
>00005A4B: 17 02 
>00005A4D: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[4],
>00005A4F: 07 94 85 06 D7 06 32 02 02 00 26 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x0685),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00005A63: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00005A6A: 5B 07 01 00 01 3C 00 
          endnumeric;
>00005A71: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[4],
>00005A73: 05 91 86 06 D8 06 33 02 02 00 E6 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x0686),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00005A84: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00005A8B: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005A92: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00005A99: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00005AA0: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00005AA7: 09 07 56 06 00 00 05 
          endoneof;
>00005AAE: 29 02 
        endif;
>00005AB0: 29 02 
      endif;
>00005AB2: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>00005AB4: 02 87 AA 00 00 00 00 
>00005ABB: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[4],
>00005ABD: 05 91 DD 06 ED 06 34 02 02 00 96 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06DD),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005ACE: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>00005AD5: 09 07 39 07 00 00 01 
      endoneof;
>00005ADC: 29 02 

    endif;
>00005ADE: 29 02 
  endform;
>00005AE0: 29 02 

  form formid = 0x67,
>00005AE2: 01 86 67 00 02 04 

    title     = STRING_TOKEN(0x0402);

    checkbox varid    = PCH_SETUP.PcieRootPortEn[5],
>00005AE8: 06 8E 34 04 44 04 35 02 02 00 58 01 00 03 
        prompt   = STRING_TOKEN(0x0434),
        help     = STRING_TOKEN(0x0444),
        
        
        flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
    endcheckbox;
>00005AF6: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[5] == 0x0;
>00005AF8: 0A 82 
>00005AFA: 12 06 35 02 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>00005B00: 0A 82 
>00005B02: 12 06 29 01 02 00 
#line 4862 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid    = PCH_SETUP.PcieRootPortAspm[5],
>00005B08: 05 91 47 04 48 04 36 02 02 00 6C 01 10 10 00 04 00 
               prompt   = STRING_TOKEN(0x0447),
               help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005B19: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>00005B20: 09 07 4B 04 00 00 02 




#line 4873 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
               option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>00005B27: 09 07 4D 04 00 00 04 
         endoneof;
>00005B2E: 29 02 

      endif;
>00005B30: 29 02 
#line 4878 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[5],
>00005B32: 05 91 51 04 52 04 37 02 02 00 5C 03 10 10 00 03 00 
             prompt      = STRING_TOKEN(0x0451),
             help        = STRING_TOKEN(0x0452),
             option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00005B43: 09 07 38 07 00 00 00 
             option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>00005B4A: 09 07 53 04 00 00 01 
             option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>00005B51: 09 07 54 04 00 00 02 
             option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005B58: 09 07 55 04 30 00 03 
         endoneof;
>00005B5F: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[5],
>00005B61: 05 91 1C 06 2B 06 38 02 02 00 BB 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x061C),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>00005B72: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>00005B79: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>00005B80: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>00005B87: 09 07 2E 06 00 00 02 
      endoneof;
>00005B8E: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[5],
>00005B90: 05 91 35 06 44 06 39 02 02 00 A7 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0635),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00005BA1: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005BA8: 09 07 39 07 30 00 01 
      endoneof;
>00005BAF: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortURE[5],
>00005BB1: 05 91 61 04 62 04 3A 02 02 00 80 01 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0461),
             help     = STRING_TOKEN(0x0462),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005BC2: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00005BC9: 09 07 F9 02 00 00 01 
         endoneof;
>00005BD0: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortFEE[5],
>00005BD2: 05 91 63 04 64 04 3B 02 02 00 94 01 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0463),
             help     = STRING_TOKEN(0x0464),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005BE3: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00005BEA: 09 07 F9 02 00 00 01 
         endoneof;
>00005BF1: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortNFE[5],
>00005BF3: 05 91 65 04 66 04 3C 02 02 00 A8 01 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0465),
             help     = STRING_TOKEN(0x0466),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005C04: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00005C0B: 09 07 F9 02 00 00 01 
         endoneof;
>00005C12: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortCEE[5],
>00005C14: 05 91 67 04 68 04 3D 02 02 00 BC 01 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0467),
             help     = STRING_TOKEN(0x0468),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005C25: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00005C2C: 09 07 F9 02 00 00 01 
         endoneof;
>00005C33: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortSFE[5],
>00005C35: 05 91 78 04 79 04 3E 02 02 00 D0 02 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0478),
             help     = STRING_TOKEN(0x0479),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005C46: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00005C4D: 09 07 F9 02 00 00 01 
         endoneof;
>00005C54: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortSNE[5],
>00005C56: 05 91 7A 04 7B 04 3F 02 02 00 E4 02 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x047A),
             help     = STRING_TOKEN(0x047B),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005C67: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00005C6E: 09 07 F9 02 00 00 01 
         endoneof;
>00005C75: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortSCE[5],
>00005C77: 05 91 7C 04 7D 04 40 02 02 00 F8 02 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x047C),
             help     = STRING_TOKEN(0x047D),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005C88: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00005C8F: 09 07 F9 02 00 00 01 
         endoneof;
>00005C96: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortPMCE[5],
>00005C98: 05 91 7E 04 7F 04 41 02 02 00 0C 03 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x047E),
             help     = STRING_TOKEN(0x047F),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005CA9: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00005CB0: 09 07 F9 02 00 00 01 
         endoneof;
>00005CB7: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortHPE[5],
>00005CB9: 05 91 B9 04 BA 04 42 02 02 00 20 03 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x04B9),
             help     = STRING_TOKEN(0x04BA),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005CCA: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00005CD1: 09 07 F9 02 00 00 01 
         endoneof;
>00005CD8: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[5],
>00005CDA: 05 91 45 06 46 06 43 02 02 00 F8 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00005CEB: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005CF2: 09 07 39 07 30 00 01 
      endoneof;
>00005CF9: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[5],
>00005CFB: 05 91 56 04 57 04 44 02 02 00 34 03 10 10 00 03 00 
        prompt   = STRING_TOKEN (0x0456),
        help     = STRING_TOKEN (0x0457),
        option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005D0C: 09 07 A8 00 30 00 00 
        option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>00005D13: 09 07 58 04 00 00 01 
        option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>00005D1A: 09 07 59 04 00 00 02 
        option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>00005D21: 09 07 5A 04 00 00 03 
      endoneof;
>00005D28: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[5],
>00005D2A: 05 91 80 04 81 04 45 02 02 00 D0 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00005D3B: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005D42: 09 07 39 07 30 00 01 
      endoneof;
>00005D49: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[5],
>00005D4B: 05 91 F3 06 02 07 46 02 02 00 0C 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06F3),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005D5C: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>00005D63: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>00005D6A: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>00005D71: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>00005D78: 09 07 07 07 00 00 04 
      endoneof;
>00005D7F: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[5],
>00005D81: 05 91 82 04 83 04 47 02 02 00 E4 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005D92: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>00005D99: 09 07 85 04 00 00 01 
      endoneof;
>00005DA0: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[5],
>00005DA2: 05 91 69 04 6A 04 48 02 02 00 7D 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00005DB3: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>00005DBA: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>00005DC1: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>00005DC8: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>00005DCF: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>00005DD6: 09 07 A7 00 00 00 09 
      endoneof;
>00005DDD: 29 02 

      text
>00005DDF: 03 08 8F 04 AA 00 95 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x0495),
        flags  = 0, key = 0;

      text
>00005DE7: 03 08 A4 04 AA 00 AA 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04AA),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>00005DEF: 02 87 57 06 00 00 00 
>00005DF6: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[5],
>00005DF8: 05 91 5D 06 6C 06 49 02 02 00 83 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x065D),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>00005E09: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005E10: 09 07 39 07 30 00 01 
      endoneof;
>00005E17: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[5] == 0;
>00005E19: 0A 82 
>00005E1B: 12 06 49 02 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[5],
>00005E21: 05 91 87 06 D3 06 4A 02 02 00 AB 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x0687),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00005E32: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00005E39: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005E40: 09 07 F8 02 30 00 02 
        endoneof;
>00005E47: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[5] == 1;
>00005E49: 0A 82 
>00005E4B: 12 86 4A 02 01 00 
>00005E51: 17 02 
>00005E53: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[5],
>00005E55: 07 94 88 06 D5 06 4B 02 02 00 00 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x0688),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00005E69: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00005E70: 5B 07 01 00 01 3C 00 
          endnumeric;
>00005E77: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[5],
>00005E79: 05 91 89 06 D6 06 4C 02 02 00 BF 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x0689),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00005E8A: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00005E91: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005E98: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00005E9F: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00005EA6: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00005EAD: 09 07 56 06 00 00 05 
          endoneof;
>00005EB4: 29 02 
        endif;
>00005EB6: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[5],
>00005EB8: 05 91 6E 06 D4 06 4D 02 02 00 D3 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00005EC9: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00005ED0: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005ED7: 09 07 F8 02 30 00 02 
        endoneof;
>00005EDE: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[5] == 1;
>00005EE0: 0A 82 
>00005EE2: 12 86 4D 02 01 00 
>00005EE8: 17 02 
>00005EEA: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[5],
>00005EEC: 07 94 8A 06 D7 06 4E 02 02 00 28 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x068A),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00005F00: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00005F07: 5B 07 01 00 01 3C 00 
          endnumeric;
>00005F0E: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[5],
>00005F10: 05 91 8B 06 D8 06 4F 02 02 00 E7 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x068B),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00005F21: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00005F28: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005F2F: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00005F36: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00005F3D: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00005F44: 09 07 56 06 00 00 05 
          endoneof;
>00005F4B: 29 02 
        endif;
>00005F4D: 29 02 
      endif;
>00005F4F: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>00005F51: 02 87 AA 00 00 00 00 
>00005F58: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[5],
>00005F5A: 05 91 DE 06 ED 06 50 02 02 00 97 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06DE),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005F6B: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>00005F72: 09 07 39 07 00 00 01 
      endoneof;
>00005F79: 29 02 

    endif;
>00005F7B: 29 02 
  endform;
>00005F7D: 29 02 

  form formid = 0x102,
>00005F7F: 01 86 02 01 04 04 

    title     = STRING_TOKEN(0x0404);

    checkbox varid    = PCH_SETUP.PcieRootPortEn[6],
>00005F85: 06 8E 35 04 44 04 51 02 02 00 59 01 00 03 
         prompt   = STRING_TOKEN(0x0435),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
    endcheckbox;
>00005F93: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[6] == 0x0;
>00005F95: 0A 82 
>00005F97: 12 06 51 02 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>00005F9D: 0A 82 
>00005F9F: 12 06 29 01 02 00 
#line 5130 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid    = PCH_SETUP.PcieRootPortAspm[6],
>00005FA5: 05 91 47 04 48 04 52 02 02 00 6D 01 10 10 00 04 00 
             prompt   = STRING_TOKEN(0x0447),
             help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005FB6: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>00005FBD: 09 07 4B 04 00 00 02 




#line 5141 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
             option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>00005FC4: 09 07 4D 04 00 00 04 
         endoneof;
>00005FCB: 29 02 

      endif;
>00005FCD: 29 02 
#line 5146 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[6],
>00005FCF: 05 91 51 04 52 04 53 02 02 00 5D 03 10 10 00 03 00 
             prompt      = STRING_TOKEN(0x0451),
             help        = STRING_TOKEN(0x0452),
             option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00005FE0: 09 07 38 07 00 00 00 
             option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>00005FE7: 09 07 53 04 00 00 01 
             option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>00005FEE: 09 07 54 04 00 00 02 
             option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00005FF5: 09 07 55 04 30 00 03 
         endoneof;
>00005FFC: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[6],
>00005FFE: 05 91 1D 06 2B 06 54 02 02 00 BC 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x061D),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000600F: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>00006016: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>0000601D: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>00006024: 09 07 2E 06 00 00 02 
      endoneof;
>0000602B: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[6],
>0000602D: 05 91 36 06 44 06 55 02 02 00 A8 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0636),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000603E: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006045: 09 07 39 07 30 00 01 
      endoneof;
>0000604C: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortURE[6],
>0000604E: 05 91 61 04 62 04 56 02 02 00 81 01 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0461),
             help     = STRING_TOKEN(0x0462),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000605F: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006066: 09 07 F9 02 00 00 01 
         endoneof;
>0000606D: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortFEE[6],
>0000606F: 05 91 63 04 64 04 57 02 02 00 95 01 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0463),
             help     = STRING_TOKEN(0x0464),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006080: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006087: 09 07 F9 02 00 00 01 
         endoneof;
>0000608E: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortNFE[6],
>00006090: 05 91 65 04 66 04 58 02 02 00 A9 01 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0465),
             help     = STRING_TOKEN(0x0466),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000060A1: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000060A8: 09 07 F9 02 00 00 01 
         endoneof;
>000060AF: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortCEE[6],
>000060B1: 05 91 67 04 68 04 59 02 02 00 BD 01 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0467),
             help     = STRING_TOKEN(0x0468),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000060C2: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000060C9: 09 07 F9 02 00 00 01 
         endoneof;
>000060D0: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortSFE[6],
>000060D2: 05 91 78 04 79 04 5A 02 02 00 D1 02 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x0478),
             help     = STRING_TOKEN(0x0479),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000060E3: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000060EA: 09 07 F9 02 00 00 01 
         endoneof;
>000060F1: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortSNE[6],
>000060F3: 05 91 7A 04 7B 04 5B 02 02 00 E5 02 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x047A),
             help     = STRING_TOKEN(0x047B),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006104: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000610B: 09 07 F9 02 00 00 01 
         endoneof;
>00006112: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortSCE[6],
>00006114: 05 91 7C 04 7D 04 5C 02 02 00 F9 02 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x047C),
             help     = STRING_TOKEN(0x047D),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006125: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000612C: 09 07 F9 02 00 00 01 
         endoneof;
>00006133: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortPMCE[6],
>00006135: 05 91 7E 04 7F 04 5D 02 02 00 0D 03 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x047E),
             help     = STRING_TOKEN(0x047F),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006146: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000614D: 09 07 F9 02 00 00 01 
         endoneof;
>00006154: 29 02 

         oneof varid    = PCH_SETUP.PcieRootPortHPE[6],
>00006156: 05 91 B9 04 BA 04 5E 02 02 00 21 03 10 10 00 01 00 
             prompt   = STRING_TOKEN(0x04B9),
             help     = STRING_TOKEN(0x04BA),
             option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006167: 09 07 FA 02 30 00 00 
             option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000616E: 09 07 F9 02 00 00 01 
         endoneof;
>00006175: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[6],
>00006177: 05 91 45 06 46 06 5F 02 02 00 F9 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00006188: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000618F: 09 07 39 07 30 00 01 
      endoneof;
>00006196: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[6],
>00006198: 05 91 56 04 57 04 60 02 02 00 35 03 10 10 00 03 00 
             prompt   = STRING_TOKEN (0x0456),
             help     = STRING_TOKEN (0x0457),
             option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000061A9: 09 07 A8 00 30 00 00 
             option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>000061B0: 09 07 58 04 00 00 01 
             option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>000061B7: 09 07 59 04 00 00 02 
             option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>000061BE: 09 07 5A 04 00 00 03 
         endoneof;
>000061C5: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[6],
>000061C7: 05 91 80 04 81 04 61 02 02 00 D1 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000061D8: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000061DF: 09 07 39 07 30 00 01 
      endoneof;
>000061E6: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[6],
>000061E8: 05 91 F4 06 02 07 62 02 02 00 0D 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06F4),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000061F9: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>00006200: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>00006207: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>0000620E: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>00006215: 09 07 07 07 00 00 04 
      endoneof;
>0000621C: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[6],
>0000621E: 05 91 82 04 83 04 63 02 02 00 E5 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000622F: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>00006236: 09 07 85 04 00 00 01 
      endoneof;
>0000623D: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[6],
>0000623F: 05 91 69 04 6A 04 64 02 02 00 7E 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00006250: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>00006257: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>0000625E: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>00006265: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>0000626C: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>00006273: 09 07 A7 00 00 00 09 
      endoneof;
>0000627A: 29 02 

      text
>0000627C: 03 08 8F 04 AA 00 96 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x0496),
        flags  = 0, key = 0;

      text
>00006284: 03 08 A4 04 AA 00 AB 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04AB),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>0000628C: 02 87 57 06 00 00 00 
>00006293: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[6],
>00006295: 05 91 5E 06 6C 06 65 02 02 00 84 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x065E),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>000062A6: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000062AD: 09 07 39 07 30 00 01 
      endoneof;
>000062B4: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[6] == 0;
>000062B6: 0A 82 
>000062B8: 12 06 65 02 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[6],
>000062BE: 05 91 8C 06 D3 06 66 02 02 00 AC 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x068C),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000062CF: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>000062D6: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000062DD: 09 07 F8 02 30 00 02 
        endoneof;
>000062E4: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[6] == 1;
>000062E6: 0A 82 
>000062E8: 12 86 66 02 01 00 
>000062EE: 17 02 
>000062F0: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[6],
>000062F2: 07 94 8D 06 D5 06 67 02 02 00 02 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x068D),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00006306: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>0000630D: 5B 07 01 00 01 3C 00 
          endnumeric;
>00006314: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[6],
>00006316: 05 91 8E 06 D6 06 68 02 02 00 C0 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x068E),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00006327: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>0000632E: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006335: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>0000633C: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00006343: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>0000634A: 09 07 56 06 00 00 05 
          endoneof;
>00006351: 29 02 
        endif;
>00006353: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[6],
>00006355: 05 91 6E 06 D4 06 69 02 02 00 D4 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00006366: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>0000636D: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006374: 09 07 F8 02 30 00 02 
        endoneof;
>0000637B: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[6] == 1;
>0000637D: 0A 82 
>0000637F: 12 86 69 02 01 00 
>00006385: 17 02 
>00006387: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[6],
>00006389: 07 94 8F 06 D7 06 6A 02 02 00 2A 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x068F),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>0000639D: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>000063A4: 5B 07 01 00 01 3C 00 
          endnumeric;
>000063AB: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[6],
>000063AD: 05 91 90 06 D8 06 6B 02 02 00 E8 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x0690),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>000063BE: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>000063C5: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000063CC: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>000063D3: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>000063DA: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>000063E1: 09 07 56 06 00 00 05 
          endoneof;
>000063E8: 29 02 
        endif;
>000063EA: 29 02 
      endif;
>000063EC: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>000063EE: 02 87 AA 00 00 00 00 
>000063F5: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[6],
>000063F7: 05 91 DF 06 ED 06 6C 02 02 00 98 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06DF),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006408: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000640F: 09 07 39 07 00 00 01 
      endoneof;
>00006416: 29 02 

    endif;
>00006418: 29 02 
  endform;
>0000641A: 29 02 

    form formid = 0x103,
>0000641C: 01 86 03 01 06 04 

    title     = STRING_TOKEN(0x0406);

    checkbox varid    = PCH_SETUP.PcieRootPortEn[7],
>00006422: 06 8E 36 04 44 04 6D 02 02 00 5A 01 00 03 
         prompt   = STRING_TOKEN(0x0436),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
    endcheckbox;
>00006430: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[7] == 0x0;
>00006432: 0A 82 
>00006434: 12 06 6D 02 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>0000643A: 0A 82 
>0000643C: 12 06 29 01 02 00 
#line 5398 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
      oneof varid    = PCH_SETUP.PcieRootPortAspm[7],
>00006442: 05 91 47 04 48 04 6E 02 02 00 6E 01 10 10 00 04 00 
               prompt   = STRING_TOKEN(0x0447),
               help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006453: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>0000645A: 09 07 4B 04 00 00 02 




#line 5409 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
               option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>00006461: 09 07 4D 04 00 00 04 
      endoneof;
>00006468: 29 02 

      endif;
>0000646A: 29 02 
#line 5414 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[7],
>0000646C: 05 91 51 04 52 04 6F 02 02 00 5E 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000647D: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>00006484: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>0000648B: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006492: 09 07 55 04 30 00 03 
      endoneof;
>00006499: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[7],
>0000649B: 05 91 1E 06 2B 06 70 02 02 00 BD 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x061E),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>000064AC: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>000064B3: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>000064BA: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>000064C1: 09 07 2E 06 00 00 02 
      endoneof;
>000064C8: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[7],
>000064CA: 05 91 37 06 44 06 71 02 02 00 A9 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0637),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000064DB: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000064E2: 09 07 39 07 30 00 01 
      endoneof;
>000064E9: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[7],
>000064EB: 05 91 61 04 62 04 72 02 02 00 82 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000064FC: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006503: 09 07 F9 02 00 00 01 
      endoneof;
>0000650A: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[7],
>0000650C: 05 91 63 04 64 04 73 02 02 00 96 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000651D: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006524: 09 07 F9 02 00 00 01 
      endoneof;
>0000652B: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[7],
>0000652D: 05 91 65 04 66 04 74 02 02 00 AA 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000653E: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006545: 09 07 F9 02 00 00 01 
      endoneof;
>0000654C: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[7],
>0000654E: 05 91 67 04 68 04 75 02 02 00 BE 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000655F: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006566: 09 07 F9 02 00 00 01 
      endoneof;
>0000656D: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[7],
>0000656F: 05 91 78 04 79 04 76 02 02 00 D2 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006580: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006587: 09 07 F9 02 00 00 01 
      endoneof;
>0000658E: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[7],
>00006590: 05 91 7A 04 7B 04 77 02 02 00 E6 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000065A1: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000065A8: 09 07 F9 02 00 00 01 
      endoneof;
>000065AF: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[7],
>000065B1: 05 91 7C 04 7D 04 78 02 02 00 FA 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000065C2: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000065C9: 09 07 F9 02 00 00 01 
      endoneof;
>000065D0: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[7],
>000065D2: 05 91 7E 04 7F 04 79 02 02 00 0E 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000065E3: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000065EA: 09 07 F9 02 00 00 01 
      endoneof;
>000065F1: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[7],
>000065F3: 05 91 B9 04 BA 04 7A 02 02 00 22 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006604: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000660B: 09 07 F9 02 00 00 01 
      endoneof;
>00006612: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[7],
>00006614: 05 91 45 06 46 06 7B 02 02 00 FA 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00006625: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000662C: 09 07 39 07 30 00 01 
      endoneof;
>00006633: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[7],
>00006635: 05 91 56 04 57 04 7C 02 02 00 36 03 10 10 00 03 00 
        prompt   = STRING_TOKEN (0x0456),
        help     = STRING_TOKEN (0x0457),
        option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006646: 09 07 A8 00 30 00 00 
        option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>0000664D: 09 07 58 04 00 00 01 
        option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>00006654: 09 07 59 04 00 00 02 
        option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>0000665B: 09 07 5A 04 00 00 03 
      endoneof;
>00006662: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[7],
>00006664: 05 91 80 04 81 04 7D 02 02 00 D2 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00006675: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000667C: 09 07 39 07 30 00 01 
      endoneof;
>00006683: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[7],
>00006685: 05 91 F5 06 02 07 7E 02 02 00 0E 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06F5),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006696: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>0000669D: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>000066A4: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>000066AB: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>000066B2: 09 07 07 07 00 00 04 
      endoneof;
>000066B9: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[7],
>000066BB: 05 91 82 04 83 04 7F 02 02 00 E6 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000066CC: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>000066D3: 09 07 85 04 00 00 01 
      endoneof;
>000066DA: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[7],
>000066DC: 05 91 69 04 6A 04 80 02 02 00 7F 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>000066ED: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>000066F4: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>000066FB: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>00006702: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>00006709: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>00006710: 09 07 A7 00 00 00 09 
      endoneof;
>00006717: 29 02 

      text
>00006719: 03 08 8F 04 AA 00 97 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x0497),
        flags  = 0, key = 0;

      text
>00006721: 03 08 A4 04 AA 00 AC 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04AC),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>00006729: 02 87 57 06 00 00 00 
>00006730: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[7],
>00006732: 05 91 5F 06 6C 06 81 02 02 00 85 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x065F),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>00006743: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000674A: 09 07 39 07 30 00 01 
      endoneof;
>00006751: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[7] == 0;
>00006753: 0A 82 
>00006755: 12 06 81 02 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[7],
>0000675B: 05 91 91 06 D3 06 82 02 02 00 AD 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x0691),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000676C: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00006773: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000677A: 09 07 F8 02 30 00 02 
        endoneof;
>00006781: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[7] == 1;
>00006783: 0A 82 
>00006785: 12 86 82 02 01 00 
>0000678B: 17 02 
>0000678D: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[7],
>0000678F: 07 94 92 06 D5 06 83 02 02 00 04 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x0692),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>000067A3: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>000067AA: 5B 07 01 00 01 3C 00 
          endnumeric;
>000067B1: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[7],
>000067B3: 05 91 93 06 D6 06 84 02 02 00 C1 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x0693),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>000067C4: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>000067CB: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000067D2: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>000067D9: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>000067E0: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>000067E7: 09 07 56 06 00 00 05 
          endoneof;
>000067EE: 29 02 
        endif;
>000067F0: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[7],
>000067F2: 05 91 6E 06 D4 06 85 02 02 00 D5 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00006803: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>0000680A: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006811: 09 07 F8 02 30 00 02 
        endoneof;
>00006818: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[7] == 1;
>0000681A: 0A 82 
>0000681C: 12 86 85 02 01 00 
>00006822: 17 02 
>00006824: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[7],
>00006826: 07 94 94 06 D7 06 86 02 02 00 2C 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x0694),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>0000683A: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00006841: 5B 07 01 00 01 3C 00 
          endnumeric;
>00006848: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[7],
>0000684A: 05 91 95 06 D8 06 87 02 02 00 E9 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x0695),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>0000685B: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00006862: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006869: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00006870: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00006877: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>0000687E: 09 07 56 06 00 00 05 
          endoneof;
>00006885: 29 02 
        endif;
>00006887: 29 02 
      endif;
>00006889: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>0000688B: 02 87 AA 00 00 00 00 
>00006892: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[7],
>00006894: 05 91 E0 06 ED 06 88 02 02 00 99 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06E0),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000068A5: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>000068AC: 09 07 39 07 00 00 01 
      endoneof;
>000068B3: 29 02 

    endif;
>000068B5: 29 02 
  endform;
>000068B7: 29 02 

  form formid = 0x69,
>000068B9: 01 86 69 00 08 04 

    title     = STRING_TOKEN(0x0408);

     checkbox varid    = PCH_SETUP.PcieRootPortEn[8],
>000068BF: 06 8E 37 04 44 04 89 02 02 00 5B 01 00 03 
         prompt   = STRING_TOKEN(0x0437),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
     endcheckbox;
>000068CD: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[8] == 0x0;
>000068CF: 0A 82 
>000068D1: 12 06 89 02 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>000068D7: 0A 82 
>000068D9: 12 06 29 01 02 00 
#line 5667 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid   = PCH_SETUP.PcieRootPortAspm[8],
>000068DF: 05 91 47 04 48 04 8A 02 02 00 6F 01 10 10 00 04 00 
             prompt   = STRING_TOKEN(0x0447),
             help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000068F0: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>000068F7: 09 07 4B 04 00 00 02 




#line 5678 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
             option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>000068FE: 09 07 4D 04 00 00 04 
         endoneof;
>00006905: 29 02 

     endif;
>00006907: 29 02 
#line 5683 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[8],
>00006909: 05 91 51 04 52 04 8B 02 02 00 5F 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000691A: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>00006921: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>00006928: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000692F: 09 07 55 04 30 00 03 
      endoneof;
>00006936: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[8],
>00006938: 05 91 1F 06 2B 06 8C 02 02 00 BE 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x061F),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>00006949: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>00006950: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>00006957: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>0000695E: 09 07 2E 06 00 00 02 
      endoneof;
>00006965: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[8],
>00006967: 05 91 38 06 44 06 8D 02 02 00 AA 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0638),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00006978: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000697F: 09 07 39 07 30 00 01 
      endoneof;
>00006986: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[8],
>00006988: 05 91 61 04 62 04 8E 02 02 00 83 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006999: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000069A0: 09 07 F9 02 00 00 01 
      endoneof;
>000069A7: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[8],
>000069A9: 05 91 63 04 64 04 8F 02 02 00 97 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000069BA: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000069C1: 09 07 F9 02 00 00 01 
      endoneof;
>000069C8: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[8],
>000069CA: 05 91 65 04 66 04 90 02 02 00 AB 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000069DB: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000069E2: 09 07 F9 02 00 00 01 
      endoneof;
>000069E9: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[8],
>000069EB: 05 91 67 04 68 04 91 02 02 00 BF 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000069FC: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006A03: 09 07 F9 02 00 00 01 
      endoneof;
>00006A0A: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[8],
>00006A0C: 05 91 78 04 79 04 92 02 02 00 D3 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006A1D: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006A24: 09 07 F9 02 00 00 01 
      endoneof;
>00006A2B: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[8],
>00006A2D: 05 91 7A 04 7B 04 93 02 02 00 E7 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006A3E: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006A45: 09 07 F9 02 00 00 01 
      endoneof;
>00006A4C: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[8],
>00006A4E: 05 91 7C 04 7D 04 94 02 02 00 FB 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006A5F: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006A66: 09 07 F9 02 00 00 01 
      endoneof;
>00006A6D: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[8],
>00006A6F: 05 91 7E 04 7F 04 95 02 02 00 0F 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006A80: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006A87: 09 07 F9 02 00 00 01 
      endoneof;
>00006A8E: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[8],
>00006A90: 05 91 B9 04 BA 04 96 02 02 00 23 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006AA1: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006AA8: 09 07 F9 02 00 00 01 
      endoneof;
>00006AAF: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[8],
>00006AB1: 05 91 45 06 46 06 97 02 02 00 FB 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00006AC2: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006AC9: 09 07 39 07 30 00 01 
      endoneof;
>00006AD0: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[8],
>00006AD2: 05 91 56 04 57 04 98 02 02 00 37 03 10 10 00 03 00 
         prompt   = STRING_TOKEN (0x0456),
         help     = STRING_TOKEN (0x0457),
         option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006AE3: 09 07 A8 00 30 00 00 
         option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>00006AEA: 09 07 58 04 00 00 01 
         option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>00006AF1: 09 07 59 04 00 00 02 
         option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>00006AF8: 09 07 5A 04 00 00 03 
      endoneof;
>00006AFF: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[8],
>00006B01: 05 91 80 04 81 04 99 02 02 00 D3 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help      = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00006B12: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006B19: 09 07 39 07 30 00 01 
      endoneof;
>00006B20: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[8],
>00006B22: 05 91 F6 06 02 07 9A 02 02 00 0F 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06F6),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006B33: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>00006B3A: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>00006B41: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>00006B48: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>00006B4F: 09 07 07 07 00 00 04 
      endoneof;
>00006B56: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[8],
>00006B58: 05 91 82 04 83 04 9B 02 02 00 E7 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006B69: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>00006B70: 09 07 85 04 00 00 01 
      endoneof;
>00006B77: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[8],
>00006B79: 05 91 69 04 6A 04 9C 02 02 00 80 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00006B8A: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>00006B91: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>00006B98: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>00006B9F: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>00006BA6: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>00006BAD: 09 07 A7 00 00 00 09 
      endoneof;
>00006BB4: 29 02 

      text
>00006BB6: 03 08 8F 04 AA 00 98 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x0498),
        flags  = 0, key = 0;

      text
>00006BBE: 03 08 A4 04 AA 00 AD 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04AD),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>00006BC6: 02 87 57 06 00 00 00 
>00006BCD: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[8],
>00006BCF: 05 91 60 06 6C 06 9D 02 02 00 86 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0660),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>00006BE0: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006BE7: 09 07 39 07 30 00 01 
      endoneof;
>00006BEE: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[8] == 0;
>00006BF0: 0A 82 
>00006BF2: 12 06 9D 02 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[8],
>00006BF8: 05 91 96 06 D3 06 9E 02 02 00 AE 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x0696),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00006C09: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00006C10: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006C17: 09 07 F8 02 30 00 02 
        endoneof;
>00006C1E: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[8] == 1;
>00006C20: 0A 82 
>00006C22: 12 86 9E 02 01 00 
>00006C28: 17 02 
>00006C2A: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[8],
>00006C2C: 07 94 97 06 D5 06 9F 02 02 00 06 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x0697),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00006C40: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00006C47: 5B 07 01 00 01 3C 00 
          endnumeric;
>00006C4E: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[8],
>00006C50: 05 91 98 06 D6 06 A0 02 02 00 C2 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x0698),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00006C61: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00006C68: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006C6F: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00006C76: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00006C7D: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00006C84: 09 07 56 06 00 00 05 
          endoneof;
>00006C8B: 29 02 
        endif;
>00006C8D: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[8],
>00006C8F: 05 91 6E 06 D4 06 A1 02 02 00 D6 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00006CA0: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00006CA7: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006CAE: 09 07 F8 02 30 00 02 
        endoneof;
>00006CB5: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[8] == 1;
>00006CB7: 0A 82 
>00006CB9: 12 86 A1 02 01 00 
>00006CBF: 17 02 
>00006CC1: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[8],
>00006CC3: 07 94 99 06 D7 06 A2 02 02 00 2E 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x0699),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00006CD7: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00006CDE: 5B 07 01 00 01 3C 00 
          endnumeric;
>00006CE5: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[8],
>00006CE7: 05 91 9A 06 D8 06 A3 02 02 00 EA 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x069A),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00006CF8: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00006CFF: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006D06: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00006D0D: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00006D14: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00006D1B: 09 07 56 06 00 00 05 
          endoneof;
>00006D22: 29 02 
        endif;
>00006D24: 29 02 
      endif;
>00006D26: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>00006D28: 02 87 AA 00 00 00 00 
>00006D2F: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[8],
>00006D31: 05 91 E1 06 ED 06 A4 02 02 00 9A 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06E1),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006D42: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>00006D49: 09 07 39 07 00 00 01 
      endoneof;
>00006D50: 29 02 

    endif;
>00006D52: 29 02 
  endform;
>00006D54: 29 02 

  form formid = 0x6A,
>00006D56: 01 86 6A 00 0A 04 

    title     = STRING_TOKEN(0x040A);

     checkbox varid    = PCH_SETUP.PcieRootPortEn[9],
>00006D5C: 06 8E 38 04 44 04 A5 02 02 00 5C 01 00 03 
         prompt   = STRING_TOKEN(0x0438),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
     endcheckbox;
>00006D6A: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[9] == 0x0;
>00006D6C: 0A 82 
>00006D6E: 12 06 A5 02 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>00006D74: 0A 82 
>00006D76: 12 06 29 01 02 00 
#line 5936 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid   = PCH_SETUP.PcieRootPortAspm[9],
>00006D7C: 05 91 47 04 48 04 A6 02 02 00 70 01 10 10 00 04 00 
             prompt   = STRING_TOKEN(0x0447),
             help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006D8D: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>00006D94: 09 07 4B 04 00 00 02 




#line 5947 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
             option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>00006D9B: 09 07 4D 04 00 00 04 
         endoneof;
>00006DA2: 29 02 

     endif;
>00006DA4: 29 02 
#line 5952 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[9],
>00006DA6: 05 91 51 04 52 04 A7 02 02 00 60 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00006DB7: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>00006DBE: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>00006DC5: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006DCC: 09 07 55 04 30 00 03 
      endoneof;
>00006DD3: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[9],
>00006DD5: 05 91 20 06 2B 06 A8 02 02 00 BF 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x0620),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>00006DE6: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>00006DED: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>00006DF4: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>00006DFB: 09 07 2E 06 00 00 02 
      endoneof;
>00006E02: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[9],
>00006E04: 05 91 39 06 44 06 A9 02 02 00 AB 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0639),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00006E15: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006E1C: 09 07 39 07 30 00 01 
      endoneof;
>00006E23: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[9],
>00006E25: 05 91 61 04 62 04 AA 02 02 00 84 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006E36: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006E3D: 09 07 F9 02 00 00 01 
      endoneof;
>00006E44: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[9],
>00006E46: 05 91 63 04 64 04 AB 02 02 00 98 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006E57: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006E5E: 09 07 F9 02 00 00 01 
      endoneof;
>00006E65: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[9],
>00006E67: 05 91 65 04 66 04 AC 02 02 00 AC 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006E78: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006E7F: 09 07 F9 02 00 00 01 
      endoneof;
>00006E86: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[9],
>00006E88: 05 91 67 04 68 04 AD 02 02 00 C0 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006E99: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006EA0: 09 07 F9 02 00 00 01 
      endoneof;
>00006EA7: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[9],
>00006EA9: 05 91 78 04 79 04 AE 02 02 00 D4 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006EBA: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006EC1: 09 07 F9 02 00 00 01 
      endoneof;
>00006EC8: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[9],
>00006ECA: 05 91 7A 04 7B 04 AF 02 02 00 E8 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006EDB: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006EE2: 09 07 F9 02 00 00 01 
      endoneof;
>00006EE9: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[9],
>00006EEB: 05 91 7C 04 7D 04 B0 02 02 00 FC 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006EFC: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006F03: 09 07 F9 02 00 00 01 
      endoneof;
>00006F0A: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[9],
>00006F0C: 05 91 7E 04 7F 04 B1 02 02 00 10 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006F1D: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006F24: 09 07 F9 02 00 00 01 
      endoneof;
>00006F2B: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[9],
>00006F2D: 05 91 B9 04 BA 04 B2 02 02 00 24 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006F3E: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00006F45: 09 07 F9 02 00 00 01 
      endoneof;
>00006F4C: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[9],
>00006F4E: 05 91 45 06 46 06 B3 02 02 00 FC 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00006F5F: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006F66: 09 07 39 07 30 00 01 
      endoneof;
>00006F6D: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[9],
>00006F6F: 05 91 56 04 57 04 B4 02 02 00 38 03 10 10 00 03 00 
         prompt   = STRING_TOKEN (0x0456),
         help     = STRING_TOKEN (0x0457),
         option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006F80: 09 07 A8 00 30 00 00 
         option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>00006F87: 09 07 58 04 00 00 01 
         option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>00006F8E: 09 07 59 04 00 00 02 
         option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>00006F95: 09 07 5A 04 00 00 03 
      endoneof;
>00006F9C: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[9],
>00006F9E: 05 91 80 04 81 04 B5 02 02 00 D4 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00006FAF: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006FB6: 09 07 39 07 30 00 01 
      endoneof;
>00006FBD: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[9],
>00006FBF: 05 91 F7 06 02 07 B6 02 02 00 10 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06F7),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00006FD0: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>00006FD7: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>00006FDE: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>00006FE5: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>00006FEC: 09 07 07 07 00 00 04 
      endoneof;
>00006FF3: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[9],
>00006FF5: 05 91 82 04 83 04 B7 02 02 00 E8 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007006: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>0000700D: 09 07 85 04 00 00 01 
      endoneof;
>00007014: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[9],
>00007016: 05 91 69 04 6A 04 B8 02 02 00 81 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00007027: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>0000702E: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>00007035: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>0000703C: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>00007043: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>0000704A: 09 07 A7 00 00 00 09 
      endoneof;
>00007051: 29 02 

      text
>00007053: 03 08 8F 04 AA 00 99 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x0499),
        flags  = 0, key = 0;

      text
>0000705B: 03 08 A4 04 AA 00 AE 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04AE),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>00007063: 02 87 57 06 00 00 00 
>0000706A: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[9],
>0000706C: 05 91 61 06 6C 06 B9 02 02 00 87 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0661),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000707D: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007084: 09 07 39 07 30 00 01 
      endoneof;
>0000708B: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[9] == 0;
>0000708D: 0A 82 
>0000708F: 12 06 B9 02 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[9],
>00007095: 05 91 9B 06 D3 06 BA 02 02 00 AF 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x069B),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000070A6: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>000070AD: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000070B4: 09 07 F8 02 30 00 02 
        endoneof;
>000070BB: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[9] == 1;
>000070BD: 0A 82 
>000070BF: 12 86 BA 02 01 00 
>000070C5: 17 02 
>000070C7: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[9],
>000070C9: 07 94 9C 06 D5 06 BB 02 02 00 08 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x069C),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>000070DD: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>000070E4: 5B 07 01 00 01 3C 00 
          endnumeric;
>000070EB: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[9],
>000070ED: 05 91 9D 06 D6 06 BC 02 02 00 C3 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x069D),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>000070FE: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00007105: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000710C: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00007113: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>0000711A: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00007121: 09 07 56 06 00 00 05 
          endoneof;
>00007128: 29 02 
        endif;
>0000712A: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[9],
>0000712C: 05 91 6E 06 D4 06 BD 02 02 00 D7 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000713D: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00007144: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000714B: 09 07 F8 02 30 00 02 
        endoneof;
>00007152: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[9] == 1;
>00007154: 0A 82 
>00007156: 12 86 BD 02 01 00 
>0000715C: 17 02 
>0000715E: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[9],
>00007160: 07 94 9E 06 D7 06 BE 02 02 00 30 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x069E),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00007174: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>0000717B: 5B 07 01 00 01 3C 00 
          endnumeric;
>00007182: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[9],
>00007184: 05 91 9F 06 D8 06 BF 02 02 00 EB 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x069F),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00007195: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>0000719C: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000071A3: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>000071AA: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>000071B1: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>000071B8: 09 07 56 06 00 00 05 
          endoneof;
>000071BF: 29 02 
        endif;
>000071C1: 29 02 
      endif;
>000071C3: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>000071C5: 02 87 AA 00 00 00 00 
>000071CC: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[9],
>000071CE: 05 91 E2 06 ED 06 C0 02 02 00 9B 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06E2),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000071DF: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>000071E6: 09 07 39 07 00 00 01 
      endoneof;
>000071ED: 29 02 

    endif;
>000071EF: 29 02 
  endform;
>000071F1: 29 02 


  form formid = 0x6B,
>000071F3: 01 86 6B 00 0C 04 

    title     = STRING_TOKEN(0x040C);

     checkbox varid    = PCH_SETUP.PcieRootPortEn[10],
>000071F9: 06 8E 39 04 44 04 C1 02 02 00 5D 01 00 03 
         prompt   = STRING_TOKEN(0x0439),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
     endcheckbox;
>00007207: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[10] == 0x0;
>00007209: 0A 82 
>0000720B: 12 06 C1 02 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>00007211: 0A 82 
>00007213: 12 06 29 01 02 00 
#line 6206 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid   = PCH_SETUP.PcieRootPortAspm[10],
>00007219: 05 91 47 04 48 04 C2 02 02 00 71 01 10 10 00 04 00 
             prompt   = STRING_TOKEN(0x0447),
             help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000722A: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>00007231: 09 07 4B 04 00 00 02 




#line 6217 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
             option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>00007238: 09 07 4D 04 00 00 04 
         endoneof;
>0000723F: 29 02 

     endif;
>00007241: 29 02 
#line 6222 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[10],
>00007243: 05 91 51 04 52 04 C3 02 02 00 61 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00007254: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>0000725B: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>00007262: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007269: 09 07 55 04 30 00 03 
      endoneof;
>00007270: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[10],
>00007272: 05 91 21 06 2B 06 C4 02 02 00 C0 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x0621),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>00007283: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>0000728A: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>00007291: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>00007298: 09 07 2E 06 00 00 02 
      endoneof;
>0000729F: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[10],
>000072A1: 05 91 3A 06 44 06 C5 02 02 00 AC 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x063A),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000072B2: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000072B9: 09 07 39 07 30 00 01 
      endoneof;
>000072C0: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[10],
>000072C2: 05 91 61 04 62 04 C6 02 02 00 85 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000072D3: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000072DA: 09 07 F9 02 00 00 01 
      endoneof;
>000072E1: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[10],
>000072E3: 05 91 63 04 64 04 C7 02 02 00 99 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000072F4: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000072FB: 09 07 F9 02 00 00 01 
      endoneof;
>00007302: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[10],
>00007304: 05 91 65 04 66 04 C8 02 02 00 AD 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007315: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000731C: 09 07 F9 02 00 00 01 
      endoneof;
>00007323: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[10],
>00007325: 05 91 67 04 68 04 C9 02 02 00 C1 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007336: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000733D: 09 07 F9 02 00 00 01 
      endoneof;
>00007344: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[10],
>00007346: 05 91 78 04 79 04 CA 02 02 00 D5 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007357: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000735E: 09 07 F9 02 00 00 01 
      endoneof;
>00007365: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[10],
>00007367: 05 91 7A 04 7B 04 CB 02 02 00 E9 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007378: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000737F: 09 07 F9 02 00 00 01 
      endoneof;
>00007386: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[10],
>00007388: 05 91 7C 04 7D 04 CC 02 02 00 FD 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007399: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000073A0: 09 07 F9 02 00 00 01 
      endoneof;
>000073A7: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[10],
>000073A9: 05 91 7E 04 7F 04 CD 02 02 00 11 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000073BA: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000073C1: 09 07 F9 02 00 00 01 
      endoneof;
>000073C8: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[10],
>000073CA: 05 91 B9 04 BA 04 CE 02 02 00 25 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000073DB: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000073E2: 09 07 F9 02 00 00 01 
      endoneof;
>000073E9: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[10],
>000073EB: 05 91 45 06 46 06 CF 02 02 00 FD 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000073FC: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007403: 09 07 39 07 30 00 01 
      endoneof;
>0000740A: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[10],
>0000740C: 05 91 56 04 57 04 D0 02 02 00 39 03 10 10 00 03 00 
         prompt   = STRING_TOKEN (0x0456),
         help     = STRING_TOKEN (0x0457),
         option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000741D: 09 07 A8 00 30 00 00 
         option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>00007424: 09 07 58 04 00 00 01 
         option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>0000742B: 09 07 59 04 00 00 02 
         option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>00007432: 09 07 5A 04 00 00 03 
      endoneof;
>00007439: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[10],
>0000743B: 05 91 80 04 81 04 D1 02 02 00 D5 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000744C: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007453: 09 07 39 07 30 00 01 
      endoneof;
>0000745A: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[10],
>0000745C: 05 91 F8 06 02 07 D2 02 02 00 11 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06F8),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000746D: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>00007474: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>0000747B: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>00007482: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>00007489: 09 07 07 07 00 00 04 
      endoneof;
>00007490: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[10],
>00007492: 05 91 82 04 83 04 D3 02 02 00 E9 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000074A3: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>000074AA: 09 07 85 04 00 00 01 
      endoneof;
>000074B1: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[10],
>000074B3: 05 91 69 04 6A 04 D4 02 02 00 82 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>000074C4: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>000074CB: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>000074D2: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>000074D9: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>000074E0: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>000074E7: 09 07 A7 00 00 00 09 
      endoneof;
>000074EE: 29 02 

      text
>000074F0: 03 08 8F 04 AA 00 9A 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x049A),
        flags  = 0, key = 0;

      text
>000074F8: 03 08 A4 04 AA 00 AF 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04AF),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>00007500: 02 87 57 06 00 00 00 
>00007507: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[10],
>00007509: 05 91 62 06 6C 06 D5 02 02 00 88 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0662),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000751A: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007521: 09 07 39 07 30 00 01 
      endoneof;
>00007528: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[10] == 0;
>0000752A: 0A 82 
>0000752C: 12 06 D5 02 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[10],
>00007532: 05 91 A0 06 D3 06 D6 02 02 00 B0 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x06A0),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00007543: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>0000754A: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007551: 09 07 F8 02 30 00 02 
        endoneof;
>00007558: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[10] == 1;
>0000755A: 0A 82 
>0000755C: 12 86 D6 02 01 00 
>00007562: 17 02 
>00007564: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[10],
>00007566: 07 94 A1 06 D5 06 D7 02 02 00 0A 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06A1),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>0000757A: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00007581: 5B 07 01 00 01 3C 00 
          endnumeric;
>00007588: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[10],
>0000758A: 05 91 A2 06 D6 06 D8 02 02 00 C4 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06A2),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>0000759B: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>000075A2: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000075A9: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>000075B0: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>000075B7: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>000075BE: 09 07 56 06 00 00 05 
          endoneof;
>000075C5: 29 02 
        endif;
>000075C7: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[10],
>000075C9: 05 91 6E 06 D4 06 D9 02 02 00 D8 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000075DA: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>000075E1: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000075E8: 09 07 F8 02 30 00 02 
        endoneof;
>000075EF: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[10] == 1;
>000075F1: 0A 82 
>000075F3: 12 86 D9 02 01 00 
>000075F9: 17 02 
>000075FB: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[10],
>000075FD: 07 94 A3 06 D7 06 DA 02 02 00 32 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06A3),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00007611: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00007618: 5B 07 01 00 01 3C 00 
          endnumeric;
>0000761F: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[10],
>00007621: 05 91 A4 06 D8 06 DB 02 02 00 EC 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06A4),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00007632: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00007639: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007640: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00007647: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>0000764E: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00007655: 09 07 56 06 00 00 05 
          endoneof;
>0000765C: 29 02 
        endif;
>0000765E: 29 02 
      endif;
>00007660: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>00007662: 02 87 AA 00 00 00 00 
>00007669: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[10],
>0000766B: 05 91 E3 06 ED 06 DC 02 02 00 9C 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06E3),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000767C: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>00007683: 09 07 39 07 00 00 01 
      endoneof;
>0000768A: 29 02 

    endif;
>0000768C: 29 02 
  endform;
>0000768E: 29 02 


  form formid = 0x6C,
>00007690: 01 86 6C 00 0E 04 

    title     = STRING_TOKEN(0x040E);

     checkbox varid    = PCH_SETUP.PcieRootPortEn[11],
>00007696: 06 8E 3A 04 44 04 DD 02 02 00 5E 01 00 03 
         prompt   = STRING_TOKEN(0x043A),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
     endcheckbox;
>000076A4: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[11] == 0x0;
>000076A6: 0A 82 
>000076A8: 12 06 DD 02 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>000076AE: 0A 82 
>000076B0: 12 06 29 01 02 00 
#line 6476 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid   = PCH_SETUP.PcieRootPortAspm[11],
>000076B6: 05 91 47 04 48 04 DE 02 02 00 72 01 10 10 00 04 00 
             prompt   = STRING_TOKEN(0x0447),
             help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000076C7: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>000076CE: 09 07 4B 04 00 00 02 




#line 6487 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
             option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>000076D5: 09 07 4D 04 00 00 04 
         endoneof;
>000076DC: 29 02 

     endif;
>000076DE: 29 02 
#line 6492 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[11],
>000076E0: 05 91 51 04 52 04 DF 02 02 00 62 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000076F1: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>000076F8: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>000076FF: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007706: 09 07 55 04 30 00 03 
      endoneof;
>0000770D: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[11],
>0000770F: 05 91 22 06 2B 06 E0 02 02 00 C1 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x0622),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>00007720: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>00007727: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>0000772E: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>00007735: 09 07 2E 06 00 00 02 
      endoneof;
>0000773C: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[11],
>0000773E: 05 91 3B 06 44 06 E1 02 02 00 AD 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x063B),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000774F: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007756: 09 07 39 07 30 00 01 
      endoneof;
>0000775D: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[11],
>0000775F: 05 91 61 04 62 04 E2 02 02 00 86 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007770: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00007777: 09 07 F9 02 00 00 01 
      endoneof;
>0000777E: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[11],
>00007780: 05 91 63 04 64 04 E3 02 02 00 9A 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007791: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00007798: 09 07 F9 02 00 00 01 
      endoneof;
>0000779F: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[11],
>000077A1: 05 91 65 04 66 04 E4 02 02 00 AE 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000077B2: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000077B9: 09 07 F9 02 00 00 01 
      endoneof;
>000077C0: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[11],
>000077C2: 05 91 67 04 68 04 E5 02 02 00 C2 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000077D3: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000077DA: 09 07 F9 02 00 00 01 
      endoneof;
>000077E1: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[11],
>000077E3: 05 91 78 04 79 04 E6 02 02 00 D6 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000077F4: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000077FB: 09 07 F9 02 00 00 01 
      endoneof;
>00007802: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[11],
>00007804: 05 91 7A 04 7B 04 E7 02 02 00 EA 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007815: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000781C: 09 07 F9 02 00 00 01 
      endoneof;
>00007823: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[11],
>00007825: 05 91 7C 04 7D 04 E8 02 02 00 FE 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007836: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000783D: 09 07 F9 02 00 00 01 
      endoneof;
>00007844: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[11],
>00007846: 05 91 7E 04 7F 04 E9 02 02 00 12 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007857: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000785E: 09 07 F9 02 00 00 01 
      endoneof;
>00007865: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[11],
>00007867: 05 91 B9 04 BA 04 EA 02 02 00 26 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007878: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000787F: 09 07 F9 02 00 00 01 
      endoneof;
>00007886: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[11],
>00007888: 05 91 45 06 46 06 EB 02 02 00 FE 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00007899: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000078A0: 09 07 39 07 30 00 01 
      endoneof;
>000078A7: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[11],
>000078A9: 05 91 56 04 57 04 EC 02 02 00 3A 03 10 10 00 03 00 
         prompt   = STRING_TOKEN (0x0456),
         help     = STRING_TOKEN (0x0457),
         option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000078BA: 09 07 A8 00 30 00 00 
         option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>000078C1: 09 07 58 04 00 00 01 
         option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>000078C8: 09 07 59 04 00 00 02 
         option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>000078CF: 09 07 5A 04 00 00 03 
      endoneof;
>000078D6: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[11],
>000078D8: 05 91 80 04 81 04 ED 02 02 00 D6 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000078E9: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000078F0: 09 07 39 07 30 00 01 
      endoneof;
>000078F7: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[11],
>000078F9: 05 91 F9 06 02 07 EE 02 02 00 12 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06F9),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000790A: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>00007911: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>00007918: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>0000791F: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>00007926: 09 07 07 07 00 00 04 
      endoneof;
>0000792D: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[11],
>0000792F: 05 91 82 04 83 04 EF 02 02 00 EA 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007940: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>00007947: 09 07 85 04 00 00 01 
      endoneof;
>0000794E: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[11],
>00007950: 05 91 69 04 6A 04 F0 02 02 00 83 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00007961: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>00007968: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>0000796F: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>00007976: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>0000797D: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>00007984: 09 07 A7 00 00 00 09 
      endoneof;
>0000798B: 29 02 

      text
>0000798D: 03 08 8F 04 AA 00 9B 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x049B),
        flags  = 0, key = 0;

      text
>00007995: 03 08 A4 04 AA 00 B0 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04B0),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>0000799D: 02 87 57 06 00 00 00 
>000079A4: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[11],
>000079A6: 05 91 63 06 6C 06 F1 02 02 00 89 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0663),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>000079B7: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000079BE: 09 07 39 07 30 00 01 
      endoneof;
>000079C5: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[11] == 0;
>000079C7: 0A 82 
>000079C9: 12 06 F1 02 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[11],
>000079CF: 05 91 A5 06 D3 06 F2 02 02 00 B1 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x06A5),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000079E0: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>000079E7: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000079EE: 09 07 F8 02 30 00 02 
        endoneof;
>000079F5: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[11] == 1;
>000079F7: 0A 82 
>000079F9: 12 86 F2 02 01 00 
>000079FF: 17 02 
>00007A01: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[11],
>00007A03: 07 94 A6 06 D5 06 F3 02 02 00 0C 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06A6),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00007A17: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00007A1E: 5B 07 01 00 01 3C 00 
          endnumeric;
>00007A25: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[11],
>00007A27: 05 91 A7 06 D6 06 F4 02 02 00 C5 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06A7),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00007A38: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00007A3F: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007A46: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00007A4D: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00007A54: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00007A5B: 09 07 56 06 00 00 05 
          endoneof;
>00007A62: 29 02 
        endif;
>00007A64: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[11],
>00007A66: 05 91 6E 06 D4 06 F5 02 02 00 D9 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00007A77: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00007A7E: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007A85: 09 07 F8 02 30 00 02 
        endoneof;
>00007A8C: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[11] == 1;
>00007A8E: 0A 82 
>00007A90: 12 86 F5 02 01 00 
>00007A96: 17 02 
>00007A98: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[11],
>00007A9A: 07 94 A8 06 D7 06 F6 02 02 00 34 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06A8),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00007AAE: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00007AB5: 5B 07 01 00 01 3C 00 
          endnumeric;
>00007ABC: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[11],
>00007ABE: 05 91 A9 06 D8 06 F7 02 02 00 ED 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06A9),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00007ACF: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00007AD6: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007ADD: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00007AE4: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00007AEB: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00007AF2: 09 07 56 06 00 00 05 
          endoneof;
>00007AF9: 29 02 
        endif;
>00007AFB: 29 02 
      endif;
>00007AFD: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>00007AFF: 02 87 AA 00 00 00 00 
>00007B06: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[11],
>00007B08: 05 91 E4 06 ED 06 F8 02 02 00 9D 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06E4),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007B19: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>00007B20: 09 07 39 07 00 00 01 
      endoneof;
>00007B27: 29 02 

    endif;
>00007B29: 29 02 
  endform;
>00007B2B: 29 02 

  form formid = 0x6D,
>00007B2D: 01 86 6D 00 10 04 

    title     = STRING_TOKEN(0x0410);

     checkbox varid    = PCH_SETUP.PcieRootPortEn[12],
>00007B33: 06 8E 3B 04 44 04 F9 02 02 00 5F 01 00 03 
         prompt   = STRING_TOKEN(0x043B),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
     endcheckbox;
>00007B41: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[12] == 0x0;
>00007B43: 0A 82 
>00007B45: 12 06 F9 02 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>00007B4B: 0A 82 
>00007B4D: 12 06 29 01 02 00 
#line 6745 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid   = PCH_SETUP.PcieRootPortAspm[12],
>00007B53: 05 91 47 04 48 04 FA 02 02 00 73 01 10 10 00 04 00 
             prompt   = STRING_TOKEN(0x0447),
             help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007B64: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>00007B6B: 09 07 4B 04 00 00 02 




#line 6756 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
             option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>00007B72: 09 07 4D 04 00 00 04 
         endoneof;
>00007B79: 29 02 

     endif;
>00007B7B: 29 02 
#line 6761 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[12],
>00007B7D: 05 91 51 04 52 04 FB 02 02 00 63 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00007B8E: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>00007B95: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>00007B9C: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007BA3: 09 07 55 04 30 00 03 
      endoneof;
>00007BAA: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[12],
>00007BAC: 05 91 23 06 2B 06 FC 02 02 00 C2 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x0623),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>00007BBD: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>00007BC4: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>00007BCB: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>00007BD2: 09 07 2E 06 00 00 02 
      endoneof;
>00007BD9: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[12],
>00007BDB: 05 91 3C 06 44 06 FD 02 02 00 AE 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x063C),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00007BEC: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007BF3: 09 07 39 07 30 00 01 
      endoneof;
>00007BFA: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[12],
>00007BFC: 05 91 61 04 62 04 FE 02 02 00 87 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007C0D: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00007C14: 09 07 F9 02 00 00 01 
      endoneof;
>00007C1B: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[12],
>00007C1D: 05 91 63 04 64 04 FF 02 02 00 9B 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007C2E: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00007C35: 09 07 F9 02 00 00 01 
      endoneof;
>00007C3C: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[12],
>00007C3E: 05 91 65 04 66 04 00 03 02 00 AF 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007C4F: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00007C56: 09 07 F9 02 00 00 01 
      endoneof;
>00007C5D: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[12],
>00007C5F: 05 91 67 04 68 04 01 03 02 00 C3 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007C70: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00007C77: 09 07 F9 02 00 00 01 
      endoneof;
>00007C7E: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[12],
>00007C80: 05 91 78 04 79 04 02 03 02 00 D7 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007C91: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00007C98: 09 07 F9 02 00 00 01 
      endoneof;
>00007C9F: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[12],
>00007CA1: 05 91 7A 04 7B 04 03 03 02 00 EB 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007CB2: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00007CB9: 09 07 F9 02 00 00 01 
      endoneof;
>00007CC0: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[12],
>00007CC2: 05 91 7C 04 7D 04 04 03 02 00 FF 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007CD3: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00007CDA: 09 07 F9 02 00 00 01 
      endoneof;
>00007CE1: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[12],
>00007CE3: 05 91 7E 04 7F 04 05 03 02 00 13 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007CF4: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00007CFB: 09 07 F9 02 00 00 01 
      endoneof;
>00007D02: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[12],
>00007D04: 05 91 B9 04 BA 04 06 03 02 00 27 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007D15: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00007D1C: 09 07 F9 02 00 00 01 
      endoneof;
>00007D23: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[12],
>00007D25: 05 91 45 06 46 06 07 03 02 00 FF 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00007D36: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007D3D: 09 07 39 07 30 00 01 
      endoneof;
>00007D44: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[12],
>00007D46: 05 91 56 04 57 04 08 03 02 00 3B 03 10 10 00 03 00 
         prompt   = STRING_TOKEN (0x0456),
         help     = STRING_TOKEN (0x0457),
         option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007D57: 09 07 A8 00 30 00 00 
         option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>00007D5E: 09 07 58 04 00 00 01 
         option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>00007D65: 09 07 59 04 00 00 02 
         option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>00007D6C: 09 07 5A 04 00 00 03 
      endoneof;
>00007D73: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[12],
>00007D75: 05 91 80 04 81 04 09 03 02 00 D7 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00007D86: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007D8D: 09 07 39 07 30 00 01 
      endoneof;
>00007D94: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[12],
>00007D96: 05 91 FA 06 02 07 0A 03 02 00 13 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06FA),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007DA7: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>00007DAE: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>00007DB5: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>00007DBC: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>00007DC3: 09 07 07 07 00 00 04 
      endoneof;
>00007DCA: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[12],
>00007DCC: 05 91 82 04 83 04 0B 03 02 00 EB 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007DDD: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>00007DE4: 09 07 85 04 00 00 01 
      endoneof;
>00007DEB: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[12],
>00007DED: 05 91 69 04 6A 04 0C 03 02 00 84 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00007DFE: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>00007E05: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>00007E0C: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>00007E13: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>00007E1A: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>00007E21: 09 07 A7 00 00 00 09 
      endoneof;
>00007E28: 29 02 

      text
>00007E2A: 03 08 8F 04 AA 00 9C 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x049C),
        flags  = 0, key = 0;

      text
>00007E32: 03 08 A4 04 AA 00 B1 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04B1),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>00007E3A: 02 87 57 06 00 00 00 
>00007E41: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[12],
>00007E43: 05 91 64 06 6C 06 0D 03 02 00 8A 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0664),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>00007E54: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007E5B: 09 07 39 07 30 00 01 
      endoneof;
>00007E62: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[12] == 0;
>00007E64: 0A 82 
>00007E66: 12 06 0D 03 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[12],
>00007E6C: 05 91 AA 06 D3 06 0E 03 02 00 B2 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x06AA),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00007E7D: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00007E84: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007E8B: 09 07 F8 02 30 00 02 
        endoneof;
>00007E92: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[12] == 1;
>00007E94: 0A 82 
>00007E96: 12 86 0E 03 01 00 
>00007E9C: 17 02 
>00007E9E: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[12],
>00007EA0: 07 94 AB 06 D5 06 0F 03 02 00 0E 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06AB),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00007EB4: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00007EBB: 5B 07 01 00 01 3C 00 
          endnumeric;
>00007EC2: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[12],
>00007EC4: 05 91 AC 06 D6 06 10 03 02 00 C6 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06AC),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00007ED5: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00007EDC: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007EE3: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00007EEA: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00007EF1: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00007EF8: 09 07 56 06 00 00 05 
          endoneof;
>00007EFF: 29 02 
        endif;
>00007F01: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[12],
>00007F03: 05 91 6E 06 D4 06 11 03 02 00 DA 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00007F14: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00007F1B: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007F22: 09 07 F8 02 30 00 02 
        endoneof;
>00007F29: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[12] == 1;
>00007F2B: 0A 82 
>00007F2D: 12 86 11 03 01 00 
>00007F33: 17 02 
>00007F35: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[12],
>00007F37: 07 94 AD 06 D7 06 12 03 02 00 36 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06AD),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00007F4B: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00007F52: 5B 07 01 00 01 3C 00 
          endnumeric;
>00007F59: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[12],
>00007F5B: 05 91 AE 06 D8 06 13 03 02 00 EE 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06AE),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00007F6C: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00007F73: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007F7A: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00007F81: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00007F88: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00007F8F: 09 07 56 06 00 00 05 
          endoneof;
>00007F96: 29 02 
        endif;
>00007F98: 29 02 
      endif;
>00007F9A: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>00007F9C: 02 87 AA 00 00 00 00 
>00007FA3: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[12],
>00007FA5: 05 91 E5 06 ED 06 14 03 02 00 9E 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06E5),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00007FB6: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>00007FBD: 09 07 39 07 00 00 01 
      endoneof;
>00007FC4: 29 02 

    endif;
>00007FC6: 29 02 
  endform;
>00007FC8: 29 02 

  form formid = 0x6E,
>00007FCA: 01 86 6E 00 12 04 

    title     = STRING_TOKEN(0x0412);

     checkbox varid    = PCH_SETUP.PcieRootPortEn[13],
>00007FD0: 06 8E 3C 04 44 04 15 03 02 00 60 01 00 03 
         prompt   = STRING_TOKEN(0x043C),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
     endcheckbox;
>00007FDE: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[13] == 0x0;
>00007FE0: 0A 82 
>00007FE2: 12 06 15 03 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>00007FE8: 0A 82 
>00007FEA: 12 06 29 01 02 00 
#line 7014 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid   = PCH_SETUP.PcieRootPortAspm[13],
>00007FF0: 05 91 47 04 48 04 16 03 02 00 74 01 10 10 00 04 00 
             prompt   = STRING_TOKEN(0x0447),
             help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008001: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>00008008: 09 07 4B 04 00 00 02 




#line 7025 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
             option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>0000800F: 09 07 4D 04 00 00 04 
         endoneof;
>00008016: 29 02 

     endif;
>00008018: 29 02 
#line 7030 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[13],
>0000801A: 05 91 51 04 52 04 17 03 02 00 64 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000802B: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>00008032: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>00008039: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008040: 09 07 55 04 30 00 03 
      endoneof;
>00008047: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[13],
>00008049: 05 91 24 06 2B 06 18 03 02 00 C3 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x0624),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000805A: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>00008061: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>00008068: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>0000806F: 09 07 2E 06 00 00 02 
      endoneof;
>00008076: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[13],
>00008078: 05 91 3D 06 44 06 19 03 02 00 AF 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x063D),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00008089: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008090: 09 07 39 07 30 00 01 
      endoneof;
>00008097: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[13],
>00008099: 05 91 61 04 62 04 1A 03 02 00 88 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000080AA: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000080B1: 09 07 F9 02 00 00 01 
      endoneof;
>000080B8: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[13],
>000080BA: 05 91 63 04 64 04 1B 03 02 00 9C 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000080CB: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000080D2: 09 07 F9 02 00 00 01 
      endoneof;
>000080D9: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[13],
>000080DB: 05 91 65 04 66 04 1C 03 02 00 B0 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000080EC: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000080F3: 09 07 F9 02 00 00 01 
      endoneof;
>000080FA: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[13],
>000080FC: 05 91 67 04 68 04 1D 03 02 00 C4 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000810D: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008114: 09 07 F9 02 00 00 01 
      endoneof;
>0000811B: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[13],
>0000811D: 05 91 78 04 79 04 1E 03 02 00 D8 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000812E: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008135: 09 07 F9 02 00 00 01 
      endoneof;
>0000813C: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[13],
>0000813E: 05 91 7A 04 7B 04 1F 03 02 00 EC 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000814F: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008156: 09 07 F9 02 00 00 01 
      endoneof;
>0000815D: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[13],
>0000815F: 05 91 7C 04 7D 04 20 03 02 00 00 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008170: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008177: 09 07 F9 02 00 00 01 
      endoneof;
>0000817E: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[13],
>00008180: 05 91 7E 04 7F 04 21 03 02 00 14 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008191: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008198: 09 07 F9 02 00 00 01 
      endoneof;
>0000819F: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[13],
>000081A1: 05 91 B9 04 BA 04 22 03 02 00 28 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000081B2: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000081B9: 09 07 F9 02 00 00 01 
      endoneof;
>000081C0: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[13],
>000081C2: 05 91 45 06 46 06 23 03 02 00 00 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000081D3: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000081DA: 09 07 39 07 30 00 01 
      endoneof;
>000081E1: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[13],
>000081E3: 05 91 56 04 57 04 24 03 02 00 3C 03 10 10 00 03 00 
         prompt   = STRING_TOKEN (0x0456),
         help     = STRING_TOKEN (0x0457),
         option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000081F4: 09 07 A8 00 30 00 00 
         option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>000081FB: 09 07 58 04 00 00 01 
         option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>00008202: 09 07 59 04 00 00 02 
         option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>00008209: 09 07 5A 04 00 00 03 
      endoneof;
>00008210: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[13],
>00008212: 05 91 80 04 81 04 25 03 02 00 D8 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00008223: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000822A: 09 07 39 07 30 00 01 
      endoneof;
>00008231: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[13],
>00008233: 05 91 FB 06 02 07 26 03 02 00 14 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06FB),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008244: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>0000824B: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>00008252: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>00008259: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>00008260: 09 07 07 07 00 00 04 
      endoneof;
>00008267: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[13],
>00008269: 05 91 82 04 83 04 27 03 02 00 EC 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000827A: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>00008281: 09 07 85 04 00 00 01 
      endoneof;
>00008288: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[13],
>0000828A: 05 91 69 04 6A 04 28 03 02 00 85 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000829B: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>000082A2: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>000082A9: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>000082B0: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>000082B7: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>000082BE: 09 07 A7 00 00 00 09 
      endoneof;
>000082C5: 29 02 

      text
>000082C7: 03 08 8F 04 AA 00 9D 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x049D),
        flags  = 0, key = 0;

      text
>000082CF: 03 08 A4 04 AA 00 B2 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04B2),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>000082D7: 02 87 57 06 00 00 00 
>000082DE: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[13],
>000082E0: 05 91 65 06 6C 06 29 03 02 00 8B 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0665),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>000082F1: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000082F8: 09 07 39 07 30 00 01 
      endoneof;
>000082FF: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[13] == 0;
>00008301: 0A 82 
>00008303: 12 06 29 03 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[13],
>00008309: 05 91 AF 06 D3 06 2A 03 02 00 B3 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x06AF),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000831A: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00008321: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008328: 09 07 F8 02 30 00 02 
        endoneof;
>0000832F: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[13] == 1;
>00008331: 0A 82 
>00008333: 12 86 2A 03 01 00 
>00008339: 17 02 
>0000833B: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[13],
>0000833D: 07 94 B0 06 D5 06 2B 03 02 00 10 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06B0),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00008351: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00008358: 5B 07 01 00 01 3C 00 
          endnumeric;
>0000835F: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[13],
>00008361: 05 91 B1 06 D6 06 2C 03 02 00 C7 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06B1),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00008372: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00008379: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008380: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00008387: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>0000838E: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00008395: 09 07 56 06 00 00 05 
          endoneof;
>0000839C: 29 02 
        endif;
>0000839E: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[13],
>000083A0: 05 91 6E 06 D4 06 2D 03 02 00 DB 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000083B1: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>000083B8: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000083BF: 09 07 F8 02 30 00 02 
        endoneof;
>000083C6: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[13] == 1;
>000083C8: 0A 82 
>000083CA: 12 86 2D 03 01 00 
>000083D0: 17 02 
>000083D2: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[13],
>000083D4: 07 94 B2 06 D7 06 2E 03 02 00 38 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06B2),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>000083E8: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>000083EF: 5B 07 01 00 01 3C 00 
          endnumeric;
>000083F6: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[13],
>000083F8: 05 91 B3 06 D8 06 2F 03 02 00 EF 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06B3),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00008409: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00008410: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008417: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>0000841E: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00008425: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>0000842C: 09 07 56 06 00 00 05 
          endoneof;
>00008433: 29 02 
        endif;
>00008435: 29 02 
      endif;
>00008437: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>00008439: 02 87 AA 00 00 00 00 
>00008440: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[13],
>00008442: 05 91 E6 06 ED 06 30 03 02 00 9F 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06E6),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008453: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000845A: 09 07 39 07 00 00 01 
      endoneof;
>00008461: 29 02 

    endif;
>00008463: 29 02 
  endform;
>00008465: 29 02 

  form formid = 0x6F,
>00008467: 01 86 6F 00 14 04 

    title     = STRING_TOKEN(0x0414);

     checkbox varid    = PCH_SETUP.PcieRootPortEn[14],
>0000846D: 06 8E 3D 04 44 04 31 03 02 00 61 01 00 03 
         prompt   = STRING_TOKEN(0x043D),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
     endcheckbox;
>0000847B: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[14] == 0x0;
>0000847D: 0A 82 
>0000847F: 12 06 31 03 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>00008485: 0A 82 
>00008487: 12 06 29 01 02 00 
#line 7283 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid   = PCH_SETUP.PcieRootPortAspm[14],
>0000848D: 05 91 47 04 48 04 32 03 02 00 75 01 10 10 00 04 00 
             prompt   = STRING_TOKEN(0x0447),
             help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000849E: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>000084A5: 09 07 4B 04 00 00 02 




#line 7294 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
             option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>000084AC: 09 07 4D 04 00 00 04 
         endoneof;
>000084B3: 29 02 

     endif;
>000084B5: 29 02 
#line 7299 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[14],
>000084B7: 05 91 51 04 52 04 33 03 02 00 65 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000084C8: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>000084CF: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>000084D6: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000084DD: 09 07 55 04 30 00 03 
      endoneof;
>000084E4: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[14],
>000084E6: 05 91 25 06 2B 06 34 03 02 00 C4 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x0625),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>000084F7: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>000084FE: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>00008505: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>0000850C: 09 07 2E 06 00 00 02 
      endoneof;
>00008513: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[14],
>00008515: 05 91 3E 06 44 06 35 03 02 00 B0 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x063E),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00008526: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000852D: 09 07 39 07 30 00 01 
      endoneof;
>00008534: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[14],
>00008536: 05 91 61 04 62 04 36 03 02 00 89 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008547: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000854E: 09 07 F9 02 00 00 01 
      endoneof;
>00008555: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[14],
>00008557: 05 91 63 04 64 04 37 03 02 00 9D 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008568: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000856F: 09 07 F9 02 00 00 01 
      endoneof;
>00008576: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[14],
>00008578: 05 91 65 04 66 04 38 03 02 00 B1 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008589: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008590: 09 07 F9 02 00 00 01 
      endoneof;
>00008597: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[14],
>00008599: 05 91 67 04 68 04 39 03 02 00 C5 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000085AA: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000085B1: 09 07 F9 02 00 00 01 
      endoneof;
>000085B8: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[14],
>000085BA: 05 91 78 04 79 04 3A 03 02 00 D9 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000085CB: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000085D2: 09 07 F9 02 00 00 01 
      endoneof;
>000085D9: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[14],
>000085DB: 05 91 7A 04 7B 04 3B 03 02 00 ED 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000085EC: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000085F3: 09 07 F9 02 00 00 01 
      endoneof;
>000085FA: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[14],
>000085FC: 05 91 7C 04 7D 04 3C 03 02 00 01 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000860D: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008614: 09 07 F9 02 00 00 01 
      endoneof;
>0000861B: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[14],
>0000861D: 05 91 7E 04 7F 04 3D 03 02 00 15 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000862E: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008635: 09 07 F9 02 00 00 01 
      endoneof;
>0000863C: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[14],
>0000863E: 05 91 B9 04 BA 04 3E 03 02 00 29 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000864F: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008656: 09 07 F9 02 00 00 01 
      endoneof;
>0000865D: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[14],
>0000865F: 05 91 45 06 46 06 3F 03 02 00 01 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00008670: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008677: 09 07 39 07 30 00 01 
      endoneof;
>0000867E: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[14],
>00008680: 05 91 56 04 57 04 40 03 02 00 3D 03 10 10 00 03 00 
         prompt   = STRING_TOKEN (0x0456),
         help     = STRING_TOKEN (0x0457),
         option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008691: 09 07 A8 00 30 00 00 
         option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>00008698: 09 07 58 04 00 00 01 
         option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>0000869F: 09 07 59 04 00 00 02 
         option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>000086A6: 09 07 5A 04 00 00 03 
      endoneof;
>000086AD: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[14],
>000086AF: 05 91 80 04 81 04 41 03 02 00 D9 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>000086C0: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000086C7: 09 07 39 07 30 00 01 
      endoneof;
>000086CE: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[14],
>000086D0: 05 91 FC 06 02 07 42 03 02 00 15 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06FC),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000086E1: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>000086E8: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>000086EF: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>000086F6: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>000086FD: 09 07 07 07 00 00 04 
      endoneof;
>00008704: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[14],
>00008706: 05 91 82 04 83 04 43 03 02 00 ED 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008717: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>0000871E: 09 07 85 04 00 00 01 
      endoneof;
>00008725: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[14],
>00008727: 05 91 69 04 6A 04 44 03 02 00 86 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00008738: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>0000873F: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>00008746: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>0000874D: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>00008754: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>0000875B: 09 07 A7 00 00 00 09 
      endoneof;
>00008762: 29 02 

      text
>00008764: 03 08 8F 04 AA 00 9E 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x049E),
        flags  = 0, key = 0;

      text
>0000876C: 03 08 A4 04 AA 00 B3 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04B3),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>00008774: 02 87 57 06 00 00 00 
>0000877B: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[14],
>0000877D: 05 91 66 06 6C 06 45 03 02 00 8C 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0666),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000878E: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008795: 09 07 39 07 30 00 01 
      endoneof;
>0000879C: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[14] == 0;
>0000879E: 0A 82 
>000087A0: 12 06 45 03 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[14],
>000087A6: 05 91 B4 06 D3 06 46 03 02 00 B4 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x06B4),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000087B7: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>000087BE: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000087C5: 09 07 F8 02 30 00 02 
        endoneof;
>000087CC: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[14] == 1;
>000087CE: 0A 82 
>000087D0: 12 86 46 03 01 00 
>000087D6: 17 02 
>000087D8: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[14],
>000087DA: 07 94 B5 06 D5 06 47 03 02 00 12 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06B5),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>000087EE: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>000087F5: 5B 07 01 00 01 3C 00 
          endnumeric;
>000087FC: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[14],
>000087FE: 05 91 B6 06 D6 06 48 03 02 00 C8 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06B6),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>0000880F: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00008816: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000881D: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00008824: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>0000882B: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00008832: 09 07 56 06 00 00 05 
          endoneof;
>00008839: 29 02 
        endif;
>0000883B: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[14],
>0000883D: 05 91 6E 06 D4 06 49 03 02 00 DC 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000884E: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00008855: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000885C: 09 07 F8 02 30 00 02 
        endoneof;
>00008863: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[14] == 1;
>00008865: 0A 82 
>00008867: 12 86 49 03 01 00 
>0000886D: 17 02 
>0000886F: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[14],
>00008871: 07 94 B7 06 D7 06 4A 03 02 00 3A 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06B7),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00008885: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>0000888C: 5B 07 01 00 01 3C 00 
          endnumeric;
>00008893: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[14],
>00008895: 05 91 B8 06 D8 06 4B 03 02 00 F0 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06B8),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>000088A6: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>000088AD: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000088B4: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>000088BB: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>000088C2: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>000088C9: 09 07 56 06 00 00 05 
          endoneof;
>000088D0: 29 02 
        endif;
>000088D2: 29 02 
      endif;
>000088D4: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>000088D6: 02 87 AA 00 00 00 00 
>000088DD: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[14],
>000088DF: 05 91 E7 06 ED 06 4C 03 02 00 A0 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06E7),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000088F0: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>000088F7: 09 07 39 07 00 00 01 
      endoneof;
>000088FE: 29 02 

    endif;
>00008900: 29 02 
  endform;
>00008902: 29 02 

  form formid = 0x70,
>00008904: 01 86 70 00 16 04 

    title     = STRING_TOKEN(0x0416);

     checkbox varid    = PCH_SETUP.PcieRootPortEn[15],
>0000890A: 06 8E 3E 04 44 04 4D 03 02 00 62 01 00 03 
         prompt   = STRING_TOKEN(0x043E),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
     endcheckbox;
>00008918: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[15] == 0x0;
>0000891A: 0A 82 
>0000891C: 12 06 4D 03 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>00008922: 0A 82 
>00008924: 12 06 29 01 02 00 
#line 7552 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid   = PCH_SETUP.PcieRootPortAspm[15],
>0000892A: 05 91 47 04 48 04 4E 03 02 00 76 01 10 10 00 04 00 
             prompt   = STRING_TOKEN(0x0447),
             help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000893B: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>00008942: 09 07 4B 04 00 00 02 




#line 7563 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
             option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>00008949: 09 07 4D 04 00 00 04 
         endoneof;
>00008950: 29 02 

     endif;
>00008952: 29 02 
#line 7568 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[15],
>00008954: 05 91 51 04 52 04 4F 03 02 00 66 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00008965: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>0000896C: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>00008973: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000897A: 09 07 55 04 30 00 03 
      endoneof;
>00008981: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[15],
>00008983: 05 91 26 06 2B 06 50 03 02 00 C5 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x0626),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>00008994: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>0000899B: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>000089A2: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>000089A9: 09 07 2E 06 00 00 02 
      endoneof;
>000089B0: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[15],
>000089B2: 05 91 3F 06 44 06 51 03 02 00 B1 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x063F),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000089C3: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000089CA: 09 07 39 07 30 00 01 
      endoneof;
>000089D1: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[15],
>000089D3: 05 91 61 04 62 04 52 03 02 00 8A 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000089E4: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000089EB: 09 07 F9 02 00 00 01 
      endoneof;
>000089F2: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[15],
>000089F4: 05 91 63 04 64 04 53 03 02 00 9E 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008A05: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008A0C: 09 07 F9 02 00 00 01 
      endoneof;
>00008A13: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[15],
>00008A15: 05 91 65 04 66 04 54 03 02 00 B2 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008A26: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008A2D: 09 07 F9 02 00 00 01 
      endoneof;
>00008A34: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[15],
>00008A36: 05 91 67 04 68 04 55 03 02 00 C6 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008A47: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008A4E: 09 07 F9 02 00 00 01 
      endoneof;
>00008A55: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[15],
>00008A57: 05 91 78 04 79 04 56 03 02 00 DA 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008A68: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008A6F: 09 07 F9 02 00 00 01 
      endoneof;
>00008A76: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[15],
>00008A78: 05 91 7A 04 7B 04 57 03 02 00 EE 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008A89: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008A90: 09 07 F9 02 00 00 01 
      endoneof;
>00008A97: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[15],
>00008A99: 05 91 7C 04 7D 04 58 03 02 00 02 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008AAA: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008AB1: 09 07 F9 02 00 00 01 
      endoneof;
>00008AB8: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[15],
>00008ABA: 05 91 7E 04 7F 04 59 03 02 00 16 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008ACB: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008AD2: 09 07 F9 02 00 00 01 
      endoneof;
>00008AD9: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[15],
>00008ADB: 05 91 B9 04 BA 04 5A 03 02 00 2A 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008AEC: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008AF3: 09 07 F9 02 00 00 01 
      endoneof;
>00008AFA: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[15],
>00008AFC: 05 91 45 06 46 06 5B 03 02 00 02 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00008B0D: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008B14: 09 07 39 07 30 00 01 
      endoneof;
>00008B1B: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[15],
>00008B1D: 05 91 56 04 57 04 5C 03 02 00 3E 03 10 10 00 03 00 
         prompt   = STRING_TOKEN (0x0456),
         help     = STRING_TOKEN (0x0457),
         option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008B2E: 09 07 A8 00 30 00 00 
         option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>00008B35: 09 07 58 04 00 00 01 
         option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>00008B3C: 09 07 59 04 00 00 02 
         option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>00008B43: 09 07 5A 04 00 00 03 
      endoneof;
>00008B4A: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[15],
>00008B4C: 05 91 80 04 81 04 5D 03 02 00 DA 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00008B5D: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008B64: 09 07 39 07 30 00 01 
      endoneof;
>00008B6B: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[15],
>00008B6D: 05 91 FD 06 02 07 5E 03 02 00 16 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06FD),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008B7E: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>00008B85: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>00008B8C: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>00008B93: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>00008B9A: 09 07 07 07 00 00 04 
      endoneof;
>00008BA1: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[15],
>00008BA3: 05 91 82 04 83 04 5F 03 02 00 EE 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008BB4: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>00008BBB: 09 07 85 04 00 00 01 
      endoneof;
>00008BC2: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[15],
>00008BC4: 05 91 69 04 6A 04 60 03 02 00 87 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00008BD5: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>00008BDC: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>00008BE3: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>00008BEA: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>00008BF1: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>00008BF8: 09 07 A7 00 00 00 09 
      endoneof;
>00008BFF: 29 02 

      text
>00008C01: 03 08 8F 04 AA 00 9F 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x049F),
        flags  = 0, key = 0;

      text
>00008C09: 03 08 A4 04 AA 00 B4 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04B4),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>00008C11: 02 87 57 06 00 00 00 
>00008C18: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[15],
>00008C1A: 05 91 67 06 6C 06 61 03 02 00 8D 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0667),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>00008C2B: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008C32: 09 07 39 07 30 00 01 
      endoneof;
>00008C39: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[15] == 0;
>00008C3B: 0A 82 
>00008C3D: 12 06 61 03 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[15],
>00008C43: 05 91 B9 06 D3 06 62 03 02 00 B5 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x06B9),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00008C54: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00008C5B: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008C62: 09 07 F8 02 30 00 02 
        endoneof;
>00008C69: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[15] == 1;
>00008C6B: 0A 82 
>00008C6D: 12 86 62 03 01 00 
>00008C73: 17 02 
>00008C75: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[15],
>00008C77: 07 94 BA 06 D5 06 63 03 02 00 14 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06BA),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00008C8B: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00008C92: 5B 07 01 00 01 3C 00 
          endnumeric;
>00008C99: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[15],
>00008C9B: 05 91 BB 06 D6 06 64 03 02 00 C9 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06BB),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00008CAC: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00008CB3: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008CBA: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00008CC1: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00008CC8: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00008CCF: 09 07 56 06 00 00 05 
          endoneof;
>00008CD6: 29 02 
        endif;
>00008CD8: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[15],
>00008CDA: 05 91 6E 06 D4 06 65 03 02 00 DD 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00008CEB: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00008CF2: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008CF9: 09 07 F8 02 30 00 02 
        endoneof;
>00008D00: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[15] == 1;
>00008D02: 0A 82 
>00008D04: 12 86 65 03 01 00 
>00008D0A: 17 02 
>00008D0C: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[15],
>00008D0E: 07 94 BC 06 D7 06 66 03 02 00 3C 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06BC),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00008D22: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00008D29: 5B 07 01 00 01 3C 00 
          endnumeric;
>00008D30: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[15],
>00008D32: 05 91 BD 06 D8 06 67 03 02 00 F1 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06BD),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00008D43: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00008D4A: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008D51: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00008D58: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00008D5F: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00008D66: 09 07 56 06 00 00 05 
          endoneof;
>00008D6D: 29 02 
        endif;
>00008D6F: 29 02 
      endif;
>00008D71: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>00008D73: 02 87 AA 00 00 00 00 
>00008D7A: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[15],
>00008D7C: 05 91 E8 06 ED 06 68 03 02 00 A1 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06E8),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008D8D: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>00008D94: 09 07 39 07 00 00 01 
      endoneof;
>00008D9B: 29 02 

    endif;
>00008D9D: 29 02 
  endform;
>00008D9F: 29 02 

  form formid = 0x71,
>00008DA1: 01 86 71 00 18 04 

    title     = STRING_TOKEN(0x0418);

     checkbox varid    = PCH_SETUP.PcieRootPortEn[16],
>00008DA7: 06 8E 3F 04 44 04 69 03 02 00 63 01 00 03 
         prompt   = STRING_TOKEN(0x043F),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
     endcheckbox;
>00008DB5: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[16] == 0x0;
>00008DB7: 0A 82 
>00008DB9: 12 06 69 03 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>00008DBF: 0A 82 
>00008DC1: 12 06 29 01 02 00 
#line 7821 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid   = PCH_SETUP.PcieRootPortAspm[16],
>00008DC7: 05 91 47 04 48 04 6A 03 02 00 77 01 10 10 00 04 00 
             prompt   = STRING_TOKEN(0x0447),
             help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008DD8: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>00008DDF: 09 07 4B 04 00 00 02 




#line 7832 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
             option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>00008DE6: 09 07 4D 04 00 00 04 
         endoneof;
>00008DED: 29 02 

     endif;
>00008DEF: 29 02 
#line 7837 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[16],
>00008DF1: 05 91 51 04 52 04 6B 03 02 00 67 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00008E02: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>00008E09: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>00008E10: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008E17: 09 07 55 04 30 00 03 
      endoneof;
>00008E1E: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[16],
>00008E20: 05 91 27 06 2B 06 6C 03 02 00 C6 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x0627),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>00008E31: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>00008E38: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>00008E3F: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>00008E46: 09 07 2E 06 00 00 02 
      endoneof;
>00008E4D: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[16],
>00008E4F: 05 91 40 06 44 06 6D 03 02 00 B2 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0640),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00008E60: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008E67: 09 07 39 07 30 00 01 
      endoneof;
>00008E6E: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[16],
>00008E70: 05 91 61 04 62 04 6E 03 02 00 8B 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008E81: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008E88: 09 07 F9 02 00 00 01 
      endoneof;
>00008E8F: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[16],
>00008E91: 05 91 63 04 64 04 6F 03 02 00 9F 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008EA2: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008EA9: 09 07 F9 02 00 00 01 
      endoneof;
>00008EB0: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[16],
>00008EB2: 05 91 65 04 66 04 70 03 02 00 B3 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008EC3: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008ECA: 09 07 F9 02 00 00 01 
      endoneof;
>00008ED1: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[16],
>00008ED3: 05 91 67 04 68 04 71 03 02 00 C7 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008EE4: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008EEB: 09 07 F9 02 00 00 01 
      endoneof;
>00008EF2: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[16],
>00008EF4: 05 91 78 04 79 04 72 03 02 00 DB 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008F05: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008F0C: 09 07 F9 02 00 00 01 
      endoneof;
>00008F13: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[16],
>00008F15: 05 91 7A 04 7B 04 73 03 02 00 EF 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008F26: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008F2D: 09 07 F9 02 00 00 01 
      endoneof;
>00008F34: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[16],
>00008F36: 05 91 7C 04 7D 04 74 03 02 00 03 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008F47: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008F4E: 09 07 F9 02 00 00 01 
      endoneof;
>00008F55: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[16],
>00008F57: 05 91 7E 04 7F 04 75 03 02 00 17 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008F68: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008F6F: 09 07 F9 02 00 00 01 
      endoneof;
>00008F76: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[16],
>00008F78: 05 91 B9 04 BA 04 76 03 02 00 2B 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008F89: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00008F90: 09 07 F9 02 00 00 01 
      endoneof;
>00008F97: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[16],
>00008F99: 05 91 45 06 46 06 77 03 02 00 03 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00008FAA: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008FB1: 09 07 39 07 30 00 01 
      endoneof;
>00008FB8: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[16],
>00008FBA: 05 91 56 04 57 04 78 03 02 00 3F 03 10 10 00 03 00 
         prompt   = STRING_TOKEN (0x0456),
         help     = STRING_TOKEN (0x0457),
         option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00008FCB: 09 07 A8 00 30 00 00 
         option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>00008FD2: 09 07 58 04 00 00 01 
         option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>00008FD9: 09 07 59 04 00 00 02 
         option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>00008FE0: 09 07 5A 04 00 00 03 
      endoneof;
>00008FE7: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[16],
>00008FE9: 05 91 80 04 81 04 79 03 02 00 DB 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00008FFA: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009001: 09 07 39 07 30 00 01 
      endoneof;
>00009008: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[16],
>0000900A: 05 91 FE 06 02 07 7A 03 02 00 17 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06FE),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000901B: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>00009022: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>00009029: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>00009030: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>00009037: 09 07 07 07 00 00 04 
      endoneof;
>0000903E: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[16],
>00009040: 05 91 82 04 83 04 7B 03 02 00 EF 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009051: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>00009058: 09 07 85 04 00 00 01 
      endoneof;
>0000905F: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[16],
>00009061: 05 91 69 04 6A 04 7C 03 02 00 88 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00009072: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>00009079: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>00009080: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>00009087: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>0000908E: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>00009095: 09 07 A7 00 00 00 09 
      endoneof;
>0000909C: 29 02 
      text
>0000909E: 03 08 8F 04 AA 00 A0 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x04A0),
        flags  = 0, key = 0;

      text
>000090A6: 03 08 A4 04 AA 00 B5 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04B5),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>000090AE: 02 87 57 06 00 00 00 
>000090B5: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[16],
>000090B7: 05 91 68 06 6C 06 7D 03 02 00 8E 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0668),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>000090C8: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000090CF: 09 07 39 07 30 00 01 
      endoneof;
>000090D6: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[16] == 0;
>000090D8: 0A 82 
>000090DA: 12 06 7D 03 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[16],
>000090E0: 05 91 BE 06 D3 06 7E 03 02 00 B6 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x06BE),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000090F1: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>000090F8: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000090FF: 09 07 F8 02 30 00 02 
        endoneof;
>00009106: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[16] == 1;
>00009108: 0A 82 
>0000910A: 12 86 7E 03 01 00 
>00009110: 17 02 
>00009112: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[16],
>00009114: 07 94 BF 06 D5 06 7F 03 02 00 16 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06BF),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00009128: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>0000912F: 5B 07 01 00 01 3C 00 
          endnumeric;
>00009136: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[16],
>00009138: 05 91 C0 06 D6 06 80 03 02 00 CA 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06C0),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00009149: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00009150: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009157: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>0000915E: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00009165: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>0000916C: 09 07 56 06 00 00 05 
          endoneof;
>00009173: 29 02 
        endif;
>00009175: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[16],
>00009177: 05 91 6E 06 D4 06 81 03 02 00 DE 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00009188: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>0000918F: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009196: 09 07 F8 02 30 00 02 
        endoneof;
>0000919D: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[16] == 1;
>0000919F: 0A 82 
>000091A1: 12 86 81 03 01 00 
>000091A7: 17 02 
>000091A9: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[16],
>000091AB: 07 94 C1 06 D7 06 82 03 02 00 3E 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06C1),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>000091BF: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>000091C6: 5B 07 01 00 01 3C 00 
          endnumeric;
>000091CD: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[16],
>000091CF: 05 91 C2 06 D8 06 83 03 02 00 F2 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06C2),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>000091E0: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>000091E7: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000091EE: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>000091F5: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>000091FC: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00009203: 09 07 56 06 00 00 05 
          endoneof;
>0000920A: 29 02 
        endif;
>0000920C: 29 02 
      endif;
>0000920E: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>00009210: 02 87 AA 00 00 00 00 
>00009217: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[16],
>00009219: 05 91 E9 06 ED 06 84 03 02 00 A2 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06E9),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000922A: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>00009231: 09 07 39 07 00 00 01 
      endoneof;
>00009238: 29 02 

    endif;
>0000923A: 29 02 
  endform;
>0000923C: 29 02 

  form formid = 0x72,
>0000923E: 01 86 72 00 1A 04 

    title     = STRING_TOKEN(0x041A);

     checkbox varid    = PCH_SETUP.PcieRootPortEn[17],
>00009244: 06 8E 40 04 44 04 85 03 02 00 64 01 00 03 
         prompt   = STRING_TOKEN(0x0440),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
     endcheckbox;
>00009252: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[17] == 0x0;
>00009254: 0A 82 
>00009256: 12 06 85 03 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>0000925C: 0A 82 
>0000925E: 12 06 29 01 02 00 
#line 8089 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid   = PCH_SETUP.PcieRootPortAspm[17],
>00009264: 05 91 47 04 48 04 86 03 02 00 78 01 10 10 00 04 00 
             prompt   = STRING_TOKEN(0x0447),
             help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009275: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>0000927C: 09 07 4B 04 00 00 02 




#line 8100 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
             option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>00009283: 09 07 4D 04 00 00 04 
         endoneof;
>0000928A: 29 02 

     endif;
>0000928C: 29 02 
#line 8105 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[17],
>0000928E: 05 91 51 04 52 04 87 03 02 00 68 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000929F: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>000092A6: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>000092AD: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000092B4: 09 07 55 04 30 00 03 
      endoneof;
>000092BB: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[17],
>000092BD: 05 91 28 06 2B 06 88 03 02 00 C7 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x0628),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>000092CE: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>000092D5: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>000092DC: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>000092E3: 09 07 2E 06 00 00 02 
      endoneof;
>000092EA: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[17],
>000092EC: 05 91 41 06 44 06 89 03 02 00 B3 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0641),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000092FD: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009304: 09 07 39 07 30 00 01 
      endoneof;
>0000930B: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[17],
>0000930D: 05 91 61 04 62 04 8A 03 02 00 8C 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000931E: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009325: 09 07 F9 02 00 00 01 
      endoneof;
>0000932C: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[17],
>0000932E: 05 91 63 04 64 04 8B 03 02 00 A0 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000933F: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009346: 09 07 F9 02 00 00 01 
      endoneof;
>0000934D: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[17],
>0000934F: 05 91 65 04 66 04 8C 03 02 00 B4 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009360: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009367: 09 07 F9 02 00 00 01 
      endoneof;
>0000936E: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[17],
>00009370: 05 91 67 04 68 04 8D 03 02 00 C8 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009381: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009388: 09 07 F9 02 00 00 01 
      endoneof;
>0000938F: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[17],
>00009391: 05 91 78 04 79 04 8E 03 02 00 DC 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000093A2: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000093A9: 09 07 F9 02 00 00 01 
      endoneof;
>000093B0: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[17],
>000093B2: 05 91 7A 04 7B 04 8F 03 02 00 F0 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000093C3: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000093CA: 09 07 F9 02 00 00 01 
      endoneof;
>000093D1: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[17],
>000093D3: 05 91 7C 04 7D 04 90 03 02 00 04 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000093E4: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000093EB: 09 07 F9 02 00 00 01 
      endoneof;
>000093F2: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[17],
>000093F4: 05 91 7E 04 7F 04 91 03 02 00 18 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009405: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000940C: 09 07 F9 02 00 00 01 
      endoneof;
>00009413: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[17],
>00009415: 05 91 B9 04 BA 04 92 03 02 00 2C 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009426: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000942D: 09 07 F9 02 00 00 01 
      endoneof;
>00009434: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[17],
>00009436: 05 91 45 06 46 06 93 03 02 00 04 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00009447: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000944E: 09 07 39 07 30 00 01 
      endoneof;
>00009455: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[17],
>00009457: 05 91 56 04 57 04 94 03 02 00 40 03 10 10 00 03 00 
         prompt   = STRING_TOKEN (0x0456),
         help     = STRING_TOKEN (0x0457),
         option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009468: 09 07 A8 00 30 00 00 
         option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>0000946F: 09 07 58 04 00 00 01 
         option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>00009476: 09 07 59 04 00 00 02 
         option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>0000947D: 09 07 5A 04 00 00 03 
      endoneof;
>00009484: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[17],
>00009486: 05 91 80 04 81 04 95 03 02 00 DC 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00009497: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000949E: 09 07 39 07 30 00 01 
      endoneof;
>000094A5: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[17],
>000094A7: 05 91 FF 06 02 07 96 03 02 00 18 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x06FF),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000094B8: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>000094BF: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>000094C6: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>000094CD: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>000094D4: 09 07 07 07 00 00 04 
      endoneof;
>000094DB: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[17],
>000094DD: 05 91 82 04 83 04 97 03 02 00 F0 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000094EE: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>000094F5: 09 07 85 04 00 00 01 
      endoneof;
>000094FC: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[17],
>000094FE: 05 91 69 04 6A 04 98 03 02 00 89 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000950F: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>00009516: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>0000951D: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>00009524: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>0000952B: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>00009532: 09 07 A7 00 00 00 09 
      endoneof;
>00009539: 29 02 
      text
>0000953B: 03 08 8F 04 AA 00 A1 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x04A1),
        flags  = 0, key = 0;

      text
>00009543: 03 08 A4 04 AA 00 B6 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04B6),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>0000954B: 02 87 57 06 00 00 00 
>00009552: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[17],
>00009554: 05 91 69 06 6C 06 99 03 02 00 8F 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0669),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>00009565: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000956C: 09 07 39 07 30 00 01 
      endoneof;
>00009573: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[17] == 0;
>00009575: 0A 82 
>00009577: 12 06 99 03 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[17],
>0000957D: 05 91 C3 06 D3 06 9A 03 02 00 B7 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x06C3),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000958E: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00009595: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000959C: 09 07 F8 02 30 00 02 
        endoneof;
>000095A3: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[17] == 1;
>000095A5: 0A 82 
>000095A7: 12 86 9A 03 01 00 
>000095AD: 17 02 
>000095AF: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[17],
>000095B1: 07 94 C4 06 D5 06 9B 03 02 00 18 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06C4),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>000095C5: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>000095CC: 5B 07 01 00 01 3C 00 
          endnumeric;
>000095D3: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[17],
>000095D5: 05 91 C5 06 D6 06 9C 03 02 00 CB 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06C5),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>000095E6: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>000095ED: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000095F4: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>000095FB: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00009602: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00009609: 09 07 56 06 00 00 05 
          endoneof;
>00009610: 29 02 
        endif;
>00009612: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[17],
>00009614: 05 91 6E 06 D4 06 9D 03 02 00 DF 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00009625: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>0000962C: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009633: 09 07 F8 02 30 00 02 
        endoneof;
>0000963A: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[17] == 1;
>0000963C: 0A 82 
>0000963E: 12 86 9D 03 01 00 
>00009644: 17 02 
>00009646: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[17],
>00009648: 07 94 C6 06 D7 06 9E 03 02 00 40 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06C6),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>0000965C: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00009663: 5B 07 01 00 01 3C 00 
          endnumeric;
>0000966A: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[17],
>0000966C: 05 91 C7 06 D8 06 9F 03 02 00 F3 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06C7),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>0000967D: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00009684: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000968B: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00009692: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00009699: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>000096A0: 09 07 56 06 00 00 05 
          endoneof;
>000096A7: 29 02 
        endif;
>000096A9: 29 02 
      endif;
>000096AB: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>000096AD: 02 87 AA 00 00 00 00 
>000096B4: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[17],
>000096B6: 05 91 EA 06 ED 06 A0 03 02 00 A3 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06EA),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000096C7: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>000096CE: 09 07 39 07 00 00 01 
      endoneof;
>000096D5: 29 02 

    endif;
>000096D7: 29 02 
  endform;
>000096D9: 29 02 

  form formid = 0x73,
>000096DB: 01 86 73 00 1C 04 

    title     = STRING_TOKEN(0x041C);

     checkbox varid    = PCH_SETUP.PcieRootPortEn[18],
>000096E1: 06 8E 41 04 44 04 A1 03 02 00 65 01 00 03 
         prompt   = STRING_TOKEN(0x0441),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
     endcheckbox;
>000096EF: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[18] == 0x0;
>000096F1: 0A 82 
>000096F3: 12 06 A1 03 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>000096F9: 0A 82 
>000096FB: 12 06 29 01 02 00 
#line 8357 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid   = PCH_SETUP.PcieRootPortAspm[18],
>00009701: 05 91 47 04 48 04 A2 03 02 00 79 01 10 10 00 04 00 
             prompt   = STRING_TOKEN(0x0447),
             help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009712: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>00009719: 09 07 4B 04 00 00 02 




#line 8368 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
             option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>00009720: 09 07 4D 04 00 00 04 
         endoneof;
>00009727: 29 02 

     endif;
>00009729: 29 02 
#line 8373 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[18],
>0000972B: 05 91 51 04 52 04 A3 03 02 00 69 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000973C: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>00009743: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>0000974A: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009751: 09 07 55 04 30 00 03 
      endoneof;
>00009758: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[18],
>0000975A: 05 91 29 06 2B 06 A4 03 02 00 C8 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x0629),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000976B: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>00009772: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>00009779: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>00009780: 09 07 2E 06 00 00 02 
      endoneof;
>00009787: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[18],
>00009789: 05 91 42 06 44 06 A5 03 02 00 B4 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0642),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000979A: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000097A1: 09 07 39 07 30 00 01 
      endoneof;
>000097A8: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[18],
>000097AA: 05 91 61 04 62 04 A6 03 02 00 8D 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000097BB: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000097C2: 09 07 F9 02 00 00 01 
      endoneof;
>000097C9: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[18],
>000097CB: 05 91 63 04 64 04 A7 03 02 00 A1 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000097DC: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000097E3: 09 07 F9 02 00 00 01 
      endoneof;
>000097EA: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[18],
>000097EC: 05 91 65 04 66 04 A8 03 02 00 B5 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000097FD: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009804: 09 07 F9 02 00 00 01 
      endoneof;
>0000980B: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[18],
>0000980D: 05 91 67 04 68 04 A9 03 02 00 C9 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000981E: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009825: 09 07 F9 02 00 00 01 
      endoneof;
>0000982C: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[18],
>0000982E: 05 91 78 04 79 04 AA 03 02 00 DD 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000983F: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009846: 09 07 F9 02 00 00 01 
      endoneof;
>0000984D: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[18],
>0000984F: 05 91 7A 04 7B 04 AB 03 02 00 F1 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009860: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009867: 09 07 F9 02 00 00 01 
      endoneof;
>0000986E: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[18],
>00009870: 05 91 7C 04 7D 04 AC 03 02 00 05 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009881: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009888: 09 07 F9 02 00 00 01 
      endoneof;
>0000988F: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[18],
>00009891: 05 91 7E 04 7F 04 AD 03 02 00 19 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000098A2: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000098A9: 09 07 F9 02 00 00 01 
      endoneof;
>000098B0: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[18],
>000098B2: 05 91 B9 04 BA 04 AE 03 02 00 2D 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000098C3: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>000098CA: 09 07 F9 02 00 00 01 
      endoneof;
>000098D1: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[18],
>000098D3: 05 91 45 06 46 06 AF 03 02 00 05 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>000098E4: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>000098EB: 09 07 39 07 30 00 01 
      endoneof;
>000098F2: 29 02 
      
      oneof varid   = PCH_SETUP.PcieRootPortSpeed[18],
>000098F4: 05 91 56 04 57 04 B0 03 02 00 41 03 10 10 00 03 00 
         prompt   = STRING_TOKEN (0x0456),
         help     = STRING_TOKEN (0x0457),
         option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009905: 09 07 A8 00 30 00 00 
         option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>0000990C: 09 07 58 04 00 00 01 
         option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>00009913: 09 07 59 04 00 00 02 
         option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>0000991A: 09 07 5A 04 00 00 03 
      endoneof;
>00009921: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[18],
>00009923: 05 91 80 04 81 04 B1 03 02 00 DD 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00009934: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000993B: 09 07 39 07 30 00 01 
      endoneof;
>00009942: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[18],
>00009944: 05 91 00 07 02 07 B2 03 02 00 19 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x0700),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009955: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>0000995C: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>00009963: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>0000996A: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>00009971: 09 07 07 07 00 00 04 
      endoneof;
>00009978: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[18],
>0000997A: 05 91 82 04 83 04 B3 03 02 00 F1 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000998B: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>00009992: 09 07 85 04 00 00 01 
      endoneof;
>00009999: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[18],
>0000999B: 05 91 69 04 6A 04 B4 03 02 00 8A 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>000099AC: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>000099B3: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>000099BA: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>000099C1: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>000099C8: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>000099CF: 09 07 A7 00 00 00 09 
      endoneof;
>000099D6: 29 02 

      text
>000099D8: 03 08 8F 04 AA 00 A2 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x04A2),
        flags  = 0, key = 0;

      text
>000099E0: 03 08 A4 04 AA 00 B7 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04B7),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>000099E8: 02 87 57 06 00 00 00 
>000099EF: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[18],
>000099F1: 05 91 6A 06 6C 06 B5 03 02 00 90 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x066A),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>00009A02: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009A09: 09 07 39 07 30 00 01 
      endoneof;
>00009A10: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[18] == 0;
>00009A12: 0A 82 
>00009A14: 12 06 B5 03 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[18],
>00009A1A: 05 91 C8 06 D3 06 B6 03 02 00 B8 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x06C8),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00009A2B: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00009A32: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009A39: 09 07 F8 02 30 00 02 
        endoneof;
>00009A40: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[18] == 1;
>00009A42: 0A 82 
>00009A44: 12 86 B6 03 01 00 
>00009A4A: 17 02 
>00009A4C: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[18],
>00009A4E: 07 94 C9 06 D5 06 B7 03 02 00 1A 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06C9),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00009A62: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00009A69: 5B 07 01 00 01 3C 00 
          endnumeric;
>00009A70: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[18],
>00009A72: 05 91 CA 06 D6 06 B8 03 02 00 CC 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06CA),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00009A83: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00009A8A: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009A91: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00009A98: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00009A9F: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00009AA6: 09 07 56 06 00 00 05 
          endoneof;
>00009AAD: 29 02 
        endif;
>00009AAF: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[18],
>00009AB1: 05 91 6E 06 D4 06 B9 03 02 00 E0 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x066E),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00009AC2: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00009AC9: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009AD0: 09 07 F8 02 30 00 02 
        endoneof;
>00009AD7: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[18] == 1;
>00009AD9: 0A 82 
>00009ADB: 12 86 B9 03 01 00 
>00009AE1: 17 02 
>00009AE3: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[18],
>00009AE5: 07 94 CB 06 D7 06 BA 03 02 00 42 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06CB),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00009AF9: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00009B00: 5B 07 01 00 01 3C 00 
          endnumeric;
>00009B07: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[18],
>00009B09: 05 91 CC 06 D8 06 BB 03 02 00 F4 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06CC),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00009B1A: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00009B21: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009B28: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00009B2F: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00009B36: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00009B3D: 09 07 56 06 00 00 05 
          endoneof;
>00009B44: 29 02 
        endif;
>00009B46: 29 02 
      endif;
>00009B48: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>00009B4A: 02 87 AA 00 00 00 00 
>00009B51: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[18],
>00009B53: 05 91 EB 06 ED 06 BC 03 02 00 A4 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06EB),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009B64: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>00009B6B: 09 07 39 07 00 00 01 
      endoneof;
>00009B72: 29 02 

    endif;
>00009B74: 29 02 
  endform;
>00009B76: 29 02 

  form formid = 0x74,
>00009B78: 01 86 74 00 1E 04 

    title     = STRING_TOKEN(0x041E);

     checkbox varid    = PCH_SETUP.PcieRootPortEn[19],
>00009B7E: 06 8E 42 04 44 04 BD 03 02 00 66 01 00 03 
         prompt   = STRING_TOKEN(0x0442),
         help     = STRING_TOKEN(0x0444),
         
         
         flags    = CHECKBOX_DEFAULT| CHECKBOX_DEFAULT_MFG,
     endcheckbox;
>00009B8C: 29 02 

    suppressif ideqval PCH_SETUP.PcieRootPortEn[19] == 0x0;
>00009B8E: 0A 82 
>00009B90: 12 06 BD 03 00 00 

      suppressif ideqval PCH_SETUP.PchPcieGlobalAspm == 2;
>00009B96: 0A 82 
>00009B98: 12 06 29 01 02 00 
#line 8626 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
         oneof varid   = PCH_SETUP.PcieRootPortAspm[19],
>00009B9E: 05 91 47 04 48 04 BE 03 02 00 7A 01 10 10 00 04 00 
             prompt   = STRING_TOKEN(0x0447),
             help     = STRING_TOKEN(0x0448),
               option text = STRING_TOKEN(0x0449),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009BAF: 09 07 49 04 30 00 00 

               option text = STRING_TOKEN(0x044B),        value = 2, flags = RESET_REQUIRED;
>00009BB6: 09 07 4B 04 00 00 02 




#line 8637 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
             option text = STRING_TOKEN(0x044D),      value = 4, flags = RESET_REQUIRED;
>00009BBD: 09 07 4D 04 00 00 04 
         endoneof;
>00009BC4: 29 02 

     endif;
>00009BC6: 29 02 
#line 8642 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      oneof varid   = PCH_SETUP.PcieRootPortL1SubStates[19],
>00009BC8: 05 91 51 04 52 04 BF 03 02 00 6A 03 10 10 00 03 00 
          prompt      = STRING_TOKEN(0x0451),
          help        = STRING_TOKEN(0x0452),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00009BD9: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0453), value = 1, flags = RESET_REQUIRED;
>00009BE0: 09 07 53 04 00 00 01 
          option text = STRING_TOKEN(0x0454), value = 2, flags = RESET_REQUIRED;
>00009BE7: 09 07 54 04 00 00 02 
          option text = STRING_TOKEN(0x0455), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009BEE: 09 07 55 04 30 00 03 
      endoneof;
>00009BF5: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortEqPh3Method[19],
>00009BF7: 05 91 2A 06 2B 06 C0 03 02 00 C9 02 10 10 01 06 00 
        prompt      = STRING_TOKEN(0x062A),
        help        = STRING_TOKEN(0x062B),
          option text = STRING_TOKEN(0x062C),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>00009C08: 09 07 2C 06 30 00 01 
        
          option text = STRING_TOKEN(0x062F),         value = 6, flags = RESET_REQUIRED;
>00009C0F: 09 07 2F 06 00 00 06 
        
        option text = STRING_TOKEN(0x062D), value = 4, flags = RESET_REQUIRED;
>00009C16: 09 07 2D 06 00 00 04 
        option text = STRING_TOKEN(0x062E),         value = 2, flags = RESET_REQUIRED;
>00009C1D: 09 07 2E 06 00 00 02 
      endoneof;
>00009C24: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortACS[19],
>00009C26: 05 91 43 06 44 06 C1 03 02 00 B5 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0643),
        help        = STRING_TOKEN(0x0644),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00009C37: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009C3E: 09 07 39 07 30 00 01 
      endoneof;
>00009C45: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortURE[19],
>00009C47: 05 91 61 04 62 04 C2 03 02 00 8E 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0461),
         help     = STRING_TOKEN(0x0462),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009C58: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009C5F: 09 07 F9 02 00 00 01 
      endoneof;
>00009C66: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortFEE[19],
>00009C68: 05 91 63 04 64 04 C3 03 02 00 A2 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0463),
         help     = STRING_TOKEN(0x0464),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009C79: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009C80: 09 07 F9 02 00 00 01 
      endoneof;
>00009C87: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortNFE[19],
>00009C89: 05 91 65 04 66 04 C4 03 02 00 B6 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0465),
         help     = STRING_TOKEN(0x0466),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009C9A: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009CA1: 09 07 F9 02 00 00 01 
      endoneof;
>00009CA8: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortCEE[19],
>00009CAA: 05 91 67 04 68 04 C5 03 02 00 CA 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0467),
         help     = STRING_TOKEN(0x0468),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009CBB: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009CC2: 09 07 F9 02 00 00 01 
      endoneof;
>00009CC9: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSFE[19],
>00009CCB: 05 91 78 04 79 04 C6 03 02 00 DE 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0478),
         help     = STRING_TOKEN(0x0479),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009CDC: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009CE3: 09 07 F9 02 00 00 01 
      endoneof;
>00009CEA: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSNE[19],
>00009CEC: 05 91 7A 04 7B 04 C7 03 02 00 F2 02 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047A),
         help     = STRING_TOKEN(0x047B),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009CFD: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009D04: 09 07 F9 02 00 00 01 
      endoneof;
>00009D0B: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortSCE[19],
>00009D0D: 05 91 7C 04 7D 04 C8 03 02 00 06 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047C),
         help     = STRING_TOKEN(0x047D),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009D1E: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009D25: 09 07 F9 02 00 00 01 
      endoneof;
>00009D2C: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortPMCE[19],
>00009D2E: 05 91 7E 04 7F 04 C9 03 02 00 1A 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x047E),
         help     = STRING_TOKEN(0x047F),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009D3F: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009D46: 09 07 F9 02 00 00 01 
      endoneof;
>00009D4D: 29 02 

      oneof varid    = PCH_SETUP.PcieRootPortHPE[19],
>00009D4F: 05 91 B9 04 BA 04 CA 03 02 00 2E 03 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x04B9),
         help     = STRING_TOKEN(0x04BA),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009D60: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>00009D67: 09 07 F9 02 00 00 01 
      endoneof;
>00009D6E: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortAER[19],
>00009D70: 05 91 45 06 46 06 CB 03 02 00 06 02 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0645),
        help        = STRING_TOKEN(0x0646),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00009D81: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009D88: 09 07 39 07 30 00 01 
      endoneof;
>00009D8F: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortSpeed[19],
>00009D91: 05 91 56 04 57 04 CC 03 02 00 42 03 10 10 00 03 00 
         prompt   = STRING_TOKEN (0x0456),
         help     = STRING_TOKEN (0x0457),
         option text = STRING_TOKEN (0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009DA2: 09 07 A8 00 30 00 00 
         option text = STRING_TOKEN (0x0458), value = 1, flags = RESET_REQUIRED;
>00009DA9: 09 07 58 04 00 00 01 
         option text = STRING_TOKEN (0x0459), value = 2, flags = RESET_REQUIRED;
>00009DB0: 09 07 59 04 00 00 02 
         option text = STRING_TOKEN (0x045A), value = 3, flags = RESET_REQUIRED;
>00009DB7: 09 07 5A 04 00 00 03 
      endoneof;
>00009DBE: 29 02 

      oneof varid   = PCH_SETUP.PcieRootPortMSIE[19],
>00009DC0: 05 91 80 04 81 04 CD 03 02 00 DE 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0480),
        help    = STRING_TOKEN(0x0481),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>00009DD1: 09 07 FA 02 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009DD8: 09 07 39 07 30 00 01 
      endoneof;
>00009DDF: 29 02 
      oneof varid = PCH_SETUP.PcieTopology[19],
>00009DE1: 05 91 01 07 02 07 CE 03 02 00 1A 02 10 10 00 04 00 
               prompt = STRING_TOKEN(0x0701),
               help = STRING_TOKEN(0x0702),
               option text = STRING_TOKEN(0x0703), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009DF2: 09 07 03 07 30 00 00 
               option text = STRING_TOKEN(0x0704), value = 1, flags = RESET_REQUIRED;
>00009DF9: 09 07 04 07 00 00 01 
               option text = STRING_TOKEN(0x0705), value = 2, flags = RESET_REQUIRED;
>00009E00: 09 07 05 07 00 00 02 
               option text = STRING_TOKEN(0x0706), value = 3, flags = RESET_REQUIRED;
>00009E07: 09 07 06 07 00 00 03 
               option text = STRING_TOKEN(0x0707), value = 4, flags = RESET_REQUIRED;
>00009E0E: 09 07 07 07 00 00 04 
      endoneof;
>00009E15: 29 02 
      oneof varid   = PCH_SETUP.PcieRootPortMaxPayLoadSize[19],
>00009E17: 05 91 82 04 83 04 CF 03 02 00 F2 01 10 10 00 01 00 
        prompt    = STRING_TOKEN(0x0482),
        help    = STRING_TOKEN(0x0483),
        option text = STRING_TOKEN(0x0484), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009E28: 09 07 84 04 30 00 00 
        option text = STRING_TOKEN(0x0485), value = 1, flags = RESET_REQUIRED;
>00009E2F: 09 07 85 04 00 00 01 
      endoneof;
>00009E36: 29 02 
      oneof varid = PCH_SETUP.PcieRootPortCompletionTimeout[19],
>00009E38: 05 91 69 04 6A 04 D0 03 02 00 8B 02 10 10 00 09 00 
          prompt  = STRING_TOKEN(0x0469),
          help    = STRING_TOKEN(0x046A),
          option text = STRING_TOKEN(0x046F),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>00009E49: 09 07 6F 04 30 00 00 
          option text = STRING_TOKEN(0x0470),      value = 3, flags = RESET_REQUIRED;
>00009E50: 09 07 70 04 00 00 03 
          option text = STRING_TOKEN(0x0471),      value = 4, flags = RESET_REQUIRED;
>00009E57: 09 07 71 04 00 00 04 
          option text = STRING_TOKEN(0x0472),      value = 5, flags = RESET_REQUIRED;
>00009E5E: 09 07 72 04 00 00 05 
          option text = STRING_TOKEN(0x0473),      value = 6, flags = RESET_REQUIRED;
>00009E65: 09 07 73 04 00 00 06 
          option text = STRING_TOKEN(0x00A7),      value = 9, flags = RESET_REQUIRED;
>00009E6C: 09 07 A7 00 00 00 09 
      endoneof;
>00009E73: 29 02 

      text
>00009E75: 03 08 8F 04 AA 00 A3 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x048F),
        text  = STRING_TOKEN(0x04A3),
        flags  = 0, key = 0;

      text
>00009E7D: 03 08 A4 04 AA 00 B8 04 
        help  = STRING_TOKEN(0x00AA),
        text  = STRING_TOKEN(0x04A4),
        text  = STRING_TOKEN(0x04B8),
        flags  = 0, key = 0;

      subtitle text = STRING_TOKEN(0x0657);
>00009E85: 02 87 57 06 00 00 00 
>00009E8C: 29 02 
      oneof varid   = PCH_SETUP.PchPcieLtrEnable[19],
>00009E8E: 05 91 6B 06 6C 06 D1 03 02 00 91 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x066B),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>00009E9F: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009EA6: 09 07 39 07 30 00 01 
      endoneof;
>00009EAD: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[19] == 0;
>00009EAF: 0A 82 
>00009EB1: 12 06 D1 03 00 00 
        oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMode[19],
>00009EB7: 05 91 CD 06 D3 06 D2 03 02 00 B9 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x06CD),
          help        = STRING_TOKEN (0x06D3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00009EC8: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00009ECF: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009ED6: 09 07 F8 02 30 00 02 
        endoneof;
>00009EDD: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieSnoopLatencyOverrideMode[19] == 1;
>00009EDF: 0A 82 
>00009EE1: 12 86 D2 03 01 00 
>00009EE7: 17 02 
>00009EE9: 29 02 
          numeric varid = PCH_SETUP.PchPcieSnoopLatencyOverrideValue[19],
>00009EEB: 07 94 CF 06 D5 06 D3 03 02 00 1C 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06CF),
            help        = STRING_TOKEN(0x06D5),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00009EFF: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00009F06: 5B 07 01 00 01 3C 00 
          endnumeric;
>00009F0D: 29 02 

          oneof varid   = PCH_SETUP.PchPcieSnoopLatencyOverrideMultiplier[19],
>00009F0F: 05 91 D0 06 D6 06 D4 03 02 00 CD 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06D0),
            help        = STRING_TOKEN(0x06D6),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00009F20: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00009F27: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009F2E: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00009F35: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00009F3C: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00009F43: 09 07 56 06 00 00 05 
          endoneof;
>00009F4A: 29 02 
        endif;
>00009F4C: 29 02 

        oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[19],
>00009F4E: 05 91 CE 06 D4 06 D5 03 02 00 E1 03 10 10 00 02 00 
          prompt      = STRING_TOKEN (0x06CE),
          help        = STRING_TOKEN (0x06D4),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>00009F5F: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x02FD),   value = 1, flags = RESET_REQUIRED;
>00009F66: 09 07 FD 02 00 00 01 
          option text = STRING_TOKEN(0x02F8),     value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009F6D: 09 07 F8 02 30 00 02 
        endoneof;
>00009F74: 29 02 

        suppressif NOT ideqval PCH_SETUP.PchPcieNonSnoopLatencyOverrideMode[19] == 1;
>00009F76: 0A 82 
>00009F78: 12 86 D5 03 01 00 
>00009F7E: 17 02 
>00009F80: 29 02 
          numeric varid = PCH_SETUP.PchPcieNonSnoopLatencyOverrideValue[19],
>00009F82: 07 94 D1 06 D7 06 D6 03 02 00 44 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x06D1),
            help        = STRING_TOKEN(0x06D7),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 60, defaultstore = MyStandardDefault,
>00009F96: 5B 07 00 00 01 3C 00 
            default     = 60, defaultstore = MyManufactureDefault,
>00009F9D: 5B 07 01 00 01 3C 00 
          endnumeric;
>00009FA4: 29 02 

          oneof varid   = PCH_SETUP.PchPcieNonSnoopLatencyOverrideMultiplier[19],
>00009FA6: 05 91 D2 06 D8 06 D7 03 02 00 F5 03 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x06D2),
            help        = STRING_TOKEN(0x06D8),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>00009FB7: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>00009FBE: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>00009FC5: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>00009FCC: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>00009FD3: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>00009FDA: 09 07 56 06 00 00 05 
          endoneof;
>00009FE1: 29 02 
        endif;
>00009FE3: 29 02 
      endif;
>00009FE5: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>00009FE7: 02 87 AA 00 00 00 00 
>00009FEE: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrConfigLock[19],
>00009FF0: 05 91 EC 06 ED 06 D8 03 02 00 A5 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x06EC),
        help     = STRING_TOKEN (0x06ED),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A001: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000A008: 09 07 39 07 00 00 01 
      endoneof;
>0000A00F: 29 02 

    endif;
>0000A011: 29 02 
  endform;
>0000A013: 29 02 

  form formid = 0x10F,
>0000A015: 01 86 0F 01 39 03 
    title     = STRING_TOKEN(0x0339);

    subtitle text = STRING_TOKEN(0x0339);
>0000A01B: 02 87 39 03 00 00 00 
>0000A022: 29 02 
    subtitle text = STRING_TOKEN(0x00AA);
>0000A024: 02 87 AA 00 00 00 00 
>0000A02B: 29 02 


    suppressif ideqval SYSTEM_CONFIGURATION.BiosGuardEnabled == 1;
>0000A02D: 0A 82 
>0000A02F: 12 06 1E 00 01 00 
      oneof varid      = PCH_SETUP.PchSmmBwp,
>0000A035: 05 91 43 03 44 03 D9 03 02 00 30 00 10 10 00 01 00 
           prompt      = STRING_TOKEN(0x0343),
           help        = STRING_TOKEN(0x0344),

           option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A046: 09 07 FA 02 30 00 00 
           option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>0000A04D: 09 07 F9 02 00 00 01 



#line 8897 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
      endoneof;
>0000A054: 29 02 
    endif;
>0000A056: 29 02 
#line 8900 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
  endform;
>0000A058: 29 02 

  form formid = 0x10C,
>0000A05A: 01 86 0C 01 10 05 

  title = STRING_TOKEN(0x0510);


    disableif ideqval SYSTEM_CONFIGURATION.PchStepping == 0x30;
>0000A060: 1E 82 
>0000A062: 12 06 0B 20 30 00 
      oneof varid  = PCH_SETUP.ThermalDeviceEnable,
>0000A068: 05 91 12 05 13 05 DA 03 02 00 3C 01 10 10 00 03 00 
               prompt   = STRING_TOKEN (0x0512),
               help     = STRING_TOKEN (0x0513),
               option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000A079: 09 07 38 07 00 00 00 
               option text = STRING_TOKEN(0x0514), value = 1, flags = RESET_REQUIRED;
>0000A080: 09 07 14 05 00 00 01 
               option text = STRING_TOKEN(0x0515), value = 2, flags = RESET_REQUIRED;
>0000A087: 09 07 15 05 00 00 02 
               option text = STRING_TOKEN(0x00A8), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A08E: 09 07 A8 00 30 00 03 
      endoneof;
>0000A095: 29 02 
    endif;
>0000A097: 29 02 

    disableif NOT ideqval SYSTEM_CONFIGURATION.PchStepping == 0x30;
>0000A099: 1E 82 
>0000A09B: 12 86 0B 20 30 00 
>0000A0A1: 17 02 
>0000A0A3: 29 02 
      oneof varid  = PCH_SETUP.ThermalDeviceEnable,
>0000A0A5: 05 91 12 05 16 05 DB 03 02 00 3C 01 10 10 00 03 00 
               prompt   = STRING_TOKEN (0x0512),
               help     = STRING_TOKEN (0x0516),
               option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000A0B6: 09 07 38 07 00 00 00 
               option text = STRING_TOKEN(0x0514), value = 1, flags = RESET_REQUIRED;
>0000A0BD: 09 07 14 05 00 00 01 
               option text = STRING_TOKEN(0x0515), value = 2, flags = RESET_REQUIRED;
>0000A0C4: 09 07 15 05 00 00 02 
               option text = STRING_TOKEN(0x00A8), value = 3, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A0CB: 09 07 A8 00 30 00 03 
      endoneof;
>0000A0D2: 29 02 
    endif;
>0000A0D4: 29 02 








#line 8937 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"
  endform;
>0000A0D6: 29 02 

  form formid = 0x11D,
>0000A0D8: 01 86 1D 01 1A 05 
    title = STRING_TOKEN(0x051A);

    oneof varid  = PCH_SETUP.TraceHubEnableMode,
>0000A0DE: 05 91 1C 05 1D 05 DC 03 02 00 79 04 10 10 00 02 00 
      prompt   = STRING_TOKEN(0x051C),
      help     = STRING_TOKEN(0x051D),
      option text = STRING_TOKEN(0x0522),  value = 0, flags = RESET_REQUIRED;
>0000A0EF: 09 07 22 05 00 00 00 
      option text = STRING_TOKEN(0x0523),   value = 1, flags = RESET_REQUIRED;
>0000A0F6: 09 07 23 05 00 00 01 
      option text = STRING_TOKEN(0x0524), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A0FD: 09 07 24 05 30 00 02 
    endoneof;
>0000A104: 29 02 

    oneof varid  = PCH_SETUP.MemRegion0BufferSize,
>0000A106: 05 91 1E 05 1F 05 DD 03 02 00 7A 04 10 10 00 03 00 
      prompt   = STRING_TOKEN(0x051E),
      help     = STRING_TOKEN(0x051F),
      option text = STRING_TOKEN(0x0525),   value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A117: 09 07 25 05 30 00 00 
      option text = STRING_TOKEN(0x0526),   value = 1, flags = RESET_REQUIRED;
>0000A11E: 09 07 26 05 00 00 01 
      option text = STRING_TOKEN(0x0527),   value = 2, flags = RESET_REQUIRED;
>0000A125: 09 07 27 05 00 00 02 
      option text = STRING_TOKEN(0x0528),  value = 3, flags = RESET_REQUIRED;
>0000A12C: 09 07 28 05 00 00 03 
    endoneof;
>0000A133: 29 02 

    oneof varid  = PCH_SETUP.MemRegion1BufferSize,
>0000A135: 05 91 20 05 21 05 DE 03 02 00 7B 04 10 10 00 03 00 
      prompt   = STRING_TOKEN(0x0520),
      help     = STRING_TOKEN(0x0521),
      option text = STRING_TOKEN(0x0525),   value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A146: 09 07 25 05 30 00 00 
      option text = STRING_TOKEN(0x0526),   value = 1, flags = RESET_REQUIRED;
>0000A14D: 09 07 26 05 00 00 01 
      option text = STRING_TOKEN(0x0527),   value = 2, flags = RESET_REQUIRED;
>0000A154: 09 07 27 05 00 00 02 
      option text = STRING_TOKEN(0x0528),  value = 3, flags = RESET_REQUIRED;
>0000A15B: 09 07 28 05 00 00 03 
    endoneof;
>0000A162: 29 02 

  endform; 
>0000A164: 29 02 


  form formid = 0x123,
>0000A166: 01 86 23 01 29 05 
  title     = STRING_TOKEN(0x0529);
  subtitle text = STRING_TOKEN(0x00AA);
>0000A16C: 02 87 AA 00 00 00 00 
>0000A173: 29 02 


    suppressif TRUE;
>0000A175: 0A 82 
>0000A177: 46 02 
      
      numeric varid   = PCH_SETUP.MeType,
>0000A179: 07 91 AA 00 AA 00 DF 03 02 00 01 00 00 20 00 FF 00 
        prompt  = STRING_TOKEN(0x00AA),
        help    = STRING_TOKEN(0x00AA),
        flags   = DISPLAY_UINT_HEX,
        minimum = 0,
        maximum = 0xFF,
        step    = 0,
        default = 0x01, defaultstore = MyStandardDefault,
>0000A18A: 5B 06 00 00 00 01 
        default = 0x01, defaultstore = MyManufactureDefault,
>0000A190: 5B 06 01 00 00 01 
      endnumeric;
>0000A196: 29 02 
    endif; 
>0000A198: 29 02 
#line 8990 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

    oneof varid    = PCH_SETUP.Dwr_Enable,
>0000A19A: 05 91 2B 05 2C 05 E0 03 02 00 02 00 10 10 00 01 00 
      prompt   = STRING_TOKEN(0x052B),
      help     = STRING_TOKEN(0x052C),
      option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000A1AB: 09 07 FA 02 30 00 00 
      option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000A1B2: 09 07 F9 02 00 00 01 
    endoneof;
>0000A1B9: 29 02 

  subtitle text = STRING_TOKEN(0x00AA);
>0000A1BB: 02 87 AA 00 00 00 00 
>0000A1C2: 29 02 

    grayoutif ideqval PCH_SETUP.Dwr_Enable == 0;
>0000A1C4: 19 82 
>0000A1C6: 12 06 E0 03 00 00 
      oneof varid    = PCH_SETUP.Dwr_Stall,
>0000A1CC: 05 91 2D 05 2E 05 E1 03 02 00 03 00 10 10 00 01 00 
        prompt   = STRING_TOKEN(0x052D),
        help     = STRING_TOKEN(0x052E),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000A1DD: 09 07 FA 02 30 00 00 
        option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000A1E4: 09 07 F9 02 00 00 01 
      endoneof;
>0000A1EB: 29 02 
      oneof varid    = PCH_SETUP.Dwr_BmcRootPort,
>0000A1ED: 05 91 2F 05 30 05 E2 03 02 00 04 00 10 10 05 0B 00 
        prompt   = STRING_TOKEN(0x052F),
        help     = STRING_TOKEN(0x0530),
        option text = STRING_TOKEN(0x0531), value = 5, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A1FE: 09 07 31 05 30 00 05 
        option text = STRING_TOKEN(0x0532), value = 11, flags = RESET_REQUIRED;
>0000A205: 09 07 32 05 00 00 0B 
      endoneof;
>0000A20C: 29 02 

        subtitle text = STRING_TOKEN(0x00AA);
>0000A20E: 02 87 AA 00 00 00 00 
>0000A215: 29 02 
        subtitle text = STRING_TOKEN(0x0533);
>0000A217: 02 87 33 05 00 00 00 
>0000A21E: 29 02 

      oneof varid    = PCH_SETUP.DwrEn_PMCGBL,
>0000A220: 05 91 34 05 35 05 E3 03 02 00 05 00 10 10 00 01 00 
        prompt   = STRING_TOKEN(0x0534),
        help     = STRING_TOKEN(0x0535),
        option text = STRING_TOKEN(0x02F9), value = 1, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A231: 09 07 F9 02 30 00 01 
        option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000A238: 09 07 FA 02 00 00 00 
      endoneof;
>0000A23F: 29 02 

      oneof varid    = PCH_SETUP.DwrEn_MEWDT,
>0000A241: 05 91 36 05 37 05 E4 03 02 00 0A 00 10 10 00 01 00 
        prompt   = STRING_TOKEN(0x0536),
        help     = STRING_TOKEN(0x0537),
        option text = STRING_TOKEN(0x02F9), value = 1, flags =  RESET_REQUIRED;
>0000A252: 09 07 F9 02 00 00 01 
        option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A259: 09 07 FA 02 30 00 00 
      endoneof;
>0000A260: 29 02 

      oneof varid    = PCH_SETUP.DwrEn_IEWDT,
>0000A262: 05 91 38 05 39 05 E5 03 02 00 12 00 10 10 00 01 00 
        prompt   = STRING_TOKEN(0x0538),
        help     = STRING_TOKEN(0x0539),
        option text = STRING_TOKEN(0x02F9), value = 1, flags =  RESET_REQUIRED;
>0000A273: 09 07 F9 02 00 00 01 
        option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A27A: 09 07 FA 02 30 00 00 
      endoneof;
>0000A281: 29 02 
      
        subtitle text = STRING_TOKEN(0x00AA);
>0000A283: 02 87 AA 00 00 00 00 
>0000A28A: 29 02 
        
      oneof varid    = PCH_SETUP.Dwr_MeResetPrepDone,
>0000A28C: 05 91 3A 05 3B 05 E6 03 02 00 1D 00 10 10 00 01 00 
        prompt   = STRING_TOKEN(0x053A),
        help     = STRING_TOKEN(0x053B),
        option text = STRING_TOKEN(0x053F), value = 1, flags =  RESET_REQUIRED;
>0000A29D: 09 07 3F 05 00 00 01 
        option text = STRING_TOKEN(0x053E), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A2A4: 09 07 3E 05 30 00 00 
      endoneof;
>0000A2AB: 29 02 
      
      oneof varid    = PCH_SETUP.Dwr_IeResetPrepDone,
>0000A2AD: 05 91 3C 05 3D 05 E7 03 02 00 1E 00 10 10 00 01 00 
        prompt   = STRING_TOKEN(0x053C),
        help     = STRING_TOKEN(0x053D),
        option text = STRING_TOKEN(0x053F), value = 1, flags =  RESET_REQUIRED;
>0000A2BE: 09 07 3F 05 00 00 01 
        option text = STRING_TOKEN(0x053E), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A2C5: 09 07 3E 05 30 00 00 
      endoneof;
>0000A2CC: 29 02 

    endif;
>0000A2CE: 29 02 
  endform; 
>0000A2D0: 29 02 
#line 9057 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

  form formid = 0x11E,
>0000A2D2: 01 86 1E 01 40 05 
  title     = STRING_TOKEN(0x0540);
  subtitle text = STRING_TOKEN(0x00AA);
>0000A2D8: 02 87 AA 00 00 00 00 
>0000A2DF: 29 02 

    oneof varid    = PCH_SETUP.PchP2sbDevReveal,
>0000A2E1: 05 91 42 05 43 05 E8 03 02 00 7C 04 10 10 00 01 00 
      prompt   = STRING_TOKEN(0x0542),
      help     = STRING_TOKEN(0x0543),
      option text = STRING_TOKEN(0x02F9), value = 1, flags =  RESET_REQUIRED;
>0000A2F2: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A2F9: 09 07 FA 02 30 00 00 
    endoneof;
>0000A300: 29 02 

    oneof varid    = PCH_SETUP.PchP2sbUnlock,
>0000A302: 05 91 44 05 45 05 E9 03 02 00 7D 04 10 10 00 01 00 
      prompt   = STRING_TOKEN(0x0544),
      help     = STRING_TOKEN(0x0545),
      option text = STRING_TOKEN(0x02F9), value = 1, flags =  RESET_REQUIRED;
>0000A313: 09 07 F9 02 00 00 01 
      option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A31A: 09 07 FA 02 30 00 00 
    endoneof;
>0000A321: 29 02 

    oneof varid    = PCH_SETUP.TestDmiAspmCtrl,
>0000A323: 05 91 46 05 47 05 EA 03 02 00 7D 03 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0546),
      help        = STRING_TOKEN(0x0547),
       option text = STRING_TOKEN(0x02FA),        value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A334: 09 07 FA 02 30 00 00 
       option text = STRING_TOKEN(0x044B),    value = 1, flags = RESET_REQUIRED;
>0000A33B: 09 07 4B 04 00 00 01 
    endoneof;
>0000A342: 29 02 

    oneof varid    = PCH_SETUP.PmcReadDisable,
>0000A344: 05 91 48 05 49 05 EB 03 02 00 80 04 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0548),
      help        = STRING_TOKEN(0x0549),
      option text = STRING_TOKEN(0x02FA),        value = 0, flags = RESET_REQUIRED;
>0000A355: 09 07 FA 02 00 00 00 
      option text = STRING_TOKEN(0x02F9),         value = 1, flags = DEFAULT | RESET_REQUIRED | MANUFACTURING;
>0000A35C: 09 07 F9 02 30 00 01 
    endoneof;
>0000A363: 29 02 

    oneof varid   = PCH_SETUP.TestSmbusSpdWriteDisable,
>0000A365: 05 91 17 05 18 05 EC 03 02 00 6F 03 10 10 01 02 00 
      prompt      = STRING_TOKEN(0x0517),
      help        = STRING_TOKEN(0x0518),
      option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A376: 09 07 39 07 30 00 01 
      option text = STRING_TOKEN(0x0738), value = 2, flags = RESET_REQUIRED;
>0000A37D: 09 07 38 07 00 00 02 
    endoneof;
>0000A384: 29 02 

    oneof varid      = PCH_SETUP.PchAllUnLock,
>0000A386: 05 91 37 03 38 03 ED 03 02 00 2C 00 10 10 00 01 00 
         prompt      = STRING_TOKEN(0x0337),
         help        = STRING_TOKEN(0x0338),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000A397: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>0000A39E: 09 07 F9 02 00 00 01 
    endoneof;
>0000A3A5: 29 02 

    oneof varid      = PCH_SETUP.PchTraceHubHide,
>0000A3A7: 05 91 4F 07 50 07 EE 03 02 00 91 04 10 10 00 01 00 
         prompt      = STRING_TOKEN(0x074F),
         help        = STRING_TOKEN(0x0750),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000A3B8: 09 07 FA 02 00 00 00 
         option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000A3BF: 09 07 F9 02 30 00 01 
    endoneof;
>0000A3C6: 29 02 

    suppressif ideqval PCH_SETUP.PchAllUnLock == 1;
>0000A3C8: 0A 82 
>0000A3CA: 12 06 ED 03 01 00 
      oneof varid  = PCH_SETUP.PchGpioLockDown,
>0000A3D0: 05 91 3B 03 3C 03 EF 03 02 00 37 00 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x033B),
         help     = STRING_TOKEN(0x033C),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000A3E1: 09 07 FA 02 00 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A3E8: 09 07 F9 02 30 00 01 
      endoneof;
>0000A3EF: 29 02 
    endif;
>0000A3F1: 29 02 
    
    suppressif ideqval PCH_SETUP.PchAllUnLock == 1;
>0000A3F3: 0A 82 
>0000A3F5: 12 06 ED 03 01 00 
      oneof varid  = PCH_SETUP.PchRtcLock,
>0000A3FB: 05 91 3D 03 3E 03 F0 03 02 00 2A 00 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x033D),
         help     = STRING_TOKEN(0x033E),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000A40C: 09 07 FA 02 00 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A413: 09 07 F9 02 30 00 01 
      endoneof;
>0000A41A: 29 02 
    endif;
>0000A41C: 29 02 

    suppressif ideqval PCH_SETUP.PchAllUnLock == 1;
>0000A41E: 0A 82 
>0000A420: 12 06 ED 03 01 00 
      oneof varid  = PCH_SETUP.PchBiosLock,
>0000A426: 05 91 3F 03 40 03 F1 03 02 00 2B 00 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x033F),
         help     = STRING_TOKEN(0x0340),
         option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000A437: 09 07 FA 02 00 00 00 
         option text = STRING_TOKEN(0x02F9), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A43E: 09 07 F9 02 30 00 01 
      endoneof;
>0000A445: 29 02 
    endif;
>0000A447: 29 02 
      
    suppressif ideqval PCH_SETUP.PchAllUnLock == 1;
>0000A449: 0A 82 
>0000A44B: 12 06 ED 03 01 00 
      oneof varid       = PCH_SETUP.PchGbeFlashLockDown,
>0000A451: 05 91 41 03 42 03 F2 03 02 00 2F 00 10 10 00 01 00 
           prompt      = STRING_TOKEN(0x0341),
           help        = STRING_TOKEN(0x0342),
           option text = STRING_TOKEN(0x02FA), value = 0, flags = RESET_REQUIRED;
>0000A462: 09 07 FA 02 00 00 00 
           option text = STRING_TOKEN(0x02F9),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A469: 09 07 F9 02 30 00 01 
      endoneof;
>0000A470: 29 02 
    endif;
>0000A472: 29 02 
    suppressif ideqval PCH_SETUP.PchAllUnLock == 1;
>0000A474: 0A 82 
>0000A476: 12 06 ED 03 01 00 
      oneof varid    = PCH_SETUP.PchThermalUnlock,
>0000A47C: 05 91 4A 05 4B 05 F3 03 02 00 2D 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x054A),
        help        = STRING_TOKEN(0x054B),
         option text = STRING_TOKEN(0x02FA),        value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A48D: 09 07 FA 02 30 00 00 
         option text = STRING_TOKEN(0x02F9),         value = 1, flags = RESET_REQUIRED;
>0000A494: 09 07 F9 02 00 00 01 
      endoneof;
>0000A49B: 29 02 
    endif;
>0000A49D: 29 02 











    suppressif ideqval PCH_SETUP.PchAllUnLock == 1;
>0000A49F: 0A 82 
>0000A4A1: 12 06 ED 03 01 00 
      oneof varid     = PCH_SETUP.FlashLockDown,
>0000A4A7: 05 91 54 05 55 05 F4 03 02 00 7F 04 10 10 00 02 00 
        prompt      = STRING_TOKEN(0x0554),
        help        = STRING_TOKEN(0x0555),
        option text = STRING_TOKEN(0x00A8), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A4B8: 09 07 A8 00 30 00 00 
        option text = STRING_TOKEN(0x02F9),  value = 1, flags = RESET_REQUIRED;
>0000A4BF: 09 07 F9 02 00 00 01 
        option text = STRING_TOKEN(0x02FA), value = 2, flags = RESET_REQUIRED;
>0000A4C6: 09 07 FA 02 00 00 02 
      endoneof;
>0000A4CD: 29 02 
    endif;
>0000A4CF: 29 02 

    oneof varid  = PCH_SETUP.PchEvaMrom0HookEnable,
>0000A4D1: 05 91 50 05 51 05 F5 03 02 00 8D 04 10 10 00 01 00 
          prompt      = STRING_TOKEN (0x0550),
          help        = STRING_TOKEN (0x0551),
          option text = STRING_TOKEN(0x02FA), value  = 0x0, flags = RESET_REQUIRED;
>0000A4E2: 09 07 FA 02 00 00 00 
          option text = STRING_TOKEN(0x02F9),  value  = 0x1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A4E9: 09 07 F9 02 30 00 01 
    endoneof;
>0000A4F0: 29 02 
    oneof varid  = PCH_SETUP.PchEvaMrom1HookEnable,
>0000A4F2: 05 91 4E 05 4F 05 F6 03 02 00 8E 04 10 10 00 01 00 
          prompt      = STRING_TOKEN (0x054E),
          help        = STRING_TOKEN (0x054F),
          option text = STRING_TOKEN(0x02FA), value  = 0x0, flags = RESET_REQUIRED;
>0000A503: 09 07 FA 02 00 00 00 
          option text = STRING_TOKEN(0x02F9),  value  = 0x1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A50A: 09 07 F9 02 30 00 01 
    endoneof;
>0000A511: 29 02 




    oneof varid   = PCH_SETUP.TestMctpBroadcastCycle,
>0000A513: 05 91 52 05 53 05 F7 03 02 00 8F 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0552),
          help        = STRING_TOKEN(0x0553),
          option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000A524: 09 07 F9 02 00 00 01 
          option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A52B: 09 07 FA 02 30 00 00 
    endoneof;
>0000A532: 29 02 




    oneof varid = PCH_SETUP.DmiLinkDownHangBypass,
>0000A534: 05 91 4F 06 50 06 F8 03 02 00 43 01 10 10 00 01 00 
      prompt   = STRING_TOKEN(0x064F),
      help     = STRING_TOKEN(0x0650),
      option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A545: 09 07 38 07 30 00 00 
      option text = STRING_TOKEN(0x0739), value = 1, flags = RESET_REQUIRED;
>0000A54C: 09 07 39 07 00 00 01 
    endoneof;
>0000A553: 29 02 

  
  
  
     oneof varid = PCH_SETUP.ForceEnableAllPCIePorts,
>0000A555: 05 91 58 05 59 05 F9 03 02 00 49 01 10 10 00 01 00 
         prompt   = STRING_TOKEN(0x0558),
         help     = STRING_TOKEN(0x0559),
         option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000A566: 09 07 39 07 00 00 01 
         option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A56D: 09 07 38 07 30 00 00 
    endoneof;
>0000A574: 29 02 
  
  
  

    goto 0x122,
>0000A576: 0F 0F 1F 07 20 07 FA 03 00 00 FF FF 00 22 01 
      prompt = STRING_TOKEN(0x071F),
      help   = STRING_TOKEN(0x0720),
      flags = 0,
      key = 0;



    oneof varid   = PCH_SETUP.TestESPIIOMemoryProg,
>0000A585: 05 91 56 05 57 05 FB 03 02 00 81 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0556),
          help        = STRING_TOKEN(0x0557),
          option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000A596: 09 07 F9 02 00 00 01 
          option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A59D: 09 07 FA 02 30 00 00 
    endoneof;
>0000A5A4: 29 02 



     oneof varid     = PCH_SETUP.PchAdrEn,
>0000A5A6: 05 91 5A 05 5B 05 FC 03 02 00 82 04 10 10 00 02 00 
         prompt       = STRING_TOKEN(0x055A),
         help         = STRING_TOKEN(0x055B),
         option text = STRING_TOKEN(0x0450), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A5B7: 09 07 50 04 30 00 00 
         option text = STRING_TOKEN(0x0739), value = 1, flags = RESET_REQUIRED;
>0000A5BE: 09 07 39 07 00 00 01 
         option text = STRING_TOKEN(0x02FA), value = 2, flags = RESET_REQUIRED;
>0000A5C5: 09 07 FA 02 00 00 02 
     endoneof;
>0000A5CC: 29 02 

    suppressif ideqvallist PCH_SETUP.PchAdrEn == 2;
>0000A5CE: 0A 82 
>0000A5D0: 14 08 FC 03 01 00 02 00 
     oneof varid     = PCH_SETUP.AdrGpioSel,
>0000A5D8: 05 91 71 05 72 05 FD 03 02 00 86 04 10 10 00 01 00 
         prompt      = STRING_TOKEN(0x0571),
         help        = STRING_TOKEN(0x0572),
         option text = STRING_TOKEN(0x0573), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A5E9: 09 07 73 05 30 00 00 
         option text = STRING_TOKEN(0x0574), value = 1, flags = RESET_REQUIRED;
>0000A5F0: 09 07 74 05 00 00 01 
     endoneof;
>0000A5F7: 29 02 

     oneof varid     = PCH_SETUP.AdrHostPartitionReset,
>0000A5F9: 05 91 75 05 76 05 FE 03 02 00 87 04 10 10 00 02 00 
         prompt      = STRING_TOKEN(0x0575),
         help        = STRING_TOKEN(0x0576),
         option text = STRING_TOKEN(0x0450), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A60A: 09 07 50 04 30 00 00 
         option text = STRING_TOKEN(0x0739), value = 1, flags = RESET_REQUIRED;
>0000A611: 09 07 39 07 00 00 01 
         option text = STRING_TOKEN(0x02FA), value = 2, flags = RESET_REQUIRED;
>0000A618: 09 07 FA 02 00 00 02 
     endoneof;
>0000A61F: 29 02 

     oneof varid     = PCH_SETUP.AdrTimerEn,
>0000A621: 05 91 5C 05 5D 05 FF 03 02 00 83 04 10 10 00 02 00 
         prompt       = STRING_TOKEN(0x055C),
         help         = STRING_TOKEN(0x055D),
         option text = STRING_TOKEN(0x0450), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A632: 09 07 50 04 30 00 00 
         option text = STRING_TOKEN(0x0739), value = 1, flags = RESET_REQUIRED;
>0000A639: 09 07 39 07 00 00 01 
         option text = STRING_TOKEN(0x055E), value = 2, flags = RESET_REQUIRED;
>0000A640: 09 07 5E 05 00 00 02 
     endoneof;
>0000A647: 29 02 

    suppressif ideqvallist PCH_SETUP.AdrTimerEn == 2;
>0000A649: 0A 82 
>0000A64B: 14 08 FF 03 01 00 02 00 
     oneof varid     = PCH_SETUP.AdrTimerVal,
>0000A653: 05 91 5F 05 60 05 00 04 02 00 84 04 10 10 00 04 00 
         prompt      = STRING_TOKEN(0x055F),
         help        = STRING_TOKEN(0x0560),
         option text = STRING_TOKEN(0x0450), value = 4, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A664: 09 07 50 04 30 00 04 
         option text = STRING_TOKEN(0x0561), value = 0, flags = RESET_REQUIRED;
>0000A66B: 09 07 61 05 00 00 00 
         option text = STRING_TOKEN(0x0562), value = 1, flags = RESET_REQUIRED;
>0000A672: 09 07 62 05 00 00 01 
         option text = STRING_TOKEN(0x0563), value = 2, flags = RESET_REQUIRED;
>0000A679: 09 07 63 05 00 00 02 
         option text = STRING_TOKEN(0x0564), value = 3, flags = RESET_REQUIRED;
>0000A680: 09 07 64 05 00 00 03 
     endoneof;
>0000A687: 29 02 

     oneof varid     = PCH_SETUP.AdrMultiplierVal,
>0000A689: 05 91 65 05 66 05 01 04 02 00 85 04 10 10 00 63 00 
         prompt      = STRING_TOKEN(0x0565),
         help        = STRING_TOKEN(0x0566),
         option text = STRING_TOKEN(0x0450), value = 99, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A69A: 09 07 50 04 30 00 63 
         option text = STRING_TOKEN(0x0567),  value = 0, flags = RESET_REQUIRED;
>0000A6A1: 09 07 67 05 00 00 00 
         option text = STRING_TOKEN(0x0568),  value = 1, flags = RESET_REQUIRED;
>0000A6A8: 09 07 68 05 00 00 01 
         option text = STRING_TOKEN(0x0569), value = 2, flags = RESET_REQUIRED;
>0000A6AF: 09 07 69 05 00 00 02 
         option text = STRING_TOKEN(0x056A), value = 3, flags = RESET_REQUIRED;
>0000A6B6: 09 07 6A 05 00 00 03 
         option text = STRING_TOKEN(0x056B), value = 4, flags = RESET_REQUIRED;
>0000A6BD: 09 07 6B 05 00 00 04 
         option text = STRING_TOKEN(0x056C), value = 5, flags = RESET_REQUIRED;
>0000A6C4: 09 07 6C 05 00 00 05 
         option text = STRING_TOKEN(0x056D), value = 6, flags = RESET_REQUIRED;
>0000A6CB: 09 07 6D 05 00 00 06 
         option text = STRING_TOKEN(0x056E), value = 7, flags = RESET_REQUIRED;
>0000A6D2: 09 07 6E 05 00 00 07 
         option text = STRING_TOKEN(0x056F), value = 8, flags = RESET_REQUIRED;
>0000A6D9: 09 07 6F 05 00 00 08 
         option text = STRING_TOKEN(0x0570), value = 9, flags = RESET_REQUIRED;
>0000A6E0: 09 07 70 05 00 00 09 
     endoneof;
>0000A6E7: 29 02 
    endif;
>0000A6E9: 29 02 
    endif;
>0000A6EB: 29 02 
  endform; 
>0000A6ED: 29 02 

  form formid = 0x122,
>0000A6EF: 01 86 22 01 1F 07 
      title   = STRING_TOKEN(0x071F);

      subtitle text = STRING_TOKEN(0x0721);
>0000A6F5: 02 87 21 07 00 00 00 
>0000A6FC: 29 02 

      oneof varid   = PCH_SETUP.PchSataLtrEnable,
>0000A6FE: 05 91 22 07 23 07 02 04 02 00 5B 04 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0722),
        help     = STRING_TOKEN (0x0723),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000A70F: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A716: 09 07 39 07 30 00 01 
      endoneof;
>0000A71D: 29 02 

      suppressif ideqval PCH_SETUP.PchSataLtrEnable == 0;
>0000A71F: 0A 82 
>0000A721: 12 06 02 04 00 00 
        oneof varid   = PCH_SETUP.PchSataLtrOverride,
>0000A727: 05 91 24 07 25 07 03 04 02 00 5A 04 10 10 00 01 00 
          prompt      = STRING_TOKEN (0x0724),
          help        = STRING_TOKEN (0x0725),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A738: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000A73F: 09 07 39 07 00 00 01 
        endoneof;
>0000A746: 29 02 

        suppressif ideqval PCH_SETUP.PchSataLtrOverride == 0;
>0000A748: 0A 82 
>0000A74A: 12 06 03 04 00 00 
          numeric varid = PCH_SETUP.PchSataSnoopLatencyOverrideValue,
>0000A750: 07 94 26 07 27 07 04 04 02 00 5C 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x0726),
            help        = STRING_TOKEN(0x0727),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 40, defaultstore = MyStandardDefault,
>0000A764: 5B 07 00 00 01 28 00 
            default     = 40, defaultstore = MyManufactureDefault,
>0000A76B: 5B 07 01 00 01 28 00 
          endnumeric;
>0000A772: 29 02 

          oneof varid   = PCH_SETUP.PchSataSnoopLatencyOverrideMultiplier,
>0000A774: 05 91 28 07 29 07 05 04 02 00 5E 04 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x0728),
            help        = STRING_TOKEN(0x0729),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>0000A785: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>0000A78C: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A793: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>0000A79A: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>0000A7A1: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>0000A7A8: 09 07 56 06 00 00 05 
          endoneof;
>0000A7AF: 29 02 
        endif;
>0000A7B1: 29 02 
      endif;
>0000A7B3: 29 02 

      oneof varid   = PCH_SETUP.PchSataLtrConfigLock,
>0000A7B5: 05 91 2A 07 2B 07 06 04 02 00 5F 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x072A),
          help        = STRING_TOKEN(0x072B),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000A7C6: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0739), value = 1, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A7CD: 09 07 39 07 30 00 01 
      endoneof;
>0000A7D4: 29 02 


      subtitle text = STRING_TOKEN(0x02F7);
>0000A7D6: 02 87 F7 02 00 00 00 
>0000A7DD: 29 02 

      subtitle text = STRING_TOKEN(0x072C);
>0000A7DF: 02 87 2C 07 00 00 00 
>0000A7E6: 29 02 

      oneof varid   = PCH_SETUP.PchSSataLtrEnable,
>0000A7E8: 05 91 2D 07 2E 07 07 04 02 00 64 04 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x072D),
        help     = STRING_TOKEN (0x072E),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000A7F9: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A800: 09 07 39 07 30 00 01 
      endoneof;
>0000A807: 29 02 

        suppressif ideqval PCH_SETUP.PchSSataLtrEnable == 0;
>0000A809: 0A 82 
>0000A80B: 12 06 07 04 00 00 
          oneof varid   = PCH_SETUP.PchSSataLtrOverride,
>0000A811: 05 91 2F 07 30 07 08 04 02 00 60 04 10 10 00 01 00 
            prompt      = STRING_TOKEN (0x072F),
            help        = STRING_TOKEN (0x0730),
            option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A822: 09 07 38 07 30 00 00 
            option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000A829: 09 07 39 07 00 00 01 
          endoneof;
>0000A830: 29 02 

        suppressif ideqval PCH_SETUP.PchSSataLtrOverride == 0;
>0000A832: 0A 82 
>0000A834: 12 06 08 04 00 00 
          numeric varid = PCH_SETUP.PchSSataSnoopLatencyOverrideValue,
>0000A83A: 07 94 31 07 32 07 09 04 02 00 61 04 10 11 00 00 FF 03 01 00 
            prompt      = STRING_TOKEN(0x0731),
            help        = STRING_TOKEN(0x0732),
            flags       = RESET_REQUIRED,
            minimum     = 0,
            maximum     = 1023,
            step        = 1,
            default     = 40, defaultstore = MyStandardDefault,
>0000A84E: 5B 07 00 00 01 28 00 
            default     = 40, defaultstore = MyManufactureDefault,
>0000A855: 5B 07 01 00 01 28 00 
          endnumeric;
>0000A85C: 29 02 

          oneof varid   = PCH_SETUP.PchSSataSnoopLatencyOverrideMultiplier,
>0000A85E: 05 91 33 07 34 07 0A 04 02 00 63 04 10 10 00 05 00 
            prompt      = STRING_TOKEN(0x0733),
            help        = STRING_TOKEN(0x0734),
            option text = STRING_TOKEN(0x0651), value = 0, flags = RESET_REQUIRED;
>0000A86F: 09 07 51 06 00 00 00 
            option text = STRING_TOKEN(0x0652), value = 1, flags = RESET_REQUIRED;
>0000A876: 09 07 52 06 00 00 01 
            option text = STRING_TOKEN(0x0653), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A87D: 09 07 53 06 30 00 02 
            option text = STRING_TOKEN(0x0654), value = 3, flags = RESET_REQUIRED;
>0000A884: 09 07 54 06 00 00 03 
            option text = STRING_TOKEN(0x0655), value = 4, flags = RESET_REQUIRED;
>0000A88B: 09 07 55 06 00 00 04 
            option text = STRING_TOKEN(0x0656), value = 5, flags = RESET_REQUIRED;
>0000A892: 09 07 56 06 00 00 05 
          endoneof;
>0000A899: 29 02 
        endif;
>0000A89B: 29 02 
      endif;
>0000A89D: 29 02 

      oneof varid   = PCH_SETUP.PchSSataLtrConfigLock,
>0000A89F: 05 91 35 07 36 07 0B 04 02 00 65 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0735),
          help        = STRING_TOKEN(0x0736),
          option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000A8B0: 09 07 38 07 00 00 00 
          option text = STRING_TOKEN(0x0739), value = 1, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A8B7: 09 07 39 07 30 00 01 
      endoneof;
>0000A8BE: 29 02 
#line 9404 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\PchSetup.hfr"

      subtitle text = STRING_TOKEN(0x02F7);
>0000A8C0: 02 87 F7 02 00 00 00 
>0000A8C7: 29 02 

      subtitle text = STRING_TOKEN(0x0737);
>0000A8C9: 02 87 37 07 00 00 00 
>0000A8D0: 29 02 
      subtitle text = STRING_TOKEN(0x02F7);
>0000A8D2: 02 87 F7 02 00 00 00 
>0000A8D9: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[0],
>0000A8DB: 05 91 58 06 6C 06 0C 04 02 00 7E 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0658),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000A8EC: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A8F3: 09 07 39 07 30 00 01 
      endoneof;
>0000A8FA: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[0] == 0;
>0000A8FC: 0A 82 
>0000A8FE: 12 06 0C 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[0],
>0000A904: 05 91 3A 07 4E 07 0D 04 02 00 46 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x073A),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A915: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000A91C: 09 07 39 07 00 00 01 
        endoneof;
>0000A923: 29 02 
      endif;
>0000A925: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[1],
>0000A927: 05 91 59 06 6C 06 0E 04 02 00 7F 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0659),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000A938: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A93F: 09 07 39 07 30 00 01 
      endoneof;
>0000A946: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[1] == 0;
>0000A948: 0A 82 
>0000A94A: 12 06 0E 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[1],
>0000A950: 05 91 3B 07 4E 07 0F 04 02 00 47 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x073B),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A961: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000A968: 09 07 39 07 00 00 01 
        endoneof;
>0000A96F: 29 02 
      endif;
>0000A971: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[2],
>0000A973: 05 91 5A 06 6C 06 10 04 02 00 80 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x065A),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000A984: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A98B: 09 07 39 07 30 00 01 
      endoneof;
>0000A992: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[2] == 0;
>0000A994: 0A 82 
>0000A996: 12 06 10 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[2],
>0000A99C: 05 91 3C 07 4E 07 11 04 02 00 48 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x073C),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A9AD: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000A9B4: 09 07 39 07 00 00 01 
        endoneof;
>0000A9BB: 29 02 
      endif;
>0000A9BD: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[3],
>0000A9BF: 05 91 5B 06 6C 06 12 04 02 00 81 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x065B),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000A9D0: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A9D7: 09 07 39 07 30 00 01 
      endoneof;
>0000A9DE: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[3] == 0;
>0000A9E0: 0A 82 
>0000A9E2: 12 06 12 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[3],
>0000A9E8: 05 91 3D 07 4E 07 13 04 02 00 49 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x073D),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000A9F9: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000AA00: 09 07 39 07 00 00 01 
        endoneof;
>0000AA07: 29 02 
      endif;
>0000AA09: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[4],
>0000AA0B: 05 91 5C 06 6C 06 14 04 02 00 82 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x065C),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000AA1C: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AA23: 09 07 39 07 30 00 01 
      endoneof;
>0000AA2A: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[4] == 0;
>0000AA2C: 0A 82 
>0000AA2E: 12 06 14 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[4],
>0000AA34: 05 91 3E 07 4E 07 15 04 02 00 4A 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x073E),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AA45: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000AA4C: 09 07 39 07 00 00 01 
        endoneof;
>0000AA53: 29 02 
      endif;
>0000AA55: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[5],
>0000AA57: 05 91 5D 06 6C 06 16 04 02 00 83 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x065D),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000AA68: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AA6F: 09 07 39 07 30 00 01 
      endoneof;
>0000AA76: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[5] == 0;
>0000AA78: 0A 82 
>0000AA7A: 12 06 16 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[5],
>0000AA80: 05 91 3F 07 4E 07 17 04 02 00 4B 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x073F),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AA91: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000AA98: 09 07 39 07 00 00 01 
        endoneof;
>0000AA9F: 29 02 
      endif;
>0000AAA1: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[6],
>0000AAA3: 05 91 5E 06 6C 06 18 04 02 00 84 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x065E),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000AAB4: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AABB: 09 07 39 07 30 00 01 
      endoneof;
>0000AAC2: 29 02 
      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[6] == 0;
>0000AAC4: 0A 82 
>0000AAC6: 12 06 18 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[6],
>0000AACC: 05 91 40 07 4E 07 19 04 02 00 4C 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0740),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AADD: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000AAE4: 09 07 39 07 00 00 01 
        endoneof;
>0000AAEB: 29 02 
      endif;
>0000AAED: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[7],
>0000AAEF: 05 91 5F 06 6C 06 1A 04 02 00 85 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x065F),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000AB00: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AB07: 09 07 39 07 30 00 01 
      endoneof;
>0000AB0E: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[7] == 0;
>0000AB10: 0A 82 
>0000AB12: 12 06 1A 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[7],
>0000AB18: 05 91 41 07 4E 07 1B 04 02 00 4D 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0741),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AB29: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000AB30: 09 07 39 07 00 00 01 
        endoneof;
>0000AB37: 29 02 
      endif;
>0000AB39: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[8],
>0000AB3B: 05 91 60 06 6C 06 1C 04 02 00 86 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0660),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000AB4C: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AB53: 09 07 39 07 30 00 01 
      endoneof;
>0000AB5A: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[8] == 0;
>0000AB5C: 0A 82 
>0000AB5E: 12 06 1C 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[8],
>0000AB64: 05 91 42 07 4E 07 1D 04 02 00 4E 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0742),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AB75: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000AB7C: 09 07 39 07 00 00 01 
        endoneof;
>0000AB83: 29 02 
      endif;
>0000AB85: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[9],
>0000AB87: 05 91 61 06 6C 06 1E 04 02 00 87 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0661),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000AB98: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AB9F: 09 07 39 07 30 00 01 
      endoneof;
>0000ABA6: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[9] == 0;
>0000ABA8: 0A 82 
>0000ABAA: 12 06 1E 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[9],
>0000ABB0: 05 91 43 07 4E 07 1F 04 02 00 4F 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0743),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000ABC1: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000ABC8: 09 07 39 07 00 00 01 
        endoneof;
>0000ABCF: 29 02 
      endif;
>0000ABD1: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[10],
>0000ABD3: 05 91 62 06 6C 06 20 04 02 00 88 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0662),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000ABE4: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000ABEB: 09 07 39 07 30 00 01 
      endoneof;
>0000ABF2: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[10] == 0;
>0000ABF4: 0A 82 
>0000ABF6: 12 06 20 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[10],
>0000ABFC: 05 91 44 07 4E 07 21 04 02 00 50 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0744),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AC0D: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000AC14: 09 07 39 07 00 00 01 
        endoneof;
>0000AC1B: 29 02 
      endif;
>0000AC1D: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[11],
>0000AC1F: 05 91 63 06 6C 06 22 04 02 00 89 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0663),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000AC30: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AC37: 09 07 39 07 30 00 01 
      endoneof;
>0000AC3E: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[11] == 0;
>0000AC40: 0A 82 
>0000AC42: 12 06 22 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[11],
>0000AC48: 05 91 45 07 4E 07 23 04 02 00 51 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0745),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AC59: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000AC60: 09 07 39 07 00 00 01 
        endoneof;
>0000AC67: 29 02 
      endif;
>0000AC69: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[12],
>0000AC6B: 05 91 64 06 6C 06 24 04 02 00 8A 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0664),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000AC7C: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AC83: 09 07 39 07 30 00 01 
      endoneof;
>0000AC8A: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[12] == 0;
>0000AC8C: 0A 82 
>0000AC8E: 12 06 24 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[12],
>0000AC94: 05 91 46 07 4E 07 25 04 02 00 52 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0746),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000ACA5: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000ACAC: 09 07 39 07 00 00 01 
        endoneof;
>0000ACB3: 29 02 
      endif;
>0000ACB5: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[13],
>0000ACB7: 05 91 65 06 6C 06 26 04 02 00 8B 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0665),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000ACC8: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000ACCF: 09 07 39 07 30 00 01 
      endoneof;
>0000ACD6: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[13] == 0;
>0000ACD8: 0A 82 
>0000ACDA: 12 06 26 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[13],
>0000ACE0: 05 91 47 07 4E 07 27 04 02 00 53 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0747),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000ACF1: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000ACF8: 09 07 39 07 00 00 01 
        endoneof;
>0000ACFF: 29 02 
      endif;
>0000AD01: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[14],
>0000AD03: 05 91 66 06 6C 06 28 04 02 00 8C 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0666),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000AD14: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AD1B: 09 07 39 07 30 00 01 
      endoneof;
>0000AD22: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[14] == 0;
>0000AD24: 0A 82 
>0000AD26: 12 06 28 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[14],
>0000AD2C: 05 91 48 07 4E 07 29 04 02 00 54 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0748),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AD3D: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000AD44: 09 07 39 07 00 00 01 
        endoneof;
>0000AD4B: 29 02 
      endif;
>0000AD4D: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[15],
>0000AD4F: 05 91 67 06 6C 06 2A 04 02 00 8D 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0667),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000AD60: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AD67: 09 07 39 07 30 00 01 
      endoneof;
>0000AD6E: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[15] == 0;
>0000AD70: 0A 82 
>0000AD72: 12 06 2A 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[15],
>0000AD78: 05 91 49 07 4E 07 2B 04 02 00 55 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0749),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AD89: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000AD90: 09 07 39 07 00 00 01 
        endoneof;
>0000AD97: 29 02 
      endif;
>0000AD99: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[16],
>0000AD9B: 05 91 68 06 6C 06 2C 04 02 00 8E 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0668),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000ADAC: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000ADB3: 09 07 39 07 30 00 01 
      endoneof;
>0000ADBA: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[16] == 0;
>0000ADBC: 0A 82 
>0000ADBE: 12 06 2C 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[16],
>0000ADC4: 05 91 4A 07 4E 07 2D 04 02 00 56 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x074A),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000ADD5: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000ADDC: 09 07 39 07 00 00 01 
        endoneof;
>0000ADE3: 29 02 
      endif;
>0000ADE5: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[17],
>0000ADE7: 05 91 69 06 6C 06 2E 04 02 00 8F 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x0669),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000ADF8: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000ADFF: 09 07 39 07 30 00 01 
      endoneof;
>0000AE06: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[17] == 0;
>0000AE08: 0A 82 
>0000AE0A: 12 06 2E 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[17],
>0000AE10: 05 91 4B 07 4E 07 2F 04 02 00 57 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x074B),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AE21: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000AE28: 09 07 39 07 00 00 01 
        endoneof;
>0000AE2F: 29 02 
      endif;
>0000AE31: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[18],
>0000AE33: 05 91 6A 06 6C 06 30 04 02 00 90 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x066A),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000AE44: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AE4B: 09 07 39 07 30 00 01 
      endoneof;
>0000AE52: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[18] == 0;
>0000AE54: 0A 82 
>0000AE56: 12 06 30 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[18],
>0000AE5C: 05 91 4C 07 4E 07 31 04 02 00 58 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x074C),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AE6D: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000AE74: 09 07 39 07 00 00 01 
        endoneof;
>0000AE7B: 29 02 
      endif;
>0000AE7D: 29 02 

      oneof varid   = PCH_SETUP.PchPcieLtrEnable[19],
>0000AE7F: 05 91 6B 06 6C 06 32 04 02 00 91 03 10 10 00 01 00 
        prompt   = STRING_TOKEN (0x066B),
        help     = STRING_TOKEN (0x066C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000AE90: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AE97: 09 07 39 07 30 00 01 
      endoneof;
>0000AE9E: 29 02 

      suppressif ideqval PCH_SETUP.PchPcieLtrEnable[19] == 0;
>0000AEA0: 0A 82 
>0000AEA2: 12 06 32 04 00 00 
        oneof varid  = PCH_SETUP.PchPcieForceLtrOverride[19],
>0000AEA8: 05 91 4D 07 4E 07 33 04 02 00 59 04 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x074D),
          help        = STRING_TOKEN(0x074E),
          option text = STRING_TOKEN(0x0738),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000AEB9: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = RESET_REQUIRED;
>0000AEC0: 09 07 39 07 00 00 01 
        endoneof;
>0000AEC7: 29 02 
      endif;
>0000AEC9: 29 02 

    endform;
>0000AECB: 29 02 


#line 1020 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
  #line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\DebugInterface.hfr"



























form formid = 0x24,
>0000AECD: 01 86 24 00 77 08 
  title     = STRING_TOKEN(0x0877);

  subtitle text = STRING_TOKEN(0x0877);
>0000AED3: 02 87 77 08 00 00 00 
>0000AEDA: 29 02 
  subtitle text = STRING_TOKEN(0x00AA);
>0000AEDC: 02 87 AA 00 00 00 00 
>0000AEE3: 29 02 

  checkbox varid = SYSTEM_CONFIGURATION.RamDebugInterface,
>0000AEE5: 06 8E 7A 08 79 08 34 04 01 00 C3 01 10 00 
    prompt       = STRING_TOKEN(0x087A),
    help         = STRING_TOKEN(0x0879),
    flags        = RESET_REQUIRED,
    key          = 0,
  endcheckbox;
>0000AEF3: 29 02 

  checkbox varid = SYSTEM_CONFIGURATION.TraceHubDebugInterface,
>0000AEF5: 06 8E 7B 08 79 08 35 04 01 00 C2 01 10 03 
    prompt       = STRING_TOKEN(0x087B),
    help         = STRING_TOKEN(0x0879),
    flags        = CHECKBOX_DEFAULT | CHECKBOX_DEFAULT_MFG | RESET_REQUIRED,
    key          = 0,
  endcheckbox;
>0000AF03: 29 02 

endform;
>0000AF05: 29 02 
#line 1021 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
  
  
  

  #line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\BmcLanCfg.hfr"


































form formid = 0x0C,
>0000AF07: 01 86 0C 00 02 00 
  title = STRING_TOKEN(0x0002);

  subtitle text = STRING_TOKEN(0x0762);
>0000AF0D: 02 87 62 07 00 00 00 
>0000AF14: 29 02 
  subtitle text = STRING_TOKEN(0x0004);
>0000AF16: 02 87 04 00 00 00 00 
>0000AF1D: 29 02 
  subtitle text = STRING_TOKEN(0x0762);
>0000AF1F: 02 87 62 07 00 00 00 
>0000AF26: 29 02 
  subtitle text = STRING_TOKEN(0x00AA);
>0000AF28: 02 87 AA 00 00 00 00 
>0000AF2F: 29 02 

  oneof varid = BmcLan.NicIpv4.Source,
>0000AF31: 05 91 07 00 09 00 36 04 0C 00 84 00 00 10 01 02 00 
    prompt      = STRING_TOKEN(0x0007),
    help        = STRING_TOKEN(0x0009),
    option text = STRING_TOKEN(0x000A), value = 1, flags = 0;
>0000AF42: 09 07 0A 00 00 00 01 
    option text = STRING_TOKEN(0x000B),   value = 2,   flags = DEFAULT | MANUFACTURING;
>0000AF49: 09 07 0B 00 30 00 02 
  endoneof;
>0000AF50: 29 02 

  grayoutif NOT ideqval BmcLan.NicIpv4.Source == 1;
>0000AF52: 19 82 
>0000AF54: 12 86 36 04 01 00 
>0000AF5A: 17 02 
>0000AF5C: 29 02 
    string varid = BmcLan.NicIpv4.Address,
>0000AF5E: 1C 90 0C 00 0E 00 01 06 0C 00 86 00 04 06 0F 00 
      prompt  = STRING_TOKEN(0x000C),
      help    = STRING_TOKEN(0x000E),
      flags   = INTERACTIVE,
      key     = 0x601,
      minsize = 6,
      maxsize = 15,
    endstring;
>0000AF6E: 29 02 
  endif;
>0000AF70: 29 02 

  grayoutif NOT ideqval BmcLan.NicIpv4.Source == 1;
>0000AF72: 19 82 
>0000AF74: 12 86 36 04 01 00 
>0000AF7A: 17 02 
>0000AF7C: 29 02 
    string varid = BmcLan.NicIpv4.SubnetMask,
>0000AF7E: 1C 90 0F 00 11 00 02 06 0C 00 A6 00 04 06 0F 00 
      prompt  = STRING_TOKEN(0x000F),
      help    = STRING_TOKEN(0x0011),
      flags   = INTERACTIVE,
      key     = 0x602,
      minsize = 6,
      maxsize = 15,
    endstring;
>0000AF8E: 29 02 
  endif;
>0000AF90: 29 02 

  grayoutif NOT ideqval BmcLan.NicIpv4.Source == 1;
>0000AF92: 19 82 
>0000AF94: 12 86 36 04 01 00 
>0000AF9A: 17 02 
>0000AF9C: 29 02 
    string varid = BmcLan.NicIpv4.Gateway,
>0000AF9E: 1C 90 12 00 14 00 03 06 0C 00 C6 00 04 06 0F 00 
      prompt  = STRING_TOKEN(0x0012),
      help    = STRING_TOKEN(0x0014),
      flags   = INTERACTIVE,
      key     = 0x603,
      minsize = 6,
      maxsize = 15,
    endstring;
>0000AFAE: 29 02 
  endif;
>0000AFB0: 29 02 

  subtitle text = STRING_TOKEN(0x00AA);
>0000AFB2: 02 87 AA 00 00 00 00 
>0000AFB9: 29 02 

  oneof varid = BmcLan.NicIpv6.Enable,
>0000AFBB: 05 91 15 00 17 00 37 04 0C 00 E6 00 00 10 00 01 00 
    prompt      = STRING_TOKEN(0x0015),
    help        = STRING_TOKEN(0x0017),
    option text = STRING_TOKEN(0x00A6),  value = 1, flags = DEFAULT | MANUFACTURING;
>0000AFCC: 09 07 A6 00 30 00 01 
    option text = STRING_TOKEN(0x00A7), value = 0, flags = 0;
>0000AFD3: 09 07 A7 00 00 00 00 
  endoneof;
>0000AFDA: 29 02 

  suppressif ideqval BmcLan.NicIpv6.Enable == 0;
>0000AFDC: 0A 82 
>0000AFDE: 12 06 37 04 00 00 
    oneof varid = BmcLan.NicIpv6.Source,
>0000AFE4: 05 91 18 00 1A 00 38 04 0C 00 E7 00 00 10 01 05 00 
      prompt      = STRING_TOKEN(0x0018),
      help        = STRING_TOKEN(0x001A),
      option text = STRING_TOKEN(0x000A),    value = 1, flags = 0;
>0000AFF5: 09 07 0A 00 00 00 01 
      option text = STRING_TOKEN(0x000B),      value = 2,   flags = DEFAULT | MANUFACTURING;
>0000AFFC: 09 07 0B 00 30 00 02 
      option text = STRING_TOKEN(0x001B), value = 5,   flags = 0;
>0000B003: 09 07 1B 00 00 00 05 
    endoneof;
>0000B00A: 29 02 
  endif;
>0000B00C: 29 02 

  grayoutif NOT ideqval BmcLan.NicIpv6.Source == 1;
>0000B00E: 19 82 
>0000B010: 12 86 38 04 01 00 
>0000B016: 17 02 
>0000B018: 29 02 
    suppressif ideqval BmcLan.NicIpv6.Enable == 0;
>0000B01A: 0A 82 
>0000B01C: 12 06 37 04 00 00 
      string varid = BmcLan.NicIpv6.Address,
>0000B022: 1C 90 1C 00 1E 00 04 06 0C 00 EA 00 04 02 28 00 
        prompt  = STRING_TOKEN(0x001C),
        help    = STRING_TOKEN(0x001E),
        flags   = INTERACTIVE,
        key     = 0x604,
        minsize = 2,
        maxsize = 40,
      endstring;
>0000B032: 29 02 
    endif;
>0000B034: 29 02 
  endif;
>0000B036: 29 02 

  grayoutif NOT ideqval BmcLan.NicIpv6.Source == 1;
>0000B038: 19 82 
>0000B03A: 12 86 38 04 01 00 
>0000B040: 17 02 
>0000B042: 29 02 
    suppressif ideqval BmcLan.NicIpv6.Enable == 0;
>0000B044: 0A 82 
>0000B046: 12 06 37 04 00 00 
      string varid = BmcLan.NicIpv6.Gateway,
>0000B04C: 1C 90 1F 00 21 00 05 06 0C 00 3A 01 04 02 28 00 
        prompt  = STRING_TOKEN(0x001F),
        help    = STRING_TOKEN(0x0021),
        flags   = INTERACTIVE,
        key     = 0x605,
        minsize = 2,
        maxsize = 40,
      endstring;
>0000B05C: 29 02 
    endif;
>0000B05E: 29 02 
  endif;
>0000B060: 29 02 

  grayoutif NOT ideqval BmcLan.NicIpv6.Source == 1;
>0000B062: 19 82 
>0000B064: 12 86 38 04 01 00 
>0000B06A: 17 02 
>0000B06C: 29 02 
    suppressif ideqval BmcLan.NicIpv6.Enable == 0;
>0000B06E: 0A 82 
>0000B070: 12 06 37 04 00 00 
      numeric varid = BmcLan.NicIpv6.PrefixLength,
>0000B076: 07 91 22 00 24 00 39 04 0C 00 E8 00 00 10 00 80 01 
        prompt  = STRING_TOKEN(0x0022),
        help    = STRING_TOKEN(0x0024),
        flags   = 0,
        minimum = 0,
        maximum = 128,
        step    = 1,
        default = 80, defaultstore = MyStandardDefault,
>0000B087: 5B 06 00 00 00 50 
        default = 80, defaultstore = MyManufactureDefault,
>0000B08D: 5B 06 01 00 00 50 
      endnumeric;
>0000B093: 29 02 
    endif;
>0000B095: 29 02 
  endif;
>0000B097: 29 02 

  subtitle text = STRING_TOKEN(0x00AA);
>0000B099: 02 87 AA 00 00 00 00 
>0000B0A0: 29 02 
  subtitle text = STRING_TOKEN(0x0762);
>0000B0A2: 02 87 62 07 00 00 00 
>0000B0A9: 29 02 
  subtitle text = STRING_TOKEN(0x0005);
>0000B0AB: 02 87 05 00 00 00 00 
>0000B0B2: 29 02 
  subtitle text = STRING_TOKEN(0x0762);
>0000B0B4: 02 87 62 07 00 00 00 
>0000B0BB: 29 02 
  subtitle text = STRING_TOKEN(0x00AA);
>0000B0BD: 02 87 AA 00 00 00 00 
>0000B0C4: 29 02 

  suppressif ideqval BmcLan.RmmPresent == 1;
>0000B0C6: 0A 82 
>0000B0C8: 12 06 4F 05 01 00 
    text
>0000B0CE: 03 08 25 00 26 00 28 00 
      help  = STRING_TOKEN(0x0026),
      text  = STRING_TOKEN(0x0025),
      text  = STRING_TOKEN(0x0028),
      flags = 0,
      key   = 0;
  endif;
>0000B0D6: 29 02 

  suppressif ideqval BmcLan.RmmPresent == 0;
>0000B0D8: 0A 82 
>0000B0DA: 12 06 4F 05 00 00 
    text
>0000B0E0: 03 08 25 00 26 00 27 00 
      help  = STRING_TOKEN(0x0026),
      text  = STRING_TOKEN(0x0025),
      text  = STRING_TOKEN(0x0027),
      flags = 0,
      key   = 0;
  endif;
>0000B0E8: 29 02 

  grayoutif ideqval BmcLan.NicPresent == 0;
>0000B0EA: 19 82 
>0000B0EC: 12 06 50 05 00 00 
    oneof varid = BmcLan.RmmIpv4.Source,
>0000B0F2: 05 91 08 00 09 00 3A 04 0C 00 8A 01 00 10 01 02 00 
      prompt      = STRING_TOKEN(0x0008),
      help        = STRING_TOKEN(0x0009),
      option text = STRING_TOKEN(0x000A), value = 1, flags = 0;
>0000B103: 09 07 0A 00 00 00 01 
      option text = STRING_TOKEN(0x000B),   value = 2,   flags = DEFAULT | MANUFACTURING;
>0000B10A: 09 07 0B 00 30 00 02 
    endoneof;
>0000B111: 29 02 
  endif;
>0000B113: 29 02 

  grayoutif (NOT ideqval BmcLan.RmmIpv4.Source == 1) OR
>0000B115: 19 82 
>0000B117: 12 86 3A 04 01 00 
>0000B11D: 17 02 
>0000B125: 16 02 
>0000B127: 29 02 
            ideqval BmcLan.RmmPresent == 0;
>0000B11F: 12 06 4F 05 00 00 
    string varid = BmcLan.RmmIpv4.Address,
>0000B129: 1C 90 0D 00 0E 00 06 06 0C 00 8C 01 04 06 0F 00 
      prompt  = STRING_TOKEN(0x000D),
      help    = STRING_TOKEN(0x000E),
      flags   = INTERACTIVE,
      key     = 0x606,
      minsize = 6,
      maxsize = 15,
    endstring;
>0000B139: 29 02 
  endif;
>0000B13B: 29 02 

  grayoutif (NOT ideqval BmcLan.RmmIpv4.Source == 1) OR
>0000B13D: 19 82 
>0000B13F: 12 86 3A 04 01 00 
>0000B145: 17 02 
>0000B14D: 16 02 
>0000B14F: 29 02 
            ideqval BmcLan.RmmPresent == 0;
>0000B147: 12 06 4F 05 00 00 
    string varid = BmcLan.RmmIpv4.SubnetMask,
>0000B151: 1C 90 10 00 11 00 07 06 0C 00 AC 01 04 06 0F 00 
      prompt  = STRING_TOKEN(0x0010),
      help    = STRING_TOKEN(0x0011),
      flags   = INTERACTIVE,
      key     = 0x607,
      minsize = 6,
      maxsize = 15,
    endstring;
>0000B161: 29 02 
  endif;
>0000B163: 29 02 

  grayoutif (NOT ideqval BmcLan.RmmIpv4.Source == 1) OR
>0000B165: 19 82 
>0000B167: 12 86 3A 04 01 00 
>0000B16D: 17 02 
>0000B175: 16 02 
>0000B177: 29 02 
            ideqval BmcLan.RmmPresent == 0;
>0000B16F: 12 06 4F 05 00 00 
    string varid = BmcLan.RmmIpv4.Gateway,
>0000B179: 1C 90 13 00 14 00 08 06 0C 00 CC 01 04 06 0F 00 
      prompt  = STRING_TOKEN(0x0013),
      help    = STRING_TOKEN(0x0014),
      flags   = INTERACTIVE,
      key     = 0x608,
      minsize = 6,
      maxsize = 15,
    endstring;
>0000B189: 29 02 
  endif;
>0000B18B: 29 02 

  subtitle text = STRING_TOKEN(0x00AA);
>0000B18D: 02 87 AA 00 00 00 00 
>0000B194: 29 02 

  grayoutif ideqval BmcLan.RmmPresent == 0;
>0000B196: 19 82 
>0000B198: 12 06 4F 05 00 00 
    oneof varid = BmcLan.RmmIpv6.Enable,
>0000B19E: 05 91 16 00 17 00 3B 04 0C 00 EC 01 00 10 00 01 00 
      prompt      = STRING_TOKEN(0x0016),
      help        = STRING_TOKEN(0x0017),
      option text = STRING_TOKEN(0x00A6),  value = 1, flags = 0;
>0000B1AF: 09 07 A6 00 00 00 01 
      option text = STRING_TOKEN(0x00A7), value = 0, flags = DEFAULT | MANUFACTURING;
>0000B1B6: 09 07 A7 00 30 00 00 
    endoneof;
>0000B1BD: 29 02 
  endif;
>0000B1BF: 29 02 

  grayoutif ideqval BmcLan.RmmPresent == 0;
>0000B1C1: 19 82 
>0000B1C3: 12 06 4F 05 00 00 
    suppressif ideqval BmcLan.RmmIpv6.Enable == 0;
>0000B1C9: 0A 82 
>0000B1CB: 12 06 3B 04 00 00 
      oneof varid = BmcLan.RmmIpv6.Source,
>0000B1D1: 05 91 19 00 1A 00 3C 04 0C 00 ED 01 00 10 01 05 00 
        prompt      = STRING_TOKEN(0x0019),
        help        = STRING_TOKEN(0x001A),
        option text = STRING_TOKEN(0x000A),    value = 1, flags = 0;
>0000B1E2: 09 07 0A 00 00 00 01 
        option text = STRING_TOKEN(0x000B),      value = 2,   flags = DEFAULT | MANUFACTURING;
>0000B1E9: 09 07 0B 00 30 00 02 
        option text = STRING_TOKEN(0x001B), value = 5,   flags = 0;
>0000B1F0: 09 07 1B 00 00 00 05 
      endoneof;
>0000B1F7: 29 02 
    endif;
>0000B1F9: 29 02 
  endif;
>0000B1FB: 29 02 

  grayoutif (NOT ideqval BmcLan.RmmIpv6.Source == 1) OR
>0000B1FD: 19 82 
>0000B1FF: 12 86 3C 04 01 00 
>0000B205: 17 02 
>0000B20D: 16 02 
>0000B20F: 29 02 
            ideqval BmcLan.RmmPresent == 0;
>0000B207: 12 06 4F 05 00 00 
    suppressif ideqval BmcLan.RmmIpv6.Enable == 0;
>0000B211: 0A 82 
>0000B213: 12 06 3B 04 00 00 
      string varid = BmcLan.RmmIpv6.Address,
>0000B219: 1C 90 1D 00 1E 00 09 06 0C 00 F0 01 04 02 28 00 
        prompt  = STRING_TOKEN(0x001D),
        help    = STRING_TOKEN(0x001E),
        flags   = INTERACTIVE,
        key     = 0x609,
        minsize = 2,
        maxsize = 40,
      endstring;
>0000B229: 29 02 
    endif;
>0000B22B: 29 02 
  endif;
>0000B22D: 29 02 

  grayoutif (NOT ideqval BmcLan.RmmIpv6.Source == 1) OR
>0000B22F: 19 82 
>0000B231: 12 86 3C 04 01 00 
>0000B237: 17 02 
>0000B23F: 16 02 
>0000B241: 29 02 
            ideqval BmcLan.RmmPresent == 0;
>0000B239: 12 06 4F 05 00 00 
    suppressif ideqval BmcLan.RmmIpv6.Enable == 0;
>0000B243: 0A 82 
>0000B245: 12 06 3B 04 00 00 
      string varid = BmcLan.RmmIpv6.Gateway,
>0000B24B: 1C 90 20 00 21 00 0A 06 0C 00 40 02 04 02 28 00 
        prompt  = STRING_TOKEN(0x0020),
        help    = STRING_TOKEN(0x0021),
        flags   = INTERACTIVE,
        key     = 0x60a,
        minsize = 2,
        maxsize = 40,
      endstring;
>0000B25B: 29 02 
    endif;
>0000B25D: 29 02 
  endif;
>0000B25F: 29 02 

  grayoutif (NOT ideqval BmcLan.RmmIpv6.Source == 1) OR
>0000B261: 19 82 
>0000B263: 12 86 3C 04 01 00 
>0000B269: 17 02 
>0000B271: 16 02 
>0000B273: 29 02 
            ideqval BmcLan.RmmPresent == 0;
>0000B26B: 12 06 4F 05 00 00 
    suppressif ideqval BmcLan.RmmIpv6.Enable == 0;
>0000B275: 0A 82 
>0000B277: 12 06 3B 04 00 00 
      numeric varid = BmcLan.RmmIpv6.PrefixLength,
>0000B27D: 07 91 23 00 24 00 3D 04 0C 00 EE 01 00 10 00 80 01 
        prompt  = STRING_TOKEN(0x0023),
        help    = STRING_TOKEN(0x0024),
        flags   = 0,
        minimum = 0,
        maximum = 128,
        step    = 1,
        default = 80, defaultstore = MyStandardDefault,
>0000B28E: 5B 06 00 00 00 50 
        default = 80, defaultstore = MyManufactureDefault,
>0000B294: 5B 06 01 00 00 50 
      endnumeric;
>0000B29A: 29 02 
    endif;
>0000B29C: 29 02 
  endif;
>0000B29E: 29 02 

  subtitle text = STRING_TOKEN(0x00AA);
>0000B2A0: 02 87 AA 00 00 00 00 
>0000B2A7: 29 02 
  subtitle text = STRING_TOKEN(0x0762);
>0000B2A9: 02 87 62 07 00 00 00 
>0000B2B0: 29 02 
  subtitle text = STRING_TOKEN(0x00AA);
>0000B2B2: 02 87 AA 00 00 00 00 
>0000B2B9: 29 02 

  suppressif NOT ideqval BmcLan.NicIpv4.Source == 2 AND
>0000B2BB: 0A 82 
>0000B2BD: 12 86 36 04 02 00 
>0000B2C3: 17 02 
>0000B2CD: 15 02 
>0000B2CF: 29 02 
             NOT ideqval BmcLan.RmmIpv4.Source == 2;
>0000B2C5: 12 06 3A 04 02 00 
>0000B2CB: 17 02 
    string varid = BmcLan.DhcpName,
>0000B2D1: 1C 90 29 00 2A 00 0B 06 0C 00 04 00 04 02 3F 00 
      prompt  = STRING_TOKEN(0x0029),
      help    = STRING_TOKEN(0x002A),
      flags   = INTERACTIVE,
      key     = 0x60b,
      minsize = 2,
      maxsize = 63,
    endstring;
>0000B2E1: 29 02 
  endif;
>0000B2E3: 29 02 

  subtitle text = STRING_TOKEN(0x00AA);
>0000B2E5: 02 87 AA 00 00 00 00 
>0000B2EC: 29 02 
  subtitle text = STRING_TOKEN(0x0762);
>0000B2EE: 02 87 62 07 00 00 00 
>0000B2F5: 29 02 
  subtitle text = STRING_TOKEN(0x0006);
>0000B2F7: 02 87 06 00 00 00 00 
>0000B2FE: 29 02 
  subtitle text = STRING_TOKEN(0x0762);
>0000B300: 02 87 62 07 00 00 00 
>0000B307: 29 02 
  subtitle text = STRING_TOKEN(0x00AA);
>0000B309: 02 87 AA 00 00 00 00 
>0000B310: 29 02 

  oneof varid = BmcLan.UserSelect,
>0000B312: 05 91 2B 00 2C 00 3E 04 0C 00 02 00 00 10 01 05 00 
    prompt      = STRING_TOKEN(0x002B),
    help        = STRING_TOKEN(0x002C),
    option text = STRING_TOKEN(0x002D), value = 1, flags = DEFAULT | MANUFACTURING;
>0000B323: 09 07 2D 00 30 00 01 
    option text = STRING_TOKEN(0x002E), value = 2, flags = 0;
>0000B32A: 09 07 2E 00 00 00 02 
    option text = STRING_TOKEN(0x002F), value = 3, flags = 0;
>0000B331: 09 07 2F 00 00 00 03 
    option text = STRING_TOKEN(0x0030), value = 4, flags = 0;
>0000B338: 09 07 30 00 00 00 04 
    option text = STRING_TOKEN(0x0031), value = 5, flags = 0;
>0000B33F: 09 07 31 00 00 00 05 
  endoneof;
>0000B346: 29 02 

  
  suppressif NOT ideqval BmcLan.UserSelect == 1;
>0000B348: 0A 82 
>0000B34A: 12 86 3E 04 01 00 
>0000B350: 17 02 
>0000B352: 29 02 
    oneof varid = BmcLan.User1.Privilege,
>0000B354: 05 91 32 00 37 00 3F 04 0C 00 E1 02 00 10 01 04 00 
      prompt      = STRING_TOKEN(0x0032),
      help        = STRING_TOKEN(0x0037),
      option text = STRING_TOKEN(0x0038),      value = 1, flags = DEFAULT | MANUFACTURING;
>0000B365: 09 07 38 00 30 00 01 
      option text = STRING_TOKEN(0x0039),          value = 2, flags = 0;
>0000B36C: 09 07 39 00 00 00 02 
      option text = STRING_TOKEN(0x003A),      value = 3, flags = 0;
>0000B373: 09 07 3A 00 00 00 03 
      option text = STRING_TOKEN(0x003B), value = 4, flags = 0;
>0000B37A: 09 07 3B 00 00 00 04 
    endoneof;
>0000B381: 29 02 
  endif;
>0000B383: 29 02 

  suppressif NOT ideqval BmcLan.UserSelect == 1;
>0000B385: 0A 82 
>0000B387: 12 86 3E 04 01 00 
>0000B38D: 17 02 
>0000B38F: 29 02 
    oneof varid   = BmcLan.User1.Status,
>0000B391: 05 91 3C 00 41 00 40 04 0C 00 E0 02 00 10 00 01 00 
      prompt      = STRING_TOKEN(0x003C),
      help        = STRING_TOKEN(0x0041),
      option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING;
>0000B3A2: 09 07 38 07 30 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000B3A9: 09 07 39 07 00 00 01 
    endoneof;
>0000B3B0: 29 02 
  endif;
>0000B3B2: 29 02 

  suppressif NOT ideqval BmcLan.UserSelect == 1;
>0000B3B4: 0A 82 
>0000B3B6: 12 86 3E 04 01 00 
>0000B3BC: 17 02 
>0000B3BE: 29 02 
    grayoutif TRUE;
>0000B3C0: 19 82 
>0000B3C2: 46 02 
      text
>0000B3C4: 03 08 42 00 47 00 2D 00 
        help  = STRING_TOKEN(0x0047),
        text  = STRING_TOKEN(0x0042),
        text  = STRING_TOKEN(0x002D);
    endif;
>0000B3CC: 29 02 
  endif;
>0000B3CE: 29 02 

  suppressif NOT ideqval BmcLan.UserSelect == 1;
>0000B3D0: 0A 82 
>0000B3D2: 12 86 3E 04 01 00 
>0000B3D8: 17 02 
>0000B3DA: 29 02 
    password varid = BmcLan.User1.Password,
>0000B3DC: 08 91 48 00 49 00 10 06 0C 00 B8 02 04 04 00 0F 00 
      prompt   = STRING_TOKEN(0x0048),
      help     = STRING_TOKEN(0x0049),
      flags   = INTERACTIVE,
      key      = 0x610,
      minsize  = 4,
      maxsize  = 15,
      encoding = 0,
    endpassword;
>0000B3ED: 29 02 
  endif;
>0000B3EF: 29 02 
  
  
  suppressif NOT ideqval BmcLan.UserSelect == 2;
>0000B3F1: 0A 82 
>0000B3F3: 12 86 3E 04 02 00 
>0000B3F9: 17 02 
>0000B3FB: 29 02 
    grayoutif TRUE;
>0000B3FD: 19 82 
>0000B3FF: 46 02 
      oneof varid = BmcLan.User2.Privilege,
>0000B401: 05 91 33 00 37 00 41 04 0C 00 33 03 00 10 01 04 00 
        prompt      = STRING_TOKEN(0x0033),
        help        = STRING_TOKEN(0x0037),
        option text = STRING_TOKEN(0x0038),      value = 1, flags = 0;
>0000B412: 09 07 38 00 00 00 01 
        option text = STRING_TOKEN(0x0039),          value = 2, flags = 0;
>0000B419: 09 07 39 00 00 00 02 
        option text = STRING_TOKEN(0x003A),      value = 3, flags = 0;
>0000B420: 09 07 3A 00 00 00 03 
        option text = STRING_TOKEN(0x003B), value = 4, flags = DEFAULT | MANUFACTURING;
>0000B427: 09 07 3B 00 30 00 04 
      endoneof;
>0000B42E: 29 02 
    endif;
>0000B430: 29 02 
  endif;
>0000B432: 29 02 

  suppressif NOT ideqval BmcLan.UserSelect == 2;
>0000B434: 0A 82 
>0000B436: 12 86 3E 04 02 00 
>0000B43C: 17 02 
>0000B43E: 29 02 
    oneof varid   = BmcLan.User2.Status,
>0000B440: 05 91 3D 00 41 00 42 04 0C 00 32 03 00 10 00 01 00 
      prompt      = STRING_TOKEN(0x003D),
      help        = STRING_TOKEN(0x0041),
      option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING;
>0000B451: 09 07 38 07 30 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000B458: 09 07 39 07 00 00 01 
    endoneof;
>0000B45F: 29 02 
  endif;
>0000B461: 29 02 

  suppressif NOT ideqval BmcLan.UserSelect == 2;
>0000B463: 0A 82 
>0000B465: 12 86 3E 04 02 00 
>0000B46B: 17 02 
>0000B46D: 29 02 
    grayoutif TRUE;
>0000B46F: 19 82 
>0000B471: 46 02 
      string varid = BmcLan.User2.Name,
>0000B473: 1C 90 43 00 47 00 43 04 0C 00 E2 02 10 04 0F 00 
          prompt   = STRING_TOKEN(0x0043),
          help     = STRING_TOKEN(0x0047),
          flags    = 0 | RESET_REQUIRED,
          minsize  = 4,
          maxsize  = 15,
      endstring;
>0000B483: 29 02 
    endif;
>0000B485: 29 02 
  endif;
>0000B487: 29 02 

  suppressif NOT ideqval BmcLan.UserSelect == 2;
>0000B489: 0A 82 
>0000B48B: 12 86 3E 04 02 00 
>0000B491: 17 02 
>0000B493: 29 02 
    password varid = BmcLan.User2.Password,
>0000B495: 08 91 48 00 49 00 11 06 0C 00 0A 03 04 04 00 0F 00 
      prompt   = STRING_TOKEN(0x0048),
      help     = STRING_TOKEN(0x0049),
      flags   = INTERACTIVE,
      key      = 0x611,
      minsize  = 4,
      maxsize  = 15,
      encoding = 0,
    endpassword;
>0000B4A6: 29 02 
  endif;
>0000B4A8: 29 02 
  
  
  suppressif NOT ideqval BmcLan.UserSelect == 3;
>0000B4AA: 0A 82 
>0000B4AC: 12 86 3E 04 03 00 
>0000B4B2: 17 02 
>0000B4B4: 29 02 
    oneof varid = BmcLan.User3.Privilege,
>0000B4B6: 05 91 34 00 37 00 44 04 0C 00 85 03 00 10 01 04 00 
      prompt      = STRING_TOKEN(0x0034),
      help        = STRING_TOKEN(0x0037),
      option text = STRING_TOKEN(0x0038),      value = 1, flags = DEFAULT | MANUFACTURING;
>0000B4C7: 09 07 38 00 30 00 01 
      option text = STRING_TOKEN(0x0039),          value = 2, flags = 0;
>0000B4CE: 09 07 39 00 00 00 02 
      option text = STRING_TOKEN(0x003A),      value = 3, flags = 0;
>0000B4D5: 09 07 3A 00 00 00 03 
      option text = STRING_TOKEN(0x003B), value = 4, flags = 0;
>0000B4DC: 09 07 3B 00 00 00 04 
    endoneof;
>0000B4E3: 29 02 
  endif;
>0000B4E5: 29 02 

  suppressif NOT ideqval BmcLan.UserSelect == 3;
>0000B4E7: 0A 82 
>0000B4E9: 12 86 3E 04 03 00 
>0000B4EF: 17 02 
>0000B4F1: 29 02 
    oneof varid   = BmcLan.User3.Status,
>0000B4F3: 05 91 3E 00 41 00 45 04 0C 00 84 03 00 10 00 01 00 
      prompt      = STRING_TOKEN(0x003E),
      help        = STRING_TOKEN(0x0041),
      option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING;
>0000B504: 09 07 38 07 30 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000B50B: 09 07 39 07 00 00 01 
    endoneof;
>0000B512: 29 02 
  endif;
>0000B514: 29 02 

  suppressif NOT ideqval BmcLan.UserSelect == 3;
>0000B516: 0A 82 
>0000B518: 12 86 3E 04 03 00 
>0000B51E: 17 02 
>0000B520: 29 02 
    string varid = BmcLan.User3.Name,
>0000B522: 1C 90 44 00 47 00 46 04 0C 00 34 03 10 04 0F 00 
        prompt   = STRING_TOKEN(0x0044),
        help     = STRING_TOKEN(0x0047),
        flags    = 0 | RESET_REQUIRED,
        minsize  = 4,
        maxsize  = 15,
    endstring;
>0000B532: 29 02 
  endif;
>0000B534: 29 02 

  suppressif NOT ideqval BmcLan.UserSelect == 3;
>0000B536: 0A 82 
>0000B538: 12 86 3E 04 03 00 
>0000B53E: 17 02 
>0000B540: 29 02 
    password varid = BmcLan.User3.Password,
>0000B542: 08 91 48 00 49 00 12 06 0C 00 5C 03 04 04 00 0F 00 
      prompt   = STRING_TOKEN(0x0048),
      help     = STRING_TOKEN(0x0049),
      flags   = INTERACTIVE,
      key      = 0x612,
      minsize  = 4,
      maxsize  = 15,
      encoding = 0,
    endpassword;
>0000B553: 29 02 
  endif;
>0000B555: 29 02 

  
  suppressif NOT ideqval BmcLan.UserSelect == 4;
>0000B557: 0A 82 
>0000B559: 12 86 3E 04 04 00 
>0000B55F: 17 02 
>0000B561: 29 02 
    oneof varid = BmcLan.User4.Privilege,
>0000B563: 05 91 35 00 37 00 47 04 0C 00 D7 03 00 10 01 04 00 
      prompt      = STRING_TOKEN(0x0035),
      help        = STRING_TOKEN(0x0037),
      option text = STRING_TOKEN(0x0038),      value = 1, flags = DEFAULT | MANUFACTURING;
>0000B574: 09 07 38 00 30 00 01 
      option text = STRING_TOKEN(0x0039),          value = 2, flags = 0;
>0000B57B: 09 07 39 00 00 00 02 
      option text = STRING_TOKEN(0x003A),      value = 3, flags = 0;
>0000B582: 09 07 3A 00 00 00 03 
      option text = STRING_TOKEN(0x003B), value = 4, flags = 0;
>0000B589: 09 07 3B 00 00 00 04 
    endoneof;
>0000B590: 29 02 
  endif;
>0000B592: 29 02 

  suppressif NOT ideqval BmcLan.UserSelect == 4;
>0000B594: 0A 82 
>0000B596: 12 86 3E 04 04 00 
>0000B59C: 17 02 
>0000B59E: 29 02 
    oneof varid   = BmcLan.User4.Status,
>0000B5A0: 05 91 3F 00 41 00 48 04 0C 00 D6 03 00 10 00 01 00 
      prompt      = STRING_TOKEN(0x003F),
      help        = STRING_TOKEN(0x0041),
      option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING;
>0000B5B1: 09 07 38 07 30 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000B5B8: 09 07 39 07 00 00 01 
    endoneof;
>0000B5BF: 29 02 
  endif;
>0000B5C1: 29 02 

  suppressif NOT ideqval BmcLan.UserSelect == 4;
>0000B5C3: 0A 82 
>0000B5C5: 12 86 3E 04 04 00 
>0000B5CB: 17 02 
>0000B5CD: 29 02 
    string varid = BmcLan.User4.Name,
>0000B5CF: 1C 90 45 00 47 00 49 04 0C 00 86 03 10 04 0F 00 
      prompt   = STRING_TOKEN(0x0045),
      help     = STRING_TOKEN(0x0047),
      flags    = 0 | RESET_REQUIRED,
      minsize  = 4,
      maxsize  = 15,
    endstring;
>0000B5DF: 29 02 
  endif;
>0000B5E1: 29 02 

  suppressif NOT ideqval BmcLan.UserSelect == 4;
>0000B5E3: 0A 82 
>0000B5E5: 12 86 3E 04 04 00 
>0000B5EB: 17 02 
>0000B5ED: 29 02 
    password varid = BmcLan.User4.Password,
>0000B5EF: 08 91 48 00 49 00 13 06 0C 00 AE 03 04 04 00 0F 00 
      prompt   = STRING_TOKEN(0x0048),
      help     = STRING_TOKEN(0x0049),
      flags   = INTERACTIVE,
      key      = 0x613,
      minsize  = 4,
      maxsize  = 15,
      encoding = 0,
    endpassword;
>0000B600: 29 02 
  endif;
>0000B602: 29 02 

  
  suppressif NOT ideqval BmcLan.UserSelect == 5;
>0000B604: 0A 82 
>0000B606: 12 86 3E 04 05 00 
>0000B60C: 17 02 
>0000B60E: 29 02 
    oneof varid = BmcLan.User5.Privilege,
>0000B610: 05 91 36 00 37 00 4A 04 0C 00 29 04 00 10 01 04 00 
      prompt      = STRING_TOKEN(0x0036),
      help        = STRING_TOKEN(0x0037),
      option text = STRING_TOKEN(0x0038),      value = 1, flags = DEFAULT | MANUFACTURING;
>0000B621: 09 07 38 00 30 00 01 
      option text = STRING_TOKEN(0x0039),          value = 2, flags = 0;
>0000B628: 09 07 39 00 00 00 02 
      option text = STRING_TOKEN(0x003A),      value = 3, flags = 0;
>0000B62F: 09 07 3A 00 00 00 03 
      option text = STRING_TOKEN(0x003B), value = 4, flags = 0;
>0000B636: 09 07 3B 00 00 00 04 
    endoneof;
>0000B63D: 29 02 
  endif;
>0000B63F: 29 02 

  suppressif NOT ideqval BmcLan.UserSelect == 5;
>0000B641: 0A 82 
>0000B643: 12 86 3E 04 05 00 
>0000B649: 17 02 
>0000B64B: 29 02 
    oneof varid   = BmcLan.User5.Status,
>0000B64D: 05 91 40 00 41 00 4B 04 0C 00 28 04 00 10 00 01 00 
      prompt      = STRING_TOKEN(0x0040),
      help        = STRING_TOKEN(0x0041),
      option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING;
>0000B65E: 09 07 38 07 30 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000B665: 09 07 39 07 00 00 01 
    endoneof;
>0000B66C: 29 02 
  endif;
>0000B66E: 29 02 

  suppressif NOT ideqval BmcLan.UserSelect == 5;
>0000B670: 0A 82 
>0000B672: 12 86 3E 04 05 00 
>0000B678: 17 02 
>0000B67A: 29 02 
    string varid = BmcLan.User5.Name,
>0000B67C: 1C 90 46 00 47 00 4C 04 0C 00 D8 03 10 04 0F 00 
        prompt   = STRING_TOKEN(0x0046),
        help     = STRING_TOKEN(0x0047),
        flags    = 0 | RESET_REQUIRED,
        minsize  = 4,
        maxsize  = 15,
    endstring;
>0000B68C: 29 02 
  endif;
>0000B68E: 29 02 

  suppressif NOT ideqval BmcLan.UserSelect == 5;
>0000B690: 0A 82 
>0000B692: 12 86 3E 04 05 00 
>0000B698: 17 02 
>0000B69A: 29 02 
    password varid = BmcLan.User5.Password,
>0000B69C: 08 91 48 00 49 00 14 06 0C 00 00 04 04 04 00 0F 00 
      prompt   = STRING_TOKEN(0x0048),
      help     = STRING_TOKEN(0x0049),
      flags   = INTERACTIVE,
      key      = 0x614,
      minsize  = 4,
      maxsize  = 15,
      encoding = 0,
    endpassword;
>0000B6AD: 29 02 
  endif;
>0000B6AF: 29 02 
endform;
>0000B6B1: 29 02 
#line 1026 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 1027 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
  
  
  
  #line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\SystemEventLog.hfr"



























#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Chip\\10nm\\Include\\RasTypes.h"
















































#line 50 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\CpRcPkg\\Library\\BaseMemoryCoreLib\\Chip\\10nm\\Include\\RasTypes.h"
#line 29 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\SystemEventLog.hfr"

  form formid = 0x500,
>0000B6B3: 01 86 00 05 80 08 

    title  = STRING_TOKEN(0x0880);

    subtitle text = STRING_TOKEN(0x0880);
>0000B6B9: 02 87 80 08 00 00 00 
>0000B6C0: 29 02 
    subtitle text = STRING_TOKEN(0x0762);
>0000B6C2: 02 87 62 07 00 00 00 
>0000B6C9: 29 02 
    subtitle text = STRING_TOKEN(0x00AA);
>0000B6CB: 02 87 AA 00 00 00 00 
>0000B6D2: 29 02 

    
    
    
    oneof varid = SYSTEM_CONFIGURATION.SystemErrorEn,
>0000B6D4: 05 91 82 08 83 08 4D 04 01 00 64 00 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x0882),
      help        = STRING_TOKEN(0x0883),
      option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED ;
>0000B6E5: 09 07 A7 00 00 00 00 
      option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000B6EC: 09 07 A6 00 30 00 01 
      option text = STRING_TOKEN(0x00A8),    value = 2, flags = RESET_REQUIRED;
>0000B6F3: 09 07 A8 00 00 00 02 
    endoneof;
>0000B6FA: 29 02 

    suppressif  ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x00OR ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x02;
>0000B6FC: 0A 82 
>0000B6FE: 12 86 4D 04 00 00 
>0000B704: 12 06 4D 04 02 00 
>0000B70A: 16 02 
>0000B70C: 29 02 
      oneof varid = SYSTEM_CONFIGURATION.PoisonEn,
>0000B70E: 05 91 84 08 85 08 4E 04 01 00 65 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0884),
        help        = STRING_TOKEN(0x0885),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000B71F: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000B726: 09 07 A6 00 30 00 01 
      endoneof;
>0000B72D: 29 02 
    endif;
>0000B72F: 29 02 

     grayoutif ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x00 OR ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x02 OR ideqvallist SOCKET_COMMONRC_CONFIGURATION.SystemRasType == 0 4 3 OR ideqval SYSTEM_CONFIGURATION.PoisonEn == 0x00;
>0000B731: 19 82 
>0000B733: 12 86 4D 04 00 00 
>0000B739: 12 06 4D 04 02 00 
>0000B73F: 16 02 
>0000B741: 14 0C 4E 05 03 00 00 00 04 00 03 00 
>0000B74D: 16 02 
>0000B74F: 12 06 4E 04 00 00 
>0000B755: 16 02 
>0000B757: 29 02 
        oneof varid = SYSTEM_CONFIGURATION.ViralEn,
>0000B759: 05 91 86 08 87 08 4F 04 01 00 66 00 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0886),
          help        = STRING_TOKEN(0x0887),
          option text = STRING_TOKEN(0x00A7),  value = 0, flags = RESET_REQUIRED;
>0000B76A: 09 07 A7 00 00 00 00 
          option text = STRING_TOKEN(0x00A6),   value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000B771: 09 07 A6 00 30 00 01 
        endoneof;
>0000B778: 29 02 
    endif;
>0000B77A: 29 02 

    suppressif  ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x00;
>0000B77C: 0A 82 
>0000B77E: 12 06 4D 04 00 00 
      suppressif ideqval SYSTEM_CONFIGURATION.ViralEn == 0x00;
>0000B784: 0A 82 
>0000B786: 12 06 4F 04 00 00 
        oneof varid     = SYSTEM_CONFIGURATION.ClearViralStatus,
>0000B78C: 05 91 88 08 89 08 50 04 01 00 67 00 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0888),
          help        = STRING_TOKEN(0x0889),
          option text = STRING_TOKEN(0x00A7),  value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000B79D: 09 07 A7 00 30 00 00 
          option text = STRING_TOKEN(0x00A6),   value = 1, flags = RESET_REQUIRED;
>0000B7A4: 09 07 A6 00 00 00 01 
        endoneof;
>0000B7AB: 29 02 
      endif;
>0000B7AD: 29 02 
    endif;
>0000B7AF: 29 02 

    suppressif  ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x00;
>0000B7B1: 0A 82 
>0000B7B3: 12 06 4D 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.CloakingEn,
>0000B7B9: 05 91 8A 08 8B 08 51 04 01 00 68 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x088A),
        help        = STRING_TOKEN(0x088B),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED  | DEFAULT;
>0000B7CA: 09 07 A7 00 10 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED;
>0000B7D1: 09 07 A6 00 00 00 01 
      endoneof;
>0000B7D8: 29 02 
    endif;
>0000B7DA: 29 02 

    suppressif  ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x00;
>0000B7DC: 0A 82 
>0000B7DE: 12 06 4D 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.UboxToPcuMcaEn,
>0000B7E4: 05 91 8C 08 8D 08 52 04 01 00 69 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x088C),
        help        = STRING_TOKEN(0x088D),
        option text = STRING_TOKEN(0x00A7),  value = 0, flags = RESET_REQUIRED;
>0000B7F5: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),   value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000B7FC: 09 07 A6 00 30 00 01 
      endoneof;
>0000B803: 29 02 
    endif;
>0000B805: 29 02 

    suppressif  ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x00;
>0000B807: 0A 82 
>0000B809: 12 06 4D 04 00 00 
      oneof varid     = SYSTEM_CONFIGURATION.CaterrGpioSmiEn,
>0000B80F: 05 91 8E 08 8F 08 53 04 01 00 AC 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x088E),
        help        = STRING_TOKEN(0x088F),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000B820: 09 07 A7 00 30 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED;
>0000B827: 09 07 A6 00 00 00 01 
      endoneof;
>0000B82E: 29 02 
    endif;
>0000B830: 29 02 
   
  
  
  
  
    suppressif  ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x00;     
>0000B832: 0A 82 
>0000B834: 12 06 4D 04 00 00 
    oneof varid = SYSTEM_CONFIGURATION.FatalErrSpinLoopEn,
>0000B83A: 05 91 90 08 91 08 54 04 01 00 6A 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0890),
      help        = STRING_TOKEN(0x0891),
      option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000B84B: 09 07 A7 00 30 00 00 
      option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED;      
>0000B852: 09 07 A6 00 00 00 01 
    endoneof;
>0000B859: 29 02 
    endif;
>0000B85B: 29 02 
  
     
    oneof varid = SYSTEM_CONFIGURATION.McBankWarmBootClearError,
>0000B85D: 05 91 C8 08 C9 08 55 04 01 00 AD 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x08C8),
      help        = STRING_TOKEN(0x08C9),
      option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000B86E: 09 07 A7 00 30 00 00 
      option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED;      
>0000B875: 09 07 A6 00 00 00 01 
    endoneof; 
>0000B87C: 29 02 
  
    
    
    
    grayoutif  ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x00;
>0000B87E: 19 82 
>0000B880: 12 06 4D 04 00 00 
      goto 0x501, 
>0000B886: 0F 0F 92 08 93 08 56 04 00 00 FF FF 00 01 05 
      prompt = STRING_TOKEN(0x0892),
      help   = STRING_TOKEN(0x0893);
    endif;
>0000B895: 29 02 
      
    
    
    
    grayoutif  ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x00;
>0000B897: 19 82 
>0000B899: 12 06 4D 04 00 00 
      goto 0x502, 
>0000B89F: 0F 0F 94 08 95 08 57 04 00 00 FF FF 00 02 05 
      prompt = STRING_TOKEN(0x0894),
      help   = STRING_TOKEN(0x0895);
    endif;
>0000B8AE: 29 02 

    
    
    
    grayoutif  ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x00;
>0000B8B0: 19 82 
>0000B8B2: 12 06 4D 04 00 00 
      goto 0x503, 
>0000B8B8: 0F 0F 98 08 99 08 58 04 00 00 FF FF 00 03 05 
      prompt = STRING_TOKEN(0x0898),
      help   = STRING_TOKEN(0x0899);
    endif;
>0000B8C7: 29 02 

  
  
  
  suppressif  ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x00 OR ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x02 OR ideqvallist SOCKET_COMMONRC_CONFIGURATION.SystemRasType == 0 4 3;
>0000B8C9: 0A 82 
>0000B8CB: 12 86 4D 04 00 00 
>0000B8D1: 12 06 4D 04 02 00 
>0000B8D7: 16 02 
>0000B8D9: 14 0C 4E 05 03 00 00 00 04 00 03 00 
>0000B8E5: 16 02 
>0000B8E7: 29 02 
    goto 0x1e, 
>0000B8E9: 0F 0F 96 08 97 08 59 04 00 00 FF FF 00 1E 00 
    prompt = STRING_TOKEN(0x0896),
    help   = STRING_TOKEN(0x0897);
  endif;
>0000B8F8: 29 02 

    
    
    
    grayoutif ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x00 OR ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x02;
>0000B8FA: 19 82 
>0000B8FC: 12 86 4D 04 00 00 
>0000B902: 12 06 4D 04 02 00 
>0000B908: 16 02 
>0000B90A: 29 02 
      goto 0x505, 
>0000B90C: 0F 0F 9A 08 9B 08 5A 04 00 00 FF FF 00 05 05 
      prompt = STRING_TOKEN(0x089A),
      help   = STRING_TOKEN(0x089B);
    endif;
>0000B91B: 29 02 

    
    
    
    grayoutif ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x00 OR ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x02;
>0000B91D: 19 82 
>0000B91F: 12 86 4D 04 00 00 
>0000B925: 12 06 4D 04 02 00 
>0000B92B: 16 02 
>0000B92D: 29 02 
      goto 0x506, 
>0000B92F: 0F 0F 9E 08 9F 08 5B 04 00 00 FF FF 00 06 05 
      prompt = STRING_TOKEN(0x089E),
      help   = STRING_TOKEN(0x089F);
    endif;
>0000B93E: 29 02 

    
    
    
    grayoutif ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x00 OR ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x02;
>0000B940: 19 82 
>0000B942: 12 86 4D 04 00 00 
>0000B948: 12 06 4D 04 02 00 
>0000B94E: 16 02 
>0000B950: 29 02 
      goto 0x507, 
>0000B952: 0F 0F 9C 08 9D 08 5C 04 00 00 FF FF 00 07 05 
      prompt = STRING_TOKEN(0x089C),
      help   = STRING_TOKEN(0x089D);
    endif;
>0000B961: 29 02 
    
  endform;
>0000B963: 29 02 
  
  
  
  
  
  form formid = 0x501,
>0000B965: 01 86 01 05 92 08 

    title  = STRING_TOKEN(0x0892);
    subtitle text = STRING_TOKEN(0x0892);
>0000B96B: 02 87 92 08 00 00 00 
>0000B972: 29 02 
    subtitle text = STRING_TOKEN(0x0762);
>0000B974: 02 87 62 07 00 00 00 
>0000B97B: 29 02 
    subtitle text = STRING_TOKEN(0x00AA);  
>0000B97D: 02 87 AA 00 00 00 00 
>0000B984: 29 02 

    oneof varid = SYSTEM_CONFIGURATION.EmcaEn,
>0000B986: 05 91 A0 08 A1 08 5D 04 01 00 6B 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x08A0),
      help        = STRING_TOKEN(0x08A1),
      option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000B997: 09 07 A7 00 00 00 00 
      option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000B99E: 09 07 A6 00 30 00 01 
    endoneof; 
>0000B9A5: 29 02 

    oneof varid = SYSTEM_CONFIGURATION.LmceEn,
>0000B9A7: 05 91 B6 08 B7 08 5E 04 01 00 74 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x08B6),
      help        = STRING_TOKEN(0x08B7),
      option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000B9B8: 09 07 A7 00 00 00 00 
      option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000B9BF: 09 07 A6 00 30 00 01 
    endoneof;
>0000B9C6: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.EmcaEn == 0x00;
>0000B9C8: 0A 82 
>0000B9CA: 12 06 5D 04 00 00 
      oneof varid     = SYSTEM_CONFIGURATION.EmcaIgnOptin,
>0000B9D0: 05 91 A2 08 A3 08 5F 04 01 00 6C 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x08A2),
        help        = STRING_TOKEN(0x08A3),
          option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000B9E1: 09 07 A7 00 30 00 00 
          option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED;
>0000B9E8: 09 07 A6 00 00 00 01 
      endoneof;
>0000B9EF: 29 02 
    endif;
>0000B9F1: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.EmcaEn == 0x00;    
>0000B9F3: 0A 82 
>0000B9F5: 12 06 5D 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.EmcaCsmiEn,
>0000B9FB: 05 91 A4 08 A5 08 60 04 01 00 6D 00 10 10 00 02 00 
        prompt      = STRING_TOKEN(0x08A4),
        help        = STRING_TOKEN(0x08A5),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BA0C: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x08AA),  value = 1, flags = RESET_REQUIRED;
>0000BA13: 09 07 AA 08 00 00 01 
        option text = STRING_TOKEN(0x08AB),  value = 2, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000BA1A: 09 07 AB 08 30 00 02 
      endoneof;
>0000BA21: 29 02 
      suppressif NOT ideqval SYSTEM_CONFIGURATION.EmcaCsmiEn == 2;
>0000BA23: 0A 82 
>0000BA25: 12 86 60 04 02 00 
>0000BA2B: 17 02 
>0000BA2D: 29 02 
        oneof varid = SYSTEM_CONFIGURATION.CsmiDynamicDisable,
>0000BA2F: 05 91 AC 08 AD 08 61 04 01 00 6E 00 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x08AC),
          help        = STRING_TOKEN(0x08AD),
          option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BA40: 09 07 A7 00 00 00 00 
          option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000BA47: 09 07 A6 00 30 00 01 
        endoneof;
>0000BA4E: 29 02 
      endif;
>0000BA50: 29 02 
    endif;
>0000BA52: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.EmcaEn == 0x00;    
>0000BA54: 0A 82 
>0000BA56: 12 06 5D 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.EmcaMsmiEn,
>0000BA5C: 05 91 A6 08 A7 08 62 04 01 00 6F 00 10 10 00 02 00 
        prompt      = STRING_TOKEN(0x08A6),
        help        = STRING_TOKEN(0x08A7),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BA6D: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x08A8),  value = 1, flags = RESET_REQUIRED;
>0000BA74: 09 07 A8 08 00 00 01 
        option text = STRING_TOKEN(0x08A9),  value = 2, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000BA7B: 09 07 A9 08 30 00 02 
      endoneof;
>0000BA82: 29 02 
    endif;
>0000BA84: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.EmcaEn == 0x00;    
>0000BA86: 0A 82 
>0000BA88: 12 06 5D 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.ElogCorrErrEn,
>0000BA8E: 05 91 AE 08 AF 08 63 04 01 00 70 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x08AE),
        help        = STRING_TOKEN(0x08AF),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BA9F: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000BAA6: 09 07 A6 00 30 00 01 
      endoneof;
>0000BAAD: 29 02 
    endif;
>0000BAAF: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.EmcaEn == 0x00;    
>0000BAB1: 0A 82 
>0000BAB3: 12 06 5D 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.ElogMemErrEn,
>0000BAB9: 05 91 B0 08 B1 08 64 04 01 00 71 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x08B0),
        help        = STRING_TOKEN(0x08B1),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BACA: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000BAD1: 09 07 A6 00 30 00 01 
      endoneof;
>0000BAD8: 29 02 
    endif;
>0000BADA: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.EmcaEn == 0x00;
>0000BADC: 0A 82 
>0000BADE: 12 06 5D 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.ElogProcErrEn,
>0000BAE4: 05 91 B2 08 B3 08 65 04 01 00 72 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x08B2),
        help        = STRING_TOKEN(0x08B3),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BAF5: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000BAFC: 09 07 A6 00 30 00 01 
      endoneof;
>0000BB03: 29 02 
    endif;
>0000BB05: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.EmcaEn == 0x00;
>0000BB07: 0A 82 
>0000BB09: 12 06 5D 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.EmcaSetFwUpdate,
>0000BB0F: 05 91 B4 08 B5 08 66 04 01 00 73 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x08B4),
        help        = STRING_TOKEN(0x08B5),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000BB20: 09 07 A7 00 30 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED;      
>0000BB27: 09 07 A6 00 00 00 01 
      endoneof;
>0000BB2E: 29 02 
    endif;
>0000BB30: 29 02 

  endform;
>0000BB32: 29 02 

  
  
  
  
  form formid = 0x502,
>0000BB34: 01 86 02 05 94 08 

    title  = STRING_TOKEN(0x0894);
    subtitle text = STRING_TOKEN(0x0894);
>0000BB3A: 02 87 94 08 00 00 00 
>0000BB41: 29 02 
    subtitle text = STRING_TOKEN(0x0762);
>0000BB43: 02 87 62 07 00 00 00 
>0000BB4A: 29 02 
    subtitle text = STRING_TOKEN(0x00AA);
>0000BB4C: 02 87 AA 00 00 00 00 
>0000BB53: 29 02 
    
    oneof varid = SYSTEM_CONFIGURATION.WheaSupportEn,
>0000BB55: 05 91 B8 08 B9 08 67 04 01 00 75 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x08B8),
      help        = STRING_TOKEN(0x08B9),
      option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BB66: 09 07 A7 00 00 00 00 
      option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000BB6D: 09 07 A6 00 30 00 01 
    endoneof; 
>0000BB74: 29 02 
        
    suppressif ideqval SYSTEM_CONFIGURATION.WheaSupportEn == 0x00;  
>0000BB76: 0A 82 
>0000BB78: 12 06 67 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.WheaLogMemoryEn,
>0000BB7E: 05 91 C0 08 C1 08 68 04 01 00 76 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x08C0),
        help        = STRING_TOKEN(0x08C1),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BB8F: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000BB96: 09 07 A6 00 30 00 01 
      endoneof;
>0000BB9D: 29 02 
    endif;
>0000BB9F: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.WheaSupportEn == 0x00;
>0000BBA1: 0A 82 
>0000BBA3: 12 06 67 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.WheaLogProcEn,
>0000BBA9: 05 91 C2 08 C3 08 69 04 01 00 77 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x08C2),
        help        = STRING_TOKEN(0x08C3),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BBBA: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000BBC1: 09 07 A6 00 30 00 01 
      endoneof;
>0000BBC8: 29 02 
    endif;
>0000BBCA: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.WheaSupportEn == 0x00;
>0000BBCC: 0A 82 
>0000BBCE: 12 06 67 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.WheaLogPciEn,
>0000BBD4: 05 91 C4 08 C5 08 6A 04 01 00 78 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x08C4),
        help        = STRING_TOKEN(0x08C5),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BBE5: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000BBEC: 09 07 A6 00 30 00 01 
      endoneof;
>0000BBF3: 29 02 
    endif;
>0000BBF5: 29 02 
    
  endform;
>0000BBF7: 29 02 
  
  
  
  
  
  form formid = 0x503,
>0000BBF9: 01 86 03 05 98 08 

    title  = STRING_TOKEN(0x0898);
      subtitle text = STRING_TOKEN(0x0898);
>0000BBFF: 02 87 98 08 00 00 00 
>0000BC06: 29 02 
    subtitle text = STRING_TOKEN(0x0762);
>0000BC08: 02 87 62 07 00 00 00 
>0000BC0F: 29 02 
    subtitle text = STRING_TOKEN(0x00AA);
>0000BC11: 02 87 AA 00 00 00 00 
>0000BC18: 29 02 

    oneof varid = SYSTEM_CONFIGURATION.McaBankErrInjEn,
>0000BC1A: 05 91 C6 08 C7 08 6B 04 01 00 7B 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x08C6),
      help        = STRING_TOKEN(0x08C7),
      option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000BC2B: 09 07 A7 00 30 00 00 
      option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED;      
>0000BC32: 09 07 A6 00 00 00 01 
    endoneof; 
>0000BC39: 29 02 

    oneof varid = SYSTEM_CONFIGURATION.AEPErrorInjEn,
>0000BC3B: 05 91 BA 08 BB 08 6C 04 01 00 79 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x08BA),
      help        = STRING_TOKEN(0x08BB),
      option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000BC4C: 09 07 A7 00 30 00 00 
      option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED;
>0000BC53: 09 07 A6 00 00 00 01 
    endoneof;
>0000BC5A: 29 02 

    oneof varid = SYSTEM_CONFIGURATION.WheaErrorInjSupportEn,
>0000BC5C: 05 91 BC 08 BD 08 6D 04 01 00 7A 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x08BC),
      help        = STRING_TOKEN(0x08BD),
      option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000BC6D: 09 07 A7 00 30 00 00 
      option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED;      
>0000BC74: 09 07 A6 00 00 00 01 
    endoneof; 
>0000BC7B: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.WheaErrorInjSupportEn == 0x00;
>0000BC7D: 0A 82 
>0000BC7F: 12 06 6D 04 00 00 
    oneof varid = SYSTEM_CONFIGURATION.WheaErrInjEn,
>0000BC85: 05 91 BE 08 BF 08 6E 04 01 00 7C 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x08BE),
      help        = STRING_TOKEN(0x08BF),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BC96: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED  | DEFAULT | MANUFACTURING;      
>0000BC9D: 09 07 A6 00 30 00 01 
    endoneof; 
>0000BCA4: 29 02 
    endif;  
>0000BCA6: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.WheaErrorInjSupportEn == 0x00;
>0000BCA8: 0A 82 
>0000BCAA: 12 06 6D 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.WheaPcieErrInjEn,
>0000BCB0: 05 91 CA 08 CB 08 6F 04 01 00 7D 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x08CA),
        help        = STRING_TOKEN(0x08CB),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000BCC1: 09 07 A7 00 30 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED;      
>0000BCC8: 09 07 A6 00 00 00 01 
      endoneof;
>0000BCCF: 29 02 
    endif;
>0000BCD1: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.WheaErrorInjSupportEn == 0x00;    
>0000BCD3: 0A 82 
>0000BCD5: 12 06 6D 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.PcieErrInjActionTable,
>0000BCDB: 05 91 CC 08 CD 08 70 04 01 00 7F 00 10 10 00 01 00 
        prompt = STRING_TOKEN(0x08CC),  
        help = STRING_TOKEN(0x08CD),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000BCEC: 09 07 A7 00 30 00 00 
        option text = STRING_TOKEN(0x00A6), value = 1, flags = RESET_REQUIRED;
>0000BCF3: 09 07 A6 00 00 00 01 
      endoneof;
>0000BCFA: 29 02 
    endif;
>0000BCFC: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.WheaErrorInjSupportEn == 0x00;    
>0000BCFE: 0A 82 
>0000BD00: 12 06 6D 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.MeSegErrorInjEn,
>0000BD06: 05 91 CE 08 CF 08 71 04 01 00 7E 00 10 10 00 01 00 
        prompt = STRING_TOKEN(0x08CE),  
        help = STRING_TOKEN(0x08CF),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED  | DEFAULT;
>0000BD17: 09 07 A7 00 10 00 00 
        option text = STRING_TOKEN(0x00A6), value = 1, flags = RESET_REQUIRED;
>0000BD1E: 09 07 A6 00 00 00 01 
      endoneof;
>0000BD25: 29 02 
    endif;
>0000BD27: 29 02 
    
  endform;    
>0000BD29: 29 02 
  
  
  
  
  form formid = 0x1e,
>0000BD2B: 01 86 1E 00 96 08 
    title       = STRING_TOKEN(0x0896);
    subtitle text = STRING_TOKEN(0x0896);
>0000BD31: 02 87 96 08 00 00 00 
>0000BD38: 29 02 
    subtitle text = STRING_TOKEN(0x0762);
>0000BD3A: 02 87 62 07 00 00 00 
>0000BD41: 29 02 
    subtitle text = STRING_TOKEN(0x00AA);
>0000BD43: 02 87 AA 00 00 00 00 
>0000BD4A: 29 02 
    
    
    
    suppressif  ideqvallist SOCKET_COMMONRC_CONFIGURATION.SystemRasType == 0 4 3;
>0000BD4C: 0A 82 
>0000BD4E: 14 0C 4E 05 03 00 00 00 04 00 03 00 
      oneof varid   = SYSTEM_CONFIGURATION.KTIFailoverSmiEn,
>0000BD5A: 05 91 D0 08 D1 08 72 04 01 00 AE 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x08D0),
        help        = STRING_TOKEN(0x08D1),
        option text = STRING_TOKEN(0x00A7),  value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000BD6B: 09 07 A7 00 30 00 00 
        option text = STRING_TOKEN(0x00A6),   value = 1, flags = RESET_REQUIRED;
>0000BD72: 09 07 A6 00 00 00 01 
      endoneof;
>0000BD79: 29 02 
    endif;  
>0000BD7B: 29 02 
  endform;
>0000BD7D: 29 02 
  
   
  
  
  
  form formid = 0x505,
>0000BD7F: 01 86 05 05 9A 08 

    title  = STRING_TOKEN(0x089A);
    subtitle text = STRING_TOKEN(0x089A);
>0000BD85: 02 87 9A 08 00 00 00 
>0000BD8C: 29 02 
    subtitle text = STRING_TOKEN(0x0762);
>0000BD8E: 02 87 62 07 00 00 00 
>0000BD95: 29 02 
    subtitle text = STRING_TOKEN(0x00AA);
>0000BD97: 02 87 AA 00 00 00 00 
>0000BD9E: 29 02 
    
    oneof varid = SYSTEM_CONFIGURATION.MemErrEn,
>0000BDA0: 05 91 D2 08 D3 08 73 04 01 00 80 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x08D2),
      help        = STRING_TOKEN(0x08D3),
      option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BDB1: 09 07 A7 00 00 00 00 
      option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000BDB8: 09 07 A6 00 30 00 01 
    endoneof; 
>0000BDBF: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.MemErrEn == 0x00;
>0000BDC1: 0A 82 
>0000BDC3: 12 06 73 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.CorrMemErrEn,
>0000BDC9: 05 91 DA 08 DB 08 74 04 01 00 81 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x08DA),
        help        = STRING_TOKEN(0x08DB),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BDDA: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000BDE1: 09 07 A6 00 30 00 01 
      endoneof; 
>0000BDE8: 29 02 
    endif;
>0000BDEA: 29 02 
        
    suppressif ideqval SYSTEM_CONFIGURATION.MemErrEn == 0x00;    
>0000BDEC: 0A 82 
>0000BDEE: 12 06 73 04 00 00 
      numeric varid = SYSTEM_CONFIGURATION.LeakyBktHiLeakyBktLo,
>0000BDF4: 07 9A DC 08 DD 08 75 04 01 00 82 00 10 22 00 00 00 00 FF FF 00 00 00 00 00 00 
        prompt  = STRING_TOKEN(0x08DC),
        help    = STRING_TOKEN(0x08DD),
        flags   = DISPLAY_UINT_HEX | RESET_REQUIRED,
        minimum = 0,
        maximum = 0xFFFF,
        step    = 0,
        default = 0, defaultstore = MyStandardDefault,
>0000BE0E: 5B 09 00 00 02 00 00 00 00 
        default = 0, defaultstore = MyManufactureDefault,
>0000BE17: 5B 09 01 00 02 00 00 00 00 
      endnumeric;
>0000BE20: 29 02 
    endif;  
>0000BE22: 29 02 

      
    suppressif ideqval SYSTEM_CONFIGURATION.MemErrEn == 0x00;    
>0000BE24: 0A 82 
>0000BE26: 12 06 73 04 00 00 
      suppressif ideqval SYSTEM_CONFIGURATION.CorrMemErrEn == 0x00;
>0000BE2C: 0A 82 
>0000BE2E: 12 06 74 04 00 00 
          oneof varid = SYSTEM_CONFIGURATION.SpareIntSelect,
>0000BE34: 05 91 F1 08 F2 08 76 04 01 00 86 00 10 10 00 04 00 
            prompt      = STRING_TOKEN(0x08F1),
            help        = STRING_TOKEN(0x08F2),
            option text = STRING_TOKEN(0x00A7),     value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000BE45: 09 07 A7 00 30 00 00 
            option text = STRING_TOKEN(0x08E3),     value = 1, flags = RESET_REQUIRED;
>0000BE4C: 09 07 E3 08 00 00 01 
            option text = STRING_TOKEN(0x08E5),  value = 2, flags = RESET_REQUIRED;
>0000BE53: 09 07 E5 08 00 00 02 
            option text = STRING_TOKEN(0x08E6),    value = 4, flags = RESET_REQUIRED;
>0000BE5A: 09 07 E6 08 00 00 04 
            
          endoneof;
>0000BE61: 29 02 
      endif;
>0000BE63: 29 02 
    endif;    
>0000BE65: 29 02 
    

    suppressif ideqval SYSTEM_CONFIGURATION.MemErrEn == 0x00;
>0000BE67: 0A 82 
>0000BE69: 12 06 73 04 00 00 
      
      
      
      oneof varid = SYSTEM_CONFIGURATION.FnvErrorEn,
>0000BE6F: 05 91 DE 08 DF 08 77 04 01 00 87 00 10 10 00 01 00 
        prompt = STRING_TOKEN(0x08DE),
        help        = STRING_TOKEN(0x08DF),
          option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BE80: 09 07 A7 00 00 00 00 
          option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000BE87: 09 07 A6 00 30 00 01 
      endoneof; 
>0000BE8E: 29 02 

      
      
      
      oneof varid = SYSTEM_CONFIGURATION.FnvErrorLowPrioritySignal,
>0000BE90: 05 91 E0 08 E1 08 78 04 01 00 88 00 10 10 00 02 00 
        prompt = STRING_TOKEN(0x08E0),
        help        = STRING_TOKEN(0x08E1),
          option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BEA1: 09 07 A7 00 00 00 00 
          option text = STRING_TOKEN(0x08E3), value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000BEA8: 09 07 E3 08 30 00 01 
          option text = STRING_TOKEN(0x08E4),  value = 2, flags = RESET_REQUIRED;
>0000BEAF: 09 07 E4 08 00 00 02 
      endoneof; 
>0000BEB6: 29 02 

      
      
      
      oneof varid = SYSTEM_CONFIGURATION.FnvErrorHighPrioritySignal,
>0000BEB8: 05 91 E2 08 E2 08 79 04 01 00 89 00 10 10 00 02 00 
        prompt = STRING_TOKEN(0x08E2),
        help        = STRING_TOKEN(0x08E2),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BEC9: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x08E3), value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000BED0: 09 07 E3 08 30 00 01 
        option text = STRING_TOKEN(0x08E4),  value = 2, flags = RESET_REQUIRED;
>0000BED7: 09 07 E4 08 00 00 02 
      endoneof; 
>0000BEDE: 29 02 

    oneof varid = SYSTEM_CONFIGURATION.NgnAddressRangeScrub,
>0000BEE0: 05 91 E7 08 E8 08 7A 04 01 00 8A 00 10 10 00 01 00 
        prompt  = STRING_TOKEN(0x08E7),
        help    = STRING_TOKEN(0x08E8),
        option text = STRING_TOKEN(0x00A7),          value = 0, flags = MANUFACTURING | DEFAULT | RESET_REQUIRED;
>0000BEF1: 09 07 A7 00 30 00 00 
        option text = STRING_TOKEN(0x00A6),           value = 1, flags = RESET_REQUIRED;
>0000BEF8: 09 07 A6 00 00 00 01 
    endoneof;
>0000BEFF: 29 02 

   oneof varid = SYSTEM_CONFIGURATION.NgnHostAlertPatrolScrubUNC,
>0000BF01: 05 91 ED 08 EE 08 7B 04 01 00 8D 00 10 10 00 01 00 
        prompt  = STRING_TOKEN(0x08ED),
        help    = STRING_TOKEN(0x08EE),
        option text = STRING_TOKEN(0x00A7),          value = 0, flags = RESET_REQUIRED;
>0000BF12: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),           value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000BF19: 09 07 A6 00 30 00 01 
   endoneof;
>0000BF20: 29 02 

   grayoutif ideqvallist SOCKET_COMMONRC_CONFIGURATION.SystemRasType == 0 4 3;
>0000BF22: 19 82 
>0000BF24: 14 0C 4E 05 03 00 00 00 04 00 03 00 
      oneof varid = SYSTEM_CONFIGURATION.NgnHostAlertAit,
>0000BF30: 05 91 E9 08 EA 08 7C 04 01 00 8B 00 10 10 00 01 00 
        prompt  = STRING_TOKEN(0x08E9),
        help    = STRING_TOKEN(0x08EA),
        option text = STRING_TOKEN(0x08EF),          value = 0, flags = MANUFACTURING | DEFAULT | RESET_REQUIRED;
>0000BF41: 09 07 EF 08 30 00 00 
        option text = STRING_TOKEN(0x08F0),           value = 1, flags = RESET_REQUIRED;
>0000BF48: 09 07 F0 08 00 00 01 
      endoneof;
>0000BF4F: 29 02 
    
      oneof varid = SYSTEM_CONFIGURATION.NgnHostAlertDpa,
>0000BF51: 05 91 EB 08 EC 08 7D 04 01 00 8C 00 10 10 00 01 00 
        prompt  = STRING_TOKEN(0x08EB),
        help    = STRING_TOKEN(0x08EC),
        option text = STRING_TOKEN(0x08EF),          value = 0, flags = MANUFACTURING | DEFAULT | RESET_REQUIRED;
>0000BF62: 09 07 EF 08 30 00 00 
        option text = STRING_TOKEN(0x08F0),           value = 1, flags = RESET_REQUIRED;
>0000BF69: 09 07 F0 08 00 00 01 
      endoneof;
>0000BF70: 29 02 
  endif;
>0000BF72: 29 02 
    
    endif;
>0000BF74: 29 02 
    
  endform;
>0000BF76: 29 02 

  
  
  
  
  form formid = 0x506,
>0000BF78: 01 86 06 05 9E 08 

    title  = STRING_TOKEN(0x089E);
    subtitle text = STRING_TOKEN(0x089E);
>0000BF7E: 02 87 9E 08 00 00 00 
>0000BF85: 29 02 
    subtitle text = STRING_TOKEN(0x0762);
>0000BF87: 02 87 62 07 00 00 00 
>0000BF8E: 29 02 
    subtitle text = STRING_TOKEN(0x00AA);
>0000BF90: 02 87 AA 00 00 00 00 
>0000BF97: 29 02 

    suppressif  ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x00 OR ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x02;
>0000BF99: 0A 82 
>0000BF9B: 12 86 4D 04 00 00 
>0000BFA1: 12 06 4D 04 02 00 
>0000BFA7: 16 02 
>0000BFA9: 29 02 
      oneof varid = SYSTEM_CONFIGURATION.IioErrorEn,
>0000BFAB: 05 91 F3 08 F4 08 7E 04 01 00 8E 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x08F3),
        help        = STRING_TOKEN(0x08F4),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED ;
>0000BFBC: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000BFC3: 09 07 A6 00 30 00 01 
      endoneof;
>0000BFCA: 29 02 
    endif;
>0000BFCC: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.IioErrorEn == 0x0;
>0000BFCE: 0A 82 
>0000BFD0: 12 06 7E 04 00 00 
      grayoutif ideqvallist SOCKET_COMMONRC_CONFIGURATION.SystemRasType == 0 12;
>0000BFD6: 19 82 
>0000BFD8: 14 0A 4E 05 02 00 00 00 0C 00 
        oneof varid   = SYSTEM_CONFIGURATION.IoMcaEn,
>0000BFE2: 05 91 F5 08 F6 08 7F 04 01 00 8F 00 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x08F5),
          help        = STRING_TOKEN(0x08F6),
          option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000BFF3: 09 07 A7 00 00 00 00 
          option text = STRING_TOKEN(0x00A6),   value = 1, flags = RESET_REQUIRED  | DEFAULT | MANUFACTURING;
>0000BFFA: 09 07 A6 00 30 00 01 
        endoneof;
>0000C001: 29 02 
      endif;
>0000C003: 29 02 
    endif;
>0000C005: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.IioErrorEn == 0x00;
>0000C007: 0A 82 
>0000C009: 12 06 7E 04 00 00 
      suppressif ideqval SYSTEM_CONFIGURATION.IoMcaEn == 0x01;
>0000C00F: 0A 82 
>0000C011: 12 06 7F 04 01 00 
        oneof varid = SYSTEM_CONFIGURATION.IioErrorPinEn,
>0000C017: 05 91 F9 08 FA 08 80 04 01 00 91 00 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x08F9),
          help        = STRING_TOKEN(0x08FA),
          option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000C028: 09 07 A7 00 30 00 00 
          option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED ;      
>0000C02F: 09 07 A6 00 00 00 01 
        endoneof;
>0000C036: 29 02 
      endif;
>0000C038: 29 02 
    endif;
>0000C03A: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.IioErrorEn == 0x00;
>0000C03C: 0A 82 
>0000C03E: 12 06 7E 04 00 00 
     oneof varid = SYSTEM_CONFIGURATION.IioErrRegistersClearEn,
>0000C044: 05 91 F7 08 F8 08 81 04 01 00 90 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x08F7),
        help        = STRING_TOKEN(0x08F8),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C055: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C05C: 09 07 A6 00 30 00 01 
      endoneof;
>0000C063: 29 02 
    endif;
>0000C065: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.IioErrorEn == 0x00;
>0000C067: 0A 82 
>0000C069: 12 06 7E 04 00 00 
      grayoutif ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x00 OR ideqval SYSTEM_CONFIGURATION.SystemErrorEn == 0x02 OR ideqvallist SOCKET_COMMONRC_CONFIGURATION.SystemRasType == 0 4 3;
>0000C06F: 19 82 
>0000C071: 12 86 4D 04 00 00 
>0000C077: 12 06 4D 04 02 00 
>0000C07D: 16 02 
>0000C07F: 14 0C 4E 05 03 00 00 00 04 00 03 00 
>0000C08B: 16 02 
>0000C08D: 29 02 
        oneof varid = SYSTEM_CONFIGURATION.LerEn,
>0000C08F: 05 91 FB 08 FC 08 82 04 01 00 92 00 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x08FB),
          help        = STRING_TOKEN(0x08FC),
          option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000C0A0: 09 07 A7 00 30 00 00 
          option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED;      
>0000C0A7: 09 07 A6 00 00 00 01 
        endoneof;
>0000C0AE: 29 02 
      endif;
>0000C0B0: 29 02 
    endif;
>0000C0B2: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.IioErrorEn == 0x00;    
>0000C0B4: 0A 82 
>0000C0B6: 12 06 7E 04 00 00 
      suppressif  ideqval SYSTEM_CONFIGURATION.LerEn == 0x00;
>0000C0BC: 0A 82 
>0000C0BE: 12 06 82 04 00 00 
        oneof varid = SYSTEM_CONFIGURATION.DisableMAerrorLoggingDueToLER,
>0000C0C4: 05 91 FD 08 FE 08 83 04 01 00 93 00 10 10 00 01 00 
                prompt      = STRING_TOKEN(0x08FD),
                help        = STRING_TOKEN(0x08FE),
                option text = STRING_TOKEN(0x00A7),  value = 0, flags = RESET_REQUIRED ;
>0000C0D5: 09 07 A7 00 00 00 00 
                option text = STRING_TOKEN(0x00A6),   value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000C0DC: 09 07 A6 00 30 00 01 
        endoneof;
>0000C0E3: 29 02 
      endif;
>0000C0E5: 29 02 
    endif;
>0000C0E7: 29 02 
    
    suppressif ideqval SYSTEM_CONFIGURATION.IioErrorEn == 0x00;
>0000C0E9: 0A 82 
>0000C0EB: 12 06 7E 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.IioIrpErrorEn,
>0000C0F1: 05 91 FF 08 00 09 84 04 01 00 94 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x08FF),
        help        = STRING_TOKEN(0x0900),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C102: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C109: 09 07 A6 00 30 00 01 
      endoneof;
>0000C110: 29 02 
    endif;
>0000C112: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.IioErrorEn == 0x00;
>0000C114: 0A 82 
>0000C116: 12 06 7E 04 00 00 
    grayoutif ideqval  SYSTEM_CONFIGURATION.IioIrpErrorEn == 0x00;
>0000C11C: 19 82 
>0000C11E: 12 06 84 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.irpp0_parityError,
>0000C124: 05 91 01 09 02 09 85 04 01 00 AF 00 10 10 00 01 00 
          prompt = STRING_TOKEN(0x0901),
          help        = STRING_TOKEN(0x0902),
          option text = STRING_TOKEN(0x00A7),  value = 0, flags = RESET_REQUIRED;
>0000C135: 09 07 A7 00 00 00 00 
          option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED  | DEFAULT | MANUFACTURING;
>0000C13C: 09 07 A6 00 30 00 01 
      endoneof;
>0000C143: 29 02 
      
      oneof varid = SYSTEM_CONFIGURATION.irpp0_qtOverflow,
>0000C145: 05 91 03 09 04 09 86 04 01 00 B0 00 10 10 00 01 00 
          prompt = STRING_TOKEN(0x0903),
          help        = STRING_TOKEN(0x0904),
          option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C156: 09 07 A7 00 00 00 00 
          option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED  | DEFAULT | MANUFACTURING;
>0000C15D: 09 07 A6 00 30 00 01 
      endoneof;
>0000C164: 29 02 

      oneof varid = SYSTEM_CONFIGURATION.irpp0_unexprsp,
>0000C166: 05 91 05 09 06 09 87 04 01 00 B1 00 10 10 00 01 00 
          prompt = STRING_TOKEN(0x0905),
          help        = STRING_TOKEN(0x0906),
          option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C177: 09 07 A7 00 00 00 00 
          option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED  | DEFAULT | MANUFACTURING;
>0000C17E: 09 07 A6 00 30 00 01 
      endoneof;
>0000C185: 29 02 

      oneof varid = SYSTEM_CONFIGURATION.irpp0_csraccunaligned,
>0000C187: 05 91 07 09 08 09 88 04 01 00 B2 00 10 10 00 01 00 
          prompt = STRING_TOKEN(0x0907),
          help        = STRING_TOKEN(0x0908),
          option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C198: 09 07 A7 00 00 00 00 
          option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED  | DEFAULT | MANUFACTURING;
>0000C19F: 09 07 A6 00 30 00 01 
      endoneof;
>0000C1A6: 29 02 

      oneof varid = SYSTEM_CONFIGURATION.irpp0_unceccCs0,
>0000C1A8: 05 91 09 09 0B 09 89 04 01 00 B4 00 10 10 00 01 00 
          prompt = STRING_TOKEN(0x0909),
          help        = STRING_TOKEN(0x090B),
          option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C1B9: 09 07 A7 00 00 00 00 
          option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED  | DEFAULT | MANUFACTURING;
>0000C1C0: 09 07 A6 00 30 00 01 
      endoneof;
>0000C1C7: 29 02 

      oneof varid = SYSTEM_CONFIGURATION.irpp0_unceccCs1,
>0000C1C9: 05 91 0A 09 0B 09 8A 04 01 00 B3 00 10 10 00 01 00 
          prompt = STRING_TOKEN(0x090A),
          help        = STRING_TOKEN(0x090B),
          option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C1DA: 09 07 A7 00 00 00 00 
          option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED  | DEFAULT | MANUFACTURING;
>0000C1E1: 09 07 A6 00 30 00 01 
      endoneof;
>0000C1E8: 29 02 

      oneof varid = SYSTEM_CONFIGURATION.irpp0_rcvdpoison,
>0000C1EA: 05 91 0C 09 0D 09 8B 04 01 00 B5 00 10 10 00 01 00 
          prompt = STRING_TOKEN(0x090C),
          help        = STRING_TOKEN(0x090D),
          option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C1FB: 09 07 A7 00 00 00 00 
          option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED  | DEFAULT | MANUFACTURING;
>0000C202: 09 07 A6 00 30 00 01 
      endoneof;
>0000C209: 29 02 

      oneof varid = SYSTEM_CONFIGURATION.irpp0_crreccCs0,
>0000C20B: 05 91 0E 09 10 09 8C 04 01 00 B7 00 10 10 00 01 00 
          prompt = STRING_TOKEN(0x090E),
          help        = STRING_TOKEN(0x0910),
          option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C21C: 09 07 A7 00 00 00 00 
          option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000C223: 09 07 A6 00 30 00 01 
      endoneof;
>0000C22A: 29 02 

      oneof varid = SYSTEM_CONFIGURATION.irpp0_crreccCs1,
>0000C22C: 05 91 0F 09 10 09 8D 04 01 00 B6 00 10 10 00 01 00 
          prompt = STRING_TOKEN(0x090F),
          help        = STRING_TOKEN(0x0910),
          option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C23D: 09 07 A7 00 00 00 00 
          option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000C244: 09 07 A6 00 30 00 01 
      endoneof;
>0000C24B: 29 02 
    endif; 
>0000C24D: 29 02 
    endif;
>0000C24F: 29 02 
    
    suppressif ideqval SYSTEM_CONFIGURATION.IioErrorEn == 0x00;
>0000C251: 0A 82 
>0000C253: 12 06 7E 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.IioMiscErrorEn,
>0000C259: 05 91 11 09 12 09 8E 04 01 00 95 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0911),
        help        = STRING_TOKEN(0x0912),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C26A: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C271: 09 07 A6 00 30 00 01 
      endoneof; 
>0000C278: 29 02 
    endif;      
>0000C27A: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.IioErrorEn == 0x00;
>0000C27C: 0A 82 
>0000C27E: 12 06 7E 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.IioVtdErrorEn,
>0000C284: 05 91 13 09 14 09 8F 04 01 00 96 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0913),
        help        = STRING_TOKEN(0x0914),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C295: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C29C: 09 07 A6 00 30 00 01 
      endoneof;
>0000C2A3: 29 02 
    endif;
>0000C2A5: 29 02 
    
    suppressif ideqval SYSTEM_CONFIGURATION.IioErrorEn == 0x00;
>0000C2A7: 0A 82 
>0000C2A9: 12 06 7E 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.IioDmaErrorEn,
>0000C2AF: 05 91 15 09 16 09 90 04 01 00 97 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0915),
        help        = STRING_TOKEN(0x0916),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C2C0: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C2C7: 09 07 A6 00 30 00 01 
      endoneof;
>0000C2CE: 29 02 
      
      oneof varid = SYSTEM_CONFIGURATION.IioDmiErrorEn,
>0000C2D0: 05 91 17 09 18 09 91 04 01 00 98 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0917),
        help        = STRING_TOKEN(0x0918),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000C2E1: 09 07 A7 00 30 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED;      
>0000C2E8: 09 07 A6 00 00 00 01 
      endoneof;
>0000C2EF: 29 02 
    endif;
>0000C2F1: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.IioErrorEn == 0x00;
>0000C2F3: 0A 82 
>0000C2F5: 12 06 7E 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.PcieErrEn,
>0000C2FB: 05 91 19 09 1A 09 92 04 01 00 9C 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0919),
        help        = STRING_TOKEN(0x091A),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C30C: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C313: 09 07 A6 00 30 00 01 
      endoneof;
>0000C31A: 29 02 
    endif;
>0000C31C: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.IioErrorEn == 0x00;
>0000C31E: 0A 82 
>0000C320: 12 06 7E 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.IioPcieAddCorrErrorEn,
>0000C326: 05 91 1B 09 1C 09 93 04 01 00 99 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x091B),
        help        = STRING_TOKEN(0x091C),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C337: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C33E: 09 07 A6 00 30 00 01 
      endoneof;
>0000C345: 29 02 
    endif;
>0000C347: 29 02 
    
    suppressif ideqval SYSTEM_CONFIGURATION.IioErrorEn == 0x00;
>0000C349: 0A 82 
>0000C34B: 12 06 7E 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.IioPcieAddUnCorrEn,
>0000C351: 05 91 1D 09 1E 09 94 04 01 00 9A 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x091D),
        help        = STRING_TOKEN(0x091E),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C362: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C369: 09 07 A6 00 30 00 01 
      endoneof;
>0000C370: 29 02 
    endif;
>0000C372: 29 02 
    
    
    suppressif ideqval SYSTEM_CONFIGURATION.IioErrorEn == 0x00;
>0000C374: 0A 82 
>0000C376: 12 06 7E 04 00 00 
      oneof varid = SYSTEM_CONFIGURATION.IioPcieAerSpecCompEn,
>0000C37C: 05 91 1F 09 20 09 95 04 01 00 9B 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x091F),
        help        = STRING_TOKEN(0x0920),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000C38D: 09 07 A7 00 30 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED;      
>0000C394: 09 07 A6 00 00 00 01 
      endoneof; 
>0000C39B: 29 02 
    endif;
>0000C39D: 29 02 

  endform;
>0000C39F: 29 02 

  
  
  
  
  form formid = 0x507,
>0000C3A1: 01 86 07 05 9C 08 

    title  = STRING_TOKEN(0x089C);
    subtitle text = STRING_TOKEN(0x089C);
>0000C3A7: 02 87 9C 08 00 00 00 
>0000C3AE: 29 02 
    subtitle text = STRING_TOKEN(0x0762);
>0000C3B0: 02 87 62 07 00 00 00 
>0000C3B7: 29 02 
    subtitle text = STRING_TOKEN(0x00AA);
>0000C3B9: 02 87 AA 00 00 00 00 
>0000C3C0: 29 02 
    
      oneof varid = SYSTEM_CONFIGURATION.PcieCorrErrEn,
>0000C3C2: 05 91 21 09 22 09 96 04 01 00 9D 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0921),
        help        = STRING_TOKEN(0x0922),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C3D3: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C3DA: 09 07 A6 00 30 00 01 
      endoneof;
>0000C3E1: 29 02 

      oneof varid = SYSTEM_CONFIGURATION.PcieUncorrErrEn,
>0000C3E3: 05 91 23 09 24 09 97 04 01 00 9E 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0923),
        help        = STRING_TOKEN(0x0924),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C3F4: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C3FB: 09 07 A6 00 30 00 01 
      endoneof;     
>0000C402: 29 02 
    
      oneof varid = SYSTEM_CONFIGURATION.PcieFatalErrEn,
>0000C404: 05 91 25 09 26 09 98 04 01 00 9F 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0925),
        help        = STRING_TOKEN(0x0926),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C415: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C41C: 09 07 A6 00 30 00 01 
      endoneof;
>0000C423: 29 02 

      suppressif ideqval SYSTEM_CONFIGURATION.PcieCorrErrEn == 0x00;
>0000C425: 0A 82 
>0000C427: 12 06 96 04 00 00 
        oneof varid = SYSTEM_CONFIGURATION.PcieCorErrCntr,
>0000C42D: 05 91 D4 08 D5 08 99 04 01 00 A0 00 10 10 00 01 00 
          prompt = STRING_TOKEN(0x08D4),  
          help = STRING_TOKEN(0x08D5),
          option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000C43E: 09 07 A7 00 30 00 00 
          option text = STRING_TOKEN(0x00A6), value = 1, flags = RESET_REQUIRED;
>0000C445: 09 07 A6 00 00 00 01 
        endoneof;
>0000C44C: 29 02 
      endif;
>0000C44E: 29 02 

      suppressif ideqval SYSTEM_CONFIGURATION.PcieCorErrCntr == 0x00;
>0000C450: 0A 82 
>0000C452: 12 06 99 04 00 00 
        numeric varid = SYSTEM_CONFIGURATION.PcieCorErrMaskBitMap,
>0000C458: 07 91 D8 08 D9 08 9A 04 01 00 A1 00 10 20 00 3F 00 
          prompt  = STRING_TOKEN(0x08D8),
          help    = STRING_TOKEN(0x08D9),
          flags   = DISPLAY_UINT_HEX | RESET_REQUIRED,
          minimum = 0,
          maximum = 0x3F,
          step    = 0,
          default = 0x3F, defaultstore = MyStandardDefault,
>0000C469: 5B 06 00 00 00 3F 
          default = 0x3F, defaultstore = MyManufactureDefault,
>0000C46F: 5B 06 01 00 00 3F 
        endnumeric;
>0000C475: 29 02 
      endif;
>0000C477: 29 02 
      
      suppressif ideqval SYSTEM_CONFIGURATION.PcieCorrErrEn == 0x00;
>0000C479: 0A 82 
>0000C47B: 12 06 96 04 00 00 
        numeric varid = SYSTEM_CONFIGURATION.PcieCorErrThres,
>0000C481: 07 94 D6 08 D7 08 9B 04 01 00 A2 00 10 21 00 00 FF 7F 00 00 
          prompt  = STRING_TOKEN(0x08D6),
          help    = STRING_TOKEN(0x08D7),
          flags   = DISPLAY_UINT_HEX | RESET_REQUIRED,
          minimum = 0,
          maximum = 0x7FFF,
          step    = 0,
          default = 1, defaultstore = MyStandardDefault,
>0000C495: 5B 07 00 00 01 01 00 
          default = 1, defaultstore = MyManufactureDefault,
>0000C49C: 5B 07 01 00 01 01 00 
        endnumeric;
>0000C4A3: 29 02 
      endif;
>0000C4A5: 29 02 
    
      oneof varid = SYSTEM_CONFIGURATION.PcieAerCorrErrEn,
>0000C4A7: 05 91 27 09 28 09 9C 04 01 00 A4 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0927),
        help        = STRING_TOKEN(0x0928),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C4B8: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C4BF: 09 07 A6 00 30 00 01 
      endoneof;
>0000C4C6: 29 02 

      oneof varid = SYSTEM_CONFIGURATION.PcieAerAdNfatErrEn,
>0000C4C8: 05 91 29 09 2A 09 9D 04 01 00 A5 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0929),
        help        = STRING_TOKEN(0x092A),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C4D9: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C4E0: 09 07 A6 00 30 00 01 
      endoneof;
>0000C4E7: 29 02 

      oneof varid = SYSTEM_CONFIGURATION.PcieAerNfatErrEn,
>0000C4E9: 05 91 2B 09 2C 09 9E 04 01 00 A6 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x092B),
        help        = STRING_TOKEN(0x092C),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C4FA: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C501: 09 07 A6 00 30 00 01 
      endoneof;
>0000C508: 29 02 

      oneof varid = SYSTEM_CONFIGURATION.PcieAerFatErrEn,
>0000C50A: 05 91 2D 09 2E 09 9F 04 01 00 A7 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x092D),
        help        = STRING_TOKEN(0x092E),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C51B: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C522: 09 07 A6 00 30 00 01 
      endoneof;
>0000C529: 29 02 

      oneof varid = SYSTEM_CONFIGURATION.SerrPropEn,
>0000C52B: 05 91 2F 09 30 09 A0 04 01 00 A8 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x092F),
        help        = STRING_TOKEN(0x0930),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C53C: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C543: 09 07 A6 00 30 00 01 
      endoneof;
>0000C54A: 29 02 

     oneof varid = SYSTEM_CONFIGURATION.PerrPropEn,
>0000C54C: 05 91 31 09 32 09 A1 04 01 00 A9 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0931),
        help        = STRING_TOKEN(0x0932),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C55D: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C564: 09 07 A6 00 30 00 01 
      endoneof;
>0000C56B: 29 02 

      oneof varid = SYSTEM_CONFIGURATION.OsSigOnSerrEn,
>0000C56D: 05 91 33 09 34 09 A2 04 01 00 AA 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0933),
        help        = STRING_TOKEN(0x0934),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C57E: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C585: 09 07 A6 00 30 00 01 
      endoneof;
>0000C58C: 29 02 

      oneof varid = SYSTEM_CONFIGURATION.OsSigOnPerrEn,
>0000C58E: 05 91 35 09 36 09 A3 04 01 00 AB 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0935),
        help        = STRING_TOKEN(0x0936),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = RESET_REQUIRED;
>0000C59F: 09 07 A7 00 00 00 00 
        option text = STRING_TOKEN(0x00A6),  value = 1, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;      
>0000C5A6: 09 07 A6 00 30 00 01 
      endoneof;
>0000C5AD: 29 02 

  endform;
>0000C5AF: 29 02 
  


#line 1031 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
  #line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\ConsoleRedirectionConfigurationSetup.hfr"



























  form formid = 0x88,
>0000C5B1: 01 86 88 00 4F 00 

    title         = STRING_TOKEN(0x004F);
    subtitle text = STRING_TOKEN(0x004F);
>0000C5B7: 02 87 4F 00 00 00 00 
>0000C5BE: 29 02 
    subtitle text = STRING_TOKEN(0x0762);
>0000C5C0: 02 87 62 07 00 00 00 
>0000C5C7: 29 02 
	
    oneof varid     = SYSTEM_CONFIGURATION.ConsoleRedirection,
>0000C5C9: 05 91 51 00 52 00 A4 04 01 00 E6 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0051),
        help        = STRING_TOKEN(0x0052),
        option text = STRING_TOKEN(0x00A6),    value = 1, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
>0000C5DA: 09 07 A6 00 30 00 01 
        option text = STRING_TOKEN(0x00A7),   value = 0, flags = RESET_REQUIRED;
>0000C5E1: 09 07 A7 00 00 00 00 
    endoneof;
>0000C5E8: 29 02 
    
    grayoutif ideqval SYSTEM_CONFIGURATION.ConsoleRedirection == 0;
>0000C5EA: 19 82 
>0000C5EC: 12 06 A4 04 00 00 
     oneof varid     = SYSTEM_CONFIGURATION.FlowControl,
>0000C5F2: 05 91 53 00 54 00 A5 04 01 00 E7 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0053),
        help        = STRING_TOKEN(0x0054),
        option text = STRING_TOKEN(0x006F),       value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000C603: 09 07 6F 00 30 00 00 
        option text = STRING_TOKEN(0x0055),    value = 1, flags = RESET_REQUIRED; 
>0000C60A: 09 07 55 00 00 00 01 
     endoneof;
>0000C611: 29 02 
    endif;
>0000C613: 29 02 
	
    grayoutif ideqval SYSTEM_CONFIGURATION.ConsoleRedirection == 0;
>0000C615: 19 82 
>0000C617: 12 06 A4 04 00 00 
     oneof varid     = SYSTEM_CONFIGURATION.BaudRate,
>0000C61D: 05 A6 56 00 57 00 A6 04 01 00 E8 00 10 13 01 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
        prompt      = STRING_TOKEN(0x0056),
        help        = STRING_TOKEN(0x0057),
        option text = STRING_TOKEN(0x0058),    value = 1, flags = RESET_REQUIRED;
>0000C643: 09 0E 58 00 03 03 01 00 00 00 00 00 00 00 
        option text = STRING_TOKEN(0x0059),   value = 2, flags = RESET_REQUIRED;
>0000C651: 09 0E 59 00 03 03 02 00 00 00 00 00 00 00 
        option text = STRING_TOKEN(0x005A),   value = 3, flags = RESET_REQUIRED;
>0000C65F: 09 0E 5A 00 03 03 03 00 00 00 00 00 00 00 
        option text = STRING_TOKEN(0x005B),   value = 4, flags = RESET_REQUIRED;
>0000C66D: 09 0E 5B 00 03 03 04 00 00 00 00 00 00 00 
        option text = STRING_TOKEN(0x005C),  value = 5, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
>0000C67B: 09 0E 5C 00 33 03 05 00 00 00 00 00 00 00 
     endoneof;
>0000C689: 29 02 
    endif;
>0000C68B: 29 02 
	
    grayoutif ideqval SYSTEM_CONFIGURATION.ConsoleRedirection == 0;
>0000C68D: 19 82 
>0000C68F: 12 06 A4 04 00 00 
     oneof varid     = SYSTEM_CONFIGURATION.TerminalType,
>0000C695: 05 91 5D 00 5E 00 A7 04 01 00 F0 00 10 10 00 03 00 
        prompt      = STRING_TOKEN(0x005D),
        help        = STRING_TOKEN(0x005E),
        option text = STRING_TOKEN(0x005F),       value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000C6A6: 09 07 5F 00 30 00 00 
        option text = STRING_TOKEN(0x0060),        value = 1, flags = RESET_REQUIRED;
>0000C6AD: 09 07 60 00 00 00 01 
        option text = STRING_TOKEN(0x0061),   value = 2, flags = RESET_REQUIRED;
>0000C6B4: 09 07 61 00 00 00 02 
        option text = STRING_TOKEN(0x0062),      value = 3, flags = RESET_REQUIRED;
>0000C6BB: 09 07 62 00 00 00 03 
     endoneof;    
>0000C6C2: 29 02 
    endif;
>0000C6C4: 29 02 
	
    grayoutif ideqval SYSTEM_CONFIGURATION.ConsoleRedirection == 0;
>0000C6C6: 19 82 
>0000C6C8: 12 06 A4 04 00 00 
     oneof varid     = SYSTEM_CONFIGURATION.Parity,
>0000C6CE: 05 91 6D 00 6E 00 A8 04 01 00 F4 00 10 10 01 05 00 
        prompt      = STRING_TOKEN(0x006D),
        help        = STRING_TOKEN(0x006E),
        option text = STRING_TOKEN(0x006F),         value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000C6DF: 09 07 6F 00 30 00 01 
        option text = STRING_TOKEN(0x0071),         value = 2, flags = RESET_REQUIRED;
>0000C6E6: 09 07 71 00 00 00 02 
        option text = STRING_TOKEN(0x0070),          value = 3, flags = RESET_REQUIRED;
>0000C6ED: 09 07 70 00 00 00 03 
        option text = STRING_TOKEN(0x0072),         value = 4, flags = RESET_REQUIRED;
>0000C6F4: 09 07 72 00 00 00 04 
        option text = STRING_TOKEN(0x0073),        value = 5, flags = RESET_REQUIRED;
>0000C6FB: 09 07 73 00 00 00 05 
     endoneof;    
>0000C702: 29 02 
    endif;
>0000C704: 29 02 

    grayoutif ideqval SYSTEM_CONFIGURATION.ConsoleRedirection == 0;
>0000C706: 19 82 
>0000C708: 12 06 A4 04 00 00 
     oneof varid     = SYSTEM_CONFIGURATION.DataBits,
>0000C70E: 05 91 69 00 6A 00 A9 04 01 00 F3 00 10 10 07 08 00 
        prompt      = STRING_TOKEN(0x0069),
        help        = STRING_TOKEN(0x006A),
        option text = STRING_TOKEN(0x006B),         value = 7, flags = RESET_REQUIRED;
>0000C71F: 09 07 6B 00 00 00 07 
        option text = STRING_TOKEN(0x006C),         value = 8, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000C726: 09 07 6C 00 30 00 08 
     endoneof;    
>0000C72D: 29 02 
    endif;
>0000C72F: 29 02 

    grayoutif ideqval SYSTEM_CONFIGURATION.ConsoleRedirection == 0;
>0000C731: 19 82 
>0000C733: 12 06 A4 04 00 00 
     oneof varid     = SYSTEM_CONFIGURATION.StopBits,
>0000C739: 05 91 74 00 75 00 AA 04 01 00 F5 00 10 10 01 03 00 
        prompt      = STRING_TOKEN(0x0074),
        help        = STRING_TOKEN(0x0075),
        option text = STRING_TOKEN(0x0076),         value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000C74A: 09 07 76 00 30 00 01 
        option text = STRING_TOKEN(0x0077),         value = 3, flags = RESET_REQUIRED;
>0000C751: 09 07 77 00 00 00 03 
     endoneof;    
>0000C758: 29 02 
    endif;
>0000C75A: 29 02 

    grayoutif ideqval SYSTEM_CONFIGURATION.ConsoleRedirection == 0;
>0000C75C: 19 82 
>0000C75E: 12 06 A4 04 00 00 
     oneof varid     = SYSTEM_CONFIGURATION.TerminalResolution,
>0000C764: 05 91 65 00 66 00 AB 04 01 00 F2 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0065),
        help        = STRING_TOKEN(0x0066),
        option text = STRING_TOKEN(0x0067),    value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000C775: 09 07 67 00 30 00 00 
        option text = STRING_TOKEN(0x0068),   value = 1, flags = RESET_REQUIRED;
>0000C77C: 09 07 68 00 00 00 01 
     endoneof;    
>0000C783: 29 02 
    endif;
>0000C785: 29 02 
        	
    subtitle text = STRING_TOKEN(0x00AA);
>0000C787: 02 87 AA 00 00 00 00 
>0000C78E: 29 02 
          
    oneof varid     = SYSTEM_CONFIGURATION.LegacyOsRedirection,
>0000C790: 05 91 63 00 64 00 AC 04 01 00 F1 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0063),
        help        = STRING_TOKEN(0x0064),
        option text = STRING_TOKEN(0x00A6),     value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000C7A1: 09 07 A6 00 30 00 01 
        option text = STRING_TOKEN(0x00A7),    value = 0, flags = RESET_REQUIRED;
>0000C7A8: 09 07 A7 00 00 00 00 
    endoneof;
>0000C7AF: 29 02 
	
  endform;
>0000C7B1: 29 02 
#line 1032 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"

  




  #line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"






























#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\SetupMisc.h"









































#line 43 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\SetupMisc.h"
#line 32 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Config/MeConfig.h"






























#line 32 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Config/MeConfig.h"



#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Me/MeLbg/Include/Config/MeConfig.h"



































#line 37 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Me/MeLbg/Include/Config/MeConfig.h"


#line 40 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Me/MeLbg/Include/Config/MeConfig.h"


#line 43 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Me/MeLbg/Include/Config/MeConfig.h"






































































































#line 146 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Me/MeLbg/Include/Config/MeConfig.h"

#line 36 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Config/MeConfig.h"
#line 33 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Ws\\AmtSetup.h"






























#line 32 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Ws\\AmtSetup.h"



#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Me/MeLbg/Ws/Include/AmtSetup.h"


















































#line 52 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Me/MeLbg/Ws/Include/AmtSetup.h"





#line 58 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Me/MeLbg/Ws/Include/AmtSetup.h"
#line 36 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Ws\\AmtSetup.h"
#line 34 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Ws\\MeState.h"






























#line 32 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Ws\\MeState.h"



#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Me/MeLbg/Ws/Include/MeState.h"















































































#line 81 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Me/MeLbg/Ws/Include/MeState.h"
#line 36 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Ws\\MeState.h"
#line 35 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"


#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Ws\\IccPlatform.h"






























#line 32 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Ws\\IccPlatform.h"



#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Me/MeLbg/Ws/Include/IccPlatform.h"
































































#line 66 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Me/MeLbg/Ws/Include/IccPlatform.h"




#line 36 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Ws\\IccPlatform.h"
#line 38 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"
#line 39 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"









#line 49 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"


suppressif NOT ideqval ME_RC_CONFIGURATION.MeType == 0xFF;
>0000C7B3: 0A 82 
>0000C7B5: 12 86 E9 04 FF 00 
>0000C7BB: 17 02 
>0000C7BD: 29 02 

  form formid = 0x5C,
>0000C7BF: 01 86 5C 00 EC 00 
    title   = STRING_TOKEN(0x00EC);
    subtitle text = STRING_TOKEN(0x00ED);
>0000C7C5: 02 87 ED 00 00 00 00 
>0000C7CC: 29 02 

      oneof varid      = ME_RC_CONFIGURATION.MeStateControl,
>0000C7CE: 05 91 44 01 45 01 AD 04 03 00 4D 00 10 10 00 01 00 
        prompt         = STRING_TOKEN(0x0144),
        help           = STRING_TOKEN(0x0145),
        option text    = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000C7DF: 09 07 38 07 30 00 00 
        option text    = STRING_TOKEN(0x0739), value = 1, flags = RESET_REQUIRED;
>0000C7E6: 09 07 39 07 00 00 01 
      endoneof;
>0000C7ED: 29 02 

  endform; 
>0000C7EF: 29 02 

endif;
>0000C7F1: 29 02 

suppressif NOT ideqval ME_RC_CONFIGURATION.MeType == 0x03;
>0000C7F3: 0A 82 
>0000C7F5: 12 86 E9 04 03 00 
>0000C7FB: 17 02 
>0000C7FD: 29 02 




  form formid = 0x50,
>0000C7FF: 01 86 50 00 EC 00 
    title   = STRING_TOKEN(0x00EC);
    subtitle text = STRING_TOKEN(0x00ED);
>0000C805: 02 87 ED 00 00 00 00 
>0000C80C: 29 02 

    
    
    
    text
>0000C80E: 03 08 EE 00 EF 00 F0 00 
      help  = STRING_TOKEN(0x00EF),
      text  = STRING_TOKEN(0x00EE),
      text  = STRING_TOKEN(0x00F0),
      flags = 0,
      key   = 0;
  
    suppressif NOT ideqval ME_RC_CONFIGURATION.MeFirmwareMode == 0xFF;
>0000C816: 0A 82 
>0000C818: 12 86 B2 04 FF 00 
>0000C81E: 17 02 
>0000C820: 29 02 
      text help = STRING_TOKEN(0x02F7), text = STRING_TOKEN(0x0103), text = STRING_TOKEN(0x0107), flags = 0, key = 0;
>0000C822: 03 08 03 01 F7 02 07 01 
      text help = STRING_TOKEN(0x02F7), text = STRING_TOKEN(0x0103), text = STRING_TOKEN(0x0108), flags = 0, key = 0;
>0000C82A: 03 08 03 01 F7 02 08 01 
    endif;
>0000C832: 29 02 
  
    text
>0000C834: 03 08 03 01 04 01 05 01 
      help   = STRING_TOKEN(0x0104),
      text   = STRING_TOKEN(0x0103),
      text   = STRING_TOKEN(0x0105),
      flags  = 0,
      key    = 0;
  
    suppressif TRUE;
>0000C83C: 0A 82 
>0000C83E: 46 02 
      
      numeric varid   = ME_RC_CONFIGURATION.MeType,
>0000C840: 07 91 03 01 AA 00 AE 04 03 00 3A 00 10 20 00 FF 00 
        prompt  = STRING_TOKEN(0x0103),
        help    = STRING_TOKEN(0x00AA),
        flags   = DISPLAY_UINT_HEX | RESET_REQUIRED,
        minimum = 0,
        maximum = 0xFF,
        step    = 0,
        default = 0x03, defaultstore = MyStandardDefault,
>0000C851: 5B 06 00 00 00 03 
        default = 0x03, defaultstore = MyManufactureDefault,
>0000C857: 5B 06 01 00 00 03 
      endnumeric;
>0000C85D: 29 02 
    endif; 
>0000C85F: 29 02 
  
    suppressif NOT ideqval ME_RC_CONFIGURATION.MeFirmwareMode == 0xFF;
>0000C861: 0A 82 
>0000C863: 12 86 B2 04 FF 00 
>0000C869: 17 02 
>0000C86B: 29 02 
      text help = STRING_TOKEN(0x02F7), text = STRING_TOKEN(0x0110), text = STRING_TOKEN(0x0112), flags = 0, key = 0;
>0000C86D: 03 08 10 01 F7 02 12 01 
      text help = STRING_TOKEN(0x02F7), text = STRING_TOKEN(0x0110), text = STRING_TOKEN(0x0116), flags = 0, key = 0;
>0000C875: 03 08 10 01 F7 02 16 01 
      text help = STRING_TOKEN(0x02F7), text = STRING_TOKEN(0x0110), text = STRING_TOKEN(0x0114), flags = 0, key = 0;
>0000C87D: 03 08 10 01 F7 02 14 01 
      text help = STRING_TOKEN(0x02F7), text = STRING_TOKEN(0x0110), text = STRING_TOKEN(0x0115), flags = 0, key = 0;
>0000C885: 03 08 10 01 F7 02 15 01 
      text help = STRING_TOKEN(0x02F7), text = STRING_TOKEN(0x0110), text = STRING_TOKEN(0x0113), flags = 0, key = 0;
>0000C88D: 03 08 10 01 F7 02 13 01 
    endif;
>0000C895: 29 02 
  
    text
>0000C897: 03 08 10 01 0F 01 11 01 
      help   = STRING_TOKEN(0x010F),
      text   = STRING_TOKEN(0x0110),
      text   = STRING_TOKEN(0x0111),
      flags  = 0,
      key    = 0;
  
    text
>0000C89F: 03 08 0A 01 09 01 0B 01 
      help   = STRING_TOKEN(0x0109),
      text   = STRING_TOKEN(0x010A),
      text   = STRING_TOKEN(0x010B),
      flags  = 0,
      key    = 0;
  
    text
>0000C8A7: 03 08 0D 01 0C 01 0E 01 
      help   = STRING_TOKEN(0x010C),
      text   = STRING_TOKEN(0x010D),
      text   = STRING_TOKEN(0x010E),
      flags  = 0,
      key    = 0;
  
    text
>0000C8AF: 03 08 F1 00 F2 00 F3 00 
      help  = STRING_TOKEN(0x00F2),
      text  = STRING_TOKEN(0x00F1),
      text  = STRING_TOKEN(0x00F3),
      flags = 0,
      key   = 0;
  
    text
>0000C8B7: 03 08 F4 00 F5 00 F6 00 
      help  = STRING_TOKEN(0x00F5),
      text  = STRING_TOKEN(0x00F4),
      text  = STRING_TOKEN(0x00F6),
      flags = 0,
      key   = 0;
  
    text
>0000C8BF: 03 08 F8 00 F7 00 F9 00 
      help  = STRING_TOKEN(0x00F7),
      text  = STRING_TOKEN(0x00F8),
      text  = STRING_TOKEN(0x00F9),
      flags = 0,
      key   = 0;
  
    text
>0000C8C7: 03 08 FB 00 FA 00 FC 00 
      help  = STRING_TOKEN(0x00FA),
      text  = STRING_TOKEN(0x00FB),
      text  = STRING_TOKEN(0x00FC),
      flags = 0,
      key   = 0;
  
    text
>0000C8CF: 03 08 FE 00 FD 00 FF 00 
      help  = STRING_TOKEN(0x00FD),
      text  = STRING_TOKEN(0x00FE),
      text  = STRING_TOKEN(0x00FF),
      flags = 0,
      key   = 0;
  
    text
>0000C8D7: 03 08 01 01 00 01 02 01 
      help  = STRING_TOKEN(0x0100),
      text  = STRING_TOKEN(0x0101),
      text  = STRING_TOKEN(0x0102),
      flags = 0,
      key   = 0;
  
    subtitle text = STRING_TOKEN(0x00AA);
>0000C8DF: 02 87 AA 00 00 00 00 
>0000C8E6: 29 02 
    
    oneof varid = ME_RC_CONFIGURATION.Amt,
>0000C8E8: 05 91 17 01 18 01 AF 04 03 00 07 00 10 10 00 01 00 
      prompt   = STRING_TOKEN(0x0117),
      help     = STRING_TOKEN(0x0118),
      option text = STRING_TOKEN(0x0738), value = 0, flags =  RESET_REQUIRED;
>0000C8F9: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000C900: 09 07 39 07 30 00 01 
    endoneof;
>0000C907: 29 02 
    
    goto 0x01A8,
>0000C909: 0F 0F 19 01 1A 01 B0 04 00 00 FF FF 00 A8 01 
      prompt  = STRING_TOKEN(0x0119),
      help    = STRING_TOKEN(0x011A);

    subtitle text = STRING_TOKEN(0x00AA);
>0000C918: 02 87 AA 00 00 00 00 
>0000C91F: 29 02 


    grayoutif ideqval ME_RC_CONFIGURATION.DelayedAuthenticationModeEnabled == 0;
>0000C921: 19 82 
>0000C923: 12 06 4C 05 00 00 
      oneof varid   = ME_RC_CONFIGURATION.DelayedAuthenticationMode,
>0000C929: 05 91 ED 01 EE 01 B1 04 03 00 14 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x01ED),
        help        = STRING_TOKEN(0x01EE),
        option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000C93A: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = RESET_REQUIRED;
>0000C941: 09 07 39 07 00 00 01 
      endoneof;
>0000C948: 29 02 
    endif; 
>0000C94A: 29 02 

    subtitle text = STRING_TOKEN(0x00AA);
>0000C94C: 02 87 AA 00 00 00 00 
>0000C953: 29 02 
#line 211 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"

  endform; 
>0000C955: 29 02 




  form formid = 0x01A8,
>0000C957: 01 86 A8 01 1B 01 
    title = STRING_TOKEN(0x011B);

    grayoutif ideqval ME_RC_CONFIGURATION.Amt == 0;
>0000C95D: 19 82 
>0000C95F: 12 06 AF 04 00 00 
    
      subtitle text = STRING_TOKEN(0x00AA);
>0000C965: 02 87 AA 00 00 00 00 
>0000C96C: 29 02 
      subtitle text = STRING_TOKEN(0x011D);
>0000C96E: 02 87 1D 01 00 00 00 
>0000C975: 29 02 

      
      
      
      
      
      
      
      
      suppressif TRUE;
>0000C977: 0A 82 
>0000C979: 46 02 
        numeric varid = ME_RC_CONFIGURATION.MeFirmwareMode,
>0000C97B: 07 91 D5 07 D6 07 B2 04 03 00 3B 00 00 10 00 FF 01 
          prompt  = STRING_TOKEN(0x07D5),
          help    = STRING_TOKEN(0x07D6),
          flags     = 0,
          minimum   = 0,
          maximum   = 255,
          step      = 1,
          default = 0, defaultstore = MyStandardDefault,
>0000C98C: 5B 06 00 00 00 00 
          default = 0, defaultstore = MyManufactureDefault,
>0000C992: 5B 06 01 00 00 00 
        endnumeric;
>0000C998: 29 02 
      endif;
>0000C99A: 29 02 

      suppressif TRUE;
>0000C99C: 0A 82 
>0000C99E: 46 02 
        numeric varid = ME_RC_CONFIGURATION.MeImageType,
>0000C9A0: 07 91 D5 07 D6 07 B3 04 03 00 3C 00 00 10 00 FF 01 
          prompt  = STRING_TOKEN(0x07D5),
          help    = STRING_TOKEN(0x07D6),
          flags     = 0,
          minimum   = 0,
          maximum   = 255,
          step      = 1,
          default = 0, defaultstore = MyStandardDefault,
>0000C9B1: 5B 06 00 00 00 00 
          default = 0, defaultstore = MyManufactureDefault,
>0000C9B7: 5B 06 01 00 00 00 
        endnumeric;
>0000C9BD: 29 02 
      endif;
>0000C9BF: 29 02 

      suppressif TRUE;
>0000C9C1: 0A 82 
>0000C9C3: 46 02 
        checkbox varid = ME_RC_CONFIGURATION.RemoteSessionActive,
>0000C9C5: 06 8E D7 07 D8 07 B4 04 03 00 41 00 00 00 
          prompt   = STRING_TOKEN(0x07D7),
          help     = STRING_TOKEN(0x07D8),
          flags    = 0,
          default  = 0, defaultstore = MyStandardDefault,
>0000C9D3: 5B 06 00 00 00 00 
          default  = 0, defaultstore = MyManufactureDefault,
>0000C9D9: 5B 06 01 00 00 00 
        endcheckbox;
>0000C9DF: 29 02 
      endif;
>0000C9E1: 29 02 

      oneof varid      = ME_RC_CONFIGURATION.MeFwDowngrade,
>0000C9E3: 05 91 1E 01 1F 01 B5 04 03 00 16 00 10 10 00 01 00 
        prompt         = STRING_TOKEN(0x011E),
        help           = STRING_TOKEN(0x011F),
        option text    = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000C9F4: 09 07 38 07 30 00 00 
        option text    = STRING_TOKEN(0x0739), value = 1, flags =  RESET_REQUIRED;
>0000C9FB: 09 07 39 07 00 00 01 
      endoneof;
>0000CA02: 29 02 
      
      suppressif NOT ideqval ME_RC_CONFIGURATION.MeImageType <= 0x03;
>0000CA04: 0A 82 
>0000CA06: 40 84 B3 04 
>0000CA0A: 42 03 03 
>0000CA0D: 34 02 
>0000CA0F: 17 02 
>0000CA11: 29 02 
        oneof varid      = ME_RC_CONFIGURATION.LocalFwUpdEnabled,
>0000CA13: 05 91 20 01 21 01 00 30 03 00 17 00 04 10 00 01 00 
          questionid     = 0x3000,
          prompt         = STRING_TOKEN(0x0120),
          help           = STRING_TOKEN(0x0121),
          option text    = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING | INTERACTIVE;
>0000CA24: 09 07 38 07 30 00 00 
          option text    = STRING_TOKEN(0x0739), value = 1, flags = INTERACTIVE;
>0000CA2B: 09 07 39 07 00 00 01 
        endoneof;
>0000CA32: 29 02 
      endif;
>0000CA34: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>0000CA36: 02 87 AA 00 00 00 00 
>0000CA3D: 29 02 
      subtitle text = STRING_TOKEN(0x011C);
>0000CA3F: 02 87 1C 01 00 00 00 
>0000CA46: 29 02 

      suppressif ideqval ME_RC_CONFIGURATION.MeImageType <= 0x03 OR
>0000CA48: 0A 82 
>0000CA4A: 40 84 B3 04 
>0000CA4E: 42 03 03 
>0000CA51: 34 02 
>0000CA59: 16 02 
                 ideqval ME_RC_CONFIGURATION.MeStateControl == 0 OR
>0000CA53: 12 06 AD 04 00 00 
>0000CA63: 16 02 
>0000CA65: 29 02 
                 NOT ideqval ME_RC_CONFIGURATION.MeFirmwareMode == 0x00;
>0000CA5B: 12 06 B2 04 00 00 
>0000CA61: 17 02 
        oneof varid      = ME_RC_CONFIGURATION.MngState,
>0000CA67: 05 91 22 01 23 01 02 30 03 00 3D 00 14 10 00 01 00 
          questionid     = 0x3002,
          prompt         = STRING_TOKEN(0x0122),
          help           = STRING_TOKEN(0x0123),
          option text    = STRING_TOKEN(0x0738), value = 0, flags = INTERACTIVE | RESET_REQUIRED;
>0000CA78: 09 07 38 07 00 00 00 
          option text    = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | INTERACTIVE | RESET_REQUIRED;
>0000CA7F: 09 07 39 07 10 00 01 
        endoneof;
>0000CA86: 29 02 
      endif;
>0000CA88: 29 02 

      oneof varid      = ME_RC_CONFIGURATION.MdesCapability,
>0000CA8A: 05 91 24 01 25 01 B6 04 03 00 3E 00 10 10 00 01 00 
        prompt = STRING_TOKEN(0x0124),
        help   = STRING_TOKEN(0x0125),
        option text    = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CA9B: 09 07 38 07 30 00 00 
        option text    = STRING_TOKEN(0x0739), value = 1, flags = RESET_REQUIRED;
>0000CAA2: 09 07 39 07 00 00 01 
      endoneof;
>0000CAA9: 29 02 

      checkbox varid  = ME_RC_CONFIGURATION.AmtbxHotKeyPressed,
>0000CAAB: 06 8E 26 01 27 01 B7 04 03 00 49 00 10 00 
        prompt   = STRING_TOKEN(0x0126),
        help     = STRING_TOKEN(0x0127),
        
        
        flags    = 0 | RESET_REQUIRED,
        key      = 0,
      endcheckbox;
>0000CAB9: 29 02 

      checkbox varid  = ME_RC_CONFIGURATION.HideUnConfigureMeConfirm,
>0000CABB: 06 8E 2A 01 2B 01 B8 04 03 00 45 00 10 00 
        prompt   = STRING_TOKEN(0x012A),
        help     = STRING_TOKEN(0x012B),
        
        
        flags    = 0 | RESET_REQUIRED,
        key      = 0,
      endcheckbox;
>0000CAC9: 29 02 

      checkbox varid  = ME_RC_CONFIGURATION.UnConfigureMe,
>0000CACB: 06 8E 2E 01 2F 01 B9 04 03 00 44 00 10 00 
        prompt   = STRING_TOKEN(0x012E),
        help     = STRING_TOKEN(0x012F),
        
        
        flags    = 0 | RESET_REQUIRED,
        key      = 0,
      endcheckbox;
>0000CAD9: 29 02 

      oneof varid = ME_RC_CONFIGURATION.USBProvision,
>0000CADB: 05 91 32 01 33 01 BA 04 03 00 47 00 10 10 00 01 00 
        prompt   = STRING_TOKEN(0x0132),
        help     = STRING_TOKEN(0x0133),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000CAEC: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CAF3: 09 07 39 07 30 00 01 
      endoneof;
>0000CAFA: 29 02 

      oneof varid = ME_RC_CONFIGURATION.FWProgress,
>0000CAFC: 05 91 34 01 35 01 BB 04 03 00 40 00 10 10 00 01 00 
        prompt   = STRING_TOKEN(0x0134),
        help     = STRING_TOKEN(0x0135),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000CB0D: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CB14: 09 07 39 07 30 00 01 
      endoneof;
>0000CB1B: 29 02 

      checkbox varid  = ME_RC_CONFIGURATION.AmtCiraRequest,
>0000CB1D: 06 8E 30 01 31 01 BC 04 03 00 42 00 10 00 
        prompt   = STRING_TOKEN(0x0130),
        help     = STRING_TOKEN(0x0131),
        
        
        flags    = 0 | RESET_REQUIRED,
        key      = 0,
      endcheckbox;
>0000CB2B: 29 02 

      grayoutif ideqval ME_RC_CONFIGURATION.AmtCiraRequest == 0 OR ideqval ME_RC_CONFIGURATION.Amt == 0;
>0000CB2D: 19 82 
>0000CB2F: 12 86 BC 04 00 00 
>0000CB35: 12 06 AF 04 00 00 
>0000CB3B: 16 02 
>0000CB3D: 29 02 
        numeric varid   = ME_RC_CONFIGURATION.AmtCiraTimeout,
>0000CB3F: 07 91 36 01 37 01 BD 04 03 00 43 00 10 10 00 FF 01 
          prompt  = STRING_TOKEN (0x0136),
          help    = STRING_TOKEN (0x0137),
          flags   = RESET_REQUIRED,
          minimum = 0,
          maximum = 255,
          step    = 1 ,       
                              
                              
          default = 0, defaultstore = MyStandardDefault,
>0000CB50: 5B 06 00 00 00 00 
          default = 0, defaultstore = MyManufactureDefault,
>0000CB56: 5B 06 01 00 00 00 
        endnumeric;
>0000CB5C: 29 02 
      endif;
>0000CB5E: 29 02 

      oneof varid = ME_RC_CONFIGURATION.Asf,
>0000CB60: 05 91 46 01 47 01 BE 04 03 00 00 00 10 10 00 01 00 
        prompt   = STRING_TOKEN(0x0146),
        help     = STRING_TOKEN(0x0147),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000CB71: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CB78: 09 07 39 07 30 00 01 
      endoneof;
>0000CB7F: 29 02 

      grayoutif ideqval ME_RC_CONFIGURATION.Asf == 0;
>0000CB81: 19 82 
>0000CB83: 12 06 BE 04 00 00 
        oneof varid = ME_RC_CONFIGURATION.WatchDog,
>0000CB89: 05 91 48 01 49 01 BF 04 03 00 01 00 10 10 00 01 00 
          prompt   = STRING_TOKEN(0x0148),
          help     = STRING_TOKEN(0x0149),
          option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CB9A: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739), value = 1, flags = RESET_REQUIRED;
>0000CBA1: 09 07 39 07 00 00 01 
        endoneof;
>0000CBA8: 29 02 
      endif;
>0000CBAA: 29 02 

      grayoutif ideqval ME_RC_CONFIGURATION.Asf == 0 OR ideqval ME_RC_CONFIGURATION.WatchDog == 0;
>0000CBAC: 19 82 
>0000CBAE: 12 86 BE 04 00 00 
>0000CBB4: 12 06 BF 04 00 00 
>0000CBBA: 16 02 
>0000CBBC: 29 02 

        numeric varid   = ME_RC_CONFIGURATION.WatchDogTimerBios,
>0000CBBE: 07 94 4E 01 4F 01 C0 04 03 00 02 00 00 11 00 00 FF FF 01 00 
           prompt  = STRING_TOKEN (0x014E),
           help    = STRING_TOKEN (0x014F),
           minimum = 0,
           maximum = 65535,
           step    = 1 , 
                         
                         
           default = 0, defaultstore = MyStandardDefault,
>0000CBD2: 5B 07 00 00 01 00 00 
           default = 0, defaultstore = MyManufactureDefault,
>0000CBD9: 5B 07 01 00 01 00 00 
        endnumeric;
>0000CBE0: 29 02 

        oneof varid = ME_RC_CONFIGURATION.WatchDogOs,
>0000CBE2: 05 91 4A 01 4B 01 C1 04 03 00 04 00 10 10 00 01 00 
          prompt   = STRING_TOKEN(0x014A),
          help     = STRING_TOKEN(0x014B),
          option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CBF3: 09 07 38 07 30 00 00 
          option text = STRING_TOKEN(0x0739), value = 1, flags = RESET_REQUIRED;
>0000CBFA: 09 07 39 07 00 00 01 
        endoneof;
>0000CC01: 29 02 

        grayoutif ideqval ME_RC_CONFIGURATION.WatchDogOs == 0;
>0000CC03: 19 82 
>0000CC05: 12 06 C1 04 00 00 
          numeric varid   = ME_RC_CONFIGURATION.WatchDogTimerOs,
>0000CC0B: 07 94 4C 01 4D 01 C2 04 03 00 05 00 00 11 00 00 FF FF 01 00 
             prompt  = STRING_TOKEN (0x014C),
             help    = STRING_TOKEN (0x014D),
             minimum = 0,
             maximum = 65535,
             step    = 1 , 
                           
                           
             default = 0, defaultstore = MyStandardDefault,
>0000CC1F: 5B 07 00 00 01 00 00 
             default = 0, defaultstore = MyManufactureDefault,
>0000CC26: 5B 07 01 00 01 00 00 
          endnumeric;
>0000CC2D: 29 02 
        endif;
>0000CC2F: 29 02 
      endif;
>0000CC31: 29 02 

      oneof varid   = ME_RC_CONFIGURATION.CoreBiosDoneEnabled,
>0000CC33: 05 91 42 01 43 01 C3 04 03 00 15 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0142),
        help        = STRING_TOKEN(0x0143),
        option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000CC44: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CC4B: 09 07 39 07 30 00 01 
      endoneof;
>0000CC52: 29 02 

      subtitle text = STRING_TOKEN(0x00AA);
>0000CC54: 02 87 AA 00 00 00 00 
>0000CC5B: 29 02 
      checkbox varid  = ME_RC_CONFIGURATION.MebxDebugMsg,
>0000CC5D: 06 8E 2C 01 2D 01 C4 04 03 00 46 00 10 00 
        prompt   = STRING_TOKEN(0x012C),
        help     = STRING_TOKEN(0x012D),
        
        
        flags    = 0 | RESET_REQUIRED,
        key      = 0,
      endcheckbox;
>0000CC6B: 29 02 

      checkbox varid  = ME_RC_CONFIGURATION.AmtbxSelectionScreen,
>0000CC6D: 06 8E 28 01 29 01 C5 04 03 00 48 00 10 00 
        prompt   = STRING_TOKEN(0x0128),
        help     = STRING_TOKEN(0x0129),
        
        
        flags    = 0 | RESET_REQUIRED,
        key      = 0,
      endcheckbox;
>0000CC7B: 29 02 

      goto 0x01A9,
>0000CC7D: 0F 0F 50 01 51 01 C6 04 00 00 FF FF 00 A9 01 
        prompt  = STRING_TOKEN(0x0150),
        help    = STRING_TOKEN(0x0151);
        
    endif; 
>0000CC8C: 29 02 
  endform; 
>0000CC8E: 29 02 




  form formid = 0x01A9,
>0000CC90: 01 86 A9 01 50 01 
    title     = STRING_TOKEN(0x0150);

    oneof varid = ME_RC_CONFIGURATION.MebxNonUiTextMode,
>0000CC96: 05 91 52 01 53 01 C7 04 03 00 4A 00 00 10 00 02 00 
      prompt   = STRING_TOKEN(0x0152),
      help     = STRING_TOKEN(0x0153),
      option text = STRING_TOKEN(0x0158), value = 0, flags = DEFAULT | MANUFACTURING;
>0000CCA7: 09 07 58 01 30 00 00 
      option text = STRING_TOKEN(0x0159), value = 1, flags = 0;
>0000CCAE: 09 07 59 01 00 00 01 
      option text = STRING_TOKEN(0x015A), value = 2, flags = 0;
>0000CCB5: 09 07 5A 01 00 00 02 
    endoneof;
>0000CCBC: 29 02 

    oneof varid = ME_RC_CONFIGURATION.MebxUiTextMode,
>0000CCBE: 05 91 54 01 55 01 C8 04 03 00 4B 00 00 10 00 02 00 
      prompt   = STRING_TOKEN(0x0154),
      help     = STRING_TOKEN(0x0155),
      option text = STRING_TOKEN(0x0158), value = 0, flags = DEFAULT | MANUFACTURING;
>0000CCCF: 09 07 58 01 30 00 00 
      option text = STRING_TOKEN(0x0159), value = 1, flags = 0;
>0000CCD6: 09 07 59 01 00 00 01 
      option text = STRING_TOKEN(0x015A), value = 2, flags = 0;
>0000CCDD: 09 07 5A 01 00 00 02 
    endoneof;
>0000CCE4: 29 02 

    oneof varid = ME_RC_CONFIGURATION.MebxGraphicsMode,
>0000CCE6: 05 91 56 01 57 01 C9 04 03 00 4C 00 00 10 00 03 00 
      prompt   = STRING_TOKEN(0x0156),
      help     = STRING_TOKEN(0x0157),
      option text = STRING_TOKEN(0x0158), value = 0, flags = DEFAULT | MANUFACTURING;
>0000CCF7: 09 07 58 01 30 00 00 
      option text = STRING_TOKEN(0x015B), value = 1, flags = 0;
>0000CCFE: 09 07 5B 01 00 00 01 
      option text = STRING_TOKEN(0x015C), value = 2, flags = 0;
>0000CD05: 09 07 5C 01 00 00 02 
      option text = STRING_TOKEN(0x015D), value = 3, flags = 0;
>0000CD0C: 09 07 5D 01 00 00 03 
    endoneof;
>0000CD13: 29 02 
  endform; 
>0000CD15: 29 02 






  form formid = 0x51,
>0000CD17: 01 86 51 00 60 01 
    title = STRING_TOKEN(0x0160);

    goto 0x52,
>0000CD1D: 0F 0F 61 01 62 01 CA 04 00 00 FF FF 00 52 00 
      prompt = STRING_TOKEN(0x0161),
      help   = STRING_TOKEN(0x0162);
      
    subtitle text = STRING_TOKEN(0x02F7);
>0000CD2C: 02 87 F7 02 00 00 00 
>0000CD33: 29 02 

    goto 0x21,
>0000CD35: 0F 0F 38 01 39 01 CB 04 00 00 FF FF 00 21 00 
      prompt  = STRING_TOKEN(0x0138),
      help    = STRING_TOKEN(0x0139);

    subtitle text = STRING_TOKEN(0x02F7);
>0000CD44: 02 87 F7 02 00 00 00 
>0000CD4B: 29 02 





    oneof varid = ME_RC_CONFIGURATION.CpuTypeEmulation,
>0000CD4D: 05 91 64 01 65 01 CC 04 03 00 4E 00 10 10 00 0A 00 
      prompt   = STRING_TOKEN(0x0164),
      help     = STRING_TOKEN(0x0165),
      option text = STRING_TOKEN(0x0166), value = 10, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CD5E: 09 07 66 01 30 00 0A 
      option text = STRING_TOKEN(0x0167), value = 0, flags = RESET_REQUIRED;
>0000CD65: 09 07 67 01 00 00 00 
      option text = STRING_TOKEN(0x0168), value = 1, flags = RESET_REQUIRED;
>0000CD6C: 09 07 68 01 00 00 01 
      option text = STRING_TOKEN(0x0169), value = 2, flags = RESET_REQUIRED;
>0000CD73: 09 07 69 01 00 00 02 
      option text = STRING_TOKEN(0x016A), value = 3, flags = RESET_REQUIRED;
>0000CD7A: 09 07 6A 01 00 00 03 
      option text = STRING_TOKEN(0x016B), value = 4, flags = RESET_REQUIRED;
>0000CD81: 09 07 6B 01 00 00 04 
      option text = STRING_TOKEN(0x016C), value = 5, flags = RESET_REQUIRED;
>0000CD88: 09 07 6C 01 00 00 05 
    endoneof;
>0000CD8F: 29 02 

    oneof varid = ME_RC_CONFIGURATION.CLINKDisableOverride,
>0000CD91: 05 91 6F 01 70 01 CD 04 03 00 4F 00 10 10 00 01 00 
      prompt   = STRING_TOKEN(0x016F),
      help     = STRING_TOKEN(0x0170),
      option text = STRING_TOKEN(0x016E), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CDA2: 09 07 6E 01 30 00 00 
      option text = STRING_TOKEN(0x016D), value = 1, flags = RESET_REQUIRED;
>0000CDA9: 09 07 6D 01 00 00 01 
    endoneof;
>0000CDB0: 29 02 

    oneof varid = ME_RC_CONFIGURATION.VproAllowed,
>0000CDB2: 05 91 71 01 72 01 CE 04 03 00 50 00 10 10 00 01 00 
      prompt   = STRING_TOKEN(0x0171),
      help     = STRING_TOKEN(0x0172),
      option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000CDC3: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CDCA: 09 07 39 07 30 00 01 
    endoneof;
>0000CDD1: 29 02 
#line 540 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"



  endform; 
>0000CDD3: 29 02 




  form formid = 0x21,
>0000CDD5: 01 86 21 00 38 01 
    title     = STRING_TOKEN(0x0138);

    checkbox varid  = ME_RC_CONFIGURATION.BiosReflash,
>0000CDDB: 06 8E 3A 01 3B 01 CF 04 03 00 51 00 10 03 
        prompt   = STRING_TOKEN(0x013A),
        help     = STRING_TOKEN(0x013B),
        
        

        flags    =  CHECKBOX_DEFAULT | CHECKBOX_DEFAULT_MFG | RESET_REQUIRED,


#line 561 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"
        key      = 0,
    endcheckbox;
>0000CDE9: 29 02 

   checkbox varid  = ME_RC_CONFIGURATION.BiosSetup,
>0000CDEB: 06 8E 3C 01 3D 01 D0 04 03 00 52 00 10 03 
        prompt   = STRING_TOKEN(0x013C),
        help     = STRING_TOKEN(0x013D),
        
        

        flags    =  CHECKBOX_DEFAULT | CHECKBOX_DEFAULT_MFG | RESET_REQUIRED,


#line 574 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"
        key      = 0,
    endcheckbox;
>0000CDF9: 29 02 

    checkbox varid  = ME_RC_CONFIGURATION.BiosPause,
>0000CDFB: 06 8E 3E 01 3F 01 D1 04 03 00 53 00 10 03 
        prompt   = STRING_TOKEN(0x013E),
        help     = STRING_TOKEN(0x013F),
        
        

        flags    =  CHECKBOX_DEFAULT | CHECKBOX_DEFAULT_MFG | RESET_REQUIRED,


#line 587 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"
        key      = 0,
    endcheckbox;
>0000CE09: 29 02 

    checkbox varid  = ME_RC_CONFIGURATION.SecureBootExposureToFw,
>0000CE0B: 06 8E 40 01 41 01 D2 04 03 00 54 00 10 03 
        prompt   = STRING_TOKEN(0x0140),
        help     = STRING_TOKEN(0x0141),
        
        

        flags    =  CHECKBOX_DEFAULT | CHECKBOX_DEFAULT_MFG | RESET_REQUIRED,


#line 600 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"
        key      = 0,
    endcheckbox;
>0000CE19: 29 02 

  endform; 
>0000CE1B: 29 02 
  



  form formid = 0x52,
>0000CE1D: 01 86 52 00 63 01 
    title = STRING_TOKEN(0x0163);

    oneof varid   = ME_RC_CONFIGURATION.HsioMessagingEnabled,
>0000CE23: 05 91 7A 01 7B 01 D3 04 03 00 0A 00 00 10 00 01 00 
      prompt   = STRING_TOKEN(0x017A),
      help     = STRING_TOKEN(0x017B),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000CE34: 09 07 38 07 00 00 00 
  
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0 | DEFAULT | MANUFACTURING;
>0000CE3B: 09 07 39 07 30 00 01 
  

#line 620 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"
    endoneof;
>0000CE42: 29 02 
  
    checkbox varid = ME_RC_CONFIGURATION.MeDidEnabled,
>0000CE44: 06 8E 7C 01 7D 01 D4 04 03 00 08 00 10 03 
      prompt       = STRING_TOKEN(0x017C),
      help         = STRING_TOKEN(0x017D),
      
      
  
  
      flags        = CHECKBOX_DEFAULT | CHECKBOX_DEFAULT_MFG | RESET_REQUIRED,
  

#line 633 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"
  

#line 636 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"
      key          = 0,
    endcheckbox;
>0000CE52: 29 02 
  
    grayoutif ideqval ME_RC_CONFIGURATION.MeDidEnabled == 0;
>0000CE54: 19 82 
>0000CE56: 12 06 D4 04 00 00 
      oneof varid   = ME_RC_CONFIGURATION.MeDidInitStat,
>0000CE5C: 05 91 7E 01 7F 01 D5 04 03 00 09 00 10 10 00 03 00 
        prompt      = STRING_TOKEN(0x017E),
        help        = STRING_TOKEN(0x017F),
        option text = STRING_TOKEN(0x0180), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CE6D: 09 07 80 01 30 00 00 
        option text = STRING_TOKEN(0x0181), value = 1, flags = RESET_REQUIRED;
>0000CE74: 09 07 81 01 00 00 01 
        option text = STRING_TOKEN(0x0182), value = 2, flags = RESET_REQUIRED;
>0000CE7B: 09 07 82 01 00 00 02 
        option text = STRING_TOKEN(0x0183), value = 3, flags = RESET_REQUIRED;
>0000CE82: 09 07 83 01 00 00 03 
      endoneof;
>0000CE89: 29 02 
    endif;
>0000CE8B: 29 02 
  
    checkbox varid = ME_RC_CONFIGURATION.HostResetNotification,
>0000CE8D: 06 8E 8E 01 8F 01 D6 04 03 00 12 00 10 03 
      prompt       = STRING_TOKEN(0x018E),
      help         = STRING_TOKEN(0x018F),
      
      
  
      flags        = CHECKBOX_DEFAULT | CHECKBOX_DEFAULT_MFG | RESET_REQUIRED,
  

#line 660 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"
      key          = 0,
    endcheckbox;
>0000CE9B: 29 02 


    goto 0x53,
>0000CE9D: 0F 0F 73 01 74 01 C8 10 00 00 FF FF 04 53 00 
      questionid = 0x10C8,
      prompt  = STRING_TOKEN(0x0173),
      help    = STRING_TOKEN(0x0174),
      flags   = INTERACTIVE;
#line 670 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"

    oneof varid   = ME_RC_CONFIGURATION.MeEndOfPostEnabled,
>0000CEAC: 05 91 8C 01 8D 01 D7 04 03 00 0B 00 00 10 00 02 00 
      prompt      = STRING_TOKEN(0x018C),
      help        = STRING_TOKEN(0x018D),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000CEBD: 09 07 38 07 00 00 00 
  
      option text = STRING_TOKEN(0x0739),  value = 2, flags = 0 | DEFAULT | MANUFACTURING;
>0000CEC4: 09 07 39 07 30 00 02 
  

#line 680 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"
    endoneof;
>0000CECB: 29 02 

    grayoutif ideqval ME_RC_CONFIGURATION.RemoteSessionActive == 0x01
>0000CECD: 19 82 
>0000CECF: 12 86 B4 04 01 00 
>0000CEDF: 29 02 
                      
                      
                      OR NOT ideqval ME_RC_CONFIGURATION.MeHeci1Enabled == 1;
>0000CED5: 12 06 1B 05 01 00 
>0000CEDB: 17 02 
>0000CEDD: 16 02 

      oneof varid      = ME_RC_CONFIGURATION.MeStateControl,
>0000CEE1: 05 91 44 01 45 01 D8 04 03 00 4D 00 10 10 00 01 00 
        prompt         = STRING_TOKEN(0x0144),
        help           = STRING_TOKEN(0x0145),
        option text    = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000CEF2: 09 07 38 07 00 00 00 
        option text    = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CEF9: 09 07 39 07 30 00 01 
      endoneof;
>0000CF00: 29 02 
    endif; 
>0000CF02: 29 02 

    oneof varid   = ME_RC_CONFIGURATION.MeHeci1Enabled,
>0000CF04: 05 91 90 01 91 01 D9 04 03 00 0C 00 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x0190),
      help        = STRING_TOKEN(0x0191),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000CF15: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000CF1C: 09 07 39 07 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = 0 | DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CF23: 09 07 A8 00 30 00 02 
    endoneof;
>0000CF2A: 29 02 
  
    oneof varid   = ME_RC_CONFIGURATION.MeHeci2Enabled,
>0000CF2C: 05 91 92 01 93 01 DA 04 03 00 0D 00 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x0192),
      help        = STRING_TOKEN(0x0193),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000CF3D: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000CF44: 09 07 39 07 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = 0 | DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CF4B: 09 07 A8 00 30 00 02 
    endoneof;
>0000CF52: 29 02 
  
    oneof varid   = ME_RC_CONFIGURATION.MeHeci3Enabled,
>0000CF54: 05 91 94 01 95 01 DB 04 03 00 0E 00 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x0194),
      help        = STRING_TOKEN(0x0195),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000CF65: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000CF6C: 09 07 39 07 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = 0 | DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CF73: 09 07 A8 00 30 00 02 
    endoneof;
>0000CF7A: 29 02 
  
    oneof varid   = ME_RC_CONFIGURATION.MeIderEnabled,
>0000CF7C: 05 91 96 01 97 01 DC 04 03 00 0F 00 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x0196),
      help        = STRING_TOKEN(0x0197),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000CF8D: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000CF94: 09 07 39 07 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = 0 | DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CF9B: 09 07 A8 00 30 00 02 
    endoneof;
>0000CFA2: 29 02 
  
    oneof varid   = ME_RC_CONFIGURATION.MeKtEnabled,
>0000CFA4: 05 91 98 01 99 01 DD 04 03 00 10 00 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x0198),
      help        = STRING_TOKEN(0x0199),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000CFB5: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000CFBC: 09 07 39 07 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = 0 | DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000CFC3: 09 07 A8 00 30 00 02 
    endoneof;
>0000CFCA: 29 02 

    oneof varid   = ME_RC_CONFIGURATION.DisableD0I3SettingForHeci,
>0000CFCC: 05 91 A0 01 A1 01 DE 04 03 00 11 00 00 10 00 01 00 
      prompt      = STRING_TOKEN(0x01A0),
      help        = STRING_TOKEN(0x01A1),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0 | DEFAULT | MANUFACTURING;
>0000CFDD: 09 07 38 07 30 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000CFE4: 09 07 39 07 00 00 01 
    endoneof;
>0000CFEB: 29 02 

  endform; 
>0000CFED: 29 02 





  form formid = 0x53,
>0000CFEF: 01 86 53 00 75 01 
    title = STRING_TOKEN(0x0175);

    checkbox varid = ME_RC_CONFIGURATION.IccClkOverride,
>0000CFF5: 06 8E 76 01 77 01 DF 04 03 00 56 00 10 00 
      prompt       = STRING_TOKEN(0x0176),
      help         = STRING_TOKEN(0x0177),
      flags        = 0 | RESET_REQUIRED,
      key          = 0,
    endcheckbox;
>0000D003: 29 02 

    subtitle text = STRING_TOKEN(0x02F7);
>0000D005: 02 87 F7 02 00 00 00 
>0000D00C: 29 02 

    grayoutif ideqval ME_RC_CONFIGURATION.IccClkOverride == 0;
>0000D00E: 19 82 
>0000D010: 12 06 DF 04 00 00 

  














      grayoutif ideqval ME_RC_CONFIGURATION.AllowAdvancedOptions == 0;
>0000D016: 19 82 
>0000D018: 12 06 E8 04 00 00 
      oneof varid     = ME_RC_CONFIGURATION.RegLock,
>0000D01E: 05 91 7C 00 7D 00 E0 04 03 00 6D 00 10 10 00 02 00 
          prompt      = STRING_TOKEN(0x007C),
          help        = STRING_TOKEN(0x007D),
          option text = STRING_TOKEN(0x007E), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000D02F: 09 07 7E 00 30 00 00 
          option text = STRING_TOKEN(0x007F), value = 1, flags = RESET_REQUIRED;
>0000D036: 09 07 7F 00 00 00 01 
          option text = STRING_TOKEN(0x0080), value = 2, flags = RESET_REQUIRED;
>0000D03D: 09 07 80 00 00 00 02 
      endoneof;
>0000D044: 29 02 
      endif;
>0000D046: 29 02 

      grayoutif ideqval ME_RC_CONFIGURATION.ShowProfile == 0;
>0000D048: 19 82 
>0000D04A: 12 06 E7 04 00 00 
      numeric varid = ME_RC_CONFIGURATION.IccProfile,
>0000D050: 07 91 81 00 82 00 B0 10 03 00 57 00 14 10 00 0F 01 
          prompt    = STRING_TOKEN(0x0081),
          help      = STRING_TOKEN(0x0082),
          flags     = RESET_REQUIRED | INTERACTIVE,
          key       = 0x10B0,
          minimum   = 0,
          maximum   = 15,
          step      = 1,
          default   = 0, defaultstore = MyStandardDefault,
>0000D061: 5B 06 00 00 00 00 
          default   = 0, defaultstore = MyManufactureDefault,
>0000D067: 5B 06 01 00 00 00 
      endnumeric;
>0000D06D: 29 02 
      endif;
>0000D06F: 29 02 

      subtitle text = STRING_TOKEN(0x02F7);
>0000D071: 02 87 F7 02 00 00 00 
>0000D078: 29 02 

  











      subtitle text = STRING_TOKEN(0x02F7);
>0000D07A: 02 87 F7 02 00 00 00 
>0000D081: 29 02 

      suppressif ideqval ME_RC_CONFIGURATION.AllowAdvancedOptions == 0 OR
>0000D083: 0A 82 
>0000D085: 12 86 E8 04 00 00 
>0000D091: 16 02 
>0000D093: 29 02 
                 ideqval ME_RC_CONFIGURATION.ShowClock[1] == 0;
>0000D08B: 12 06 E1 04 00 00 
          
          
          
          subtitle text = STRING_TOKEN(0x0085);
>0000D095: 02 87 85 00 00 00 00 
>0000D09C: 29 02 
            text
>0000D09E: 03 08 87 00 F7 02 88 00 
                help   = STRING_TOKEN(0x02F7),
                text   = STRING_TOKEN(0x0087),
                text   = STRING_TOKEN(0x0088),
                flags  = 0, key = 0;

            text
>0000D0A6: 03 08 8A 00 F7 02 8B 00 
                help   = STRING_TOKEN(0x02F7),
                text   = STRING_TOKEN(0x008A),
                text   = STRING_TOKEN(0x008B),
                flags  = 0, key = 0;

            text
>0000D0AE: 03 08 8D 00 F7 02 8E 00 
                help   = STRING_TOKEN(0x02F7),
                text   = STRING_TOKEN(0x008D),
                text   = STRING_TOKEN(0x008E),
                flags  = 0, key = 0;

            text
>0000D0B6: 03 08 90 00 F7 02 91 00 
                help   = STRING_TOKEN(0x02F7),
                text   = STRING_TOKEN(0x0090),
                text   = STRING_TOKEN(0x0091),
                flags  = 0, key = 0;
        endif;
>0000D0BE: 29 02 

      suppressif ideqval ME_RC_CONFIGURATION.AllowAdvancedOptions == 0 OR
>0000D0C0: 0A 82 
>0000D0C2: 12 86 E8 04 00 00 
>0000D0CE: 16 02 
>0000D0D8: 29 02 
                 ideqval ME_RC_CONFIGURATION.ShowClock[1] == 0 OR
>0000D0C8: 12 06 E1 04 00 00 
>0000D0D6: 16 02 
                 ideqval ME_RC_CONFIGURATION.ShowFrequency[1] == 0;
>0000D0D0: 12 06 E3 04 00 00 
              numeric varid = ME_RC_CONFIGURATION.Frequency[1],
>0000D0DA: 07 94 93 00 95 00 B1 10 03 00 63 00 04 11 00 00 FF FF 01 00 
                  prompt    = STRING_TOKEN(0x0093),
                  help      = STRING_TOKEN(0x0095),
                  flags     = INTERACTIVE,
                  key       = 0x10B1,
                  minimum   = 0,
                  maximum   = 65535,
                  step      = 1,
                  default   = 0, 
>0000D0EE: 5B 07 00 00 01 00 00 
              endnumeric;
>0000D0F5: 29 02 
            endif;
>0000D0F7: 29 02 

      suppressif ideqval ME_RC_CONFIGURATION.AllowAdvancedOptions == 0 OR
>0000D0F9: 0A 82 
>0000D0FB: 12 86 E8 04 00 00 
>0000D107: 16 02 
>0000D111: 29 02 
                 ideqval ME_RC_CONFIGURATION.ShowSpread[1] == 0 OR
>0000D101: 12 06 E5 04 00 00 
>0000D10F: 16 02 
                 ideqval ME_RC_CONFIGURATION.ShowClock[1] == 0;
>0000D109: 12 06 E1 04 00 00 
              numeric varid = ME_RC_CONFIGURATION.Spread[1],
>0000D113: 07 91 96 00 98 00 B3 10 03 00 66 00 04 10 00 FF 01 
                  prompt    = STRING_TOKEN(0x0096),
                  help      = STRING_TOKEN(0x0098),
                  flags     = INTERACTIVE,
                  key       = 0x10B3,
                  minimum   = 0,
                  maximum   = 255,
                  step      = 1,
                  default   = 0, 
>0000D124: 5B 06 00 00 00 00 
              endnumeric;
>0000D12A: 29 02 
            endif;
>0000D12C: 29 02 

      subtitle text = STRING_TOKEN(0x02F7);
>0000D12E: 02 87 F7 02 00 00 00 
>0000D135: 29 02 

      suppressif ideqval ME_RC_CONFIGURATION.AllowAdvancedOptions == 0 OR
>0000D137: 0A 82 
>0000D139: 12 86 E8 04 00 00 
>0000D145: 16 02 
>0000D147: 29 02 
                 ideqval ME_RC_CONFIGURATION.ShowClock[0] == 0;
>0000D13F: 12 06 E2 04 00 00 
          
          
          
          subtitle text = STRING_TOKEN(0x0086);
>0000D149: 02 87 86 00 00 00 00 
>0000D150: 29 02 
            text
>0000D152: 03 08 87 00 F7 02 89 00 
                help   = STRING_TOKEN(0x02F7),
                text   = STRING_TOKEN(0x0087),
                text   = STRING_TOKEN(0x0089),
                flags  = 0, key = 0;

            text
>0000D15A: 03 08 8A 00 F7 02 8C 00 
                help   = STRING_TOKEN(0x02F7),
                text   = STRING_TOKEN(0x008A),
                text   = STRING_TOKEN(0x008C),
                flags  = 0, key = 0;

            text
>0000D162: 03 08 8D 00 F7 02 8F 00 
                help   = STRING_TOKEN(0x02F7),
                text   = STRING_TOKEN(0x008D),
                text   = STRING_TOKEN(0x008F),
                flags  = 0, key = 0;

            text
>0000D16A: 03 08 90 00 F7 02 92 00 
                help   = STRING_TOKEN(0x02F7),
                text   = STRING_TOKEN(0x0090),
                text   = STRING_TOKEN(0x0092),
                flags  = 0, key = 0;
        endif;
>0000D172: 29 02 
        
      suppressif ideqval ME_RC_CONFIGURATION.AllowAdvancedOptions == 0 OR
>0000D174: 0A 82 
>0000D176: 12 86 E8 04 00 00 
>0000D182: 16 02 
>0000D18C: 29 02 
                 ideqval ME_RC_CONFIGURATION.ShowClock[0] == 0 OR
>0000D17C: 12 06 E2 04 00 00 
>0000D18A: 16 02 
                 ideqval ME_RC_CONFIGURATION.ShowFrequency[0] == 0;
>0000D184: 12 06 E4 04 00 00 
              numeric varid = ME_RC_CONFIGURATION.Frequency[0],
>0000D18E: 07 94 94 00 95 00 B2 10 03 00 61 00 04 11 00 00 FF FF 01 00 
                  prompt    = STRING_TOKEN(0x0094),
                  help      = STRING_TOKEN(0x0095),
                  flags     = INTERACTIVE,
                  key       = 0x10B2,
                  minimum   = 0,
                  maximum   = 65535,
                  step      = 1,
                  default   = 0, 
>0000D1A2: 5B 07 00 00 01 00 00 
              endnumeric;
>0000D1A9: 29 02 
            endif;
>0000D1AB: 29 02 

      suppressif ideqval ME_RC_CONFIGURATION.AllowAdvancedOptions == 0 OR
>0000D1AD: 0A 82 
>0000D1AF: 12 86 E8 04 00 00 
>0000D1BB: 16 02 
>0000D1C5: 29 02 
                 ideqval ME_RC_CONFIGURATION.ShowSpread[0] == 0 OR
>0000D1B5: 12 06 E6 04 00 00 
>0000D1C3: 16 02 
                 ideqval ME_RC_CONFIGURATION.ShowClock[0] == 0;
>0000D1BD: 12 06 E2 04 00 00 
              numeric
>0000D1C7: 07 91 97 00 98 00 B4 10 03 00 65 00 04 10 00 FF 01 
                  varid = ME_RC_CONFIGURATION.Spread[0],
                  prompt    = STRING_TOKEN(0x0097),
                  help      = STRING_TOKEN(0x0098),
                  flags     = INTERACTIVE,
                  key       = 0x10B4,
                  minimum   = 0,
                  maximum   = 255,
                  step      = 1,
                  default   = 0, 
>0000D1D8: 5B 06 00 00 00 00 
              endnumeric;
>0000D1DE: 29 02 
            endif;
>0000D1E0: 29 02 

    
      suppressif TRUE;
>0000D1E2: 0A 82 
>0000D1E4: 46 02 

        numeric varid = ME_RC_CONFIGURATION.ShowClock[1],
>0000D1E6: 07 91 00 00 00 00 E1 04 03 00 68 00 00 10 00 01 00 
          prompt = STRING_TOKEN(0), help = STRING_TOKEN(0), flags = 0, minimum = 0, maximum = 1,
        endnumeric;
>0000D1F7: 29 02 
        numeric varid = ME_RC_CONFIGURATION.ShowClock[0],
>0000D1F9: 07 91 00 00 00 00 E2 04 03 00 67 00 00 10 00 01 00 
          prompt = STRING_TOKEN(0), help = STRING_TOKEN(0), flags = 0, minimum = 0, maximum = 1,
        endnumeric;
>0000D20A: 29 02 
        numeric varid = ME_RC_CONFIGURATION.ShowFrequency[1],
>0000D20C: 07 91 00 00 00 00 E3 04 03 00 6A 00 00 10 00 01 00 
          prompt = STRING_TOKEN(0), help = STRING_TOKEN(0), flags = 0, minimum = 0, maximum = 1,
        endnumeric;
>0000D21D: 29 02 
        numeric varid = ME_RC_CONFIGURATION.ShowFrequency[0],
>0000D21F: 07 91 00 00 00 00 E4 04 03 00 69 00 00 10 00 01 00 
          prompt = STRING_TOKEN(0), help = STRING_TOKEN(0), flags = 0, minimum = 0, maximum = 1,
        endnumeric;
>0000D230: 29 02 
        numeric varid = ME_RC_CONFIGURATION.ShowSpread[1],
>0000D232: 07 91 00 00 00 00 E5 04 03 00 6C 00 00 10 00 01 00 
          prompt = STRING_TOKEN(0), help = STRING_TOKEN(0), flags = 0, minimum = 0, maximum = 1,
        endnumeric;
>0000D243: 29 02 
        numeric varid = ME_RC_CONFIGURATION.ShowSpread[0],
>0000D245: 07 91 00 00 00 00 E6 04 03 00 6B 00 00 10 00 01 00 
          prompt = STRING_TOKEN(0), help = STRING_TOKEN(0), flags = 0, minimum = 0, maximum = 1,
        endnumeric;
>0000D256: 29 02 
        numeric varid = ME_RC_CONFIGURATION.ShowProfile,
>0000D258: 07 91 00 00 00 00 E7 04 03 00 58 00 00 10 00 01 00 
          prompt = STRING_TOKEN(0), help = STRING_TOKEN(0), flags = 0, minimum = 0, maximum = 1,
        endnumeric;
>0000D269: 29 02 
        numeric varid = ME_RC_CONFIGURATION.AllowAdvancedOptions,
>0000D26B: 07 91 00 00 00 00 E8 04 03 00 6E 00 00 10 00 01 00 
          prompt = STRING_TOKEN(0), help = STRING_TOKEN(0), flags = 0, minimum = 0, maximum = 1,
        endnumeric;
>0000D27C: 29 02 
      endif;
>0000D27E: 29 02 

    endif; 
>0000D280: 29 02 
    
  endform; 
>0000D282: 29 02 
#line 975 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"

#line 977 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"

endif; 
>0000D284: 29 02 
#line 980 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSetup.hfr"

#line 1039 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 1040 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"


  #line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSpsSetup.hfr"































#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Config/MeConfig.h"






























#line 32 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Config/MeConfig.h"




#line 33 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSpsSetup.hfr"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Config/MeSpsConfig.h"






























#line 32 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Config/MeSpsConfig.h"



#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Me/MeLbg/Include/Config/MeSpsConfig.h"








































































































#line 106 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Me/MeLbg/Include/Config/MeSpsConfig.h"

#line 36 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Config/MeSpsConfig.h"
#line 34 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSpsSetup.hfr"












suppressif NOT ideqval ME_RC_CONFIGURATION.MeType == 0x01;
>0000D286: 0A 82 
>0000D288: 12 86 AE 04 01 00 
>0000D28E: 17 02 
>0000D290: 29 02 




  form formid = 0x54,
>0000D292: 01 86 54 00 A4 01 
    title   = STRING_TOKEN(0x01A4);
    subtitle text = STRING_TOKEN(0x01A5);
>0000D298: 02 87 A5 01 00 00 00 
>0000D29F: 29 02 

    suppressif NOT ideqval ME_RC_CONFIGURATION.MeFirmwareMode == 0xFF;
>0000D2A1: 0A 82 
>0000D2A3: 12 86 B2 04 FF 00 
>0000D2A9: 17 02 
>0000D2AB: 29 02 
      text help = STRING_TOKEN(0x02F7), text = STRING_TOKEN(0x0103), text = STRING_TOKEN(0x0106), flags = 0, key = 0;
>0000D2AD: 03 08 03 01 F7 02 06 01 
      text help = STRING_TOKEN(0x02F7), text = STRING_TOKEN(0x0103), text = STRING_TOKEN(0x0108), flags = 0, key = 0;
>0000D2B5: 03 08 03 01 F7 02 08 01 
    endif;
>0000D2BD: 29 02 
  
    suppressif TRUE;
>0000D2BF: 0A 82 
>0000D2C1: 46 02 
      
      numeric varid   = ME_RC_CONFIGURATION.MeType,
>0000D2C3: 07 91 03 01 AA 00 E9 04 03 00 3A 00 10 20 00 FF 00 
        prompt  = STRING_TOKEN(0x0103),
        help    = STRING_TOKEN(0x00AA),
        flags   = DISPLAY_UINT_HEX | RESET_REQUIRED,
        minimum = 0,
        maximum = 0xFF,
        step    = 0,
        default = 0x01, defaultstore = MyStandardDefault,
>0000D2D4: 5B 06 00 00 00 01 
        default = 0x01, defaultstore = MyManufactureDefault,
>0000D2DA: 5B 06 01 00 00 01 
      endnumeric;
>0000D2E0: 29 02 
    endif; 
>0000D2E2: 29 02 

    
    
    
    
    
    suppressif TRUE;
>0000D2E4: 0A 82 
>0000D2E6: 46 02 
      checkbox varid = ME_RC_CONFIGURATION.MePttSupported,
>0000D2E8: 06 8E D9 07 DA 07 EA 04 03 00 27 00 00 00 
        prompt   = STRING_TOKEN(0x07D9),
        help     = STRING_TOKEN(0x07DA),
        flags    = 0,
        default  = 0, defaultstore = MyStandardDefault,
>0000D2F6: 5B 06 00 00 00 00 
        default  = 0, defaultstore = MyManufactureDefault,
>0000D2FC: 5B 06 01 00 00 00 
      endcheckbox;
>0000D302: 29 02 
    endif;
>0000D304: 29 02 

    
    
    
    text
>0000D306: 03 08 EE 00 EF 00 F0 00 
      help  = STRING_TOKEN(0x00EF),
      text  = STRING_TOKEN(0x00EE),
      text  = STRING_TOKEN(0x00F0),
      flags = 0,
      key   = 0;
  
    text
>0000D30E: 03 08 F1 00 F2 00 F3 00 
      help  = STRING_TOKEN(0x00F2),
      text  = STRING_TOKEN(0x00F1),
      text  = STRING_TOKEN(0x00F3),
      flags = 0,
      key   = 0;
  
    text
>0000D316: 03 08 F4 00 F5 00 F6 00 
      help  = STRING_TOKEN(0x00F5),
      text  = STRING_TOKEN(0x00F4),
      text  = STRING_TOKEN(0x00F6),
      flags = 0,
      key   = 0;
  
    text
>0000D31E: 03 08 F8 00 F7 00 F9 00 
      help  = STRING_TOKEN(0x00F7),
      text  = STRING_TOKEN(0x00F8),
      text  = STRING_TOKEN(0x00F9),
      flags = 0,
      key   = 0;

    text
>0000D326: 03 08 FB 00 FA 00 FC 00 
      help  = STRING_TOKEN(0x00FA),
      text  = STRING_TOKEN(0x00FB),
      text  = STRING_TOKEN(0x00FC),
      flags = 0,
      key   = 0;
  
    text
>0000D32E: 03 08 FE 00 FD 00 FF 00 
      help  = STRING_TOKEN(0x00FD),
      text  = STRING_TOKEN(0x00FE),
      text  = STRING_TOKEN(0x00FF),
      flags = 0,
      key   = 0;
  
    text
>0000D336: 03 08 01 01 00 01 02 01 
      help  = STRING_TOKEN(0x0100),
      text  = STRING_TOKEN(0x0101),
      text  = STRING_TOKEN(0x0102),
      flags = 0,
      key   = 0;
  
    text
>0000D33E: 03 08 A7 01 A6 01 A8 01 
      help  = STRING_TOKEN(0x01A6),
      text  = STRING_TOKEN(0x01A7),
      text  = STRING_TOKEN(0x01A8),
      flags = 0,
      key   = 0;

    grayoutif ideqval ME_RC_CONFIGURATION.MePttSupported == 0;
>0000D346: 19 82 
>0000D348: 12 06 EA 04 00 00 
      oneof varid   = ME_RC_CONFIGURATION.MePttEnabled,
>0000D34E: 05 91 AD 01 AC 01 EB 04 03 00 19 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x01AD),
        help        = STRING_TOKEN(0x01AC),
        option text = STRING_TOKEN(0x02FA), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000D35F: 09 07 FA 02 30 00 00 
        option text = STRING_TOKEN(0x02F9), value = 1, flags = RESET_REQUIRED;
>0000D366: 09 07 F9 02 00 00 01 
      endoneof;
>0000D36D: 29 02 
    endif;
>0000D36F: 29 02 
  
    numeric varid = ME_RC_CONFIGURATION.SpsAltitude,
>0000D371: 07 94 AF 01 AE 01 EC 04 03 00 1A 00 10 21 00 00 FF FF 00 00 
      prompt      = STRING_TOKEN(0x01AF),
      help        = STRING_TOKEN(0x01AE),
      flags       = DISPLAY_UINT_HEX | RESET_REQUIRED,
      minimum     = 0,
      maximum     = 0xFFFF,
      step        = 0,          
      default     = 0x8000, defaultstore = MyStandardDefault, 
>0000D385: 5B 07 00 00 01 00 80 
      default     = 0x8000, defaultstore = MyManufactureDefault,
>0000D38C: 5B 07 01 00 01 00 80 
    endnumeric;
>0000D393: 29 02 
  
    numeric varid = ME_RC_CONFIGURATION.SpsMctpBusOwner,
>0000D395: 07 94 B1 01 B0 01 ED 04 03 00 1C 00 10 21 00 00 FF FF 00 00 
      prompt      = STRING_TOKEN(0x01B1),
      help        = STRING_TOKEN(0x01B0),
      flags       = DISPLAY_UINT_HEX | RESET_REQUIRED,
      minimum     = 0,
      maximum     = 0xFFFF,
      step        = 0,
      default     = 0, defaultstore = MyStandardDefault, 
>0000D3A9: 5B 07 00 00 01 00 00 
      default     = 0, defaultstore = MyManufactureDefault,
>0000D3B0: 5B 07 01 00 01 00 00 
    endnumeric;
>0000D3B7: 29 02 

    text
>0000D3B9: 03 08 AA 01 A9 01 AB 01 
      help  = STRING_TOKEN(0x01A9),
      text  = STRING_TOKEN(0x01AA),
      text  = STRING_TOKEN(0x01AB),
      flags = 0,
      key   = 0;

    suppressif NOT ideqval ME_RC_CONFIGURATION.SpsPmbusProxySupported == 1;
>0000D3C1: 0A 82 
>0000D3C3: 12 86 4D 05 01 00 
>0000D3C9: 17 02 
>0000D3CB: 29 02 

      subtitle text = STRING_TOKEN(0x01B2);
>0000D3CD: 02 87 B2 01 00 00 00 
>0000D3D4: 29 02 

      text
>0000D3D6: 03 08 B5 01 B4 01 B6 01 
        help  = STRING_TOKEN(0x01B4),
        text  = STRING_TOKEN(0x01B5),
        text  = STRING_TOKEN(0x01B6),
        flags = 0,
        key   = 0;

      text
>0000D3DE: 03 08 BA 01 B9 01 BB 01 
        help  = STRING_TOKEN(0x01B9),
        text  = STRING_TOKEN(0x01BA),
        text  = STRING_TOKEN(0x01BB),
        flags = 0,
        key   = 0;

      text
>0000D3E6: 03 08 BF 01 BE 01 C0 01 
        help  = STRING_TOKEN(0x01BE),
        text  = STRING_TOKEN(0x01BF),
        text  = STRING_TOKEN(0x01C0),
        flags = 0,
        key   = 0;

      text
>0000D3EE: 03 08 C4 01 C3 01 C5 01 
        help  = STRING_TOKEN(0x01C3),
        text  = STRING_TOKEN(0x01C4),
        text  = STRING_TOKEN(0x01C5),
        flags = 0,
        key   = 0;

      subtitle text = STRING_TOKEN(0x01B3);
>0000D3F6: 02 87 B3 01 00 00 00 
>0000D3FD: 29 02 

      numeric varid = ME_RC_CONFIGURATION.SpsPsuAddress[0],
>0000D3FF: 07 91 B8 01 B7 01 EE 04 03 00 1F 00 10 20 00 FF 00 
        prompt      = STRING_TOKEN(0x01B8),
        help        = STRING_TOKEN(0x01B7),
        flags       = DISPLAY_UINT_HEX | RESET_REQUIRED,
        minimum     = 0x00,
        maximum     = 0xFF,
        step        = 0,
        default     = 0xB0, defaultstore = MyStandardDefault, 
>0000D410: 5B 06 00 00 00 B0 
        default     = 0xB0, defaultstore = MyManufactureDefault,
>0000D416: 5B 06 01 00 00 B0 
      endnumeric;
>0000D41C: 29 02 

      numeric varid = ME_RC_CONFIGURATION.SpsPsuAddress[1],
>0000D41E: 07 91 BD 01 BC 01 EF 04 03 00 20 00 10 20 00 FF 00 
        prompt      = STRING_TOKEN(0x01BD),
        help        = STRING_TOKEN(0x01BC),
        flags       = DISPLAY_UINT_HEX | RESET_REQUIRED,
        minimum     = 0x00,
        maximum     = 0xFF,
        step        = 0,
        default     = 0xB2, defaultstore = MyStandardDefault, 
>0000D42F: 5B 06 00 00 00 B2 
        default     = 0xB2, defaultstore = MyManufactureDefault,
>0000D435: 5B 06 01 00 00 B2 
      endnumeric;
>0000D43B: 29 02 

      numeric varid = ME_RC_CONFIGURATION.SpsPsuAddress[2],
>0000D43D: 07 91 C2 01 C1 01 F0 04 03 00 21 00 10 20 00 FF 00 
        prompt      = STRING_TOKEN(0x01C2),
        help        = STRING_TOKEN(0x01C1),
        flags       = DISPLAY_UINT_HEX | RESET_REQUIRED,
        minimum     = 0x00,
        maximum     = 0xFF,
        step        = 0,
        default     = 0x00, defaultstore = MyStandardDefault, 
>0000D44E: 5B 06 00 00 00 00 
        default     = 0x00, defaultstore = MyManufactureDefault,
>0000D454: 5B 06 01 00 00 00 
      endnumeric;
>0000D45A: 29 02 

      numeric varid = ME_RC_CONFIGURATION.SpsPsuAddress[3],
>0000D45C: 07 91 C7 01 C6 01 F1 04 03 00 22 00 10 20 00 FF 00 
        prompt      = STRING_TOKEN(0x01C7),
        help        = STRING_TOKEN(0x01C6),
        flags       = DISPLAY_UINT_HEX | RESET_REQUIRED,
        minimum     = 0x00,
        maximum     = 0xFF,
        step        = 0,
        default     = 0x00, defaultstore = MyStandardDefault, 
>0000D46D: 5B 06 00 00 00 00 
        default     = 0x00, defaultstore = MyManufactureDefault,
>0000D473: 5B 06 01 00 00 00 
      endnumeric;
>0000D479: 29 02 

    endif;
>0000D47B: 29 02 

  endform; 
>0000D47D: 29 02 






  form formid = 0x55,
>0000D47F: 01 86 55 00 CA 01 
    title = STRING_TOKEN(0x01CA);

    goto 0x56,
>0000D485: 0F 0F CB 01 CC 01 F2 04 00 00 FF FF 00 56 00 
      prompt = STRING_TOKEN(0x01CB),
      help   = STRING_TOKEN(0x01CC);
      
    subtitle text = STRING_TOKEN(0x02F7);
>0000D494: 02 87 F7 02 00 00 00 
>0000D49B: 29 02 
  
    goto 0x57,
>0000D49D: 0F 0F CE 01 CF 01 F3 04 00 00 FF FF 00 57 00 
      prompt  = STRING_TOKEN(0x01CE),
      help    = STRING_TOKEN(0x01CF);

  endform; 
>0000D4AC: 29 02 




  form formid = 0x56,
>0000D4AE: 01 86 56 00 CD 01 
    title = STRING_TOKEN(0x01CD);

    numeric varid = ME_RC_CONFIGURATION.MeTimeout,
>0000D4B4: 07 91 78 01 79 01 F4 04 03 00 2A 00 10 10 00 0C 01 
      prompt      = STRING_TOKEN(0x0178),
      help        = STRING_TOKEN(0x0179),
      flags       = 0 | RESET_REQUIRED,
      minimum     = 0,
      maximum     = 12,
      step        = 1,
      default     = 2, defaultstore = MyStandardDefault,
>0000D4C5: 5B 06 00 00 00 02 
      default     = 2, defaultstore = MyManufactureDefault,
>0000D4CB: 5B 06 01 00 00 02 
    endnumeric;
>0000D4D1: 29 02 
  
    
    
    oneof varid   = ME_RC_CONFIGURATION.HsioMessagingEnabled,
>0000D4D3: 05 91 7A 01 7B 01 F5 04 03 00 0A 00 00 10 00 01 00 
      prompt   = STRING_TOKEN(0x017A),
      help     = STRING_TOKEN(0x017B),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0 | DEFAULT | MANUFACTURING;
>0000D4E4: 09 07 38 07 30 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000D4EB: 09 07 39 07 00 00 01 
    endoneof;
>0000D4F2: 29 02 
  
    checkbox varid = ME_RC_CONFIGURATION.MeDidEnabled,
>0000D4F4: 06 8E 7C 01 7D 01 F6 04 03 00 08 00 10 03 
      prompt       = STRING_TOKEN(0x017C),
      help         = STRING_TOKEN(0x017D),
      
      
      flags        = CHECKBOX_DEFAULT | CHECKBOX_DEFAULT_MFG | RESET_REQUIRED,
      key          = 0,
    endcheckbox;
>0000D502: 29 02 
  
    grayoutif ideqval ME_RC_CONFIGURATION.MeDidEnabled == 0;
>0000D504: 19 82 
>0000D506: 12 06 F6 04 00 00 
      oneof varid   = ME_RC_CONFIGURATION.MeDidInitStat,
>0000D50C: 05 91 7E 01 7F 01 F7 04 03 00 09 00 10 10 00 03 00 
        prompt      = STRING_TOKEN(0x017E),
        help        = STRING_TOKEN(0x017F),
        option text = STRING_TOKEN(0x0180), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000D51D: 09 07 80 01 30 00 00 
        option text = STRING_TOKEN(0x0181), value = 1, flags = RESET_REQUIRED;
>0000D524: 09 07 81 01 00 00 01 
        option text = STRING_TOKEN(0x0182), value = 2, flags = RESET_REQUIRED;
>0000D52B: 09 07 82 01 00 00 02 
        option text = STRING_TOKEN(0x0183), value = 3, flags = RESET_REQUIRED;
>0000D532: 09 07 83 01 00 00 03 
      endoneof;
>0000D539: 29 02 
    endif;
>0000D53B: 29 02 
  
    checkbox varid = ME_RC_CONFIGURATION.HostResetNotification,
>0000D53D: 06 8E 8E 01 8F 01 F8 04 03 00 12 00 10 03 
      prompt       = STRING_TOKEN(0x018E),
      help         = STRING_TOKEN(0x018F),
      
      
      flags        = CHECKBOX_DEFAULT | CHECKBOX_DEFAULT_MFG | RESET_REQUIRED,
      key          = 0,
    endcheckbox;
>0000D54B: 29 02 

    checkbox varid = ME_RC_CONFIGURATION.PreDidMeResetEnabled,
>0000D54D: 06 8E E9 01 EA 01 F9 04 03 00 23 00 10 00 
      prompt       = STRING_TOKEN(0x01E9),
      help         = STRING_TOKEN(0x01EA),
      
      
      flags        = 0 | RESET_REQUIRED,
      key          = 0,
    endcheckbox;
>0000D55B: 29 02 

    goto 0x5A,
>0000D55D: 0F 0F 73 01 74 01 C9 10 00 00 FF FF 04 5A 00 
      questionid = 0x10C9,
      prompt  = STRING_TOKEN(0x0173),
      help    = STRING_TOKEN(0x0174),
      flags   = INTERACTIVE;

    checkbox varid = ME_RC_CONFIGURATION.MeHmrfpoViaHeci3,
>0000D56C: 06 8E EB 01 EC 01 FA 04 03 00 2D 00 10 00 
      prompt       = STRING_TOKEN(0x01EB),
      help         = STRING_TOKEN(0x01EC),
      flags        = 0 | RESET_REQUIRED,
      key          = 0,
      default      = 0,
>0000D57A: 5B 06 00 00 00 00 
    endcheckbox;
>0000D580: 29 02 

    oneof varid   = ME_RC_CONFIGURATION.MeHmrfpoLockEnabled,
>0000D582: 05 91 88 01 89 01 FB 04 03 00 2B 00 00 10 00 01 00 
      prompt      = STRING_TOKEN(0x0188),
      help        = STRING_TOKEN(0x0189),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000D593: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0 | DEFAULT | MANUFACTURING;
>0000D59A: 09 07 39 07 30 00 01 
    endoneof;
>0000D5A1: 29 02 
  
    grayoutif ideqval ME_RC_CONFIGURATION.MeHmrfpoLockEnabled == 0;
>0000D5A3: 19 82 
>0000D5A5: 12 06 FB 04 00 00 
      oneof varid   = ME_RC_CONFIGURATION.MeHmrfpoEnableEnabled,
>0000D5AB: 05 91 8A 01 8B 01 FC 04 03 00 2C 00 00 10 00 01 00 
        prompt      = STRING_TOKEN(0x018A),
        help        = STRING_TOKEN(0x018B),
        option text = STRING_TOKEN(0x0738), value = 0, flags = 0 | DEFAULT | MANUFACTURING;
>0000D5BC: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000D5C3: 09 07 39 07 00 00 01 
      endoneof;
>0000D5CA: 29 02 
    endif;
>0000D5CC: 29 02 
  
    oneof varid   = ME_RC_CONFIGURATION.MeEndOfPostEnabled,
>0000D5CE: 05 91 8C 01 8D 01 FD 04 03 00 0B 00 00 10 00 02 00 
      prompt      = STRING_TOKEN(0x018C),
      help        = STRING_TOKEN(0x018D),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000D5DF: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 2, flags = 0 | DEFAULT | MANUFACTURING;
>0000D5E6: 09 07 39 07 30 00 02 
    endoneof;
>0000D5ED: 29 02 

    oneof varid   = ME_RC_CONFIGURATION.MeGrPromotionEnabled,
>0000D5EF: 05 91 86 01 87 01 FE 04 03 00 2F 00 00 10 00 01 00 
      prompt      = STRING_TOKEN(0x0186),
      help        = STRING_TOKEN(0x0187),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0 | DEFAULT | MANUFACTURING;
>0000D600: 09 07 38 07 30 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000D607: 09 07 39 07 00 00 01 
    endoneof;
>0000D60E: 29 02 

    oneof varid   = ME_RC_CONFIGURATION.MeGrLockEnabled,
>0000D610: 05 91 84 01 85 01 FF 04 03 00 2E 00 00 10 00 01 00 
      prompt      = STRING_TOKEN(0x0184),
      help        = STRING_TOKEN(0x0185),
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0 | DEFAULT | MANUFACTURING;
>0000D621: 09 07 39 07 30 00 01 
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000D628: 09 07 38 07 00 00 00 
    endoneof;
>0000D62F: 29 02 

    oneof varid   = ME_RC_CONFIGURATION.MeHeci1Enabled,
>0000D631: 05 91 90 01 91 01 00 05 03 00 0C 00 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x0190),
      help        = STRING_TOKEN(0x0191),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000D642: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000D649: 09 07 39 07 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = 0 | DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000D650: 09 07 A8 00 30 00 02 
    endoneof;
>0000D657: 29 02 
  
    oneof varid   = ME_RC_CONFIGURATION.MeHeci2Enabled,
>0000D659: 05 91 92 01 93 01 01 05 03 00 0D 00 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x0192),
      help        = STRING_TOKEN(0x0193),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000D66A: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000D671: 09 07 39 07 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = 0 | DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000D678: 09 07 A8 00 30 00 02 
    endoneof;
>0000D67F: 29 02 
  
    oneof varid   = ME_RC_CONFIGURATION.MeHeci3Enabled,
>0000D681: 05 91 94 01 95 01 02 05 03 00 0E 00 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x0194),
      help        = STRING_TOKEN(0x0195),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000D692: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000D699: 09 07 39 07 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = 0 | DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000D6A0: 09 07 A8 00 30 00 02 
    endoneof;
>0000D6A7: 29 02 
  
    oneof varid   = ME_RC_CONFIGURATION.MeIderEnabled,
>0000D6A9: 05 91 96 01 97 01 03 05 03 00 0F 00 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x0196),
      help        = STRING_TOKEN(0x0197),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000D6BA: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000D6C1: 09 07 39 07 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = 0 | DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000D6C8: 09 07 A8 00 30 00 02 
    endoneof;
>0000D6CF: 29 02 
  
    oneof varid   = ME_RC_CONFIGURATION.MeKtEnabled,
>0000D6D1: 05 91 98 01 99 01 04 05 03 00 10 00 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x0198),
      help        = STRING_TOKEN(0x0199),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000D6E2: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000D6E9: 09 07 39 07 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = 0 | DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000D6F0: 09 07 A8 00 30 00 02 
    endoneof;
>0000D6F7: 29 02 

    grayoutif ideqval ME_RC_CONFIGURATION.MeHmrfpoLockEnabled == 0;
>0000D6F9: 19 82 
>0000D6FB: 12 06 FB 04 00 00 
    
      grayoutif ideqval ME_RC_CONFIGURATION.MeHeci1Enabled == 0;
>0000D701: 19 82 
>0000D703: 12 06 00 05 00 00 
        oneof varid   = ME_RC_CONFIGURATION.MeHeci1HideInMe,
>0000D709: 05 91 9A 01 9B 01 05 05 03 00 24 00 10 10 00 02 00 
          prompt      = STRING_TOKEN(0x019A),
          help        = STRING_TOKEN(0x019B),
          option text = STRING_TOKEN(0x0845),     value = 0, flags = 0 | RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000D71A: 09 07 45 08 30 00 00 
          option text = STRING_TOKEN(0x0868),    value = 1, flags = 0;
>0000D721: 09 07 68 08 00 00 01 
          option text = STRING_TOKEN(0x00A7), value = 2, flags = 0;
>0000D728: 09 07 A7 00 00 00 02 
        endoneof;
>0000D72F: 29 02 
      endif; 
>0000D731: 29 02 
      
      grayoutif ideqval ME_RC_CONFIGURATION.MeHeci2Enabled == 0;
>0000D733: 19 82 
>0000D735: 12 06 01 05 00 00 
        oneof varid   = ME_RC_CONFIGURATION.MeHeci2HideInMe,
>0000D73B: 05 91 9C 01 9D 01 06 05 03 00 25 00 10 10 00 02 00 
          prompt      = STRING_TOKEN(0x019C),
          help        = STRING_TOKEN(0x019D),
          option text = STRING_TOKEN(0x0845),     value = 0, flags = 0 | RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000D74C: 09 07 45 08 30 00 00 
          option text = STRING_TOKEN(0x0868),    value = 1, flags = 0;
>0000D753: 09 07 68 08 00 00 01 
          option text = STRING_TOKEN(0x00A7), value = 2, flags = 0;
>0000D75A: 09 07 A7 00 00 00 02 
        endoneof;
>0000D761: 29 02 
      endif; 
>0000D763: 29 02 
      
      grayoutif ideqval ME_RC_CONFIGURATION.MeHeci3Enabled == 0;
>0000D765: 19 82 
>0000D767: 12 06 02 05 00 00 
        oneof varid   = ME_RC_CONFIGURATION.MeHeci3HideInMe,
>0000D76D: 05 91 9E 01 9F 01 07 05 03 00 26 00 10 10 00 02 00 
          prompt      = STRING_TOKEN(0x019E),
          help        = STRING_TOKEN(0x019F),
          option text = STRING_TOKEN(0x0845),     value = 0, flags = 0 | RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000D77E: 09 07 45 08 30 00 00 
          option text = STRING_TOKEN(0x0868),    value = 1, flags = 0;
>0000D785: 09 07 68 08 00 00 01 
          option text = STRING_TOKEN(0x00A7), value = 2, flags = 0;
>0000D78C: 09 07 A7 00 00 00 02 
        endoneof;
>0000D793: 29 02 
      endif; 
>0000D795: 29 02 
      
    endif; 
>0000D797: 29 02 

    oneof varid   = ME_RC_CONFIGURATION.DisableD0I3SettingForHeci,
>0000D799: 05 91 A0 01 A1 01 08 05 03 00 11 00 00 10 00 01 00 
      prompt      = STRING_TOKEN(0x01A0),
      help        = STRING_TOKEN(0x01A1),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0 | DEFAULT | MANUFACTURING;
>0000D7AA: 09 07 38 07 30 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000D7B1: 09 07 39 07 00 00 01 
    endoneof;
>0000D7B8: 29 02 

    checkbox varid = ME_RC_CONFIGURATION.BreakRtcEnabled,
>0000D7BA: 06 8E E7 01 E8 01 09 05 03 00 30 00 10 00 
      prompt       = STRING_TOKEN(0x01E7),
      help         = STRING_TOKEN(0x01E8),
      flags        = 0 | RESET_REQUIRED,
      key          = 0,
    endcheckbox;
>0000D7C8: 29 02 

    oneof varid   = ME_RC_CONFIGURATION.CoreBiosDoneEnabled,
>0000D7CA: 05 91 42 01 43 01 0A 05 03 00 15 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0142),
      help        = STRING_TOKEN(0x0143),
      option text = STRING_TOKEN(0x0738), value = 0, flags = RESET_REQUIRED;
>0000D7DB: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000D7E2: 09 07 39 07 30 00 01 
    endoneof;
>0000D7E9: 29 02 

    grayoutif ideqval ME_RC_CONFIGURATION.DelayedAuthenticationModeEnabled == 0;
>0000D7EB: 19 82 
>0000D7ED: 12 06 4C 05 00 00 
      oneof varid   = ME_RC_CONFIGURATION.DelayedAuthenticationMode,
>0000D7F3: 05 91 ED 01 EE 01 0B 05 03 00 14 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x01ED),
        help        = STRING_TOKEN(0x01EE),
        option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000D804: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags = RESET_REQUIRED;
>0000D80B: 09 07 39 07 00 00 01 
      endoneof;
>0000D812: 29 02 
    endif; 
>0000D814: 29 02 

    subtitle text = STRING_TOKEN(0x00AA);
>0000D816: 02 87 AA 00 00 00 00 
>0000D81D: 29 02 

  endform; 
>0000D81F: 29 02 




  form formid = 0x5A,
>0000D821: 01 86 5A 00 75 01 
    title = STRING_TOKEN(0x0175);

    suppressif NOT ideqval ME_RC_CONFIGURATION.MeType == 0x01;
>0000D827: 0A 82 
>0000D829: 12 86 E9 04 01 00 
>0000D82F: 17 02 
>0000D831: 29 02 
      checkbox varid = ME_RC_CONFIGURATION.SpsIccClkOverride,
>0000D833: 06 8E 76 01 77 01 0C 05 03 00 31 00 10 00 
        prompt       = STRING_TOKEN(0x0176),
        help         = STRING_TOKEN(0x0177),
        flags        = 0 | RESET_REQUIRED,
        key          = 0,
      endcheckbox;
>0000D841: 29 02 
    
      grayoutif ideqval ME_RC_CONFIGURATION.SpsIccClkOverride == 0;
>0000D843: 19 82 
>0000D845: 12 06 0C 05 00 00 
        checkbox varid = ME_RC_CONFIGURATION.SpsIccClkSscSetting,
>0000D84B: 06 8E E5 01 E6 01 0D 05 03 00 32 00 10 00 
          prompt       = STRING_TOKEN(0x01E5),
          help         = STRING_TOKEN(0x01E6),
          flags        = 0 | RESET_REQUIRED, 
          key          = 0,
          default      = 0,
>0000D859: 5B 06 00 00 00 00 
        endcheckbox;
>0000D85F: 29 02 
      endif; 
>0000D861: 29 02 
    endif;
>0000D863: 29 02 
  endform; 
>0000D865: 29 02 




  form formid = 0x57,
>0000D867: 01 86 57 00 D0 01 
    title = STRING_TOKEN(0x01D0);
    
    checkbox varid   = ME_RC_CONFIGURATION.NmPwrOptBootOverride,
>0000D86D: 06 8E D1 01 D2 01 0E 05 03 00 33 00 10 00 
      prompt      = STRING_TOKEN(0x01D1),
      help        = STRING_TOKEN(0x01D2),
      flags       = 0 | RESET_REQUIRED,
      key         = 0,
    endcheckbox;
>0000D87B: 29 02 
  
    grayoutif ideqval ME_RC_CONFIGURATION.NmPwrOptBootOverride == 0;
>0000D87D: 19 82 
>0000D87F: 12 06 0E 05 00 00 
      oneof varid   = ME_RC_CONFIGURATION.NmPwrOptBoot,
>0000D885: 05 91 D3 01 D4 01 0F 05 03 00 28 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x01D3),
        help        = STRING_TOKEN(0x01D4),
        option text = STRING_TOKEN(0x01D6),  value = 0, flags = RESET_REQUIRED | DEFAULT | MANUFACTURING;
>0000D896: 09 07 D6 01 30 00 00 
        option text = STRING_TOKEN(0x01D5), value = 1, flags = RESET_REQUIRED;
>0000D89D: 09 07 D5 01 00 00 01 
      endoneof;
>0000D8A4: 29 02 
    endif;
>0000D8A6: 29 02 
  
    checkbox varid   = ME_RC_CONFIGURATION.NmCores2DisableOverride,
>0000D8A8: 06 8E D7 01 D8 01 10 05 03 00 34 00 10 00 
      prompt      = STRING_TOKEN(0x01D7),
      help        = STRING_TOKEN(0x01D8),
      flags       = 0 | RESET_REQUIRED,
      key         = 0,
    endcheckbox;
>0000D8B6: 29 02 
  
    grayoutif ideqval ME_RC_CONFIGURATION.NmCores2DisableOverride == 0;
>0000D8B8: 19 82 
>0000D8BA: 12 06 10 05 00 00 
      numeric varid   = ME_RC_CONFIGURATION.NmCores2Disable,
>0000D8C0: 07 91 D9 01 DA 01 11 05 03 00 29 00 10 20 00 7F 01 
        prompt  = STRING_TOKEN(0x01D9),
        help    = STRING_TOKEN(0x01DA),
        flags   = 0 | RESET_REQUIRED | DISPLAY_UINT_HEX,
        minimum = 0,
        maximum = 0x7F,
        step    = 1,
        default = 0, defaultstore = MyStandardDefault,
>0000D8D1: 5B 06 00 00 00 00 
        default = 0, defaultstore = MyManufactureDefault,
>0000D8D7: 5B 06 01 00 00 00 
      endnumeric;
>0000D8DD: 29 02 
    endif;
>0000D8DF: 29 02 
  
    checkbox varid   = ME_RC_CONFIGURATION.NmPowerMsmtOverride,
>0000D8E1: 06 8E DB 01 DC 01 12 05 03 00 35 00 10 00 
      prompt      = STRING_TOKEN(0x01DB),
      help        = STRING_TOKEN(0x01DC),
      flags       = 0 | RESET_REQUIRED,
      key         = 0,
    endcheckbox;
>0000D8EF: 29 02 
  
    grayoutif ideqval ME_RC_CONFIGURATION.NmPowerMsmtOverride == 0;
>0000D8F1: 19 82 
>0000D8F3: 12 06 12 05 00 00 
      oneof varid   = ME_RC_CONFIGURATION.NmPowerMsmtSupport,
>0000D8F9: 05 91 DD 01 DE 01 13 05 03 00 36 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x01DD),
        help        = STRING_TOKEN(0x01DE),
        option text = STRING_TOKEN(0x0738), value = 0, flags = 0 | RESET_REQUIRED | DEFAULT;
>0000D90A: 09 07 38 07 10 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = 0 | RESET_REQUIRED;
>0000D911: 09 07 39 07 00 00 01 
      endoneof;
>0000D918: 29 02 
    endif;
>0000D91A: 29 02 
  
    checkbox varid   = ME_RC_CONFIGURATION.NmHwChangeOverride,
>0000D91C: 06 8E E1 01 E2 01 14 05 03 00 37 00 10 00 
      prompt      = STRING_TOKEN(0x01E1),
      help        = STRING_TOKEN(0x01E2),
      flags       = 0 | RESET_REQUIRED,
      key         = 0,
    endcheckbox;
>0000D92A: 29 02 
  
    grayoutif ideqval ME_RC_CONFIGURATION.NmHwChangeOverride == 0;
>0000D92C: 19 82 
>0000D92E: 12 06 14 05 00 00 
      oneof varid   = ME_RC_CONFIGURATION.NmHwChangeStatus,
>0000D934: 05 91 E3 01 E4 01 15 05 03 00 38 00 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x01E3),
        help        = STRING_TOKEN(0x01E4),
        option text = STRING_TOKEN(0x00A1),  value = 0, flags = 0 | RESET_REQUIRED | DEFAULT;
>0000D945: 09 07 A1 00 10 00 00 
        option text = STRING_TOKEN(0x00A0), value = 1, flags = 0 | RESET_REQUIRED;
>0000D94C: 09 07 A0 00 00 00 01 
      endoneof;
>0000D953: 29 02 
    endif;
>0000D955: 29 02 
  
    checkbox varid   = ME_RC_CONFIGURATION.NmPtuLoadOverride,
>0000D957: 06 8E DF 01 E0 01 16 05 03 00 39 00 10 00 
      prompt      = STRING_TOKEN(0x01DF),
      help        = STRING_TOKEN(0x01E0),
      flags       = 0 | RESET_REQUIRED,
      key         = 0,
    endcheckbox;
>0000D965: 29 02 
  
  endform; 
>0000D967: 29 02 
#line 620 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSpsSetup.hfr"

endif; 
>0000D969: 29 02 
#line 623 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeSpsSetup.hfr"
#line 1043 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 1044 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"

  #line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeDfxSetup.hfr"































#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\MeTypeDefs.h"






























#line 32 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\MeTypeDefs.h"




#line 33 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeDfxSetup.hfr"
#line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Config/MeConfig.h"






























#line 32 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\ServerSiliconPkg\\Include\\Me\\Config/MeConfig.h"




#line 34 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeDfxSetup.hfr"

suppressif NOT ideqval ME_RC_CONFIGURATION.MeType == 0x0F;
>0000D96B: 0A 82 
>0000D96D: 12 86 E9 04 0F 00 
>0000D973: 17 02 
>0000D975: 29 02 




  form formid = 0x58,
>0000D977: 01 86 58 00 E6 00 
    title = STRING_TOKEN(0x00E6);

    goto 0x59,
>0000D97D: 0F 0F E7 00 E8 00 17 05 00 00 FF FF 00 59 00 
      prompt = STRING_TOKEN(0x00E7),
      help   = STRING_TOKEN(0x00E8);

  endform; 
>0000D98C: 29 02 




  form formid = 0x59,
>0000D98E: 01 86 59 00 E9 00 
    title = STRING_TOKEN(0x00E9);

    
    
    oneof varid   = ME_RC_CONFIGURATION.HsioMessagingEnabled,
>0000D994: 05 91 7A 01 7B 01 18 05 03 00 0A 00 00 10 00 01 00 
      prompt   = STRING_TOKEN(0x017A),
      help     = STRING_TOKEN(0x017B),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0 | DEFAULT | MANUFACTURING;
>0000D9A5: 09 07 38 07 30 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000D9AC: 09 07 39 07 00 00 01 
    endoneof;
>0000D9B3: 29 02 

    checkbox varid = ME_RC_CONFIGURATION.MeDidEnabled,
>0000D9B5: 06 8E 7C 01 7D 01 19 05 03 00 08 00 10 03 
      prompt       = STRING_TOKEN(0x017C),
      help         = STRING_TOKEN(0x017D),
      
      
      flags        = CHECKBOX_DEFAULT | CHECKBOX_DEFAULT_MFG | RESET_REQUIRED,
      key          = 0,
    endcheckbox;
>0000D9C3: 29 02 
  
    grayoutif ideqval ME_RC_CONFIGURATION.MeDidEnabled == 0;
>0000D9C5: 19 82 
>0000D9C7: 12 06 19 05 00 00 
      oneof varid   = ME_RC_CONFIGURATION.MeDidInitStat,
>0000D9CD: 05 91 7E 01 7F 01 1A 05 03 00 09 00 10 10 00 03 00 
        prompt      = STRING_TOKEN(0x017E),
        help        = STRING_TOKEN(0x017F),
        option text = STRING_TOKEN(0x0180), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000D9DE: 09 07 80 01 30 00 00 
        option text = STRING_TOKEN(0x0181), value = 1, flags = RESET_REQUIRED;
>0000D9E5: 09 07 81 01 00 00 01 
        option text = STRING_TOKEN(0x0182), value = 2, flags = RESET_REQUIRED;
>0000D9EC: 09 07 82 01 00 00 02 
        option text = STRING_TOKEN(0x0183), value = 3, flags = RESET_REQUIRED;
>0000D9F3: 09 07 83 01 00 00 03 
      endoneof;
>0000D9FA: 29 02 
    endif;
>0000D9FC: 29 02 

    oneof varid   = ME_RC_CONFIGURATION.MeHeci1Enabled,
>0000D9FE: 05 91 90 01 91 01 1B 05 03 00 0C 00 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x0190),
      help        = STRING_TOKEN(0x0191),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000DA0F: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000DA16: 09 07 39 07 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = 0 | DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000DA1D: 09 07 A8 00 30 00 02 
    endoneof;
>0000DA24: 29 02 
  
    oneof varid   = ME_RC_CONFIGURATION.MeHeci2Enabled,
>0000DA26: 05 91 92 01 93 01 1C 05 03 00 0D 00 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x0192),
      help        = STRING_TOKEN(0x0193),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000DA37: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000DA3E: 09 07 39 07 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = 0 | DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000DA45: 09 07 A8 00 30 00 02 
    endoneof;
>0000DA4C: 29 02 
  
    oneof varid   = ME_RC_CONFIGURATION.MeHeci3Enabled,
>0000DA4E: 05 91 94 01 95 01 1D 05 03 00 0E 00 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x0194),
      help        = STRING_TOKEN(0x0195),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000DA5F: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000DA66: 09 07 39 07 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = 0 | DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000DA6D: 09 07 A8 00 30 00 02 
    endoneof;
>0000DA74: 29 02 
  
    oneof varid   = ME_RC_CONFIGURATION.MeIderEnabled,
>0000DA76: 05 91 96 01 97 01 1E 05 03 00 0F 00 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x0196),
      help        = STRING_TOKEN(0x0197),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000DA87: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000DA8E: 09 07 39 07 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = 0 | DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000DA95: 09 07 A8 00 30 00 02 
    endoneof;
>0000DA9C: 29 02 
  
    oneof varid   = ME_RC_CONFIGURATION.MeKtEnabled,
>0000DA9E: 05 91 98 01 99 01 1F 05 03 00 10 00 10 10 00 02 00 
      prompt      = STRING_TOKEN(0x0198),
      help        = STRING_TOKEN(0x0199),
      option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000DAAF: 09 07 38 07 00 00 00 
      option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000DAB6: 09 07 39 07 00 00 01 
      option text = STRING_TOKEN(0x00A8),     value = 2, flags = 0 | DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000DABD: 09 07 A8 00 30 00 02 
    endoneof;
>0000DAC4: 29 02 
    
  endform; 
>0000DAC6: 29 02 

endif; 
>0000DAC8: 29 02 
#line 128 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\MeDfxSetup.hfr"
#line 1046 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"

#line 1048 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"


  #line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\IeConfig.hfr"







































form formid = 0x22,
>0000DACA: 01 86 22 00 C6 00 
  title   = STRING_TOKEN(0x00C6);
  subtitle text = STRING_TOKEN(0x00C7);
>0000DAD0: 02 87 C7 00 00 00 00 
>0000DAD7: 29 02 

  suppressif TRUE;
>0000DAD9: 0A 82 
>0000DADB: 46 02 
      checkbox varid  = IE_RC_CONFIGURATION.IeDisabledInSoftStraps,
>0000DADD: 06 8E F7 02 F7 02 20 05 04 00 09 00 10 03 
        prompt   = STRING_TOKEN(0x02F7),
        help     = STRING_TOKEN(0x02F7),
        
        
        flags        = CHECKBOX_DEFAULT | CHECKBOX_DEFAULT_MFG | RESET_REQUIRED,
        key          = 0,
      endcheckbox;
>0000DAEB: 29 02 
      checkbox varid  = IE_RC_CONFIGURATION.DfxIe,
>0000DAED: 06 8E F7 02 F7 02 21 05 04 00 0A 00 10 00 
        prompt   = STRING_TOKEN(0x02F7),
        help     = STRING_TOKEN(0x02F7),
        
        
        flags        = 0 | RESET_REQUIRED,
        key          = 0,
      endcheckbox;
>0000DAFB: 29 02 
  endif; 
>0000DAFD: 29 02 

  suppressif NOT ideqval IE_RC_CONFIGURATION.IeDisabledInSoftStraps == 0;
>0000DAFF: 0A 82 
>0000DB01: 12 86 20 05 00 00 
>0000DB07: 17 02 
>0000DB09: 29 02 
    subtitle text = STRING_TOKEN(0x00AA);
>0000DB0B: 02 87 AA 00 00 00 00 
>0000DB12: 29 02 
    subtitle text = STRING_TOKEN(0x00AA);
>0000DB14: 02 87 AA 00 00 00 00 
>0000DB1B: 29 02 
    subtitle text = STRING_TOKEN(0x00D9);
>0000DB1D: 02 87 D9 00 00 00 00 
>0000DB24: 29 02 
  endif; 
>0000DB26: 29 02 

  suppressif ideqval IE_RC_CONFIGURATION.IeDisabledInSoftStraps == 0;
>0000DB28: 0A 82 
>0000DB2A: 12 06 20 05 00 00 

    
    
    
    text
>0000DB30: 03 08 C9 00 C8 00 CA 00 
      help  = STRING_TOKEN(0x00C8),
      text  = STRING_TOKEN(0x00C9),
      text  = STRING_TOKEN(0x00CA),
      flags = 0,
      key   = 0;

    suppressif ideqval IE_RC_CONFIGURATION.DfxIe == 0;
>0000DB38: 0A 82 
>0000DB3A: 12 06 21 05 00 00 
      subtitle text = STRING_TOKEN(0x00AA);
>0000DB40: 02 87 AA 00 00 00 00 
>0000DB47: 29 02 
      subtitle text = STRING_TOKEN(0x00AA);
>0000DB49: 02 87 AA 00 00 00 00 
>0000DB50: 29 02 
      subtitle text = STRING_TOKEN(0x00DA);
>0000DB52: 02 87 DA 00 00 00 00 
>0000DB59: 29 02 

    endif; 
>0000DB5B: 29 02 
    grayoutif ideqval IE_RC_CONFIGURATION.DfxIe == 1;
>0000DB5D: 19 82 
>0000DB5F: 12 06 21 05 01 00 
      oneof varid   = IE_RC_CONFIGURATION.IeHeci1Enabled,
>0000DB65: 05 91 CB 00 CC 00 22 05 04 00 04 00 00 10 00 01 00 
        prompt      = STRING_TOKEN(0x00CB),
        help        = STRING_TOKEN(0x00CC),
        option text = STRING_TOKEN(0x0738), value = 0, flags = 0 | DEFAULT;
>0000DB76: 09 07 38 07 10 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000DB7D: 09 07 39 07 00 00 01 
      endoneof;
>0000DB84: 29 02 

      oneof varid   = IE_RC_CONFIGURATION.IeHeci2Enabled,
>0000DB86: 05 91 CD 00 CE 00 23 05 04 00 05 00 00 10 00 01 00 
        prompt      = STRING_TOKEN(0x00CD),
        help        = STRING_TOKEN(0x00CE),
        option text = STRING_TOKEN(0x0738), value = 0, flags = 0 | DEFAULT;
>0000DB97: 09 07 38 07 10 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000DB9E: 09 07 39 07 00 00 01 
      endoneof;
>0000DBA5: 29 02 

      oneof varid   = IE_RC_CONFIGURATION.IeHeci3Enabled,
>0000DBA7: 05 91 CF 00 D0 00 24 05 04 00 06 00 00 10 00 01 00 
        prompt      = STRING_TOKEN(0x00CF),
        help        = STRING_TOKEN(0x00D0),
        option text = STRING_TOKEN(0x0738), value = 0, flags = 0 | DEFAULT;
>0000DBB8: 09 07 38 07 10 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000DBBF: 09 07 39 07 00 00 01 
      endoneof;
>0000DBC6: 29 02 

      oneof varid   = IE_RC_CONFIGURATION.IeIderEnabled,
>0000DBC8: 05 91 D1 00 D2 00 25 05 04 00 07 00 00 10 00 01 00 
        prompt      = STRING_TOKEN(0x00D1),
        help        = STRING_TOKEN(0x00D2),
        option text = STRING_TOKEN(0x0738), value = 0, flags = 0 | DEFAULT;
>0000DBD9: 09 07 38 07 10 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000DBE0: 09 07 39 07 00 00 01 
      endoneof;
>0000DBE7: 29 02 

      oneof varid   = IE_RC_CONFIGURATION.IeKtEnabled,
>0000DBE9: 05 91 D3 00 D4 00 26 05 04 00 08 00 00 10 00 01 00 
        prompt      = STRING_TOKEN(0x00D3),
        help        = STRING_TOKEN(0x00D4),
        option text = STRING_TOKEN(0x0738), value = 0, flags = 0 | DEFAULT;
>0000DBFA: 09 07 38 07 10 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000DC01: 09 07 39 07 00 00 01 
      endoneof;
>0000DC08: 29 02 


    endif; 
>0000DC0A: 29 02 

    suppressif ideqval IE_RC_CONFIGURATION.IeUmaSupported == 0;
>0000DC0C: 0A 82 
>0000DC0E: 12 06 4B 05 00 00 
      oneof varid   = IE_RC_CONFIGURATION.IeDidEnabled,
>0000DC14: 05 91 DB 00 DC 00 27 05 04 00 0C 00 00 10 00 01 00 
        prompt       = STRING_TOKEN(0x00DB),
        help         = STRING_TOKEN(0x00DC),
        option text = STRING_TOKEN(0x0738), value = 0, flags = 0;
>0000DC25: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = 0 | DEFAULT;
>0000DC2C: 09 07 39 07 10 00 01 
      endoneof;
>0000DC33: 29 02 

      grayoutif ideqval IE_RC_CONFIGURATION.IeDidEnabled == 0;
>0000DC35: 19 82 
>0000DC37: 12 06 27 05 00 00 
        oneof varid   = IE_RC_CONFIGURATION.IeUmaRequested,
>0000DC3D: 05 91 DD 00 DE 00 28 05 04 00 0D 00 00 10 00 20 00 
          prompt       = STRING_TOKEN(0x00DD),
          help         = STRING_TOKEN(0x00DE),
          option text = STRING_TOKEN(0x00DF),  value = 0, flags = 0 | DEFAULT;
>0000DC4E: 09 07 DF 00 10 00 00 
          option text = STRING_TOKEN(0x00E0), value = 16, flags = 0;
>0000DC55: 09 07 E0 00 00 00 10 
          option text = STRING_TOKEN(0x00E1), value = 32, flags = 0;
>0000DC5C: 09 07 E1 00 00 00 20 
        endoneof;
>0000DC63: 29 02 
        oneof varid   = IE_RC_CONFIGURATION.IePassUmaBaseAddress,
>0000DC65: 05 91 E2 00 E3 00 29 05 04 00 0E 00 00 10 00 01 00 
          prompt      = STRING_TOKEN(0x00E2),
          help        = STRING_TOKEN(0x00E3),
          option text = STRING_TOKEN(0x0738), value = 0, flags = 0 | DEFAULT;
>0000DC76: 09 07 38 07 10 00 00 
          option text = STRING_TOKEN(0x0739),  value = 1, flags = 0;
>0000DC7D: 09 07 39 07 00 00 01 
        endoneof;
>0000DC84: 29 02 
      endif; 
>0000DC86: 29 02 
    endif; 
>0000DC88: 29 02 

    numeric varid = IE_RC_CONFIGURATION.SubsystemVendorId,
>0000DC8A: 07 94 D5 00 D6 00 2A 05 04 00 00 00 10 21 00 00 FF FF 01 00 
      prompt      = STRING_TOKEN(0x00D5),
      help        = STRING_TOKEN(0x00D6),
      flags       = 0 | RESET_REQUIRED | DISPLAY_UINT_HEX,
      minimum     = 0,
      maximum     = 0xFFFF,
      step        = 1,
      default     = 0x8086, defaultstore = MyStandardDefault, 		
>0000DC9E: 5B 07 00 00 01 86 80 
      default     = 0x8086, defaultstore = MyManufactureDefault,
>0000DCA5: 5B 07 01 00 01 86 80 
    endnumeric;
>0000DCAC: 29 02 
 
    numeric varid = IE_RC_CONFIGURATION.SubsystemId,
>0000DCAE: 07 94 D7 00 D8 00 2B 05 04 00 02 00 10 21 00 00 FF FF 01 00 
      prompt      = STRING_TOKEN(0x00D7),
      help        = STRING_TOKEN(0x00D8),
      flags       = 0 | RESET_REQUIRED | DISPLAY_UINT_HEX,
      minimum     = 0,
      maximum     = 0xFFFF,
      step        = 1,
      default     = 0x7270, defaultstore = MyStandardDefault, 		
>0000DCC2: 5B 07 00 00 01 70 72 
      default     = 0x7270, defaultstore = MyManufactureDefault,
>0000DCC9: 5B 07 01 00 01 70 72 
    endnumeric;
>0000DCD0: 29 02 
    
  endif; 
>0000DCD2: 29 02 

endform;
>0000DCD4: 29 02 

#line 178 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\IeConfig.hfr"

#line 1051 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
#line 1052 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"

  #line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\BootAllOptions.hfr"



























  form formid = 0x3D1,
>0000DCD6: 01 86 D1 03 69 08 
  
    title    = STRING_TOKEN(0x0869);
    subtitle text = STRING_TOKEN(0x0869);
>0000DCDC: 02 87 69 08 00 00 00 
>0000DCE3: 29 02 
    subtitle text = STRING_TOKEN(0x0762);
>0000DCE5: 02 87 62 07 00 00 00 
>0000DCEC: 29 02 
  
      oneof varid = SYSTEM_CONFIGURATION.BootAllOptions,
>0000DCEE: 05 91 69 08 6A 08 2C 05 01 00 01 01 10 10 00 01 00 
        prompt  = STRING_TOKEN(0x0869),
        help    = STRING_TOKEN(0x086A),
        option text = STRING_TOKEN(0x0738),           value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
>0000DCFF: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739),            value = 1, flags =RESET_REQUIRED;
>0000DD06: 09 07 39 07 00 00 01 
    endoneof;
>0000DD0D: 29 02 

 
endform;
>0000DD0F: 29 02 


#line 1054 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"
  #line 1 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\whitleyrppkg\\platform\\dxe\\setup\\Overclocking.hfr"



























  form formid = 0x3F0,
>0000DD11: 01 86 F0 03 EF 01 

    title = STRING_TOKEN(0x01EF);
    subtitle text = STRING_TOKEN(0x01EF);
>0000DD17: 02 87 EF 01 00 00 00 
>0000DD1E: 29 02 
    subtitle text = STRING_TOKEN(0x0762);
>0000DD20: 02 87 62 07 00 00 00 
>0000DD27: 29 02 


     oneof varid   = SYSTEM_CONFIGURATION.OverclockingSupport,
>0000DD29: 05 91 F0 01 F1 01 2D 05 01 00 05 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x01F0),
        help        = STRING_TOKEN(0x01F1),
        option text = STRING_TOKEN(0x0738), value = 0, flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
>0000DD3A: 09 07 38 07 30 00 00 
        option text = STRING_TOKEN(0x0739), value = 1, flags =  RESET_REQUIRED;
>0000DD41: 09 07 39 07 00 00 01 
      endoneof;
>0000DD48: 29 02 

    suppressif ideqval SYSTEM_CONFIGURATION.OverclockingSupport == 0;
>0000DD4A: 0A 82 
>0000DD4C: 12 06 2D 05 00 00 






      oneof varid   = SYSTEM_CONFIGURATION.FilterPll,
>0000DD52: 05 91 F2 01 F3 01 2E 05 01 00 04 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x01F2),
        help        = STRING_TOKEN(0x01F3),
        option text = STRING_TOKEN(0x00A7), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000DD63: 09 07 A7 00 30 00 00 
        option text = STRING_TOKEN(0x00A6), value = 1, flags = RESET_REQUIRED;
>0000DD6A: 09 07 A6 00 00 00 01 
      endoneof;
>0000DD71: 29 02 

      goto 0x3F6,
>0000DD73: 0F 0F 5F 02 60 02 2F 05 00 00 FF FF 00 F6 03 
      prompt  = STRING_TOKEN(0x025F),
      help    = STRING_TOKEN(0x0260);

      goto 0x3F3,
>0000DD82: 0F 0F 61 02 62 02 30 05 00 00 FF FF 00 F3 03 
      prompt  = STRING_TOKEN(0x0261),
      help    = STRING_TOKEN(0x0262);

      goto 0x3F4,
>0000DD91: 0F 0F 6D 02 6E 02 31 05 00 00 FF FF 00 F4 03 
      prompt  = STRING_TOKEN(0x026D),
      help    = STRING_TOKEN(0x026E);

      goto 0x3F5,
>0000DDA0: 0F 0F 75 02 76 02 32 05 00 00 FF FF 00 F5 03 
      prompt  = STRING_TOKEN(0x0275),
      help    = STRING_TOKEN(0x0276);

    endif;
>0000DDAF: 29 02 

    endform;
>0000DDB1: 29 02 

    form formid = 0x3F6,
>0000DDB3: 01 86 F6 03 5F 02 
    title = STRING_TOKEN(0x025F);

      numeric varid = SYSTEM_CONFIGURATION.CoreMaxOcRatio,
>0000DDB9: 07 91 F6 01 F7 01 33 05 01 00 06 01 10 10 00 50 01 
        prompt  = STRING_TOKEN (0x01F6),
        help    = STRING_TOKEN (0x01F7),
        flags   = RESET_REQUIRED,
        minimum = 0,
        maximum = 80,
        step    = 1,
        default = 0, defaultstore = MyStandardDefault,
>0000DDCA: 5B 06 00 00 00 00 
        default = 0, defaultstore = MyManufactureDefault,
>0000DDD0: 5B 06 01 00 00 00 
      endnumeric;
>0000DDD6: 29 02 

      oneof varid   = SYSTEM_CONFIGURATION.CoreVoltageMode,
>0000DDD8: 05 91 F8 01 F9 01 34 05 01 00 07 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x01F8),
        help        = STRING_TOKEN(0x01F9),
        option text = STRING_TOKEN(0x0200), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000DDE9: 09 07 00 02 30 00 00 
        option text = STRING_TOKEN(0x0201), value = 1, flags = RESET_REQUIRED;
>0000DDF0: 09 07 01 02 00 00 01 
      endoneof;
>0000DDF7: 29 02 

      suppressif ideqval SYSTEM_CONFIGURATION.CoreVoltageMode == 0x0;
>0000DDF9: 0A 82 
>0000DDFB: 12 06 34 05 00 00 
        numeric varid = SYSTEM_CONFIGURATION.CoreVoltageOverride,
>0000DE01: 07 94 FA 01 FB 01 35 05 01 00 08 01 10 11 00 00 D0 07 01 00 
          prompt  = STRING_TOKEN (0x01FA),
          help    = STRING_TOKEN (0x01FB),
          flags   = RESET_REQUIRED,
          minimum = 0,
          maximum = 2000,
          step    = 1,
          default = 0, defaultstore = MyStandardDefault,
>0000DE15: 5B 07 00 00 01 00 00 
          default = 0, defaultstore = MyManufactureDefault,
>0000DE1C: 5B 07 01 00 01 00 00 
        endnumeric;
>0000DE23: 29 02 
      endif;
>0000DE25: 29 02 

      suppressif ideqval SYSTEM_CONFIGURATION.CoreVoltageMode == 0x1;
>0000DE27: 0A 82 
>0000DE29: 12 06 34 05 01 00 
        numeric varid = SYSTEM_CONFIGURATION.CoreExtraTurboVoltage,
>0000DE2F: 07 94 FE 01 FF 01 36 05 01 00 0D 01 10 11 00 00 D0 07 01 00 
          prompt  = STRING_TOKEN (0x01FE),
          help    = STRING_TOKEN (0x01FF),
          flags   = RESET_REQUIRED,
          minimum = 0,
          maximum = 2000,
          step    = 1,
          default = 0, defaultstore = MyStandardDefault,
>0000DE43: 5B 07 00 00 01 00 00 
          default = 0, defaultstore = MyManufactureDefault,
>0000DE4A: 5B 07 01 00 01 00 00 
        endnumeric;
>0000DE51: 29 02 
      endif;
>0000DE53: 29 02 

      numeric varid = SYSTEM_CONFIGURATION.CoreVoltageOffset,
>0000DE55: 07 94 FC 01 FD 01 37 05 01 00 0A 01 10 11 00 00 E8 03 01 00 
        prompt  = STRING_TOKEN (0x01FC),
        help    = STRING_TOKEN (0x01FD),
        flags   = RESET_REQUIRED,
        minimum = 0,
        maximum = 1000,
        step    = 1,
        default = 0, defaultstore = MyStandardDefault,
>0000DE69: 5B 07 00 00 01 00 00 
        default = 0, defaultstore = MyManufactureDefault,
>0000DE70: 5B 07 01 00 01 00 00 
      endnumeric;
>0000DE77: 29 02 

      oneof varid   = SYSTEM_CONFIGURATION.CoreVoltageOffsetPrefix,
>0000DE79: 05 91 06 02 07 02 38 05 01 00 0C 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0206),
        help        = STRING_TOKEN(0x0207),
        option text = STRING_TOKEN(0x0202),  value = 0, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000DE8A: 09 07 02 02 30 00 00 
        option text = STRING_TOKEN(0x0203),  value = 1, flags = RESET_REQUIRED;
>0000DE91: 09 07 03 02 00 00 01 
      endoneof;
>0000DE98: 29 02 
    endform;
>0000DE9A: 29 02 


     form formid = 0x3F3,
>0000DE9C: 01 86 F3 03 61 02 
       title = STRING_TOKEN(0x0261);

       numeric varid = SYSTEM_CONFIGURATION.ClrMaxOcRatio,
>0000DEA2: 07 91 63 02 64 02 39 05 01 00 12 01 10 10 00 50 01 
         prompt  = STRING_TOKEN (0x0263),
         help    = STRING_TOKEN (0x0264),
         flags   = RESET_REQUIRED,
         minimum = 0,
         maximum = 80,
         step    = 1,
         default = 0, defaultstore = MyStandardDefault,
>0000DEB3: 5B 06 00 00 00 00 
         default = 0, defaultstore = MyManufactureDefault,
>0000DEB9: 5B 06 01 00 00 00 
       endnumeric;
>0000DEBF: 29 02 

        oneof varid   = SYSTEM_CONFIGURATION.ClrVoltageMode,
>0000DEC1: 05 91 65 02 66 02 3A 05 01 00 13 01 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0265),
          help        = STRING_TOKEN(0x0266),
          option text = STRING_TOKEN(0x0200), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000DED2: 09 07 00 02 30 00 00 
          option text = STRING_TOKEN(0x0201), value = 1, flags = RESET_REQUIRED;
>0000DED9: 09 07 01 02 00 00 01 
        endoneof;
>0000DEE0: 29 02 

        suppressif ideqval SYSTEM_CONFIGURATION.ClrVoltageMode == 0;
>0000DEE2: 0A 82 
>0000DEE4: 12 06 3A 05 00 00 
          numeric varid = SYSTEM_CONFIGURATION.ClrVoltageOverride,
>0000DEEA: 07 94 67 02 68 02 3B 05 01 00 14 01 10 11 00 00 D0 07 01 00 
            prompt  = STRING_TOKEN (0x0267),
            help    = STRING_TOKEN (0x0268),
            flags   = RESET_REQUIRED,
            minimum = 0,
            maximum = 2000,
            step    = 1,
            default = 0, defaultstore = MyStandardDefault,
>0000DEFE: 5B 07 00 00 01 00 00 
            default = 0, defaultstore = MyManufactureDefault,
>0000DF05: 5B 07 01 00 01 00 00 
          endnumeric;
>0000DF0C: 29 02 
        endif;
>0000DF0E: 29 02 

        suppressif ideqval SYSTEM_CONFIGURATION.ClrVoltageMode == 1;
>0000DF10: 0A 82 
>0000DF12: 12 06 3A 05 01 00 
          numeric varid = SYSTEM_CONFIGURATION.ClrExtraTurboVoltage,
>0000DF18: 07 94 6B 02 6C 02 3C 05 01 00 19 01 10 11 00 00 D0 07 01 00 
            prompt  = STRING_TOKEN (0x026B),
            help    = STRING_TOKEN (0x026C),
            flags   = RESET_REQUIRED,
            minimum = 0,
            maximum = 2000,
            step    = 1,
            default = 0, defaultstore = MyStandardDefault,
>0000DF2C: 5B 07 00 00 01 00 00 
            default = 0, defaultstore = MyManufactureDefault,
>0000DF33: 5B 07 01 00 01 00 00 
          endnumeric;
>0000DF3A: 29 02 
        endif;
>0000DF3C: 29 02 

        numeric varid = SYSTEM_CONFIGURATION.ClrVoltageOffset,
>0000DF3E: 07 94 69 02 6A 02 3D 05 01 00 16 01 10 11 00 00 E8 03 01 00 
          prompt  = STRING_TOKEN (0x0269),
          help    = STRING_TOKEN (0x026A),
          flags   = RESET_REQUIRED,
          minimum = 0,
          maximum = 1000,
          step    = 1,
          default = 0, defaultstore = MyStandardDefault,
>0000DF52: 5B 07 00 00 01 00 00 
          default = 0, defaultstore = MyManufactureDefault,
>0000DF59: 5B 07 01 00 01 00 00 
        endnumeric;
>0000DF60: 29 02 

        oneof varid   = SYSTEM_CONFIGURATION.ClrVoltageOffsetPrefix,
>0000DF62: 05 91 04 02 05 02 3E 05 01 00 18 01 10 10 00 01 00 
          prompt      = STRING_TOKEN(0x0204),
          help        = STRING_TOKEN(0x0205),
          option text = STRING_TOKEN(0x0202),  value = 0, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000DF73: 09 07 02 02 30 00 00 
          option text = STRING_TOKEN(0x0203),  value = 1, flags = RESET_REQUIRED;
>0000DF7A: 09 07 03 02 00 00 01 
        endoneof;
>0000DF81: 29 02 

    endform;
>0000DF83: 29 02 

    form formid = 0x3F4,
>0000DF85: 01 86 F4 03 6D 02 
      title = STRING_TOKEN(0x026D);

       numeric varid = SYSTEM_CONFIGURATION.UncoreVoltageOffset,
>0000DF8B: 07 94 6F 02 70 02 3F 05 01 00 1B 01 10 11 00 00 E8 03 01 00 
         prompt  = STRING_TOKEN (0x026F),
         help    = STRING_TOKEN (0x0270),
         flags   = RESET_REQUIRED,
         minimum = 0,
         maximum = 1000,
         step    = 1,
         default = 0, defaultstore = MyStandardDefault,
>0000DF9F: 5B 07 00 00 01 00 00 
         default = 0, defaultstore = MyManufactureDefault,
>0000DFA6: 5B 07 01 00 01 00 00 
       endnumeric;
>0000DFAD: 29 02 

      oneof varid   = SYSTEM_CONFIGURATION.UncoreVoltageOffsetPrefix,
>0000DFAF: 05 91 08 02 09 02 40 05 01 00 1D 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0208),
        help        = STRING_TOKEN(0x0209),
        option text = STRING_TOKEN(0x0202),  value = 0, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000DFC0: 09 07 02 02 30 00 00 
        option text = STRING_TOKEN(0x0203),  value = 1, flags = RESET_REQUIRED;
>0000DFC7: 09 07 03 02 00 00 01 
      endoneof;
>0000DFCE: 29 02 

     numeric varid = SYSTEM_CONFIGURATION.IoaVoltageOffset,
>0000DFD0: 07 94 71 02 72 02 41 05 01 00 1E 01 10 11 00 00 E8 03 01 00 
       prompt  = STRING_TOKEN (0x0271),
       help    = STRING_TOKEN (0x0272),
       flags   = RESET_REQUIRED,
       minimum = 0,
       maximum = 1000,
       step    = 1,
       default = 0, defaultstore = MyStandardDefault,
>0000DFE4: 5B 07 00 00 01 00 00 
       default = 0, defaultstore = MyManufactureDefault,
>0000DFEB: 5B 07 01 00 01 00 00 
     endnumeric;
>0000DFF2: 29 02 

    oneof varid   = SYSTEM_CONFIGURATION.IoaVoltageOffsetPrefix,
>0000DFF4: 05 91 0A 02 0B 02 42 05 01 00 20 01 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x020A),
      help        = STRING_TOKEN(0x020B),
      option text = STRING_TOKEN(0x0202),  value = 0, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000E005: 09 07 02 02 30 00 00 
      option text = STRING_TOKEN(0x0203),  value = 1, flags = RESET_REQUIRED;
>0000E00C: 09 07 03 02 00 00 01 
    endoneof;
>0000E013: 29 02 

     numeric varid = SYSTEM_CONFIGURATION.IodVoltageOffset,
>0000E015: 07 94 73 02 74 02 43 05 01 00 21 01 10 11 00 00 E8 03 01 00 
       prompt  = STRING_TOKEN (0x0273),
       help    = STRING_TOKEN (0x0274),
       flags   = RESET_REQUIRED,
       minimum = 0,
       maximum = 1000,
       step    = 1,
       default = 0, defaultstore = MyStandardDefault,
>0000E029: 5B 07 00 00 01 00 00 
       default = 0, defaultstore = MyManufactureDefault,
>0000E030: 5B 07 01 00 01 00 00 
     endnumeric;
>0000E037: 29 02 

    oneof varid   = SYSTEM_CONFIGURATION.IodVoltageOffsetPrefix,
>0000E039: 05 91 0C 02 0D 02 44 05 01 00 23 01 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x020C),
      help        = STRING_TOKEN(0x020D),
      option text = STRING_TOKEN(0x0202),  value = 0, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000E04A: 09 07 02 02 30 00 00 
      option text = STRING_TOKEN(0x0203),  value = 1, flags = RESET_REQUIRED;
>0000E051: 09 07 03 02 00 00 01 
    endoneof;
>0000E058: 29 02 

    oneof varid   = SYSTEM_CONFIGURATION.VccIoVoltage,
>0000E05A: 05 91 B5 02 B6 02 45 05 01 00 31 01 10 10 00 3F 00 
      prompt      = STRING_TOKEN(0x02B5),
      help        = STRING_TOKEN(0x02B6),
      option text = STRING_TOKEN(0x02B7),  value = 0x00, flags =  DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000E06B: 09 07 B7 02 30 00 00 
      option text = STRING_TOKEN(0x02B8),  value = 0x01, flags = RESET_REQUIRED;
>0000E072: 09 07 B8 02 00 00 01 
      option text = STRING_TOKEN(0x02B9),  value = 0x02, flags = RESET_REQUIRED;
>0000E079: 09 07 B9 02 00 00 02 
      option text = STRING_TOKEN(0x02BA),  value = 0x03, flags = RESET_REQUIRED;
>0000E080: 09 07 BA 02 00 00 03 
      option text = STRING_TOKEN(0x02BB),  value = 0x04, flags = RESET_REQUIRED;
>0000E087: 09 07 BB 02 00 00 04 
      option text = STRING_TOKEN(0x02BC),  value = 0x05, flags = RESET_REQUIRED;
>0000E08E: 09 07 BC 02 00 00 05 
      option text = STRING_TOKEN(0x02BD),  value = 0x06, flags = RESET_REQUIRED;
>0000E095: 09 07 BD 02 00 00 06 
      option text = STRING_TOKEN(0x02BE),  value = 0x07, flags = RESET_REQUIRED;
>0000E09C: 09 07 BE 02 00 00 07 
      option text = STRING_TOKEN(0x02BF),  value = 0x08, flags = RESET_REQUIRED;
>0000E0A3: 09 07 BF 02 00 00 08 
      option text = STRING_TOKEN(0x02C0),  value = 0x09, flags = RESET_REQUIRED;
>0000E0AA: 09 07 C0 02 00 00 09 
      option text = STRING_TOKEN(0x02C1),  value = 0x0A, flags = RESET_REQUIRED;
>0000E0B1: 09 07 C1 02 00 00 0A 
      option text = STRING_TOKEN(0x02C2),  value = 0x0B, flags = RESET_REQUIRED;
>0000E0B8: 09 07 C2 02 00 00 0B 
      option text = STRING_TOKEN(0x02C3),  value = 0x0C, flags = RESET_REQUIRED;
>0000E0BF: 09 07 C3 02 00 00 0C 
      option text = STRING_TOKEN(0x02C4),  value = 0x0D, flags = RESET_REQUIRED;
>0000E0C6: 09 07 C4 02 00 00 0D 
      option text = STRING_TOKEN(0x02C5),  value = 0x0E, flags = RESET_REQUIRED;
>0000E0CD: 09 07 C5 02 00 00 0E 
      option text = STRING_TOKEN(0x02C6),  value = 0x0F, flags = RESET_REQUIRED;
>0000E0D4: 09 07 C6 02 00 00 0F 
      option text = STRING_TOKEN(0x02C7),  value = 0x10, flags = RESET_REQUIRED;
>0000E0DB: 09 07 C7 02 00 00 10 
      option text = STRING_TOKEN(0x02C8),  value = 0x11, flags = RESET_REQUIRED;
>0000E0E2: 09 07 C8 02 00 00 11 
      option text = STRING_TOKEN(0x02C9),  value = 0x12, flags = RESET_REQUIRED;
>0000E0E9: 09 07 C9 02 00 00 12 
      option text = STRING_TOKEN(0x02CA),  value = 0x13, flags = RESET_REQUIRED;
>0000E0F0: 09 07 CA 02 00 00 13 
      option text = STRING_TOKEN(0x02CB),  value = 0x14, flags = RESET_REQUIRED;
>0000E0F7: 09 07 CB 02 00 00 14 
      option text = STRING_TOKEN(0x02CC),  value = 0x15, flags = RESET_REQUIRED;
>0000E0FE: 09 07 CC 02 00 00 15 
      option text = STRING_TOKEN(0x02CD),  value = 0x16, flags = RESET_REQUIRED;
>0000E105: 09 07 CD 02 00 00 16 
      option text = STRING_TOKEN(0x02CE),  value = 0x17, flags = RESET_REQUIRED;
>0000E10C: 09 07 CE 02 00 00 17 
      option text = STRING_TOKEN(0x02CF),  value = 0x18, flags = RESET_REQUIRED;
>0000E113: 09 07 CF 02 00 00 18 
      option text = STRING_TOKEN(0x02D0),  value = 0x19, flags = RESET_REQUIRED;
>0000E11A: 09 07 D0 02 00 00 19 
      option text = STRING_TOKEN(0x02D1),  value = 0x1A, flags = RESET_REQUIRED;
>0000E121: 09 07 D1 02 00 00 1A 
      option text = STRING_TOKEN(0x02D2),  value = 0x1B, flags = RESET_REQUIRED;
>0000E128: 09 07 D2 02 00 00 1B 
      option text = STRING_TOKEN(0x02D3),  value = 0x1C, flags = RESET_REQUIRED;
>0000E12F: 09 07 D3 02 00 00 1C 
      option text = STRING_TOKEN(0x02D4),  value = 0x1D, flags = RESET_REQUIRED;
>0000E136: 09 07 D4 02 00 00 1D 
      option text = STRING_TOKEN(0x02D5),  value = 0x1E, flags = RESET_REQUIRED;
>0000E13D: 09 07 D5 02 00 00 1E 
      option text = STRING_TOKEN(0x02D6),  value = 0x1F, flags = RESET_REQUIRED;
>0000E144: 09 07 D6 02 00 00 1F 
      option text = STRING_TOKEN(0x02D7),  value = 0x20, flags = RESET_REQUIRED;
>0000E14B: 09 07 D7 02 00 00 20 
      option text = STRING_TOKEN(0x02D8),  value = 0x21, flags = RESET_REQUIRED;
>0000E152: 09 07 D8 02 00 00 21 
      option text = STRING_TOKEN(0x02D9),  value = 0x22, flags = RESET_REQUIRED;
>0000E159: 09 07 D9 02 00 00 22 
      option text = STRING_TOKEN(0x02DA),  value = 0x23, flags = RESET_REQUIRED;
>0000E160: 09 07 DA 02 00 00 23 
      option text = STRING_TOKEN(0x02DB),  value = 0x24, flags = RESET_REQUIRED;
>0000E167: 09 07 DB 02 00 00 24 
      option text = STRING_TOKEN(0x02DC),  value = 0x25, flags = RESET_REQUIRED;
>0000E16E: 09 07 DC 02 00 00 25 
      option text = STRING_TOKEN(0x02DD),  value = 0x26, flags = RESET_REQUIRED;
>0000E175: 09 07 DD 02 00 00 26 
      option text = STRING_TOKEN(0x02DE),  value = 0x27, flags = RESET_REQUIRED;
>0000E17C: 09 07 DE 02 00 00 27 
      option text = STRING_TOKEN(0x02DF),  value = 0x28, flags = RESET_REQUIRED;
>0000E183: 09 07 DF 02 00 00 28 
      option text = STRING_TOKEN(0x02E0),  value = 0x29, flags = RESET_REQUIRED;
>0000E18A: 09 07 E0 02 00 00 29 
      option text = STRING_TOKEN(0x02E1),  value = 0x2A, flags = RESET_REQUIRED;
>0000E191: 09 07 E1 02 00 00 2A 
      option text = STRING_TOKEN(0x02E2),  value = 0x2B, flags = RESET_REQUIRED;
>0000E198: 09 07 E2 02 00 00 2B 
      option text = STRING_TOKEN(0x02E3),  value = 0x2C, flags = RESET_REQUIRED;
>0000E19F: 09 07 E3 02 00 00 2C 
      option text = STRING_TOKEN(0x02E4),  value = 0x2D, flags = RESET_REQUIRED;
>0000E1A6: 09 07 E4 02 00 00 2D 
      option text = STRING_TOKEN(0x02E5),  value = 0x2E, flags = RESET_REQUIRED;
>0000E1AD: 09 07 E5 02 00 00 2E 
      option text = STRING_TOKEN(0x02E6),  value = 0x2F, flags = RESET_REQUIRED;
>0000E1B4: 09 07 E6 02 00 00 2F 
      option text = STRING_TOKEN(0x02E7),  value = 0x30, flags = RESET_REQUIRED;
>0000E1BB: 09 07 E7 02 00 00 30 
      option text = STRING_TOKEN(0x02E8),  value = 0x31, flags = RESET_REQUIRED;
>0000E1C2: 09 07 E8 02 00 00 31 
      option text = STRING_TOKEN(0x02E9),  value = 0x32, flags = RESET_REQUIRED;
>0000E1C9: 09 07 E9 02 00 00 32 
      option text = STRING_TOKEN(0x02EA),  value = 0x33, flags = RESET_REQUIRED;
>0000E1D0: 09 07 EA 02 00 00 33 
      option text = STRING_TOKEN(0x02EB),  value = 0x34, flags = RESET_REQUIRED;
>0000E1D7: 09 07 EB 02 00 00 34 
      option text = STRING_TOKEN(0x02EC),  value = 0x35, flags = RESET_REQUIRED;
>0000E1DE: 09 07 EC 02 00 00 35 
      option text = STRING_TOKEN(0x02ED),  value = 0x36, flags = RESET_REQUIRED;
>0000E1E5: 09 07 ED 02 00 00 36 
      option text = STRING_TOKEN(0x02EE),  value = 0x37, flags = RESET_REQUIRED;
>0000E1EC: 09 07 EE 02 00 00 37 
      option text = STRING_TOKEN(0x02EF),  value = 0x38, flags = RESET_REQUIRED;
>0000E1F3: 09 07 EF 02 00 00 38 
      option text = STRING_TOKEN(0x02F0),  value = 0x39, flags = RESET_REQUIRED;
>0000E1FA: 09 07 F0 02 00 00 39 
      option text = STRING_TOKEN(0x02F1),  value = 0x3A, flags = RESET_REQUIRED;
>0000E201: 09 07 F1 02 00 00 3A 
      option text = STRING_TOKEN(0x02F2),  value = 0x3B, flags = RESET_REQUIRED;
>0000E208: 09 07 F2 02 00 00 3B 
      option text = STRING_TOKEN(0x02F3),  value = 0x3C, flags = RESET_REQUIRED;
>0000E20F: 09 07 F3 02 00 00 3C 
      option text = STRING_TOKEN(0x02F4),  value = 0x3D, flags = RESET_REQUIRED;
>0000E216: 09 07 F4 02 00 00 3D 
      option text = STRING_TOKEN(0x02F5),  value = 0x3E, flags = RESET_REQUIRED;
>0000E21D: 09 07 F5 02 00 00 3E 
      option text = STRING_TOKEN(0x02F6),  value = 0x3F, flags = RESET_REQUIRED;
>0000E224: 09 07 F6 02 00 00 3F 
    endoneof;
>0000E22B: 29 02 

    endform;
>0000E22D: 29 02 

    form formid = 0x3F5,
>0000E22F: 01 86 F5 03 75 02 
      title = STRING_TOKEN(0x0275);

      oneof varid   = SYSTEM_CONFIGURATION.SvidEnable,
>0000E235: 05 91 77 02 78 02 46 05 01 00 24 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x0277),
        help        = STRING_TOKEN(0x0278),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000E246: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000E24D: 09 07 39 07 30 00 01 
      endoneof;
>0000E254: 29 02 

      suppressif ideqval SYSTEM_CONFIGURATION.SvidEnable == 0;
>0000E256: 0A 82 
>0000E258: 12 06 46 05 00 00 
        numeric varid = SYSTEM_CONFIGURATION.SvidVoltageOverride,
>0000E25E: 07 94 79 02 7A 02 47 05 01 00 25 01 10 11 00 00 C4 09 01 00 
          prompt  = STRING_TOKEN (0x0279),
          help    = STRING_TOKEN (0x027A),
          flags   = RESET_REQUIRED,
          minimum = 0,
          maximum = 2500,
          step    = 1,
          default = 0, defaultstore = MyStandardDefault,
>0000E272: 5B 07 00 00 01 00 00 
          default = 0, defaultstore = MyManufactureDefault,
>0000E279: 5B 07 01 00 01 00 00 
        endnumeric;
>0000E280: 29 02 
      endif;
>0000E282: 29 02 

      numeric   varid   = SYSTEM_CONFIGURATION.CpuVccInVoltage,
>0000E284: 07 94 F4 01 F5 01 48 05 01 00 2F 01 10 11 66 01 CB 01 01 00 
        prompt  = STRING_TOKEN(0x01F4),
        help    = STRING_TOKEN(0x01F5),
          flags     = RESET_REQUIRED,
          minimum   = 358,
          maximum   = 459,
          step      = 1,       
                               
          default = 359, defaultstore = MyStandardDefault,
>0000E298: 5B 07 00 00 01 67 01 
          default = 359, defaultstore = MyManufactureDefault,
>0000E29F: 5B 07 01 00 01 67 01 
      endnumeric;
>0000E2A6: 29 02 

      oneof varid   = SYSTEM_CONFIGURATION.FivrFaultsEnable,
>0000E2A8: 05 91 7B 02 7C 02 49 05 01 00 27 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x027B),
        help        = STRING_TOKEN(0x027C),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000E2B9: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000E2C0: 09 07 39 07 30 00 01 
      endoneof;
>0000E2C7: 29 02 

      oneof varid   = SYSTEM_CONFIGURATION.FivrEfficiencyEnable,
>0000E2C9: 05 91 7D 02 7E 02 4A 05 01 00 28 01 10 10 00 01 00 
        prompt      = STRING_TOKEN(0x027D),
        help        = STRING_TOKEN(0x027E),
        option text = STRING_TOKEN(0x0738),  value = 0, flags = RESET_REQUIRED;
>0000E2DA: 09 07 38 07 00 00 00 
        option text = STRING_TOKEN(0x0739),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
>0000E2E1: 09 07 39 07 30 00 01 
      endoneof;
>0000E2E8: 29 02 
    endform;
>0000E362: 29 02 









































































































































































































































































































































































































































#line 1055 "c:\\r9tip\\allpkg\\comancheridge\\allpkg\\intel\\WhitleyRpPkg\\Platform\\Dxe\\Setup\\Advanced.vfr"

endformset;
>0000E2EA: 1E 82 
>0000E2EC: 46 02 
>0000E2EE: 07 91 00 00 00 00 4B 05 04 00 0B 00 00 10 00 FF 00 
>0000E2FF: 29 02 
>0000E301: 07 91 00 00 00 00 4C 05 03 00 13 00 00 10 00 FF 00 
>0000E312: 29 02 
>0000E314: 07 91 00 00 00 00 4D 05 03 00 1E 00 00 10 00 FF 00 
>0000E325: 29 02 
>0000E327: 07 91 00 00 00 00 4E 05 07 00 0F 00 00 10 00 FF 00 
>0000E338: 29 02 
>0000E33A: 07 91 00 00 00 00 4F 05 0C 00 01 00 00 10 00 FF 00 
>0000E34B: 29 02 
>0000E34D: 07 91 00 00 00 00 50 05 0C 00 00 00 00 10 00 FF 00 
>0000E35E: 29 02 
>0000E360: 29 02 
>0000E364: 29 02 


//
// All Opcode Record List 
//
>00000000: 0E A7 43 D6 87 EC A4 EB B5 4B A1 E5 3F 3E 36 B2 0D A9 AD 07 AE 07 01 71 99 03 93 45 85 04 4B B4 5E 32 EB 83 26 04 0E 
>00000027: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 03 02 00 
>0000003C: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 04 00 00 
>00000051: 5C 06 77 07 00 00 
>00000057: 5C 06 78 07 01 00 
>0000005D: 26 20 01 00 43 D6 87 EC A4 EB B5 4B A1 E5 3F 3E 36 B2 0D A9 07 00 00 00 C6 01 53 65 74 75 70 00 
>0000007D: 26 23 02 00 F1 B7 70 45 E8 AD 43 49 8D C3 40 64 72 84 23 84 07 00 00 00 92 04 50 63 68 53 65 74 75 70 00 
>000000A0: 26 2C 03 00 8D 35 26 2B 99 F8 C4 41 9B C2 82 A3 38 B9 93 D8 07 00 00 00 70 00 4D 65 52 63 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 00 
>000000CC: 26 2C 04 00 44 59 B8 D8 B2 13 F9 41 85 C6 A0 B1 33 78 3E 40 07 00 00 00 0F 00 49 65 52 63 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 00 
>000000F8: 26 2F 05 00 7F D8 2E 42 A3 8E AC 4A 80 D8 50 8D E1 52 08 EF 07 00 00 00 14 00 53 76 4F 74 68 65 72 43 6F 6E 66 69 67 75 72 61 74 69 6F 6E 00 
>00000127: 26 2A 06 00 7E 01 84 DD 52 7F F9 48 B1 6E 50 ED 9E 0D BE 27 07 00 00 00 84 27 53 6F 63 6B 65 74 49 69 6F 43 6F 6E 66 69 67 00 
>00000151: 26 2F 07 00 38 CA 02 44 8F 80 79 42 BC EC 5B AF 8D 59 09 2F 07 00 00 00 33 00 53 6F 63 6B 65 74 43 6F 6D 6D 6F 6E 52 63 43 6F 6E 66 69 67 00 
>00000180: 26 2D 08 00 DE 22 9B 2B D4 2A BC 4A 95 7D 5F 18 C5 04 A0 5C 07 00 00 00 9F 00 53 6F 63 6B 65 74 4D 70 4C 69 6E 6B 43 6F 6E 66 69 67 00 
>000001AD: 26 2D 09 00 ED 19 CF 98 09 41 81 46 B7 9D 91 96 75 7C 78 24 07 00 00 00 6C 01 53 6F 63 6B 65 74 4D 65 6D 6F 72 79 43 6F 6E 66 69 67 00 
>000001DA: 26 36 0A 00 42 73 04 A1 BA BD AE 4D A6 7A 40 97 9B 65 C7 F8 07 00 00 00 92 01 53 6F 63 6B 65 74 50 6F 77 65 72 4D 61 6E 61 67 65 6D 65 6E 74 43 6F 6E 66 69 67 00 
>00000210: 26 34 0B 00 88 35 01 07 89 C7 12 4E A7 C3 88 FA FA E7 9F 7C 07 00 00 00 BD 00 53 6F 63 6B 65 74 50 72 6F 63 65 73 73 6F 72 43 6F 72 65 43 6F 6E 66 69 67 00 
>00000244: 24 1D DA 86 EC A0 6D 44 3E 45 91 44 52 6D FA 0D 9E 8C 0C 00 2A 04 42 6D 63 4C 61 6E 00 
>00000261: 24 1E B9 5C 7D E5 8F 14 4D 44 9E CB 9D F8 65 30 A0 B4 34 12 01 00 46 61 6B 65 56 61 72 00 
>0000027F: 01 86 01 00 AD 07 
>00000285: 0A 82 
>00000287: 46 02 
>00000289: 05 91 C2 07 C3 07 01 00 34 12 00 00 10 10 00 01 00 
>0000029A: 09 07 A7 00 30 00 00 
>000002A1: 09 07 A7 00 00 00 01 
>000002A8: 29 02 
>000002AA: 29 02 
>000002AC: 1E 82 
>000002AE: 46 02 
>000002B0: 07 94 75 07 76 07 02 00 01 00 33 01 00 11 00 00 01 00 01 00 
>000002C4: 29 02 
>000002C6: 29 02 
>000002C8: 0A 82 
>000002CA: 46 02 
>000002CC: 06 8E CF 07 D0 07 03 00 01 00 03 01 00 00 
>000002DA: 5B 06 00 00 00 00 
>000002E0: 5B 06 01 00 00 00 
>000002E6: 29 02 
>000002E8: 29 02 
>000002EA: 0A 82 
>000002EC: 46 02 
>000002EE: 06 8E D1 07 D2 07 04 00 01 00 C2 00 00 00 
>000002FC: 5B 06 00 00 00 00 
>00000302: 5B 06 01 00 00 00 
>00000308: 29 02 
>0000030A: 29 02 
>0000030C: 0A 82 
>0000030E: 46 02 
>00000310: 06 8E D3 07 D4 07 05 00 01 00 C0 00 00 00 
>0000031E: 5B 06 00 00 00 00 
>00000324: 5B 06 01 00 00 00 
>0000032A: 29 02 
>0000032C: 29 02 
>0000032E: 0F 0F 03 03 04 03 06 00 00 00 FF FF 00 06 00 
>0000033D: 0A 82 
>0000033F: 12 06 03 00 00 00 
>00000345: 0F 0F F0 01 F1 01 07 00 00 00 FF FF 00 F0 03 
>00000354: 29 02 
>00000356: 0F 0F C4 07 C5 07 08 00 00 00 FF FF 00 09 00 
>00000365: 0F 0F 4F 00 50 00 09 00 00 00 FF FF 00 88 00 
>00000374: 0F 0F B6 07 B7 07 0A 00 00 00 FF FF 00 0B 00 
>00000383: 0A 82 
>00000385: 12 86 E9 04 FF 00 
>0000038B: 17 02 
>0000038D: 29 02 
>0000038F: 0F 0F EA 00 EB 00 0B 00 00 00 FF FF 00 5C 00 
>0000039E: 29 02 
>000003A0: 0A 82 
>000003A2: 12 86 E9 04 03 00 
>000003A8: 17 02 
>000003AA: 29 02 
>000003AC: 0F 0F EA 00 EB 00 0C 00 00 00 FF FF 00 50 00 
>000003BB: 29 02 
>000003BD: 0A 82 
>000003BF: 12 86 E9 04 03 00 
>000003C5: 17 02 
>000003C7: 29 02 
>000003C9: 0F 0F 5E 01 5F 01 0D 00 00 00 FF FF 00 51 00 
>000003D8: 29 02 
>000003DA: 0A 82 
>000003DC: 12 86 E9 04 01 00 
>000003E2: 17 02 
>000003E4: 29 02 
>000003E6: 0F 0F A2 01 A3 01 0E 00 00 00 FF FF 00 54 00 
>000003F5: 29 02 
>000003F7: 0A 82 
>000003F9: 12 86 E9 04 01 00 
>000003FF: 17 02 
>00000401: 29 02 
>00000403: 0F 0F C8 01 C9 01 0F 00 00 00 FF FF 00 55 00 
>00000412: 29 02 
>00000414: 0A 82 
>00000416: 12 86 E9 04 0F 00 
>0000041C: 17 02 
>0000041E: 29 02 
>00000420: 0F 0F E4 00 E5 00 10 00 00 00 FF FF 00 58 00 
>0000042F: 29 02 
>00000431: 0F 0F C4 00 C5 00 11 00 00 00 FF FF 00 22 00 
>00000440: 0F 0F 02 00 03 00 12 00 00 00 FF FF 00 0C 00 
>0000044F: 0F 0F 80 08 81 08 13 00 00 00 FF FF 00 00 05 
>0000045E: 0F 0F 35 08 36 08 14 00 00 00 FF FF 00 19 00 
>0000046D: 0F 0F 69 08 6A 08 15 00 00 00 FF FF 00 D1 03 
>0000047C: 0F 0F 51 07 AA 00 16 00 00 00 FF FF 00 23 00 
>0000048B: 02 87 AA 00 00 00 00 
>00000492: 29 02 
>00000494: 02 87 62 07 00 00 00 
>0000049B: 29 02 
>0000049D: 02 87 AF 07 00 00 00 
>000004A4: 29 02 
>000004A6: 02 87 B0 07 00 00 00 
>000004AD: 29 02 
>000004AF: 02 87 B1 07 00 00 00 
>000004B6: 29 02 
>000004B8: 29 02 
>000004BA: 01 86 09 00 C4 07 
>000004C0: 02 87 C4 07 00 00 00 
>000004C7: 29 02 
>000004C9: 02 87 62 07 00 00 00 
>000004D0: 29 02 
>000004D2: 02 87 AA 00 00 00 00 
>000004D9: 29 02 
>000004DB: 05 91 C6 07 C7 07 50 06 01 00 50 00 14 10 00 06 00 
>000004EC: 09 07 C8 07 30 00 00 
>000004F3: 09 07 C9 07 00 00 01 
>000004FA: 09 07 CA 07 00 00 02 
>00000501: 09 07 CB 07 00 00 03 
>00000508: 09 07 CC 07 00 00 04 
>0000050F: 09 07 CD 07 00 00 05 
>00000516: 09 07 CE 07 00 00 06 
>0000051D: 29 02 
>0000051F: 05 91 31 08 32 08 B7 10 01 00 32 01 10 10 00 01 00 
>00000530: 09 07 33 08 30 00 00 
>00000537: 09 07 34 08 00 00 01 
>0000053E: 29 02 
>00000540: 05 91 2D 08 2E 08 17 00 01 00 C4 00 10 10 00 01 00 
>00000551: 09 07 30 08 00 00 00 
>00000558: 09 07 2F 08 30 00 01 
>0000055F: 29 02 
>00000561: 06 8E 41 08 42 08 18 00 01 00 BD 00 10 00 
>0000056F: 29 02 
>00000571: 07 91 DB 07 DC 07 19 00 01 00 4F 00 10 10 00 64 00 
>00000582: 5B 06 00 00 00 00 
>00000588: 5B 06 01 00 00 00 
>0000058E: 29 02 
>00000590: 05 91 6D 08 6E 08 1A 00 01 00 52 00 10 10 00 01 00 
>000005A1: 09 07 A7 00 30 00 00 
>000005A8: 09 07 A6 00 00 00 01 
>000005AF: 29 02 
>000005B1: 05 91 DD 07 DE 07 1B 00 01 00 46 00 10 10 00 06 00 
>000005C2: 09 07 6F 00 30 00 00 
>000005C9: 09 07 DF 07 00 00 01 
>000005D0: 09 07 E0 07 00 00 02 
>000005D7: 09 07 E1 07 00 00 03 
>000005DE: 09 07 E2 07 00 00 04 
>000005E5: 09 07 E3 07 00 00 05 
>000005EC: 09 07 E4 07 00 00 06 
>000005F3: 29 02 
>000005F5: 07 94 E5 07 E6 07 1C 00 01 00 47 00 10 21 00 00 FF FF 01 00 
>00000609: 5B 07 00 00 01 00 00 
>00000610: 5B 07 01 00 01 00 00 
>00000617: 29 02 
>00000619: 06 8E 25 08 26 08 1D 00 01 00 BE 00 00 00 
>00000627: 29 02 
>00000629: 19 82 
>0000062B: 12 06 05 00 00 00 
>00000631: 06 8E 27 08 28 08 1E 00 01 00 BF 00 10 00 
>0000063F: 5B 06 00 00 00 00 
>00000645: 5B 06 01 00 00 00 
>0000064B: 29 02 
>0000064D: 29 02 
>0000064F: 0A 82 
>00000651: 12 06 1E 00 00 00 
>00000657: 06 8E 29 08 2A 08 1F 00 01 00 C3 00 10 00 
>00000665: 5B 06 00 00 00 00 
>0000066B: 5B 06 01 00 00 00 
>00000671: 29 02 
>00000673: 29 02 
>00000675: 0A 82 
>00000677: 12 06 04 00 00 00 
>0000067D: 06 8E 2B 08 2C 08 20 00 01 00 C1 00 10 00 
>0000068B: 5B 06 00 00 00 00 
>00000691: 5B 06 01 00 00 00 
>00000697: 29 02 
>00000699: 29 02 
>0000069B: 05 91 73 08 74 08 21 00 01 00 B1 01 10 10 00 01 00 
>000006AC: 09 07 38 07 30 00 00 
>000006B3: 09 07 39 07 00 00 01 
>000006BA: 29 02 
>000006BC: 05 91 75 08 76 08 22 00 01 00 B2 01 10 10 00 02 00 
>000006CD: 09 07 A8 00 30 00 02 
>000006D4: 09 07 38 07 00 00 00 
>000006DB: 09 07 39 07 00 00 01 
>000006E2: 29 02 
>000006E4: 05 91 F0 07 F1 07 23 00 01 00 B3 01 10 10 00 01 00 
>000006F5: 09 07 38 07 30 00 00 
>000006FC: 09 07 39 07 00 00 01 
>00000703: 29 02 
>00000705: 0F 0F 77 08 78 08 24 00 00 00 FF FF 00 24 00 
>00000714: 05 91 EB 07 EC 07 B6 10 01 00 BA 00 14 10 00 04 00 
>00000725: 09 07 A7 00 00 00 00 
>0000072C: 09 07 ED 07 20 00 01 
>00000733: 09 07 EE 07 10 00 02 
>0000073A: 09 07 EF 07 00 00 03 
>00000741: 09 07 A8 00 00 00 04 
>00000748: 29 02 
>0000074A: 05 91 F2 07 F3 07 25 00 01 00 BB 00 10 10 00 40 00 
>0000075B: 09 07 FA 02 30 00 00 
>00000762: 09 07 F9 02 00 00 04 
>00000769: 09 07 F4 07 00 00 40 
>00000770: 29 02 
>00000772: 05 91 F5 07 F6 07 26 00 01 00 BC 00 10 10 00 08 00 
>00000783: 09 07 FA 02 20 00 00 
>0000078A: 09 07 F9 02 10 00 08 
>00000791: 29 02 
>00000793: 05 91 F7 07 F8 07 27 00 01 00 4C 00 10 10 00 02 00 
>000007A4: 09 07 A8 00 30 00 00 
>000007AB: 09 07 F9 07 00 00 01 
>000007B2: 09 07 FA 07 00 00 02 
>000007B9: 29 02 
>000007BB: 05 91 7E 08 7F 08 28 00 01 00 90 01 10 10 00 01 00 
>000007CC: 09 07 F9 02 00 00 01 
>000007D3: 09 07 FA 02 30 00 00 
>000007DA: 29 02 
>000007DC: 05 91 E7 07 E8 07 29 00 01 00 42 00 10 10 00 01 00 
>000007ED: 09 07 A7 00 30 00 00 
>000007F4: 09 07 A6 00 00 00 01 
>000007FB: 29 02 
>000007FD: 05 91 E9 07 EA 07 2A 00 01 00 41 00 10 10 00 01 00 
>0000080E: 09 07 A7 00 30 00 00 
>00000815: 09 07 A6 00 00 00 01 
>0000081C: 29 02 
>0000081E: 05 91 04 08 05 08 2B 00 01 00 4A 00 14 10 00 01 00 
>0000082F: 09 07 A7 00 30 00 00 
>00000836: 09 07 A6 00 00 00 01 
>0000083D: 29 02 
>0000083F: 05 91 02 08 03 08 2C 00 01 00 4B 00 14 10 00 01 00 
>00000850: 09 07 A7 00 30 00 00 
>00000857: 09 07 A6 00 00 00 01 
>0000085E: 29 02 
>00000860: 05 91 4A 08 4B 08 2D 00 01 00 F7 00 14 10 00 01 00 
>00000871: 09 07 A7 00 00 00 00 
>00000878: 09 07 A6 00 30 00 01 
>0000087F: 29 02 
>00000881: 05 91 4C 08 4D 08 2E 00 01 00 F8 00 14 10 00 01 00 
>00000892: 09 07 A7 00 30 00 00 
>00000899: 09 07 A6 00 00 00 01 
>000008A0: 29 02 
>000008A2: 05 91 4E 08 4F 08 2F 00 01 00 F9 00 14 10 00 01 00 
>000008B3: 09 07 A7 00 00 00 00 
>000008BA: 09 07 A6 00 30 00 01 
>000008C1: 29 02 
>000008C3: 19 82 
>000008C5: 12 06 2F 00 00 00 
>000008CB: 05 91 52 08 53 08 30 00 01 00 F6 00 10 10 00 0A 00 
>000008DC: 09 07 54 08 30 00 00 
>000008E3: 09 07 55 08 00 00 01 
>000008EA: 09 07 56 08 00 00 04 
>000008F1: 09 07 57 08 00 00 06 
>000008F8: 09 07 58 08 00 00 08 
>000008FF: 09 07 59 08 00 00 0A 
>00000906: 29 02 
>00000908: 29 02 
>0000090A: 05 91 50 08 51 08 31 00 01 00 FA 00 14 10 00 01 00 
>0000091B: 09 07 A7 00 30 00 00 
>00000922: 09 07 A6 00 00 00 01 
>00000929: 29 02 
>0000092B: 05 91 5C 08 5D 08 32 00 01 00 54 00 10 10 00 01 00 
>0000093C: 09 07 A7 00 30 00 00 
>00000943: 09 07 A6 00 00 00 01 
>0000094A: 29 02 
>0000094C: 0A 82 
>0000094E: 12 06 32 00 00 00 
>00000954: 07 91 5E 08 5F 08 33 00 01 00 55 00 10 10 00 17 01 
>00000965: 5B 06 00 00 00 00 
>0000096B: 5B 06 01 00 00 00 
>00000971: 29 02 
>00000973: 07 91 60 08 8F 07 34 00 01 00 56 00 10 10 00 3B 01 
>00000984: 5B 06 00 00 00 00 
>0000098A: 5B 06 01 00 00 00 
>00000990: 29 02 
>00000992: 07 91 61 08 90 07 35 00 01 00 57 00 10 10 00 3B 01 
>000009A3: 5B 06 00 00 00 00 
>000009A9: 5B 06 01 00 00 00 
>000009AF: 29 02 
>000009B1: 29 02 
>000009B3: 05 91 62 08 63 08 36 00 02 00 74 04 10 10 00 03 00 
>000009C4: 09 07 64 08 30 00 00 
>000009CB: 09 07 65 08 00 00 01 
>000009D2: 09 07 66 08 00 00 02 
>000009D9: 09 07 67 08 00 00 03 
>000009E0: 29 02 
>000009E2: 0A 82 
>000009E4: 46 02 
>000009E6: 05 91 7C 08 7D 08 37 00 01 00 C4 01 10 10 00 01 00 
>000009F7: 09 07 F9 02 20 00 01 
>000009FE: 09 07 FA 02 10 00 00 
>00000A05: 29 02 
>00000A07: 29 02 
>00000A09: 05 91 6F 08 70 08 38 00 01 00 C5 01 10 10 00 01 00 
>00000A1A: 09 07 A7 00 30 00 00 
>00000A21: 09 07 A6 00 00 00 01 
>00000A28: 29 02 
>00000A2A: 29 02 
>00000A2C: 01 86 0B 00 B6 07 
>00000A32: 05 91 B8 07 B9 07 39 00 01 00 FB 00 10 10 00 01 00 
>00000A43: 09 07 F9 02 00 00 01 
>00000A4A: 09 07 FA 02 30 00 00 
>00000A51: 29 02 
>00000A53: 05 91 BA 07 BB 07 3A 00 01 00 FC 00 10 10 00 01 00 
>00000A64: 09 07 F9 02 00 00 01 
>00000A6B: 09 07 FA 02 30 00 00 
>00000A72: 29 02 
>00000A74: 05 91 BC 07 BD 07 3B 00 01 00 53 00 10 10 00 01 00 
>00000A85: 09 07 F9 02 30 00 01 
>00000A8C: 09 07 FA 02 00 00 00 
>00000A93: 29 02 
>00000A95: 29 02 
>00000A97: 01 86 19 00 35 08 
>00000A9D: 06 8E 37 08 38 08 3C 00 01 00 C6 00 00 00 
>00000AAB: 5B 06 00 00 00 00 
>00000AB1: 5B 06 01 00 00 00 
>00000AB7: 29 02 
>00000AB9: 19 82 
>00000ABB: 12 06 3C 00 00 00 
>00000AC1: 07 A6 39 08 3A 08 3D 00 01 00 C7 00 00 23 00 00 10 00 00 00 00 00 FF FF FF FF FF FF FF FF 00 10 00 00 00 00 00 00 
>00000AE7: 5B 0D 00 00 03 00 00 10 00 00 00 00 00 
>00000AF4: 5B 0D 01 00 03 00 00 10 00 00 00 00 00 
>00000B01: 29 02 
>00000B03: 29 02 
>00000B05: 0A 82 
>00000B07: 12 06 3C 00 00 00 
>00000B0D: 03 08 3B 08 AA 00 3C 08 
>00000B15: 29 02 
>00000B17: 05 91 3D 08 3E 08 3E 00 01 00 CF 00 10 10 00 01 00 
>00000B28: 09 07 A7 00 10 00 00 
>00000B2F: 09 07 A6 00 20 00 01 
>00000B36: 29 02 
>00000B38: 29 02 
>00000B3A: 01 86 23 00 51 07 
>00000B40: 02 87 52 07 00 00 00 
>00000B47: 29 02 
>00000B49: 02 87 62 07 00 00 00 
>00000B50: 29 02 
>00000B52: 02 87 AA 00 00 00 00 
>00000B59: 29 02 
>00000B5B: 05 91 53 07 54 07 3F 00 01 00 B4 01 10 10 00 04 00 
>00000B6C: 09 07 6F 00 30 00 00 
>00000B73: 09 07 55 07 00 00 01 
>00000B7A: 09 07 56 07 00 00 04 
>00000B81: 29 02 
>00000B83: 0A 82 
>00000B85: 12 06 3F 00 00 00 
>00000B8B: 05 94 57 07 58 07 40 00 01 00 B5 01 10 11 00 00 10 27 00 00 
>00000B9F: 09 08 76 00 01 01 01 00 
>00000BA7: 09 08 1C 02 01 01 0A 00 
>00000BAF: 09 08 5B 07 01 01 14 00 
>00000BB7: 09 08 5C 07 01 01 64 00 
>00000BBF: 09 08 5D 07 31 01 F4 01 
>00000BC7: 09 08 5E 07 01 01 E8 03 
>00000BCF: 09 08 5F 07 01 01 88 13 
>00000BD7: 09 08 60 07 01 01 10 27 
>00000BDF: 09 08 61 07 01 01 00 00 
>00000BE7: 29 02 
>00000BE9: 05 94 59 07 5A 07 41 00 01 00 B7 01 10 11 00 00 10 27 00 00 
>00000BFD: 09 08 1C 02 01 01 0A 00 
>00000C05: 09 08 5B 07 01 01 14 00 
>00000C0D: 09 08 5C 07 01 01 64 00 
>00000C15: 09 08 5D 07 31 01 F4 01 
>00000C1D: 09 08 5E 07 01 01 E8 03 
>00000C25: 09 08 5F 07 01 01 88 13 
>00000C2D: 09 08 60 07 01 01 10 27 
>00000C35: 09 08 61 07 01 01 00 00 
>00000C3D: 29 02 
>00000C3F: 05 91 63 07 64 07 42 00 01 00 B9 01 10 10 00 01 00 
>00000C50: 09 07 A1 00 00 00 00 
>00000C57: 09 07 A0 00 30 00 01 
>00000C5E: 29 02 
>00000C60: 05 91 65 07 66 07 43 00 01 00 BA 01 10 10 00 01 00 
>00000C71: 09 07 A1 00 30 00 00 
>00000C78: 09 07 A0 00 00 00 01 
>00000C7F: 29 02 
>00000C81: 05 91 67 07 68 07 44 00 01 00 BB 01 10 10 00 01 00 
>00000C92: 09 07 A1 00 00 00 00 
>00000C99: 09 07 A0 00 30 00 01 
>00000CA0: 29 02 
>00000CA2: 05 91 69 07 6A 07 45 00 01 00 BC 01 10 10 00 01 00 
>00000CB3: 09 07 A1 00 00 00 00 
>00000CBA: 09 07 A0 00 30 00 01 
>00000CC1: 29 02 
>00000CC3: 05 91 6B 07 6C 07 46 00 01 00 BE 01 10 10 00 01 00 
>00000CD4: 09 07 A1 00 00 00 00 
>00000CDB: 09 07 A0 00 30 00 01 
>00000CE2: 29 02 
>00000CE4: 07 94 6D 07 6E 07 47 00 01 00 BF 01 10 11 00 00 FF FF 01 00 
>00000CF8: 5B 07 00 00 01 04 00 
>00000CFF: 5B 07 01 00 01 04 00 
>00000D06: 29 02 
>00000D08: 05 91 6F 07 70 07 48 00 01 00 BD 01 10 10 00 01 00 
>00000D19: 09 07 A1 00 00 00 00 
>00000D20: 09 07 A0 00 30 00 01 
>00000D27: 29 02 
>00000D29: 05 91 71 07 72 07 49 00 01 00 C1 01 10 10 00 01 00 
>00000D3A: 09 07 A1 00 00 00 00 
>00000D41: 09 07 A0 00 30 00 01 
>00000D48: 29 02 
>00000D4A: 29 02 
>00000D4C: 29 02 
>00000D4E: 01 86 06 00 03 03 
>00000D54: 02 87 03 03 00 00 00 
>00000D5B: 29 02 
>00000D5D: 02 87 62 07 00 00 00 
>00000D64: 29 02 
>00000D66: 02 87 AA 00 00 00 00 
>00000D6D: 29 02 
>00000D6F: 0A 82 
>00000D71: 46 02 
>00000D73: 05 91 E7 03 E7 03 08 20 02 00 22 00 04 10 00 01 00 
>00000D84: 09 07 FA 02 10 00 00 
>00000D8B: 09 07 F9 02 00 00 01 
>00000D92: 29 02 
>00000D94: 05 91 EA 03 EB 03 09 20 02 00 23 00 04 10 00 01 00 
>00000DA5: 09 07 FA 02 10 00 00 
>00000DAC: 09 07 F9 02 00 00 01 
>00000DB3: 29 02 
>00000DB5: 07 91 05 03 06 03 0B 20 01 00 62 00 04 10 00 FF 00 
>00000DC6: 29 02 
>00000DC8: 29 02 
>00000DCA: 0F 0F 07 03 08 03 4A 00 00 00 FF FF 00 60 00 
>00000DD9: 0F 0F F6 03 F7 03 4B 00 00 00 FF FF 00 0E 01 
>00000DE8: 0F 0F 81 03 82 03 4C 00 00 00 FF FF 00 68 00 
>00000DF7: 0F 0F C8 04 C9 04 4D 00 00 00 FF FF 00 19 01 
>00000E06: 0F 0F 45 03 46 03 4E 00 00 00 FF FF 00 07 01 
>00000E15: 0F 0F 39 03 3A 03 4F 00 00 00 FF FF 00 0F 01 
>00000E24: 0F 0F 2B 03 2C 03 50 00 00 00 FF FF 00 0B 01 
>00000E33: 0F 0F E8 03 E9 03 51 00 00 00 FF FF 00 61 00 
>00000E42: 0F 0F 10 05 11 05 52 00 00 00 FF FF 00 0C 01 
>00000E51: 0F 0F 1A 05 1B 05 53 00 00 00 FF FF 00 1D 01 
>00000E60: 0F 0F 40 05 41 05 54 00 00 00 FF FF 00 1E 01 
>00000E6F: 19 82 
>00000E71: 12 06 DF 03 03 00 
>00000E77: 0F 0F 29 05 2A 05 55 00 00 00 FF FF 00 23 01 
>00000E86: 29 02 
>00000E88: 05 91 4B 06 4C 06 56 00 02 00 75 04 10 10 00 01 00 
>00000E99: 09 07 38 07 30 00 00 
>00000EA0: 09 07 39 07 00 00 01 
>00000EA7: 29 02 
>00000EA9: 0A 82 
>00000EAB: 12 06 56 00 01 00 
>00000EB1: 05 91 4D 06 4E 06 57 00 02 00 76 04 10 10 00 01 00 
>00000EC2: 09 07 38 07 30 00 00 
>00000EC9: 09 07 39 07 00 00 01 
>00000ED0: 29 02 
>00000ED2: 29 02 
>00000ED4: 29 02 
>00000ED6: 01 86 60 00 07 03 
>00000EDC: 05 91 0D 03 0E 03 58 00 02 00 1F 00 10 10 00 01 00 
>00000EED: 09 07 0F 03 00 00 00 
>00000EF4: 09 07 10 03 30 00 01 
>00000EFB: 29 02 
>00000EFD: 05 91 11 03 12 03 59 00 02 00 20 00 10 10 00 06 00 
>00000F0E: 09 07 FA 02 30 00 00 
>00000F15: 09 07 13 03 00 00 02 
>00000F1C: 09 07 14 03 00 00 04 
>00000F23: 09 07 15 03 00 00 06 
>00000F2A: 29 02 
>00000F2C: 05 91 16 03 17 03 5A 00 02 00 21 00 10 10 00 01 00 
>00000F3D: 09 07 F9 02 00 00 01 
>00000F44: 09 07 FA 02 30 00 00 
>00000F4B: 29 02 
>00000F4D: 05 91 18 03 19 03 5B 00 02 00 26 00 10 10 00 01 00 
>00000F5E: 09 07 FA 02 00 00 00 
>00000F65: 09 07 F9 02 30 00 01 
>00000F6C: 29 02 
>00000F6E: 05 91 1A 03 1B 03 5C 00 02 00 2E 00 10 10 00 01 00 
>00000F7F: 09 07 FA 02 00 00 00 
>00000F86: 09 07 F9 02 30 00 01 
>00000F8D: 29 02 
>00000F8F: 05 91 1C 03 1D 03 5D 00 02 00 28 00 10 10 00 01 00 
>00000FA0: 09 07 FA 02 00 00 00 
>00000FA7: 09 07 F9 02 30 00 01 
>00000FAE: 29 02 
>00000FB0: 05 91 0B 03 0C 03 5E 00 02 00 27 00 10 10 00 01 00 
>00000FC1: 09 07 FA 02 00 00 00 
>00000FC8: 09 07 F9 02 30 00 01 
>00000FCF: 29 02 
>00000FD1: 05 91 1E 03 1F 03 5F 00 02 00 35 00 10 10 00 01 00 
>00000FE2: 09 07 20 03 30 00 00 
>00000FE9: 09 07 21 03 00 00 01 
>00000FF0: 29 02 
>00000FF2: 05 91 5A 08 5B 08 60 00 02 00 33 00 10 10 00 01 00 
>00001003: 09 07 FA 02 00 00 00 
>0000100A: 09 07 F9 02 30 00 01 
>00001011: 29 02 
>00001013: 05 91 22 03 23 03 61 00 02 00 72 04 10 10 00 FF 00 
>00001024: 09 07 24 03 30 00 00 
>0000102B: 09 07 25 03 00 00 01 
>00001032: 09 07 26 03 00 00 FF 
>00001039: 29 02 
>0000103B: 05 91 09 03 0A 03 62 00 02 00 34 00 10 10 00 01 00 
>0000104C: 09 07 FB 02 30 00 00 
>00001053: 09 07 FC 02 00 00 01 
>0000105A: 29 02 
>0000105C: 05 91 29 03 2A 03 63 00 02 00 3D 01 10 10 00 01 00 
>0000106D: 09 07 FA 02 00 00 00 
>00001074: 09 07 F9 02 30 00 01 
>0000107B: 29 02 
>0000107D: 05 91 27 03 28 03 64 00 02 00 29 00 10 10 00 01 00 
>0000108E: 09 07 FA 02 30 00 00 
>00001095: 09 07 F9 02 00 00 01 
>0000109C: 29 02 
>0000109E: 05 91 35 03 36 03 65 00 02 00 68 04 10 10 00 01 00 
>000010AF: 09 07 FA 02 30 00 00 
>000010B6: 09 07 F9 02 00 00 01 
>000010BD: 29 02 
>000010BF: 1E 82 
>000010C1: 12 86 0B 20 30 00 
>000010C7: 17 02 
>000010C9: 29 02 
>000010CB: 05 91 08 07 09 07 66 00 02 00 73 04 10 10 00 FF 00 
>000010DC: 09 07 FA 02 00 00 FF 
>000010E3: 09 07 F8 02 00 00 FE 
>000010EA: 09 07 0A 07 00 00 00 
>000010F1: 09 07 0B 07 00 00 01 
>000010F8: 09 07 0C 07 00 00 02 
>000010FF: 09 07 0D 07 00 00 03 
>00001106: 09 07 0E 07 00 00 04 
>0000110D: 09 07 0F 07 00 00 05 
>00001114: 09 07 10 07 00 00 06 
>0000111B: 09 07 11 07 00 00 07 
>00001122: 09 07 12 07 00 00 08 
>00001129: 09 07 13 07 00 00 09 
>00001130: 09 07 14 07 00 00 0A 
>00001137: 09 07 15 07 00 00 0B 
>0000113E: 09 07 16 07 00 00 0C 
>00001145: 09 07 17 07 00 00 0D 
>0000114C: 09 07 18 07 00 00 0E 
>00001153: 09 07 19 07 00 00 0F 
>0000115A: 09 07 1A 07 00 00 10 
>00001161: 09 07 1B 07 00 00 11 
>00001168: 09 07 1C 07 00 00 12 
>0000116F: 09 07 1D 07 00 00 13 
>00001176: 09 07 1E 07 30 00 14 
>0000117D: 29 02 
>0000117F: 29 02 
>00001181: 1E 82 
>00001183: 12 06 0B 20 30 00 
>00001189: 05 91 08 07 09 07 67 00 02 00 73 04 10 10 05 FF 00 
>0000119A: 09 07 F8 02 30 00 FE 
>000011A1: 09 07 FA 02 00 00 FF 
>000011A8: 09 07 0F 07 00 00 05 
>000011AF: 29 02 
>000011B1: 29 02 
>000011B3: 29 02 
>000011B5: 01 86 07 01 45 03 
>000011BB: 02 87 F7 02 00 00 00 
>000011C2: 29 02 
>000011C4: 05 91 4F 03 50 03 68 00 02 00 78 00 10 10 00 01 00 
>000011D5: 09 07 F9 02 00 00 01 
>000011DC: 09 07 FA 02 30 00 00 
>000011E3: 29 02 
>000011E5: 05 91 47 03 48 03 69 00 02 00 36 00 10 10 00 01 00 
>000011F6: 09 07 F9 02 00 00 01 
>000011FD: 09 07 FA 02 30 00 00 
>00001204: 29 02 
>00001206: 0A 82 
>00001208: 12 86 69 00 01 00 
>0000120E: 17 02 
>00001210: 29 02 
>00001212: 05 91 53 03 54 03 6A 00 02 00 7A 00 10 10 00 01 00 
>00001223: 09 07 F9 02 30 00 01 
>0000122A: 09 07 FA 02 00 00 00 
>00001231: 29 02 
>00001233: 29 02 
>00001235: 0A 82 
>00001237: 12 86 69 00 01 00 
>0000123D: 17 02 
>0000123F: 29 02 
>00001241: 29 02 
>00001243: 0A 82 
>00001245: 12 86 69 00 01 00 
>0000124B: 17 02 
>0000124D: 29 02 
>0000124F: 05 91 57 03 58 03 6B 00 02 00 47 00 10 10 00 02 00 
>00001260: 09 07 59 03 00 00 00 
>00001267: 09 07 5A 03 30 00 01 
>0000126E: 09 07 5B 03 00 00 02 
>00001275: 29 02 
>00001277: 29 02 
>00001279: 0A 82 
>0000127B: 12 86 6B 00 01 00 
>00001281: 12 06 6B 00 02 00 
>00001287: 16 02 
>00001289: 12 06 69 00 00 00 
>0000128F: 16 02 
>00001291: 29 02 
>00001293: 05 91 5C 03 02 03 6C 00 02 00 48 00 10 10 00 01 00 
>000012A4: 09 07 FA 02 30 00 00 
>000012AB: 09 07 F9 02 00 00 01 
>000012B2: 29 02 
>000012B4: 05 91 5D 03 02 03 6D 00 02 00 49 00 10 10 00 01 00 
>000012C5: 09 07 FA 02 30 00 00 
>000012CC: 09 07 F9 02 00 00 01 
>000012D3: 29 02 
>000012D5: 05 91 5E 03 02 03 6E 00 02 00 4A 00 10 10 00 01 00 
>000012E6: 09 07 FA 02 30 00 00 
>000012ED: 09 07 F9 02 00 00 01 
>000012F4: 29 02 
>000012F6: 05 91 5F 03 02 03 6F 00 02 00 4B 00 10 10 00 01 00 
>00001307: 09 07 FA 02 30 00 00 
>0000130E: 09 07 F9 02 00 00 01 
>00001315: 29 02 
>00001317: 05 91 60 03 02 03 70 00 02 00 4C 00 10 10 00 01 00 
>00001328: 09 07 FA 02 30 00 00 
>0000132F: 09 07 F9 02 00 00 01 
>00001336: 29 02 
>00001338: 05 91 61 03 02 03 71 00 02 00 4D 00 10 10 00 01 00 
>00001349: 09 07 FA 02 30 00 00 
>00001350: 09 07 F9 02 00 00 01 
>00001357: 29 02 
>00001359: 05 91 62 03 02 03 72 00 02 00 4E 00 10 10 00 01 00 
>0000136A: 09 07 FA 02 30 00 00 
>00001371: 09 07 F9 02 00 00 01 
>00001378: 29 02 
>0000137A: 05 91 63 03 02 03 73 00 02 00 4F 00 10 10 00 01 00 
>0000138B: 09 07 FA 02 30 00 00 
>00001392: 09 07 F9 02 00 00 01 
>00001399: 29 02 
>0000139B: 05 91 64 03 02 03 74 00 02 00 50 00 10 10 00 01 00 
>000013AC: 09 07 FA 02 30 00 00 
>000013B3: 09 07 F9 02 00 00 01 
>000013BA: 29 02 
>000013BC: 05 91 65 03 02 03 75 00 02 00 51 00 10 10 00 01 00 
>000013CD: 09 07 FA 02 30 00 00 
>000013D4: 09 07 F9 02 00 00 01 
>000013DB: 29 02 
>000013DD: 29 02 
>000013DF: 05 91 66 03 67 03 76 00 02 00 71 00 10 10 00 01 00 
>000013F0: 09 07 FA 02 30 00 00 
>000013F7: 09 07 F9 02 00 00 01 
>000013FE: 29 02 
>00001400: 0A 82 
>00001402: 12 06 76 00 00 00 
>00001408: 05 91 69 03 68 03 77 00 02 00 52 00 10 10 00 01 00 
>00001419: 09 07 FA 02 00 00 00 
>00001420: 09 07 F9 02 30 00 01 
>00001427: 29 02 
>00001429: 05 91 6A 03 68 03 78 00 02 00 53 00 10 10 00 01 00 
>0000143A: 09 07 FA 02 00 00 00 
>00001441: 09 07 F9 02 30 00 01 
>00001448: 29 02 
>0000144A: 05 91 6B 03 68 03 79 00 02 00 54 00 10 10 00 01 00 
>0000145B: 09 07 FA 02 00 00 00 
>00001462: 09 07 F9 02 30 00 01 
>00001469: 29 02 
>0000146B: 05 91 6C 03 68 03 7A 00 02 00 55 00 10 10 00 01 00 
>0000147C: 09 07 FA 02 00 00 00 
>00001483: 09 07 F9 02 30 00 01 
>0000148A: 29 02 
>0000148C: 05 91 6D 03 68 03 7B 00 02 00 56 00 10 10 00 01 00 
>0000149D: 09 07 FA 02 00 00 00 
>000014A4: 09 07 F9 02 30 00 01 
>000014AB: 29 02 
>000014AD: 05 91 6E 03 68 03 7C 00 02 00 57 00 10 10 00 01 00 
>000014BE: 09 07 FA 02 00 00 00 
>000014C5: 09 07 F9 02 30 00 01 
>000014CC: 29 02 
>000014CE: 05 91 6F 03 68 03 7D 00 02 00 58 00 10 10 00 01 00 
>000014DF: 09 07 FA 02 00 00 00 
>000014E6: 09 07 F9 02 30 00 01 
>000014ED: 29 02 
>000014EF: 05 91 70 03 68 03 7E 00 02 00 59 00 10 10 00 01 00 
>00001500: 09 07 FA 02 00 00 00 
>00001507: 09 07 F9 02 30 00 01 
>0000150E: 29 02 
>00001510: 05 91 71 03 68 03 7F 00 02 00 5A 00 10 10 00 01 00 
>00001521: 09 07 FA 02 00 00 00 
>00001528: 09 07 F9 02 30 00 01 
>0000152F: 29 02 
>00001531: 05 91 72 03 68 03 80 00 02 00 5B 00 10 10 00 01 00 
>00001542: 09 07 FA 02 00 00 00 
>00001549: 09 07 F9 02 30 00 01 
>00001550: 29 02 
>00001552: 05 91 73 03 68 03 81 00 02 00 5C 00 10 10 00 01 00 
>00001563: 09 07 FA 02 00 00 00 
>0000156A: 09 07 F9 02 30 00 01 
>00001571: 29 02 
>00001573: 05 91 74 03 68 03 82 00 02 00 5D 00 10 10 00 01 00 
>00001584: 09 07 FA 02 00 00 00 
>0000158B: 09 07 F9 02 30 00 01 
>00001592: 29 02 
>00001594: 05 91 75 03 68 03 83 00 02 00 5E 00 10 10 00 01 00 
>000015A5: 09 07 FA 02 00 00 00 
>000015AC: 09 07 F9 02 30 00 01 
>000015B3: 29 02 
>000015B5: 05 91 76 03 68 03 84 00 02 00 5F 00 10 10 00 01 00 
>000015C6: 09 07 FA 02 00 00 00 
>000015CD: 09 07 F9 02 30 00 01 
>000015D4: 29 02 
>000015D6: 05 91 77 03 68 03 85 00 02 00 62 00 10 10 00 01 00 
>000015E7: 09 07 FA 02 00 00 00 
>000015EE: 09 07 F9 02 30 00 01 
>000015F5: 29 02 
>000015F7: 05 91 78 03 68 03 86 00 02 00 63 00 10 10 00 01 00 
>00001608: 09 07 FA 02 00 00 00 
>0000160F: 09 07 F9 02 30 00 01 
>00001616: 29 02 
>00001618: 05 91 79 03 68 03 87 00 02 00 64 00 10 10 00 01 00 
>00001629: 09 07 FA 02 00 00 00 
>00001630: 09 07 F9 02 30 00 01 
>00001637: 29 02 
>00001639: 05 91 7A 03 68 03 88 00 02 00 65 00 10 10 00 01 00 
>0000164A: 09 07 FA 02 00 00 00 
>00001651: 09 07 F9 02 30 00 01 
>00001658: 29 02 
>0000165A: 05 91 7B 03 68 03 89 00 02 00 66 00 10 10 00 01 00 
>0000166B: 09 07 FA 02 00 00 00 
>00001672: 09 07 F9 02 30 00 01 
>00001679: 29 02 
>0000167B: 05 91 7C 03 68 03 8A 00 02 00 67 00 10 10 00 01 00 
>0000168C: 09 07 FA 02 00 00 00 
>00001693: 09 07 F9 02 30 00 01 
>0000169A: 29 02 
>0000169C: 05 91 7D 03 68 03 8B 00 02 00 68 00 10 10 00 01 00 
>000016AD: 09 07 FA 02 00 00 00 
>000016B4: 09 07 F9 02 30 00 01 
>000016BB: 29 02 
>000016BD: 05 91 7E 03 68 03 8C 00 02 00 69 00 10 10 00 01 00 
>000016CE: 09 07 FA 02 00 00 00 
>000016D5: 09 07 F9 02 30 00 01 
>000016DC: 29 02 
>000016DE: 05 91 7F 03 68 03 8D 00 02 00 6A 00 10 10 00 01 00 
>000016EF: 09 07 FA 02 00 00 00 
>000016F6: 09 07 F9 02 30 00 01 
>000016FD: 29 02 
>000016FF: 05 91 80 03 68 03 8E 00 02 00 6B 00 10 10 00 01 00 
>00001710: 09 07 FA 02 00 00 00 
>00001717: 09 07 F9 02 30 00 01 
>0000171E: 29 02 
>00001720: 29 02 
>00001722: 05 91 51 03 52 03 8F 00 02 00 79 00 10 10 00 01 00 
>00001733: 09 07 F9 02 30 00 01 
>0000173A: 09 07 FA 02 00 00 00 
>00001741: 29 02 
>00001743: 05 91 55 03 56 03 90 00 02 00 70 00 10 10 00 01 00 
>00001754: 09 07 F9 02 00 00 01 
>0000175B: 09 07 FA 02 30 00 00 
>00001762: 29 02 
>00001764: 05 91 49 03 4A 03 91 00 02 00 7C 00 10 10 00 01 00 
>00001775: 09 07 F9 02 30 00 01 
>0000177C: 09 07 FA 02 00 00 00 
>00001783: 29 02 
>00001785: 05 91 4B 03 4C 03 92 00 01 00 63 00 10 10 00 01 00 
>00001796: 09 07 F9 02 30 00 01 
>0000179D: 09 07 FA 02 00 00 00 
>000017A4: 29 02 
>000017A6: 05 91 4D 03 4E 03 93 00 02 00 7B 00 10 10 00 01 00 
>000017B7: 09 07 FA 02 30 00 00 
>000017BE: 09 07 F9 02 00 00 01 
>000017C5: 29 02 
>000017C7: 05 91 3B 09 3C 09 94 00 01 00 D1 00 10 10 00 02 00 
>000017D8: 09 07 38 09 30 00 00 
>000017DF: 09 07 39 09 00 00 01 
>000017E6: 09 07 3A 09 00 00 02 
>000017ED: 29 02 
>000017EF: 05 91 43 09 44 09 95 00 01 00 D2 00 10 10 00 01 00 
>00001800: 09 07 39 09 30 00 00 
>00001807: 09 07 38 09 00 00 01 
>0000180E: 29 02 
>00001810: 05 91 3D 09 3E 09 96 00 01 00 D3 00 10 10 00 03 00 
>00001821: 09 07 3F 09 00 00 00 
>00001828: 09 07 40 09 30 00 01 
>0000182F: 09 07 41 09 00 00 02 
>00001836: 09 07 42 09 00 00 03 
>0000183D: 29 02 
>0000183F: 19 82 
>00001841: 12 06 94 00 01 00 
>00001847: 05 91 45 09 46 09 97 00 01 00 D4 00 10 10 00 01 00 
>00001858: 09 07 38 09 00 00 01 
>0000185F: 09 07 39 09 30 00 00 
>00001866: 29 02 
>00001868: 29 02 
>0000186A: 29 02 
>0000186C: 01 86 0B 01 2B 03 
>00001872: 02 87 F7 02 00 00 00 
>00001879: 29 02 
>0000187B: 05 91 2D 03 2E 03 98 00 02 00 70 03 10 10 00 02 00 
>0000188C: 09 07 FA 02 00 00 00 
>00001893: 09 07 F9 02 30 00 01 
>0000189A: 09 07 F8 02 00 00 02 
>000018A1: 29 02 
>000018A3: 0A 82 
>000018A5: 12 06 98 00 00 00 
>000018AB: 05 91 47 06 48 06 99 00 02 00 75 03 10 10 00 01 00 
>000018BC: 09 07 49 06 30 00 00 
>000018C3: 09 07 4A 06 00 00 01 
>000018CA: 29 02 
>000018CC: 05 91 2F 03 30 03 9A 00 02 00 72 03 10 10 00 01 00 
>000018DD: 09 07 FA 02 30 00 00 
>000018E4: 09 07 F9 02 00 00 01 
>000018EB: 29 02 
>000018ED: 05 91 31 03 32 03 9B 00 02 00 7B 03 10 10 00 01 00 
>000018FE: 09 07 33 03 30 00 00 
>00001905: 09 07 34 03 00 00 01 
>0000190C: 29 02 
>0000190E: 29 02 
>00001910: 29 02 
>00001912: 01 86 68 00 81 03 
>00001918: 02 87 81 03 00 00 00 
>0000191F: 29 02 
>00001921: 02 87 62 07 00 00 00 
>00001928: 29 02 
>0000192A: 02 87 AA 00 00 00 00 
>00001931: 29 02 
>00001933: 05 91 9A 03 9B 03 9C 00 02 00 7E 00 10 10 00 01 00 
>00001944: 09 07 FA 02 00 00 00 
>0000194B: 09 07 F9 02 30 00 01 
>00001952: 29 02 
>00001954: 0A 82 
>00001956: 12 06 9C 00 00 00 
>0000195C: 05 91 9C 03 9D 03 9D 00 02 00 7F 00 10 10 00 01 00 
>0000196D: 09 07 9E 03 30 00 00 
>00001974: 09 07 9F 03 00 00 01 
>0000197B: 29 02 
>0000197D: 05 91 A0 03 A1 03 9E 00 02 00 BF 00 10 10 00 01 00 
>0000198E: 09 07 F9 02 00 00 01 
>00001995: 09 07 FA 02 30 00 00 
>0000199C: 29 02 
>0000199E: 29 02 
>000019A0: 0F 0F A2 03 A3 03 9F 00 00 00 FF FF 00 0D 01 
>000019AF: 05 91 BE 03 BF 03 A0 00 02 00 BE 00 10 10 00 01 00 
>000019C0: 09 07 FA 02 00 00 00 
>000019C7: 09 07 F9 02 30 00 01 
>000019CE: 29 02 
>000019D0: 0A 82 
>000019D2: 12 86 9D 00 01 00 
>000019D8: 17 02 
>000019DA: 29 02 
>000019DC: 05 91 CE 03 CF 03 A1 00 02 00 BD 00 10 10 00 01 00 
>000019ED: 09 07 F9 02 00 00 01 
>000019F4: 09 07 FA 02 30 00 00 
>000019FB: 29 02 
>000019FD: 05 91 C0 03 C1 03 A2 00 02 00 BA 00 10 10 00 01 00 
>00001A0E: 09 07 F9 02 00 00 01 
>00001A15: 09 07 FA 02 30 00 00 
>00001A1C: 29 02 
>00001A1E: 29 02 
>00001A20: 05 91 C2 03 C3 03 A3 00 02 00 4C 01 10 10 00 01 00 
>00001A31: 09 07 FA 02 30 00 00 
>00001A38: 09 07 F9 02 00 00 01 
>00001A3F: 29 02 
>00001A41: 05 91 C8 03 C9 03 A4 00 02 00 4F 01 04 10 00 FF 00 
>00001A52: 09 07 2F 04 10 00 00 
>00001A59: 09 07 30 04 00 00 01 
>00001A60: 09 07 31 04 00 00 02 
>00001A67: 09 07 32 04 00 00 03 
>00001A6E: 09 07 33 04 00 00 04 
>00001A75: 09 07 34 04 00 00 05 
>00001A7C: 09 07 35 04 00 00 06 
>00001A83: 09 07 36 04 00 00 07 
>00001A8A: 09 07 37 04 00 00 08 
>00001A91: 09 07 38 04 00 00 09 
>00001A98: 09 07 39 04 00 00 0A 
>00001A9F: 09 07 3A 04 00 00 0B 
>00001AA6: 09 07 3B 04 00 00 0C 
>00001AAD: 09 07 3C 04 00 00 0D 
>00001AB4: 09 07 3D 04 00 00 0E 
>00001ABB: 09 07 3E 04 00 00 0F 
>00001AC2: 09 07 3F 04 00 00 10 
>00001AC9: 09 07 40 04 00 00 11 
>00001AD0: 09 07 41 04 00 00 12 
>00001AD7: 09 07 42 04 00 00 13 
>00001ADE: 09 07 43 04 00 00 FF 
>00001AE5: 29 02 
>00001AE7: 05 91 C4 03 C5 03 A5 00 02 00 4D 01 10 10 00 01 00 
>00001AF8: 09 07 FA 02 30 00 00 
>00001AFF: 09 07 F9 02 00 00 01 
>00001B06: 29 02 
>00001B08: 05 91 CA 03 CB 03 A6 00 02 00 50 01 04 10 00 FF 00 
>00001B19: 09 07 2F 04 10 00 00 
>00001B20: 09 07 30 04 00 00 01 
>00001B27: 09 07 31 04 00 00 02 
>00001B2E: 09 07 32 04 00 00 03 
>00001B35: 09 07 33 04 00 00 04 
>00001B3C: 09 07 34 04 00 00 05 
>00001B43: 09 07 35 04 00 00 06 
>00001B4A: 09 07 36 04 00 00 07 
>00001B51: 09 07 37 04 00 00 08 
>00001B58: 09 07 38 04 00 00 09 
>00001B5F: 09 07 39 04 00 00 0A 
>00001B66: 09 07 3A 04 00 00 0B 
>00001B6D: 09 07 3B 04 00 00 0C 
>00001B74: 09 07 3C 04 00 00 0D 
>00001B7B: 09 07 3D 04 00 00 0E 
>00001B82: 09 07 3E 04 00 00 0F 
>00001B89: 09 07 3F 04 00 00 10 
>00001B90: 09 07 40 04 00 00 11 
>00001B97: 09 07 41 04 00 00 12 
>00001B9E: 09 07 42 04 00 00 13 
>00001BA5: 09 07 43 04 00 00 FF 
>00001BAC: 29 02 
>00001BAE: 05 91 C6 03 C7 03 A7 00 02 00 4E 01 10 10 00 01 00 
>00001BBF: 09 07 FA 02 30 00 00 
>00001BC6: 09 07 F9 02 00 00 01 
>00001BCD: 29 02 
>00001BCF: 05 91 CC 03 CD 03 A8 00 02 00 51 01 04 10 00 FF 00 
>00001BE0: 09 07 2F 04 10 00 00 
>00001BE7: 09 07 30 04 00 00 01 
>00001BEE: 09 07 31 04 00 00 02 
>00001BF5: 09 07 32 04 00 00 03 
>00001BFC: 09 07 33 04 00 00 04 
>00001C03: 09 07 34 04 00 00 05 
>00001C0A: 09 07 35 04 00 00 06 
>00001C11: 09 07 36 04 00 00 07 
>00001C18: 09 07 37 04 00 00 08 
>00001C1F: 09 07 38 04 00 00 09 
>00001C26: 09 07 39 04 00 00 0A 
>00001C2D: 09 07 3A 04 00 00 0B 
>00001C34: 09 07 3B 04 00 00 0C 
>00001C3B: 09 07 3C 04 00 00 0D 
>00001C42: 09 07 3D 04 00 00 0E 
>00001C49: 09 07 3E 04 00 00 0F 
>00001C50: 09 07 3F 04 00 00 10 
>00001C57: 09 07 40 04 00 00 11 
>00001C5E: 09 07 41 04 00 00 12 
>00001C65: 09 07 42 04 00 00 13 
>00001C6C: 09 07 43 04 00 00 FF 
>00001C73: 29 02 
>00001C75: 02 87 AA 00 00 00 00 
>00001C7C: 29 02 
>00001C7E: 03 08 85 03 AA 00 86 03 
>00001C86: 03 08 D7 03 F7 02 D8 03 
>00001C8E: 0A 82 
>00001C90: 14 08 9E 00 01 00 01 00 
>00001C98: 05 91 91 03 99 03 A9 00 02 00 80 00 10 10 00 01 00 
>00001CA9: 09 07 FA 02 00 00 00 
>00001CB0: 09 07 F9 02 30 00 01 
>00001CB7: 29 02 
>00001CB9: 29 02 
>00001CBB: 05 91 BA 03 BB 03 AA 00 02 00 88 00 10 10 00 01 00 
>00001CCC: 09 07 FA 02 30 00 00 
>00001CD3: 09 07 F9 02 00 00 01 
>00001CDA: 29 02 
>00001CDC: 05 91 D2 03 D3 03 AB 00 02 00 A0 00 10 10 00 01 00 
>00001CED: 09 07 FA 02 30 00 00 
>00001CF4: 09 07 F9 02 00 00 01 
>00001CFB: 29 02 
>00001CFD: 05 91 BC 03 BD 03 AC 00 02 00 90 00 10 10 00 01 00 
>00001D0E: 09 07 FA 02 00 00 00 
>00001D15: 09 07 F9 02 30 00 01 
>00001D1C: 29 02 
>00001D1E: 05 91 D0 03 D1 03 AD 00 02 00 98 00 10 10 00 01 00 
>00001D2F: 09 07 FA 02 30 00 00 
>00001D36: 09 07 F9 02 00 00 01 
>00001D3D: 29 02 
>00001D3F: 05 91 D4 03 9D 03 AE 00 02 00 A8 00 10 10 00 01 00 
>00001D50: 09 07 D5 03 30 00 00 
>00001D57: 09 07 D6 03 00 00 01 
>00001D5E: 29 02 
>00001D60: 05 91 D9 03 E1 03 AF 00 02 00 E8 00 10 10 00 04 00 
>00001D71: 09 07 E2 03 30 00 00 
>00001D78: 09 07 E3 03 00 00 01 
>00001D7F: 09 07 E4 03 00 00 02 
>00001D86: 09 07 E5 03 00 00 03 
>00001D8D: 09 07 E6 03 00 00 04 
>00001D94: 29 02 
>00001D96: 03 08 87 03 AA 00 88 03 
>00001D9E: 03 08 D7 03 F7 02 D8 03 
>00001DA6: 0A 82 
>00001DA8: 14 08 9E 00 01 00 01 00 
>00001DB0: 05 91 92 03 99 03 B0 00 02 00 81 00 10 10 00 01 00 
>00001DC1: 09 07 FA 02 00 00 00 
>00001DC8: 09 07 F9 02 30 00 01 
>00001DCF: 29 02 
>00001DD1: 29 02 
>00001DD3: 05 91 BA 03 BB 03 B1 00 02 00 89 00 10 10 00 01 00 
>00001DE4: 09 07 FA 02 30 00 00 
>00001DEB: 09 07 F9 02 00 00 01 
>00001DF2: 29 02 
>00001DF4: 05 91 D2 03 D3 03 B2 00 02 00 A1 00 10 10 00 01 00 
>00001E05: 09 07 FA 02 30 00 00 
>00001E0C: 09 07 F9 02 00 00 01 
>00001E13: 29 02 
>00001E15: 05 91 BC 03 BD 03 B3 00 02 00 91 00 10 10 00 01 00 
>00001E26: 09 07 FA 02 00 00 00 
>00001E2D: 09 07 F9 02 30 00 01 
>00001E34: 29 02 
>00001E36: 05 91 D0 03 D1 03 B4 00 02 00 99 00 10 10 00 01 00 
>00001E47: 09 07 FA 02 30 00 00 
>00001E4E: 09 07 F9 02 00 00 01 
>00001E55: 29 02 
>00001E57: 05 91 D4 03 9D 03 B5 00 02 00 A9 00 10 10 00 01 00 
>00001E68: 09 07 D5 03 30 00 00 
>00001E6F: 09 07 D6 03 00 00 01 
>00001E76: 29 02 
>00001E78: 05 91 DA 03 E1 03 B6 00 02 00 E9 00 10 10 00 04 00 
>00001E89: 09 07 E2 03 30 00 00 
>00001E90: 09 07 E3 03 00 00 01 
>00001E97: 09 07 E4 03 00 00 02 
>00001E9E: 09 07 E5 03 00 00 03 
>00001EA5: 09 07 E6 03 00 00 04 
>00001EAC: 29 02 
>00001EAE: 03 08 89 03 AA 00 8A 03 
>00001EB6: 03 08 D7 03 F7 02 D8 03 
>00001EBE: 0A 82 
>00001EC0: 14 08 9E 00 01 00 01 00 
>00001EC8: 05 91 93 03 99 03 B7 00 02 00 82 00 10 10 00 01 00 
>00001ED9: 09 07 FA 02 00 00 00 
>00001EE0: 09 07 F9 02 30 00 01 
>00001EE7: 29 02 
>00001EE9: 05 91 83 03 84 03 B8 00 02 00 C2 00 10 10 00 01 00 
>00001EFA: 09 07 FA 02 30 00 00 
>00001F01: 09 07 F9 02 00 00 01 
>00001F08: 29 02 
>00001F0A: 29 02 
>00001F0C: 05 91 BA 03 BB 03 B9 00 02 00 8A 00 10 10 00 01 00 
>00001F1D: 09 07 FA 02 30 00 00 
>00001F24: 09 07 F9 02 00 00 01 
>00001F2B: 29 02 
>00001F2D: 05 91 D2 03 D3 03 BA 00 02 00 A2 00 10 10 00 01 00 
>00001F3E: 09 07 FA 02 30 00 00 
>00001F45: 09 07 F9 02 00 00 01 
>00001F4C: 29 02 
>00001F4E: 05 91 BC 03 BD 03 BB 00 02 00 92 00 10 10 00 01 00 
>00001F5F: 09 07 FA 02 00 00 00 
>00001F66: 09 07 F9 02 30 00 01 
>00001F6D: 29 02 
>00001F6F: 05 91 D0 03 D1 03 BC 00 02 00 9A 00 10 10 00 01 00 
>00001F80: 09 07 FA 02 30 00 00 
>00001F87: 09 07 F9 02 00 00 01 
>00001F8E: 29 02 
>00001F90: 05 91 D4 03 9D 03 BD 00 02 00 AA 00 10 10 00 01 00 
>00001FA1: 09 07 D5 03 30 00 00 
>00001FA8: 09 07 D6 03 00 00 01 
>00001FAF: 29 02 
>00001FB1: 05 91 DB 03 E1 03 BE 00 02 00 EA 00 10 10 00 04 00 
>00001FC2: 09 07 E2 03 30 00 00 
>00001FC9: 09 07 E3 03 00 00 01 
>00001FD0: 09 07 E4 03 00 00 02 
>00001FD7: 09 07 E5 03 00 00 03 
>00001FDE: 09 07 E6 03 00 00 04 
>00001FE5: 29 02 
>00001FE7: 03 08 8B 03 AA 00 8C 03 
>00001FEF: 03 08 D7 03 F7 02 D8 03 
>00001FF7: 0A 82 
>00001FF9: 14 08 9E 00 01 00 01 00 
>00002001: 05 91 94 03 99 03 BF 00 02 00 83 00 10 10 00 01 00 
>00002012: 09 07 FA 02 00 00 00 
>00002019: 09 07 F9 02 30 00 01 
>00002020: 29 02 
>00002022: 29 02 
>00002024: 05 91 BA 03 BB 03 C0 00 02 00 8B 00 10 10 00 01 00 
>00002035: 09 07 FA 02 30 00 00 
>0000203C: 09 07 F9 02 00 00 01 
>00002043: 29 02 
>00002045: 05 91 D2 03 D3 03 C1 00 02 00 A3 00 10 10 00 01 00 
>00002056: 09 07 FA 02 30 00 00 
>0000205D: 09 07 F9 02 00 00 01 
>00002064: 29 02 
>00002066: 05 91 BC 03 BD 03 C2 00 02 00 93 00 10 10 00 01 00 
>00002077: 09 07 FA 02 00 00 00 
>0000207E: 09 07 F9 02 30 00 01 
>00002085: 29 02 
>00002087: 05 91 D0 03 D1 03 C3 00 02 00 9B 00 10 10 00 01 00 
>00002098: 09 07 FA 02 30 00 00 
>0000209F: 09 07 F9 02 00 00 01 
>000020A6: 29 02 
>000020A8: 05 91 D4 03 9D 03 C4 00 02 00 AB 00 10 10 00 01 00 
>000020B9: 09 07 D5 03 30 00 00 
>000020C0: 09 07 D6 03 00 00 01 
>000020C7: 29 02 
>000020C9: 05 91 DC 03 E1 03 C5 00 02 00 EB 00 10 10 00 04 00 
>000020DA: 09 07 E2 03 30 00 00 
>000020E1: 09 07 E3 03 00 00 01 
>000020E8: 09 07 E4 03 00 00 02 
>000020EF: 09 07 E5 03 00 00 03 
>000020F6: 09 07 E6 03 00 00 04 
>000020FD: 29 02 
>000020FF: 03 08 8D 03 AA 00 8E 03 
>00002107: 03 08 D7 03 F7 02 D8 03 
>0000210F: 0A 82 
>00002111: 14 08 9E 00 01 00 01 00 
>00002119: 05 91 95 03 99 03 C6 00 02 00 84 00 10 10 00 01 00 
>0000212A: 09 07 FA 02 00 00 00 
>00002131: 09 07 F9 02 30 00 01 
>00002138: 29 02 
>0000213A: 29 02 
>0000213C: 05 91 BA 03 BB 03 C7 00 02 00 8C 00 10 10 00 01 00 
>0000214D: 09 07 FA 02 30 00 00 
>00002154: 09 07 F9 02 00 00 01 
>0000215B: 29 02 
>0000215D: 05 91 D2 03 D3 03 C8 00 02 00 A4 00 10 10 00 01 00 
>0000216E: 09 07 FA 02 30 00 00 
>00002175: 09 07 F9 02 00 00 01 
>0000217C: 29 02 
>0000217E: 05 91 BC 03 BD 03 C9 00 02 00 94 00 10 10 00 01 00 
>0000218F: 09 07 FA 02 00 00 00 
>00002196: 09 07 F9 02 30 00 01 
>0000219D: 29 02 
>0000219F: 05 91 D0 03 D1 03 CA 00 02 00 9C 00 10 10 00 01 00 
>000021B0: 09 07 FA 02 30 00 00 
>000021B7: 09 07 F9 02 00 00 01 
>000021BE: 29 02 
>000021C0: 05 91 D4 03 9D 03 CB 00 02 00 AC 00 10 10 00 01 00 
>000021D1: 09 07 D5 03 30 00 00 
>000021D8: 09 07 D6 03 00 00 01 
>000021DF: 29 02 
>000021E1: 05 91 DD 03 E1 03 CC 00 02 00 EC 00 10 10 00 04 00 
>000021F2: 09 07 E2 03 30 00 00 
>000021F9: 09 07 E3 03 00 00 01 
>00002200: 09 07 E4 03 00 00 02 
>00002207: 09 07 E5 03 00 00 03 
>0000220E: 09 07 E6 03 00 00 04 
>00002215: 29 02 
>00002217: 03 08 8F 03 AA 00 90 03 
>0000221F: 03 08 D7 03 F7 02 D8 03 
>00002227: 0A 82 
>00002229: 14 08 9E 00 01 00 01 00 
>00002231: 05 91 96 03 99 03 CD 00 02 00 85 00 10 10 00 01 00 
>00002242: 09 07 FA 02 00 00 00 
>00002249: 09 07 F9 02 30 00 01 
>00002250: 29 02 
>00002252: 29 02 
>00002254: 05 91 BA 03 BB 03 CE 00 02 00 8D 00 10 10 00 01 00 
>00002265: 09 07 FA 02 30 00 00 
>0000226C: 09 07 F9 02 00 00 01 
>00002273: 29 02 
>00002275: 05 91 BC 03 BD 03 CF 00 02 00 95 00 10 10 00 01 00 
>00002286: 09 07 FA 02 00 00 00 
>0000228D: 09 07 F9 02 30 00 01 
>00002294: 29 02 
>00002296: 05 91 D2 03 D3 03 D0 00 02 00 A5 00 10 10 00 01 00 
>000022A7: 09 07 FA 02 30 00 00 
>000022AE: 09 07 F9 02 00 00 01 
>000022B5: 29 02 
>000022B7: 05 91 D0 03 D1 03 D1 00 02 00 9D 00 10 10 00 01 00 
>000022C8: 09 07 FA 02 30 00 00 
>000022CF: 09 07 F9 02 00 00 01 
>000022D6: 29 02 
>000022D8: 05 91 D4 03 9D 03 D2 00 02 00 AD 00 10 10 00 01 00 
>000022E9: 09 07 D5 03 30 00 00 
>000022F0: 09 07 D6 03 00 00 01 
>000022F7: 29 02 
>000022F9: 05 91 DE 03 E1 03 D3 00 02 00 ED 00 10 10 00 04 00 
>0000230A: 09 07 E2 03 30 00 00 
>00002311: 09 07 E3 03 00 00 01 
>00002318: 09 07 E4 03 00 00 02 
>0000231F: 09 07 E5 03 00 00 03 
>00002326: 09 07 E6 03 00 00 04 
>0000232D: 29 02 
>0000232F: 03 08 B2 07 AA 00 B3 07 
>00002337: 03 08 D7 03 F7 02 D8 03 
>0000233F: 0A 82 
>00002341: 14 08 9E 00 01 00 01 00 
>00002349: 05 91 97 03 99 03 D4 00 02 00 86 00 10 10 00 01 00 
>0000235A: 09 07 FA 02 00 00 00 
>00002361: 09 07 F9 02 30 00 01 
>00002368: 29 02 
>0000236A: 29 02 
>0000236C: 0A 82 
>0000236E: 12 06 D7 00 01 00 
>00002374: 05 91 BA 03 BB 03 D5 00 02 00 8E 00 10 10 00 01 00 
>00002385: 09 07 FA 02 30 00 00 
>0000238C: 09 07 F9 02 00 00 01 
>00002393: 29 02 
>00002395: 29 02 
>00002397: 0A 82 
>00002399: 12 06 D5 00 00 00 
>0000239F: 05 91 BC 03 BD 03 D6 00 02 00 96 00 10 10 00 01 00 
>000023B0: 09 07 FA 02 00 00 00 
>000023B7: 09 07 F9 02 30 00 01 
>000023BE: 29 02 
>000023C0: 29 02 
>000023C2: 05 91 D2 03 D3 03 D7 00 02 00 A6 00 10 10 00 01 00 
>000023D3: 09 07 FA 02 30 00 00 
>000023DA: 09 07 F9 02 00 00 01 
>000023E1: 29 02 
>000023E3: 05 91 D0 03 D1 03 D8 00 02 00 9E 00 10 10 00 01 00 
>000023F4: 09 07 FA 02 30 00 00 
>000023FB: 09 07 F9 02 00 00 01 
>00002402: 29 02 
>00002404: 05 91 D4 03 9D 03 D9 00 02 00 AE 00 10 10 00 01 00 
>00002415: 09 07 D5 03 30 00 00 
>0000241C: 09 07 D6 03 00 00 01 
>00002423: 29 02 
>00002425: 05 91 DF 03 E1 03 DA 00 02 00 EE 00 10 10 00 04 00 
>00002436: 09 07 E2 03 30 00 00 
>0000243D: 09 07 E3 03 00 00 01 
>00002444: 09 07 E4 03 00 00 02 
>0000244B: 09 07 E5 03 00 00 03 
>00002452: 09 07 E6 03 00 00 04 
>00002459: 29 02 
>0000245B: 03 08 B4 07 AA 00 B5 07 
>00002463: 03 08 D7 03 F7 02 D8 03 
>0000246B: 0A 82 
>0000246D: 14 08 9E 00 01 00 01 00 
>00002475: 05 91 98 03 99 03 DB 00 02 00 87 00 10 10 00 01 00 
>00002486: 09 07 FA 02 00 00 00 
>0000248D: 09 07 F9 02 30 00 01 
>00002494: 29 02 
>00002496: 29 02 
>00002498: 0A 82 
>0000249A: 12 06 DE 00 01 00 
>000024A0: 05 91 BA 03 BB 03 DC 00 02 00 8F 00 10 10 00 01 00 
>000024B1: 09 07 FA 02 30 00 00 
>000024B8: 09 07 F9 02 00 00 01 
>000024BF: 29 02 
>000024C1: 29 02 
>000024C3: 0A 82 
>000024C5: 12 06 DC 00 00 00 
>000024CB: 05 91 BC 03 BD 03 DD 00 02 00 97 00 10 10 00 01 00 
>000024DC: 09 07 FA 02 00 00 00 
>000024E3: 09 07 F9 02 30 00 01 
>000024EA: 29 02 
>000024EC: 29 02 
>000024EE: 05 91 D2 03 D3 03 DE 00 02 00 A7 00 10 10 00 01 00 
>000024FF: 09 07 FA 02 30 00 00 
>00002506: 09 07 F9 02 00 00 01 
>0000250D: 29 02 
>0000250F: 05 91 D0 03 D1 03 DF 00 02 00 9F 00 10 10 00 01 00 
>00002520: 09 07 FA 02 30 00 00 
>00002527: 09 07 F9 02 00 00 01 
>0000252E: 29 02 
>00002530: 05 91 D4 03 9D 03 E0 00 02 00 AF 00 10 10 00 01 00 
>00002541: 09 07 D5 03 30 00 00 
>00002548: 09 07 D6 03 00 00 01 
>0000254F: 29 02 
>00002551: 05 91 E0 03 E1 03 E1 00 02 00 EF 00 10 10 00 04 00 
>00002562: 09 07 E2 03 30 00 00 
>00002569: 09 07 E3 03 00 00 01 
>00002570: 09 07 E4 03 00 00 02 
>00002577: 09 07 E5 03 00 00 03 
>0000257E: 09 07 E6 03 00 00 04 
>00002585: 29 02 
>00002587: 29 02 
>00002589: 01 86 0D 01 A2 03 
>0000258F: 05 91 A4 03 A5 03 E2 00 02 00 B6 00 10 10 00 01 00 
>000025A0: 09 07 FA 02 00 00 00 
>000025A7: 09 07 F9 02 30 00 01 
>000025AE: 29 02 
>000025B0: 05 91 A6 03 A7 03 E3 00 02 00 B7 00 10 10 00 01 00 
>000025C1: 09 07 FA 02 00 00 00 
>000025C8: 09 07 F9 02 30 00 01 
>000025CF: 29 02 
>000025D1: 0A 82 
>000025D3: 12 86 9D 00 01 00 
>000025D9: 17 02 
>000025DB: 29 02 
>000025DD: 05 91 A8 03 A9 03 E4 00 02 00 B0 00 10 10 00 01 00 
>000025EE: 09 07 FA 02 00 00 00 
>000025F5: 09 07 F9 02 30 00 01 
>000025FC: 29 02 
>000025FE: 05 91 AA 03 AB 03 E5 00 02 00 B1 00 10 10 00 01 00 
>0000260F: 09 07 FA 02 00 00 00 
>00002616: 09 07 F9 02 30 00 01 
>0000261D: 29 02 
>0000261F: 05 91 AE 03 AF 03 E6 00 02 00 B2 00 10 10 00 01 00 
>00002630: 09 07 FA 02 00 00 00 
>00002637: 09 07 F9 02 30 00 01 
>0000263E: 29 02 
>00002640: 05 91 AC 03 AD 03 E7 00 02 00 B3 00 10 10 00 01 00 
>00002651: 09 07 FA 02 00 00 00 
>00002658: 09 07 F9 02 30 00 01 
>0000265F: 29 02 
>00002661: 05 91 B0 03 B1 03 E8 00 02 00 B4 00 10 10 00 01 00 
>00002672: 09 07 FA 02 00 00 00 
>00002679: 09 07 F9 02 30 00 01 
>00002680: 29 02 
>00002682: 05 91 B2 03 B3 03 E9 00 02 00 B5 00 10 10 00 01 00 
>00002693: 09 07 FA 02 00 00 00 
>0000269A: 09 07 F9 02 30 00 01 
>000026A1: 29 02 
>000026A3: 05 91 B4 03 B5 03 EA 00 02 00 B8 00 10 10 00 01 00 
>000026B4: 09 07 FA 02 00 00 00 
>000026BB: 09 07 F9 02 30 00 01 
>000026C2: 29 02 
>000026C4: 05 91 B6 03 B7 03 EB 00 02 00 B9 00 10 10 00 01 00 
>000026D5: 09 07 FA 02 00 00 00 
>000026DC: 09 07 F9 02 30 00 01 
>000026E3: 29 02 
>000026E5: 05 91 B8 03 B9 03 EC 00 02 00 BC 00 10 10 00 03 00 
>000026F6: 09 07 FE 02 30 00 00 
>000026FD: 09 07 FF 02 00 00 01 
>00002704: 09 07 00 03 00 00 02 
>0000270B: 09 07 01 03 00 00 03 
>00002712: 29 02 
>00002714: 29 02 
>00002716: 29 02 
>00002718: 01 86 19 01 C8 04 
>0000271E: 02 87 C8 04 00 00 00 
>00002725: 29 02 
>00002727: 02 87 62 07 00 00 00 
>0000272E: 29 02 
>00002730: 02 87 AA 00 00 00 00 
>00002737: 29 02 
>00002739: 05 91 DC 04 DD 04 ED 00 02 00 F0 00 10 10 00 01 00 
>0000274A: 09 07 F9 02 30 00 01 
>00002751: 09 07 FA 02 00 00 00 
>00002758: 29 02 
>0000275A: 0A 82 
>0000275C: 12 06 ED 00 00 00 
>00002762: 05 91 E2 04 E3 04 EE 00 02 00 F1 00 10 10 00 01 00 
>00002773: 09 07 E4 04 30 00 00 
>0000277A: 09 07 E5 04 00 00 01 
>00002781: 29 02 
>00002783: 05 91 DE 04 DF 04 EF 00 02 00 23 01 10 10 00 01 00 
>00002794: 09 07 F9 02 00 00 01 
>0000279B: 09 07 FA 02 30 00 00 
>000027A2: 29 02 
>000027A4: 29 02 
>000027A6: 0F 0F E6 04 E7 04 F0 00 00 00 FF FF 00 1A 01 
>000027B5: 05 91 E0 04 E1 04 F1 00 02 00 22 01 10 10 00 01 00 
>000027C6: 09 07 FA 02 00 00 00 
>000027CD: 09 07 F9 02 30 00 01 
>000027D4: 29 02 
>000027D6: 0A 82 
>000027D8: 12 86 EE 00 01 00 
>000027DE: 17 02 
>000027E0: 29 02 
>000027E2: 05 91 02 05 03 05 F2 00 02 00 21 01 10 10 00 01 00 
>000027F3: 09 07 F9 02 00 00 01 
>000027FA: 09 07 FA 02 30 00 00 
>00002801: 29 02 
>00002803: 05 91 04 05 05 05 F3 00 02 00 BB 00 10 10 00 01 00 
>00002814: 09 07 F9 02 00 00 01 
>0000281B: 09 07 FA 02 30 00 00 
>00002822: 29 02 
>00002824: 29 02 
>00002826: 02 87 AA 00 00 00 00 
>0000282D: 29 02 
>0000282F: 03 08 CA 04 AA 00 CB 04 
>00002837: 0A 82 
>00002839: 14 08 EF 00 01 00 01 00 
>00002841: 05 91 D5 04 DB 04 F4 00 02 00 F2 00 10 10 00 01 00 
>00002852: 09 07 FA 02 00 00 00 
>00002859: 09 07 F9 02 30 00 01 
>00002860: 29 02 
>00002862: 29 02 
>00002864: 05 91 FE 04 FF 04 F5 00 02 00 F8 00 10 10 00 01 00 
>00002875: 09 07 FA 02 30 00 00 
>0000287C: 09 07 F9 02 00 00 01 
>00002883: 29 02 
>00002885: 05 91 D2 03 D3 03 F6 00 02 00 04 01 10 10 00 01 00 
>00002896: 09 07 FA 02 30 00 00 
>0000289D: 09 07 F9 02 00 00 01 
>000028A4: 29 02 
>000028A6: 05 91 00 05 01 05 F7 00 02 00 FE 00 10 10 00 01 00 
>000028B7: 09 07 FA 02 30 00 00 
>000028BE: 09 07 F9 02 00 00 01 
>000028C5: 29 02 
>000028C7: 05 91 06 05 E3 04 F8 00 02 00 10 01 10 10 00 01 00 
>000028D8: 09 07 07 05 30 00 00 
>000028DF: 09 07 08 05 00 00 01 
>000028E6: 29 02 
>000028E8: 05 91 09 05 0F 05 F9 00 02 00 36 01 10 10 00 04 00 
>000028F9: 09 07 E2 03 30 00 00 
>00002900: 09 07 E3 03 00 00 01 
>00002907: 09 07 E4 03 00 00 02 
>0000290E: 09 07 E5 03 00 00 03 
>00002915: 09 07 E6 03 00 00 04 
>0000291C: 29 02 
>0000291E: 03 08 CC 04 AA 00 CD 04 
>00002926: 0A 82 
>00002928: 14 08 EF 00 01 00 01 00 
>00002930: 05 91 D6 04 DB 04 FA 00 02 00 F3 00 10 10 00 01 00 
>00002941: 09 07 FA 02 00 00 00 
>00002948: 09 07 F9 02 30 00 01 
>0000294F: 29 02 
>00002951: 29 02 
>00002953: 05 91 FE 04 FF 04 FB 00 02 00 F9 00 10 10 00 01 00 
>00002964: 09 07 FA 02 30 00 00 
>0000296B: 09 07 F9 02 00 00 01 
>00002972: 29 02 
>00002974: 05 91 D2 03 D3 03 FC 00 02 00 05 01 10 10 00 01 00 
>00002985: 09 07 FA 02 30 00 00 
>0000298C: 09 07 F9 02 00 00 01 
>00002993: 29 02 
>00002995: 05 91 00 05 01 05 FD 00 02 00 FF 00 10 10 00 01 00 
>000029A6: 09 07 FA 02 30 00 00 
>000029AD: 09 07 F9 02 00 00 01 
>000029B4: 29 02 
>000029B6: 05 91 06 05 E3 04 FE 00 02 00 11 01 10 10 00 01 00 
>000029C7: 09 07 07 05 30 00 00 
>000029CE: 09 07 08 05 00 00 01 
>000029D5: 29 02 
>000029D7: 05 91 0A 05 0F 05 FF 00 02 00 37 01 10 10 00 04 00 
>000029E8: 09 07 E2 03 30 00 00 
>000029EF: 09 07 E3 03 00 00 01 
>000029F6: 09 07 E4 03 00 00 02 
>000029FD: 09 07 E5 03 00 00 03 
>00002A04: 09 07 E6 03 00 00 04 
>00002A0B: 29 02 
>00002A0D: 03 08 CE 04 AA 00 CF 04 
>00002A15: 0A 82 
>00002A17: 14 08 EF 00 01 00 01 00 
>00002A1F: 05 91 D7 04 DB 04 00 01 02 00 F4 00 10 10 00 01 00 
>00002A30: 09 07 FA 02 00 00 00 
>00002A37: 09 07 F9 02 30 00 01 
>00002A3E: 29 02 
>00002A40: 29 02 
>00002A42: 05 91 FE 04 FF 04 01 01 02 00 FA 00 10 10 00 01 00 
>00002A53: 09 07 FA 02 30 00 00 
>00002A5A: 09 07 F9 02 00 00 01 
>00002A61: 29 02 
>00002A63: 05 91 D2 03 D3 03 02 01 02 00 06 01 10 10 00 01 00 
>00002A74: 09 07 FA 02 30 00 00 
>00002A7B: 09 07 F9 02 00 00 01 
>00002A82: 29 02 
>00002A84: 05 91 00 05 01 05 03 01 02 00 00 01 10 10 00 01 00 
>00002A95: 09 07 FA 02 30 00 00 
>00002A9C: 09 07 F9 02 00 00 01 
>00002AA3: 29 02 
>00002AA5: 05 91 06 05 E3 04 04 01 02 00 12 01 10 10 00 01 00 
>00002AB6: 09 07 07 05 30 00 00 
>00002ABD: 09 07 08 05 00 00 01 
>00002AC4: 29 02 
>00002AC6: 05 91 0B 05 0F 05 05 01 02 00 38 01 10 10 00 04 00 
>00002AD7: 09 07 E2 03 30 00 00 
>00002ADE: 09 07 E3 03 00 00 01 
>00002AE5: 09 07 E4 03 00 00 02 
>00002AEC: 09 07 E5 03 00 00 03 
>00002AF3: 09 07 E6 03 00 00 04 
>00002AFA: 29 02 
>00002AFC: 03 08 D0 04 AA 00 C7 04 
>00002B04: 0A 82 
>00002B06: 14 08 EF 00 01 00 01 00 
>00002B0E: 05 91 D8 04 DB 04 06 01 02 00 F5 00 10 10 00 01 00 
>00002B1F: 09 07 FA 02 00 00 00 
>00002B26: 09 07 F9 02 30 00 01 
>00002B2D: 29 02 
>00002B2F: 29 02 
>00002B31: 05 91 FE 04 FF 04 07 01 02 00 FB 00 10 10 00 01 00 
>00002B42: 09 07 FA 02 30 00 00 
>00002B49: 09 07 F9 02 00 00 01 
>00002B50: 29 02 
>00002B52: 05 91 D2 03 D3 03 08 01 02 00 07 01 10 10 00 01 00 
>00002B63: 09 07 FA 02 30 00 00 
>00002B6A: 09 07 F9 02 00 00 01 
>00002B71: 29 02 
>00002B73: 05 91 00 05 01 05 09 01 02 00 01 01 10 10 00 01 00 
>00002B84: 09 07 FA 02 30 00 00 
>00002B8B: 09 07 F9 02 00 00 01 
>00002B92: 29 02 
>00002B94: 05 91 06 05 E3 04 0A 01 02 00 13 01 10 10 00 01 00 
>00002BA5: 09 07 07 05 30 00 00 
>00002BAC: 09 07 08 05 00 00 01 
>00002BB3: 29 02 
>00002BB5: 05 91 0C 05 0F 05 0B 01 02 00 39 01 10 10 00 04 00 
>00002BC6: 09 07 E2 03 30 00 00 
>00002BCD: 09 07 E3 03 00 00 01 
>00002BD4: 09 07 E4 03 00 00 02 
>00002BDB: 09 07 E5 03 00 00 03 
>00002BE2: 09 07 E6 03 00 00 04 
>00002BE9: 29 02 
>00002BEB: 03 08 D1 04 AA 00 D2 04 
>00002BF3: 0A 82 
>00002BF5: 14 08 EF 00 01 00 01 00 
>00002BFD: 05 91 D9 04 DB 04 0C 01 02 00 F6 00 10 10 00 01 00 
>00002C0E: 09 07 FA 02 00 00 00 
>00002C15: 09 07 F9 02 30 00 01 
>00002C1C: 29 02 
>00002C1E: 29 02 
>00002C20: 0A 82 
>00002C22: 12 06 0E 01 01 00 
>00002C28: 05 91 FE 04 FF 04 0D 01 02 00 FC 00 10 10 00 01 00 
>00002C39: 09 07 FA 02 30 00 00 
>00002C40: 09 07 F9 02 00 00 01 
>00002C47: 29 02 
>00002C49: 29 02 
>00002C4B: 05 91 D2 03 D3 03 0E 01 02 00 08 01 10 10 00 01 00 
>00002C5C: 09 07 FA 02 30 00 00 
>00002C63: 09 07 F9 02 00 00 01 
>00002C6A: 29 02 
>00002C6C: 05 91 00 05 01 05 0F 01 02 00 02 01 10 10 00 01 00 
>00002C7D: 09 07 FA 02 30 00 00 
>00002C84: 09 07 F9 02 00 00 01 
>00002C8B: 29 02 
>00002C8D: 05 91 06 05 E3 04 10 01 02 00 14 01 10 10 00 01 00 
>00002C9E: 09 07 07 05 30 00 00 
>00002CA5: 09 07 08 05 00 00 01 
>00002CAC: 29 02 
>00002CAE: 05 91 0D 05 0F 05 11 01 02 00 3A 01 10 10 00 04 00 
>00002CBF: 09 07 E2 03 30 00 00 
>00002CC6: 09 07 E3 03 00 00 01 
>00002CCD: 09 07 E4 03 00 00 02 
>00002CD4: 09 07 E5 03 00 00 03 
>00002CDB: 09 07 E6 03 00 00 04 
>00002CE2: 29 02 
>00002CE4: 03 08 D3 04 AA 00 D4 04 
>00002CEC: 0A 82 
>00002CEE: 14 08 EF 00 01 00 01 00 
>00002CF6: 05 91 DA 04 DB 04 12 01 02 00 F7 00 10 10 00 01 00 
>00002D07: 09 07 FA 02 00 00 00 
>00002D0E: 09 07 F9 02 30 00 01 
>00002D15: 29 02 
>00002D17: 29 02 
>00002D19: 0A 82 
>00002D1B: 12 06 14 01 01 00 
>00002D21: 05 91 FE 04 FF 04 13 01 02 00 FD 00 10 10 00 01 00 
>00002D32: 09 07 FA 02 30 00 00 
>00002D39: 09 07 F9 02 00 00 01 
>00002D40: 29 02 
>00002D42: 29 02 
>00002D44: 05 91 D2 03 D3 03 14 01 02 00 09 01 10 10 00 01 00 
>00002D55: 09 07 FA 02 30 00 00 
>00002D5C: 09 07 F9 02 00 00 01 
>00002D63: 29 02 
>00002D65: 05 91 00 05 01 05 15 01 02 00 03 01 10 10 00 01 00 
>00002D76: 09 07 FA 02 30 00 00 
>00002D7D: 09 07 F9 02 00 00 01 
>00002D84: 29 02 
>00002D86: 05 91 06 05 E3 04 16 01 02 00 15 01 10 10 00 01 00 
>00002D97: 09 07 07 05 30 00 00 
>00002D9E: 09 07 08 05 00 00 01 
>00002DA5: 29 02 
>00002DA7: 05 91 0E 05 0F 05 17 01 02 00 3B 01 10 10 00 04 00 
>00002DB8: 09 07 E2 03 30 00 00 
>00002DBF: 09 07 E3 03 00 00 01 
>00002DC6: 09 07 E4 03 00 00 02 
>00002DCD: 09 07 E5 03 00 00 03 
>00002DD4: 09 07 E6 03 00 00 04 
>00002DDB: 29 02 
>00002DDD: 29 02 
>00002DDF: 01 86 1A 01 E6 04 
>00002DE5: 05 91 E8 04 E9 04 18 01 02 00 1C 01 10 10 00 01 00 
>00002DF6: 09 07 FA 02 00 00 00 
>00002DFD: 09 07 F9 02 30 00 01 
>00002E04: 29 02 
>00002E06: 05 91 EA 04 EB 04 19 01 02 00 1D 01 10 10 00 01 00 
>00002E17: 09 07 FA 02 00 00 00 
>00002E1E: 09 07 F9 02 30 00 01 
>00002E25: 29 02 
>00002E27: 0A 82 
>00002E29: 12 86 EE 00 01 00 
>00002E2F: 17 02 
>00002E31: 29 02 
>00002E33: 05 91 EC 04 ED 04 1A 01 02 00 16 01 10 10 00 01 00 
>00002E44: 09 07 FA 02 00 00 00 
>00002E4B: 09 07 F9 02 30 00 01 
>00002E52: 29 02 
>00002E54: 05 91 EE 04 EF 04 1B 01 02 00 17 01 10 10 00 01 00 
>00002E65: 09 07 FA 02 00 00 00 
>00002E6C: 09 07 F9 02 30 00 01 
>00002E73: 29 02 
>00002E75: 05 91 F2 04 F3 04 1C 01 02 00 18 01 10 10 00 01 00 
>00002E86: 09 07 FA 02 00 00 00 
>00002E8D: 09 07 F9 02 30 00 01 
>00002E94: 29 02 
>00002E96: 05 91 F0 04 F1 04 1D 01 02 00 19 01 10 10 00 01 00 
>00002EA7: 09 07 FA 02 00 00 00 
>00002EAE: 09 07 F9 02 30 00 01 
>00002EB5: 29 02 
>00002EB7: 05 91 F4 04 F5 04 1E 01 02 00 1A 01 10 10 00 01 00 
>00002EC8: 09 07 FA 02 00 00 00 
>00002ECF: 09 07 F9 02 30 00 01 
>00002ED6: 29 02 
>00002ED8: 05 91 F6 04 F7 04 1F 01 02 00 1B 01 10 10 00 01 00 
>00002EE9: 09 07 FA 02 00 00 00 
>00002EF0: 09 07 F9 02 30 00 01 
>00002EF7: 29 02 
>00002EF9: 05 91 F8 04 F9 04 20 01 02 00 1E 01 10 10 00 01 00 
>00002F0A: 09 07 FA 02 00 00 00 
>00002F11: 09 07 F9 02 30 00 01 
>00002F18: 29 02 
>00002F1A: 05 91 FA 04 FB 04 21 01 02 00 1F 01 10 10 00 01 00 
>00002F2B: 09 07 FA 02 00 00 00 
>00002F32: 09 07 F9 02 30 00 01 
>00002F39: 29 02 
>00002F3B: 05 91 FC 04 FD 04 22 01 02 00 20 01 10 10 00 03 00 
>00002F4C: 09 07 FE 02 30 00 00 
>00002F53: 09 07 FF 02 00 00 01 
>00002F5A: 09 07 00 03 00 00 02 
>00002F61: 09 07 01 03 00 00 03 
>00002F68: 29 02 
>00002F6A: 29 02 
>00002F6C: 29 02 
>00002F6E: 01 86 61 00 E8 03 
>00002F74: 0A 82 
>00002F76: 46 02 
>00002F78: 05 91 F4 03 F5 03 0A 20 01 00 61 00 04 10 00 01 00 
>00002F89: 09 07 FA 02 10 00 00 
>00002F90: 09 07 F9 02 00 00 01 
>00002F97: 29 02 
>00002F99: 29 02 
>00002F9B: 0A 82 
>00002F9D: 12 06 0A 20 00 00 
>00002FA3: 05 91 EE 03 EF 03 23 01 02 00 24 00 10 10 00 01 00 
>00002FB4: 09 07 F9 02 00 00 01 
>00002FBB: 09 07 FA 02 30 00 00 
>00002FC2: 29 02 
>00002FC4: 05 91 F2 03 F3 03 24 01 02 00 25 00 10 10 00 01 00 
>00002FD5: 09 07 F9 02 30 00 01 
>00002FDC: 09 07 FA 02 00 00 00 
>00002FE3: 29 02 
>00002FE5: 05 91 F0 03 F1 03 25 01 02 00 6F 04 10 10 00 01 00 
>00002FF6: 09 07 F9 02 00 00 01 
>00002FFD: 09 07 FA 02 30 00 00 
>00003004: 29 02 
>00003006: 29 02 
>00003008: 0A 82 
>0000300A: 12 06 08 20 00 00 
>00003010: 03 08 EC 03 F7 02 ED 03 
>00003018: 29 02 
>0000301A: 29 02 
>0000301C: 01 86 0E 01 F6 03 
>00003022: 02 87 AA 00 00 00 00 
>00003029: 29 02 
>0000302B: 05 91 23 04 24 04 26 01 02 00 40 01 10 10 00 01 00 
>0000303C: 09 07 38 07 30 00 00 
>00003043: 09 07 39 07 00 00 01 
>0000304A: 29 02 
>0000304C: 05 91 C5 04 C6 04 27 01 02 00 48 01 10 10 00 01 00 
>0000305D: 09 07 38 07 30 00 00 
>00003064: 09 07 39 07 00 00 01 
>0000306B: 29 02 
>0000306D: 0F 0F 9E 05 9F 05 28 01 00 00 FF FF 00 24 01 
>0000307C: 05 91 20 04 21 04 29 01 02 00 41 01 10 10 00 02 00 
>0000308D: 09 07 22 04 00 00 00 
>00003094: 09 07 19 05 30 00 02 
>0000309B: 29 02 
>0000309D: 05 91 6B 04 6C 04 2A 01 02 00 66 04 10 10 00 09 00 
>000030AE: 09 07 6F 04 30 00 00 
>000030B5: 09 07 70 04 00 00 03 
>000030BC: 09 07 71 04 00 00 04 
>000030C3: 09 07 72 04 00 00 05 
>000030CA: 09 07 73 04 00 00 06 
>000030D1: 09 07 A7 00 00 00 09 
>000030D8: 29 02 
>000030DA: 05 91 6D 04 6E 04 2B 01 02 00 67 04 10 10 00 09 00 
>000030EB: 09 07 6F 04 30 00 00 
>000030F2: 09 07 70 04 00 00 03 
>000030F9: 09 07 71 04 00 00 04 
>00003100: 09 07 72 04 00 00 05 
>00003107: 09 07 73 04 00 00 06 
>0000310E: 09 07 A7 00 00 00 09 
>00003115: 29 02 
>00003117: 05 91 74 04 75 04 2C 01 02 00 77 02 10 10 00 02 00 
>00003128: 09 07 84 04 00 00 00 
>0000312F: 09 07 85 04 00 00 01 
>00003136: 09 07 86 04 30 00 02 
>0000313D: 29 02 
>0000313F: 05 91 76 04 77 04 2D 01 02 00 76 02 10 10 00 02 00 
>00003150: 09 07 84 04 00 00 00 
>00003157: 09 07 85 04 00 00 01 
>0000315E: 09 07 86 04 30 00 02 
>00003165: 29 02 
>00003167: 0A 82 
>00003169: 46 02 
>0000316B: 05 91 25 04 2A 04 01 20 01 00 5C 00 04 10 00 03 00 
>0000317C: 09 07 AA 00 10 00 00 
>00003183: 09 07 FA 02 00 00 01 
>0000318A: 09 07 F9 02 00 00 02 
>00003191: 09 07 F8 02 00 00 03 
>00003198: 29 02 
>0000319A: 05 91 26 04 2B 04 02 20 01 00 5D 00 04 10 00 03 00 
>000031AB: 09 07 AA 00 10 00 00 
>000031B2: 09 07 FA 02 00 00 01 
>000031B9: 09 07 F9 02 00 00 02 
>000031C0: 09 07 F8 02 00 00 03 
>000031C7: 29 02 
>000031C9: 05 91 27 04 2C 04 03 20 01 00 5E 00 04 10 00 03 00 
>000031DA: 09 07 AA 00 10 00 00 
>000031E1: 09 07 FA 02 00 00 01 
>000031E8: 09 07 F9 02 00 00 02 
>000031EF: 09 07 F8 02 00 00 03 
>000031F6: 29 02 
>000031F8: 05 91 28 04 2D 04 04 20 01 00 5F 00 04 10 00 03 00 
>00003209: 09 07 AA 00 10 00 00 
>00003210: 09 07 FA 02 00 00 01 
>00003217: 09 07 F9 02 00 00 02 
>0000321E: 09 07 F8 02 00 00 03 
>00003225: 29 02 
>00003227: 05 91 29 04 2E 04 05 20 01 00 60 00 04 10 00 03 00 
>00003238: 09 07 AA 00 10 00 00 
>0000323F: 09 07 FA 02 00 00 01 
>00003246: 09 07 F9 02 00 00 02 
>0000324D: 09 07 F8 02 00 00 03 
>00003254: 29 02 
>00003256: 05 91 BB 04 BC 04 06 20 01 00 5A 00 04 10 00 01 00 
>00003267: 09 07 F9 02 10 00 00 
>0000326E: 09 07 FA 02 00 00 01 
>00003275: 29 02 
>00003277: 29 02 
>00003279: 05 91 5D 04 5E 04 2E 01 01 00 58 00 10 10 00 01 00 
>0000328A: 09 07 FA 02 00 00 01 
>00003291: 09 07 F9 02 30 00 00 
>00003298: 29 02 
>0000329A: 05 91 4E 04 4F 04 2F 01 01 00 59 00 10 10 00 FF 00 
>000032AB: 09 07 50 04 10 00 00 
>000032B2: 09 07 4B 04 00 00 02 
>000032B9: 09 07 FA 02 00 00 FF 
>000032C0: 29 02 
>000032C2: 05 91 5B 04 5C 04 30 01 02 00 3F 01 10 10 00 01 00 
>000032D3: 09 07 FA 02 30 00 00 
>000032DA: 09 07 F9 02 00 00 01 
>000032E1: 29 02 
>000032E3: 05 91 C1 04 C2 04 31 01 02 00 42 01 10 10 00 01 00 
>000032F4: 09 07 38 07 30 00 00 
>000032FB: 09 07 39 07 00 00 01 
>00003302: 29 02 
>00003304: 05 91 C3 04 C4 04 32 01 02 00 44 01 10 10 00 01 00 
>00003315: 09 07 39 07 30 00 01 
>0000331C: 09 07 38 07 00 00 00 
>00003323: 29 02 
>00003325: 07 91 45 04 46 04 07 20 01 00 5B 00 05 10 00 14 00 
>00003336: 29 02 
>00003338: 19 82 
>0000333A: 12 06 06 20 00 00 
>00003340: 05 91 BD 04 BE 04 33 01 02 00 4A 01 10 10 00 01 00 
>00003351: 09 07 FA 02 30 00 00 
>00003358: 09 07 F9 02 00 00 01 
>0000335F: 29 02 
>00003361: 29 02 
>00003363: 0A 82 
>00003365: 12 86 33 01 00 00 
>0000336B: 12 06 06 20 00 00 
>00003371: 16 02 
>00003373: 29 02 
>00003375: 07 91 BF 04 C0 04 34 01 02 00 4B 01 10 10 00 07 01 
>00003386: 5B 06 00 00 00 00 
>0000338C: 5B 06 01 00 00 00 
>00003392: 29 02 
>00003394: 29 02 
>00003396: 02 87 AA 00 00 00 00 
>0000339D: 29 02 
>0000339F: 05 91 5F 04 60 04 35 01 02 00 52 01 10 10 00 01 00 
>000033B0: 09 07 38 07 00 00 00 
>000033B7: 09 07 39 07 30 00 01 
>000033BE: 29 02 
>000033C0: 05 91 87 04 88 04 36 01 02 00 CA 02 10 10 00 05 00 
>000033D1: 09 07 89 04 00 00 00 
>000033D8: 09 07 8A 04 00 00 01 
>000033DF: 09 07 8B 04 30 00 02 
>000033E6: 09 07 8C 04 00 00 03 
>000033ED: 09 07 8D 04 00 00 04 
>000033F4: 09 07 8E 04 00 00 05 
>000033FB: 29 02 
>000033FD: 0A 82 
>000033FF: 12 06 07 20 01 00 
>00003405: 0F 0F F8 03 F9 03 37 01 00 00 FF FF 00 62 00 
>00003414: 29 02 
>00003416: 0A 82 
>00003418: 12 86 07 20 02 00 
>0000341E: 12 06 01 20 00 00 
>00003424: 17 02 
>00003426: 16 02 
>00003428: 29 02 
>0000342A: 0F 0F FA 03 FB 03 38 01 00 00 FF FF 00 63 00 
>00003439: 29 02 
>0000343B: 0A 82 
>0000343D: 12 86 07 20 03 00 
>00003443: 12 06 01 20 03 00 
>00003449: 16 02 
>0000344B: 29 02 
>0000344D: 0F 0F FC 03 FD 03 39 01 00 00 FF FF 00 64 00 
>0000345C: 29 02 
>0000345E: 0A 82 
>00003460: 12 86 07 20 04 00 
>00003466: 12 06 01 20 03 00 
>0000346C: 16 02 
>0000346E: 12 06 01 20 02 00 
>00003474: 16 02 
>00003476: 29 02 
>00003478: 0F 0F FE 03 FF 03 3A 01 00 00 FF FF 00 65 00 
>00003487: 29 02 
>00003489: 0A 82 
>0000348B: 12 06 07 20 05 00 
>00003491: 0F 0F 00 04 01 04 3B 01 00 00 FF FF 00 66 00 
>000034A0: 29 02 
>000034A2: 0A 82 
>000034A4: 12 86 07 20 06 00 
>000034AA: 12 06 02 20 00 00 
>000034B0: 17 02 
>000034B2: 16 02 
>000034B4: 29 02 
>000034B6: 0F 0F 02 04 03 04 3C 01 00 00 FF FF 00 67 00 
>000034C5: 29 02 
>000034C7: 0A 82 
>000034C9: 12 86 07 20 07 00 
>000034CF: 12 06 02 20 03 00 
>000034D5: 16 02 
>000034D7: 29 02 
>000034D9: 0F 0F 04 04 05 04 3D 01 00 00 FF FF 00 02 01 
>000034E8: 29 02 
>000034EA: 0A 82 
>000034EC: 12 86 07 20 08 00 
>000034F2: 12 06 02 20 03 00 
>000034F8: 16 02 
>000034FA: 12 06 02 20 02 00 
>00003500: 16 02 
>00003502: 29 02 
>00003504: 0F 0F 06 04 07 04 3E 01 00 00 FF FF 00 03 01 
>00003513: 29 02 
>00003515: 0A 82 
>00003517: 12 06 07 20 09 00 
>0000351D: 0F 0F 08 04 09 04 3F 01 00 00 FF FF 00 69 00 
>0000352C: 29 02 
>0000352E: 0A 82 
>00003530: 12 86 07 20 0A 00 
>00003536: 12 06 03 20 00 00 
>0000353C: 17 02 
>0000353E: 16 02 
>00003540: 29 02 
>00003542: 0F 0F 0A 04 0B 04 40 01 00 00 FF FF 00 6A 00 
>00003551: 29 02 
>00003553: 0A 82 
>00003555: 12 86 07 20 0B 00 
>0000355B: 12 06 03 20 03 00 
>00003561: 16 02 
>00003563: 29 02 
>00003565: 0F 0F 0C 04 0D 04 41 01 00 00 FF FF 00 6B 00 
>00003574: 29 02 
>00003576: 0A 82 
>00003578: 12 86 07 20 0C 00 
>0000357E: 12 06 03 20 03 00 
>00003584: 16 02 
>00003586: 12 06 03 20 02 00 
>0000358C: 16 02 
>0000358E: 29 02 
>00003590: 0F 0F 0E 04 0F 04 42 01 00 00 FF FF 00 6C 00 
>0000359F: 29 02 
>000035A1: 0A 82 
>000035A3: 12 06 07 20 0D 00 
>000035A9: 0F 0F 10 04 11 04 43 01 00 00 FF FF 00 6D 00 
>000035B8: 29 02 
>000035BA: 0A 82 
>000035BC: 12 86 07 20 0E 00 
>000035C2: 12 06 04 20 00 00 
>000035C8: 17 02 
>000035CA: 16 02 
>000035CC: 29 02 
>000035CE: 0F 0F 12 04 13 04 44 01 00 00 FF FF 00 6E 00 
>000035DD: 29 02 
>000035DF: 0A 82 
>000035E1: 12 86 07 20 0F 00 
>000035E7: 12 06 04 20 03 00 
>000035ED: 16 02 
>000035EF: 29 02 
>000035F1: 0F 0F 14 04 15 04 45 01 00 00 FF FF 00 6F 00 
>00003600: 29 02 
>00003602: 0A 82 
>00003604: 12 86 07 20 10 00 
>0000360A: 12 06 04 20 03 00 
>00003610: 16 02 
>00003612: 12 06 04 20 02 00 
>00003618: 16 02 
>0000361A: 29 02 
>0000361C: 0F 0F 16 04 17 04 46 01 00 00 FF FF 00 70 00 
>0000362B: 29 02 
>0000362D: 0A 82 
>0000362F: 12 06 07 20 11 00 
>00003635: 0F 0F 18 04 19 04 47 01 00 00 FF FF 00 71 00 
>00003644: 29 02 
>00003646: 0A 82 
>00003648: 12 86 07 20 12 00 
>0000364E: 12 06 05 20 00 00 
>00003654: 17 02 
>00003656: 16 02 
>00003658: 29 02 
>0000365A: 0F 0F 1A 04 1B 04 48 01 00 00 FF FF 00 72 00 
>00003669: 29 02 
>0000366B: 0A 82 
>0000366D: 12 86 07 20 13 00 
>00003673: 12 06 05 20 03 00 
>00003679: 16 02 
>0000367B: 29 02 
>0000367D: 0F 0F 1C 04 1D 04 49 01 00 00 FF FF 00 73 00 
>0000368C: 29 02 
>0000368E: 0A 82 
>00003690: 12 86 07 20 14 00 
>00003696: 12 06 05 20 03 00 
>0000369C: 16 02 
>0000369E: 12 06 05 20 02 00 
>000036A4: 16 02 
>000036A6: 29 02 
>000036A8: 0F 0F 1E 04 1F 04 4A 01 00 00 FF FF 00 74 00 
>000036B7: 29 02 
>000036B9: 29 02 
>000036BB: 01 86 24 01 9E 05 
>000036C1: 0F 0F A0 05 A1 05 4B 01 00 00 FF FF 00 21 01 
>000036D0: 0F 0F 09 06 0A 06 4C 01 00 00 FF FF 00 25 01 
>000036DF: 0F 0F CA 05 CB 05 4D 01 00 00 FF FF 00 26 01 
>000036EE: 29 02 
>000036F0: 01 86 26 01 CA 05 
>000036F6: 02 87 F5 05 00 00 00 
>000036FD: 29 02 
>000036FF: 05 91 CC 05 E0 05 4E 01 02 00 4E 02 10 10 00 02 00 
>00003710: 09 07 FA 02 00 00 00 
>00003717: 09 07 F9 02 00 00 01 
>0000371E: 09 07 A8 00 30 00 02 
>00003725: 29 02 
>00003727: 0A 82 
>00003729: 12 06 4E 01 00 00 
>0000372F: 07 91 E1 05 F7 02 4F 01 02 00 62 02 00 10 00 0A 01 
>00003740: 5B 06 00 00 00 08 
>00003746: 29 02 
>00003748: 29 02 
>0000374A: 02 87 F6 05 00 00 00 
>00003751: 29 02 
>00003753: 05 91 CD 05 E0 05 50 01 02 00 4F 02 10 10 00 02 00 
>00003764: 09 07 FA 02 00 00 00 
>0000376B: 09 07 F9 02 00 00 01 
>00003772: 09 07 A8 00 30 00 02 
>00003779: 29 02 
>0000377B: 0A 82 
>0000377D: 12 06 50 01 00 00 
>00003783: 07 91 E2 05 F7 02 51 01 02 00 63 02 00 10 00 0A 01 
>00003794: 5B 06 00 00 00 08 
>0000379A: 29 02 
>0000379C: 29 02 
>0000379E: 02 87 F7 05 00 00 00 
>000037A5: 29 02 
>000037A7: 05 91 CE 05 E0 05 52 01 02 00 50 02 10 10 00 02 00 
>000037B8: 09 07 FA 02 00 00 00 
>000037BF: 09 07 F9 02 00 00 01 
>000037C6: 09 07 A8 00 30 00 02 
>000037CD: 29 02 
>000037CF: 0A 82 
>000037D1: 12 06 52 01 00 00 
>000037D7: 07 91 E3 05 F7 02 53 01 02 00 64 02 00 10 00 0A 01 
>000037E8: 5B 06 00 00 00 08 
>000037EE: 29 02 
>000037F0: 29 02 
>000037F2: 02 87 F8 05 00 00 00 
>000037F9: 29 02 
>000037FB: 05 91 CF 05 E0 05 54 01 02 00 51 02 10 10 00 02 00 
>0000380C: 09 07 FA 02 00 00 00 
>00003813: 09 07 F9 02 00 00 01 
>0000381A: 09 07 A8 00 30 00 02 
>00003821: 29 02 
>00003823: 0A 82 
>00003825: 12 06 54 01 00 00 
>0000382B: 07 91 E4 05 F7 02 55 01 02 00 65 02 00 10 00 0A 01 
>0000383C: 5B 06 00 00 00 08 
>00003842: 29 02 
>00003844: 29 02 
>00003846: 02 87 F9 05 00 00 00 
>0000384D: 29 02 
>0000384F: 05 91 D0 05 E0 05 56 01 02 00 52 02 10 10 00 02 00 
>00003860: 09 07 FA 02 00 00 00 
>00003867: 09 07 F9 02 00 00 01 
>0000386E: 09 07 A8 00 30 00 02 
>00003875: 29 02 
>00003877: 0A 82 
>00003879: 12 06 56 01 00 00 
>0000387F: 07 91 E5 05 F7 02 57 01 02 00 66 02 00 10 00 0A 01 
>00003890: 5B 06 00 00 00 08 
>00003896: 29 02 
>00003898: 29 02 
>0000389A: 02 87 FA 05 00 00 00 
>000038A1: 29 02 
>000038A3: 05 91 D1 05 E0 05 58 01 02 00 53 02 10 10 00 02 00 
>000038B4: 09 07 FA 02 00 00 00 
>000038BB: 09 07 F9 02 00 00 01 
>000038C2: 09 07 A8 00 30 00 02 
>000038C9: 29 02 
>000038CB: 0A 82 
>000038CD: 12 06 58 01 00 00 
>000038D3: 07 91 E6 05 F7 02 59 01 02 00 67 02 00 10 00 0A 01 
>000038E4: 5B 06 00 00 00 08 
>000038EA: 29 02 
>000038EC: 29 02 
>000038EE: 02 87 FB 05 00 00 00 
>000038F5: 29 02 
>000038F7: 05 91 D2 05 E0 05 5A 01 02 00 54 02 10 10 00 02 00 
>00003908: 09 07 FA 02 00 00 00 
>0000390F: 09 07 F9 02 00 00 01 
>00003916: 09 07 A8 00 30 00 02 
>0000391D: 29 02 
>0000391F: 0A 82 
>00003921: 12 06 5A 01 00 00 
>00003927: 07 91 E7 05 F7 02 5B 01 02 00 68 02 00 10 00 0A 01 
>00003938: 5B 06 00 00 00 08 
>0000393E: 29 02 
>00003940: 29 02 
>00003942: 02 87 FC 05 00 00 00 
>00003949: 29 02 
>0000394B: 05 91 D3 05 E0 05 5C 01 02 00 55 02 10 10 00 02 00 
>0000395C: 09 07 FA 02 00 00 00 
>00003963: 09 07 F9 02 00 00 01 
>0000396A: 09 07 A8 00 30 00 02 
>00003971: 29 02 
>00003973: 0A 82 
>00003975: 12 06 5C 01 00 00 
>0000397B: 07 91 E8 05 F7 02 5D 01 02 00 69 02 00 10 00 0A 01 
>0000398C: 5B 06 00 00 00 08 
>00003992: 29 02 
>00003994: 29 02 
>00003996: 02 87 FD 05 00 00 00 
>0000399D: 29 02 
>0000399F: 05 91 D4 05 E0 05 5E 01 02 00 56 02 10 10 00 02 00 
>000039B0: 09 07 FA 02 00 00 00 
>000039B7: 09 07 F9 02 00 00 01 
>000039BE: 09 07 A8 00 30 00 02 
>000039C5: 29 02 
>000039C7: 0A 82 
>000039C9: 12 06 5E 01 00 00 
>000039CF: 07 91 E9 05 F7 02 5F 01 02 00 6A 02 00 10 00 0A 01 
>000039E0: 5B 06 00 00 00 08 
>000039E6: 29 02 
>000039E8: 29 02 
>000039EA: 02 87 FE 05 00 00 00 
>000039F1: 29 02 
>000039F3: 05 91 D5 05 E0 05 60 01 02 00 57 02 10 10 00 02 00 
>00003A04: 09 07 FA 02 00 00 00 
>00003A0B: 09 07 F9 02 00 00 01 
>00003A12: 09 07 A8 00 30 00 02 
>00003A19: 29 02 
>00003A1B: 0A 82 
>00003A1D: 12 06 60 01 00 00 
>00003A23: 07 91 EA 05 F7 02 61 01 02 00 6B 02 00 10 00 0A 01 
>00003A34: 5B 06 00 00 00 08 
>00003A3A: 29 02 
>00003A3C: 29 02 
>00003A3E: 02 87 FF 05 00 00 00 
>00003A45: 29 02 
>00003A47: 05 91 D6 05 E0 05 62 01 02 00 58 02 10 10 00 02 00 
>00003A58: 09 07 FA 02 00 00 00 
>00003A5F: 09 07 F9 02 00 00 01 
>00003A66: 09 07 A8 00 30 00 02 
>00003A6D: 29 02 
>00003A6F: 0A 82 
>00003A71: 12 06 62 01 00 00 
>00003A77: 07 91 EB 05 F7 02 63 01 02 00 6C 02 00 10 00 0A 01 
>00003A88: 5B 06 00 00 00 08 
>00003A8E: 29 02 
>00003A90: 29 02 
>00003A92: 02 87 00 06 00 00 00 
>00003A99: 29 02 
>00003A9B: 05 91 D7 05 E0 05 64 01 02 00 59 02 10 10 00 02 00 
>00003AAC: 09 07 FA 02 00 00 00 
>00003AB3: 09 07 F9 02 00 00 01 
>00003ABA: 09 07 A8 00 30 00 02 
>00003AC1: 29 02 
>00003AC3: 0A 82 
>00003AC5: 12 06 64 01 00 00 
>00003ACB: 07 91 EC 05 F7 02 65 01 02 00 6D 02 00 10 00 0A 01 
>00003ADC: 5B 06 00 00 00 08 
>00003AE2: 29 02 
>00003AE4: 29 02 
>00003AE6: 02 87 01 06 00 00 00 
>00003AED: 29 02 
>00003AEF: 05 91 D8 05 E0 05 66 01 02 00 5A 02 10 10 00 02 00 
>00003B00: 09 07 FA 02 00 00 00 
>00003B07: 09 07 F9 02 00 00 01 
>00003B0E: 09 07 A8 00 30 00 02 
>00003B15: 29 02 
>00003B17: 0A 82 
>00003B19: 12 06 66 01 00 00 
>00003B1F: 07 91 ED 05 F7 02 67 01 02 00 6E 02 00 10 00 0A 01 
>00003B30: 5B 06 00 00 00 08 
>00003B36: 29 02 
>00003B38: 29 02 
>00003B3A: 02 87 02 06 00 00 00 
>00003B41: 29 02 
>00003B43: 05 91 D9 05 E0 05 68 01 02 00 5B 02 10 10 00 02 00 
>00003B54: 09 07 FA 02 00 00 00 
>00003B5B: 09 07 F9 02 00 00 01 
>00003B62: 09 07 A8 00 30 00 02 
>00003B69: 29 02 
>00003B6B: 0A 82 
>00003B6D: 12 06 68 01 00 00 
>00003B73: 07 91 EE 05 F7 02 69 01 02 00 6F 02 00 10 00 0A 01 
>00003B84: 5B 06 00 00 00 08 
>00003B8A: 29 02 
>00003B8C: 29 02 
>00003B8E: 02 87 03 06 00 00 00 
>00003B95: 29 02 
>00003B97: 05 91 DA 05 E0 05 6A 01 02 00 5C 02 10 10 00 02 00 
>00003BA8: 09 07 FA 02 00 00 00 
>00003BAF: 09 07 F9 02 00 00 01 
>00003BB6: 09 07 A8 00 30 00 02 
>00003BBD: 29 02 
>00003BBF: 0A 82 
>00003BC1: 12 06 6A 01 00 00 
>00003BC7: 07 91 EF 05 F7 02 6B 01 02 00 70 02 00 10 00 0A 01 
>00003BD8: 5B 06 00 00 00 08 
>00003BDE: 29 02 
>00003BE0: 29 02 
>00003BE2: 02 87 04 06 00 00 00 
>00003BE9: 29 02 
>00003BEB: 05 91 DB 05 E0 05 6C 01 02 00 5D 02 10 10 00 02 00 
>00003BFC: 09 07 FA 02 00 00 00 
>00003C03: 09 07 F9 02 00 00 01 
>00003C0A: 09 07 A8 00 30 00 02 
>00003C11: 29 02 
>00003C13: 0A 82 
>00003C15: 12 06 6C 01 00 00 
>00003C1B: 07 91 F0 05 F7 02 6D 01 02 00 71 02 00 10 00 0A 01 
>00003C2C: 5B 06 00 00 00 08 
>00003C32: 29 02 
>00003C34: 29 02 
>00003C36: 02 87 05 06 00 00 00 
>00003C3D: 29 02 
>00003C3F: 05 91 DC 05 E0 05 6E 01 02 00 5E 02 10 10 00 02 00 
>00003C50: 09 07 FA 02 00 00 00 
>00003C57: 09 07 F9 02 00 00 01 
>00003C5E: 09 07 A8 00 30 00 02 
>00003C65: 29 02 
>00003C67: 0A 82 
>00003C69: 12 06 6E 01 00 00 
>00003C6F: 07 91 F1 05 F7 02 6F 01 02 00 72 02 00 10 00 0A 01 
>00003C80: 5B 06 00 00 00 08 
>00003C86: 29 02 
>00003C88: 29 02 
>00003C8A: 02 87 06 06 00 00 00 
>00003C91: 29 02 
>00003C93: 05 91 DD 05 E0 05 70 01 02 00 5F 02 10 10 00 02 00 
>00003CA4: 09 07 FA 02 00 00 00 
>00003CAB: 09 07 F9 02 00 00 01 
>00003CB2: 09 07 A8 00 30 00 02 
>00003CB9: 29 02 
>00003CBB: 0A 82 
>00003CBD: 12 06 70 01 00 00 
>00003CC3: 07 91 F2 05 F7 02 71 01 02 00 73 02 00 10 00 0A 01 
>00003CD4: 5B 06 00 00 00 08 
>00003CDA: 29 02 
>00003CDC: 29 02 
>00003CDE: 02 87 07 06 00 00 00 
>00003CE5: 29 02 
>00003CE7: 05 91 DE 05 E0 05 72 01 02 00 60 02 10 10 00 02 00 
>00003CF8: 09 07 FA 02 00 00 00 
>00003CFF: 09 07 F9 02 00 00 01 
>00003D06: 09 07 A8 00 30 00 02 
>00003D0D: 29 02 
>00003D0F: 0A 82 
>00003D11: 12 06 72 01 00 00 
>00003D17: 07 91 F3 05 F7 02 73 01 02 00 74 02 00 10 00 0A 01 
>00003D28: 5B 06 00 00 00 08 
>00003D2E: 29 02 
>00003D30: 29 02 
>00003D32: 02 87 08 06 00 00 00 
>00003D39: 29 02 
>00003D3B: 05 91 DF 05 E0 05 74 01 02 00 61 02 10 10 00 02 00 
>00003D4C: 09 07 FA 02 00 00 00 
>00003D53: 09 07 F9 02 00 00 01 
>00003D5A: 09 07 A8 00 30 00 02 
>00003D61: 29 02 
>00003D63: 0A 82 
>00003D65: 12 06 74 01 00 00 
>00003D6B: 07 91 F4 05 F7 02 75 01 02 00 75 02 00 10 00 0A 01 
>00003D7C: 5B 06 00 00 00 08 
>00003D82: 29 02 
>00003D84: 29 02 
>00003D86: 29 02 
>00003D88: 01 86 21 01 A0 05 
>00003D8E: 07 91 A2 05 F7 02 76 01 02 00 1B 02 00 10 00 3F 01 
>00003D9F: 5B 06 00 00 00 06 
>00003DA5: 5B 06 01 00 00 06 
>00003DAB: 29 02 
>00003DAD: 07 91 B6 05 F7 02 77 01 02 00 2F 02 00 10 00 3F 01 
>00003DBE: 5B 06 00 00 00 06 
>00003DC4: 5B 06 01 00 00 06 
>00003DCA: 29 02 
>00003DCC: 07 91 A3 05 F7 02 78 01 02 00 1C 02 00 10 00 3F 01 
>00003DDD: 5B 06 00 00 00 06 
>00003DE3: 5B 06 01 00 00 06 
>00003DE9: 29 02 
>00003DEB: 07 91 B7 05 F7 02 79 01 02 00 30 02 00 10 00 3F 01 
>00003DFC: 5B 06 00 00 00 06 
>00003E02: 5B 06 01 00 00 06 
>00003E08: 29 02 
>00003E0A: 07 91 A4 05 F7 02 7A 01 02 00 1D 02 00 10 00 3F 01 
>00003E1B: 5B 06 00 00 00 06 
>00003E21: 5B 06 01 00 00 06 
>00003E27: 29 02 
>00003E29: 07 91 B8 05 F7 02 7B 01 02 00 31 02 00 10 00 3F 01 
>00003E3A: 5B 06 00 00 00 06 
>00003E40: 5B 06 01 00 00 06 
>00003E46: 29 02 
>00003E48: 07 91 A5 05 F7 02 7C 01 02 00 1E 02 00 10 00 3F 01 
>00003E59: 5B 06 00 00 00 06 
>00003E5F: 5B 06 01 00 00 06 
>00003E65: 29 02 
>00003E67: 07 91 B9 05 F7 02 7D 01 02 00 32 02 00 10 00 3F 01 
>00003E78: 5B 06 00 00 00 06 
>00003E7E: 5B 06 01 00 00 06 
>00003E84: 29 02 
>00003E86: 07 91 A6 05 F7 02 7E 01 02 00 1F 02 00 10 00 3F 01 
>00003E97: 5B 06 00 00 00 06 
>00003E9D: 5B 06 01 00 00 06 
>00003EA3: 29 02 
>00003EA5: 07 91 BA 05 F7 02 7F 01 02 00 33 02 00 10 00 3F 01 
>00003EB6: 5B 06 00 00 00 06 
>00003EBC: 5B 06 01 00 00 06 
>00003EC2: 29 02 
>00003EC4: 07 91 A7 05 F7 02 80 01 02 00 20 02 00 10 00 3F 01 
>00003ED5: 5B 06 00 00 00 06 
>00003EDB: 5B 06 01 00 00 06 
>00003EE1: 29 02 
>00003EE3: 07 91 BB 05 F7 02 81 01 02 00 34 02 00 10 00 3F 01 
>00003EF4: 5B 06 00 00 00 06 
>00003EFA: 5B 06 01 00 00 06 
>00003F00: 29 02 
>00003F02: 07 91 A8 05 F7 02 82 01 02 00 21 02 00 10 00 3F 01 
>00003F13: 5B 06 00 00 00 06 
>00003F19: 5B 06 01 00 00 06 
>00003F1F: 29 02 
>00003F21: 07 91 BC 05 F7 02 83 01 02 00 35 02 00 10 00 3F 01 
>00003F32: 5B 06 00 00 00 06 
>00003F38: 5B 06 01 00 00 06 
>00003F3E: 29 02 
>00003F40: 07 91 A9 05 F7 02 84 01 02 00 22 02 00 10 00 3F 01 
>00003F51: 5B 06 00 00 00 06 
>00003F57: 5B 06 01 00 00 06 
>00003F5D: 29 02 
>00003F5F: 07 91 BD 05 F7 02 85 01 02 00 36 02 00 10 00 3F 01 
>00003F70: 5B 06 00 00 00 06 
>00003F76: 5B 06 01 00 00 06 
>00003F7C: 29 02 
>00003F7E: 07 91 AA 05 F7 02 86 01 02 00 23 02 00 10 00 3F 01 
>00003F8F: 5B 06 00 00 00 06 
>00003F95: 5B 06 01 00 00 06 
>00003F9B: 29 02 
>00003F9D: 07 91 BE 05 F7 02 87 01 02 00 37 02 00 10 00 3F 01 
>00003FAE: 5B 06 00 00 00 06 
>00003FB4: 5B 06 01 00 00 06 
>00003FBA: 29 02 
>00003FBC: 07 91 AB 05 F7 02 88 01 02 00 24 02 00 10 00 3F 01 
>00003FCD: 5B 06 00 00 00 06 
>00003FD3: 5B 06 01 00 00 06 
>00003FD9: 29 02 
>00003FDB: 07 91 BF 05 F7 02 89 01 02 00 38 02 00 10 00 3F 01 
>00003FEC: 5B 06 00 00 00 06 
>00003FF2: 5B 06 01 00 00 06 
>00003FF8: 29 02 
>00003FFA: 07 91 AC 05 F7 02 8A 01 02 00 25 02 00 10 00 3F 01 
>0000400B: 5B 06 00 00 00 06 
>00004011: 5B 06 01 00 00 06 
>00004017: 29 02 
>00004019: 07 91 C0 05 F7 02 8B 01 02 00 39 02 00 10 00 3F 01 
>0000402A: 5B 06 00 00 00 06 
>00004030: 5B 06 01 00 00 06 
>00004036: 29 02 
>00004038: 07 91 AD 05 F7 02 8C 01 02 00 26 02 00 10 00 3F 01 
>00004049: 5B 06 00 00 00 06 
>0000404F: 5B 06 01 00 00 06 
>00004055: 29 02 
>00004057: 07 91 C1 05 F7 02 8D 01 02 00 3A 02 00 10 00 3F 01 
>00004068: 5B 06 00 00 00 06 
>0000406E: 5B 06 01 00 00 06 
>00004074: 29 02 
>00004076: 07 91 AE 05 F7 02 8E 01 02 00 27 02 00 10 00 3F 01 
>00004087: 5B 06 00 00 00 06 
>0000408D: 5B 06 01 00 00 06 
>00004093: 29 02 
>00004095: 07 91 C2 05 F7 02 8F 01 02 00 3B 02 00 10 00 3F 01 
>000040A6: 5B 06 00 00 00 06 
>000040AC: 5B 06 01 00 00 06 
>000040B2: 29 02 
>000040B4: 07 91 AF 05 F7 02 90 01 02 00 28 02 00 10 00 3F 01 
>000040C5: 5B 06 00 00 00 06 
>000040CB: 5B 06 01 00 00 06 
>000040D1: 29 02 
>000040D3: 07 91 C3 05 F7 02 91 01 02 00 3C 02 00 10 00 3F 01 
>000040E4: 5B 06 00 00 00 06 
>000040EA: 5B 06 01 00 00 06 
>000040F0: 29 02 
>000040F2: 07 91 B0 05 F7 02 92 01 02 00 29 02 00 10 00 3F 01 
>00004103: 5B 06 00 00 00 06 
>00004109: 5B 06 01 00 00 06 
>0000410F: 29 02 
>00004111: 07 91 C4 05 F7 02 93 01 02 00 3D 02 00 10 00 3F 01 
>00004122: 5B 06 00 00 00 06 
>00004128: 5B 06 01 00 00 06 
>0000412E: 29 02 
>00004130: 07 91 B1 05 F7 02 94 01 02 00 2A 02 00 10 00 3F 01 
>00004141: 5B 06 00 00 00 06 
>00004147: 5B 06 01 00 00 06 
>0000414D: 29 02 
>0000414F: 07 91 C5 05 F7 02 95 01 02 00 3E 02 00 10 00 3F 01 
>00004160: 5B 06 00 00 00 06 
>00004166: 5B 06 01 00 00 06 
>0000416C: 29 02 
>0000416E: 07 91 B2 05 F7 02 96 01 02 00 2B 02 00 10 00 3F 01 
>0000417F: 5B 06 00 00 00 06 
>00004185: 5B 06 01 00 00 06 
>0000418B: 29 02 
>0000418D: 07 91 C6 05 F7 02 97 01 02 00 3F 02 00 10 00 3F 01 
>0000419E: 5B 06 00 00 00 06 
>000041A4: 5B 06 01 00 00 06 
>000041AA: 29 02 
>000041AC: 07 91 B3 05 F7 02 98 01 02 00 2C 02 00 10 00 3F 01 
>000041BD: 5B 06 00 00 00 06 
>000041C3: 5B 06 01 00 00 06 
>000041C9: 29 02 
>000041CB: 07 91 C7 05 F7 02 99 01 02 00 40 02 00 10 00 3F 01 
>000041DC: 5B 06 00 00 00 06 
>000041E2: 5B 06 01 00 00 06 
>000041E8: 29 02 
>000041EA: 07 91 B4 05 F7 02 9A 01 02 00 2D 02 00 10 00 3F 01 
>000041FB: 5B 06 00 00 00 06 
>00004201: 5B 06 01 00 00 06 
>00004207: 29 02 
>00004209: 07 91 C8 05 F7 02 9B 01 02 00 41 02 00 10 00 3F 01 
>0000421A: 5B 06 00 00 00 06 
>00004220: 5B 06 01 00 00 06 
>00004226: 29 02 
>00004228: 07 91 B5 05 F7 02 9C 01 02 00 2E 02 00 10 00 3F 01 
>00004239: 5B 06 00 00 00 06 
>0000423F: 5B 06 01 00 00 06 
>00004245: 29 02 
>00004247: 07 91 C9 05 F7 02 9D 01 02 00 42 02 00 10 00 3F 01 
>00004258: 5B 06 00 00 00 06 
>0000425E: 5B 06 01 00 00 06 
>00004264: 29 02 
>00004266: 29 02 
>00004268: 01 86 25 01 09 06 
>0000426E: 05 91 0B 06 0C 06 9E 01 02 00 43 02 10 10 00 01 00 
>0000427F: 09 07 38 07 30 00 00 
>00004286: 09 07 39 07 00 00 01 
>0000428D: 29 02 
>0000428F: 0A 82 
>00004291: 12 06 9E 01 00 00 
>00004297: 07 91 0D 06 F7 02 9F 01 02 00 44 02 10 10 00 3F 01 
>000042A8: 5B 06 00 00 00 06 
>000042AE: 5B 06 01 00 00 06 
>000042B4: 29 02 
>000042B6: 07 91 12 06 F7 02 A0 01 02 00 49 02 10 10 00 3F 01 
>000042C7: 5B 06 00 00 00 02 
>000042CD: 5B 06 01 00 00 02 
>000042D3: 29 02 
>000042D5: 07 91 0E 06 F7 02 A1 01 02 00 45 02 10 10 00 3F 01 
>000042E6: 5B 06 00 00 00 04 
>000042EC: 5B 06 01 00 00 04 
>000042F2: 29 02 
>000042F4: 07 91 13 06 F7 02 A2 01 02 00 4A 02 10 10 00 3F 01 
>00004305: 5B 06 00 00 00 02 
>0000430B: 5B 06 01 00 00 02 
>00004311: 29 02 
>00004313: 07 91 0F 06 F7 02 A3 01 02 00 46 02 10 10 00 3F 01 
>00004324: 5B 06 00 00 00 08 
>0000432A: 5B 06 01 00 00 08 
>00004330: 29 02 
>00004332: 07 91 14 06 F7 02 A4 01 02 00 4B 02 10 10 00 3F 01 
>00004343: 5B 06 00 00 00 02 
>00004349: 5B 06 01 00 00 02 
>0000434F: 29 02 
>00004351: 07 91 10 06 F7 02 A5 01 02 00 47 02 10 10 00 3F 01 
>00004362: 5B 06 00 00 00 02 
>00004368: 5B 06 01 00 00 02 
>0000436E: 29 02 
>00004370: 07 91 15 06 F7 02 A6 01 02 00 4C 02 10 10 00 3F 01 
>00004381: 5B 06 00 00 00 02 
>00004387: 5B 06 01 00 00 02 
>0000438D: 29 02 
>0000438F: 07 91 11 06 F7 02 A7 01 02 00 48 02 10 10 00 3F 01 
>000043A0: 5B 06 00 00 00 0A 
>000043A6: 5B 06 01 00 00 0A 
>000043AC: 29 02 
>000043AE: 07 91 16 06 F7 02 A8 01 02 00 4D 02 10 10 00 3F 01 
>000043BF: 5B 06 00 00 00 02 
>000043C5: 5B 06 01 00 00 02 
>000043CB: 29 02 
>000043CD: 29 02 
>000043CF: 29 02 
>000043D1: 01 86 62 00 F8 03 
>000043D7: 06 8E 2F 04 44 04 A9 01 02 00 53 01 00 03 
>000043E5: 29 02 
>000043E7: 0A 82 
>000043E9: 12 06 A9 01 00 00 
>000043EF: 0A 82 
>000043F1: 12 06 29 01 02 00 
>000043F7: 05 91 47 04 48 04 AA 01 02 00 67 01 10 10 00 04 00 
>00004408: 09 07 49 04 30 00 00 
>0000440F: 09 07 4B 04 00 00 02 
>00004416: 09 07 4D 04 00 00 04 
>0000441D: 29 02 
>0000441F: 29 02 
>00004421: 05 91 51 04 52 04 AB 01 02 00 57 03 10 10 00 03 00 
>00004432: 09 07 38 07 00 00 00 
>00004439: 09 07 53 04 00 00 01 
>00004440: 09 07 54 04 00 00 02 
>00004447: 09 07 55 04 30 00 03 
>0000444E: 29 02 
>00004450: 05 91 17 06 2B 06 AC 01 02 00 B6 02 10 10 01 06 00 
>00004461: 09 07 2C 06 30 00 01 
>00004468: 09 07 2F 06 00 00 06 
>0000446F: 09 07 2D 06 00 00 04 
>00004476: 09 07 2E 06 00 00 02 
>0000447D: 29 02 
>0000447F: 05 91 30 06 44 06 AD 01 02 00 A2 02 10 10 00 01 00 
>00004490: 09 07 38 07 00 00 00 
>00004497: 09 07 39 07 30 00 01 
>0000449E: 29 02 
>000044A0: 05 91 61 04 62 04 AE 01 02 00 7B 01 10 10 00 01 00 
>000044B1: 09 07 FA 02 30 00 00 
>000044B8: 09 07 F9 02 00 00 01 
>000044BF: 29 02 
>000044C1: 05 91 63 04 64 04 AF 01 02 00 8F 01 10 10 00 01 00 
>000044D2: 09 07 FA 02 30 00 00 
>000044D9: 09 07 F9 02 00 00 01 
>000044E0: 29 02 
>000044E2: 05 91 65 04 66 04 B0 01 02 00 A3 01 10 10 00 01 00 
>000044F3: 09 07 FA 02 30 00 00 
>000044FA: 09 07 F9 02 00 00 01 
>00004501: 29 02 
>00004503: 05 91 67 04 68 04 B1 01 02 00 B7 01 10 10 00 01 00 
>00004514: 09 07 FA 02 30 00 00 
>0000451B: 09 07 F9 02 00 00 01 
>00004522: 29 02 
>00004524: 05 91 78 04 79 04 B2 01 02 00 CB 02 10 10 00 01 00 
>00004535: 09 07 FA 02 30 00 00 
>0000453C: 09 07 F9 02 00 00 01 
>00004543: 29 02 
>00004545: 05 91 7A 04 7B 04 B3 01 02 00 DF 02 10 10 00 01 00 
>00004556: 09 07 FA 02 30 00 00 
>0000455D: 09 07 F9 02 00 00 01 
>00004564: 29 02 
>00004566: 05 91 7C 04 7D 04 B4 01 02 00 F3 02 10 10 00 01 00 
>00004577: 09 07 FA 02 30 00 00 
>0000457E: 09 07 F9 02 00 00 01 
>00004585: 29 02 
>00004587: 05 91 7E 04 7F 04 B5 01 02 00 07 03 10 10 00 01 00 
>00004598: 09 07 FA 02 30 00 00 
>0000459F: 09 07 F9 02 00 00 01 
>000045A6: 29 02 
>000045A8: 05 91 B9 04 BA 04 B6 01 02 00 1B 03 10 10 00 01 00 
>000045B9: 09 07 FA 02 30 00 00 
>000045C0: 09 07 F9 02 00 00 01 
>000045C7: 29 02 
>000045C9: 05 91 45 06 46 06 B7 01 02 00 F3 01 10 10 00 01 00 
>000045DA: 09 07 38 07 00 00 00 
>000045E1: 09 07 39 07 30 00 01 
>000045E8: 29 02 
>000045EA: 05 91 56 04 57 04 B8 01 02 00 2F 03 10 10 00 03 00 
>000045FB: 09 07 A8 00 30 00 00 
>00004602: 09 07 58 04 00 00 01 
>00004609: 09 07 59 04 00 00 02 
>00004610: 09 07 5A 04 00 00 03 
>00004617: 29 02 
>00004619: 05 91 80 04 81 04 B9 01 02 00 CB 01 10 10 00 01 00 
>0000462A: 09 07 FA 02 00 00 00 
>00004631: 09 07 39 07 30 00 01 
>00004638: 29 02 
>0000463A: 05 91 EE 06 02 07 BA 01 02 00 07 02 10 10 00 04 00 
>0000464B: 09 07 03 07 30 00 00 
>00004652: 09 07 04 07 00 00 01 
>00004659: 09 07 05 07 00 00 02 
>00004660: 09 07 06 07 00 00 03 
>00004667: 09 07 07 07 00 00 04 
>0000466E: 29 02 
>00004670: 05 91 82 04 83 04 BB 01 02 00 DF 01 10 10 00 01 00 
>00004681: 09 07 84 04 30 00 00 
>00004688: 09 07 85 04 00 00 01 
>0000468F: 29 02 
>00004691: 05 91 69 04 6A 04 BC 01 02 00 78 02 10 10 00 09 00 
>000046A2: 09 07 6F 04 30 00 00 
>000046A9: 09 07 70 04 00 00 03 
>000046B0: 09 07 71 04 00 00 04 
>000046B7: 09 07 72 04 00 00 05 
>000046BE: 09 07 73 04 00 00 06 
>000046C5: 09 07 A7 00 00 00 09 
>000046CC: 29 02 
>000046CE: 03 08 8F 04 AA 00 90 04 
>000046D6: 03 08 A4 04 AA 00 A5 04 
>000046DE: 02 87 57 06 00 00 00 
>000046E5: 29 02 
>000046E7: 05 91 58 06 6C 06 BD 01 02 00 7E 03 10 10 00 01 00 
>000046F8: 09 07 38 07 00 00 00 
>000046FF: 09 07 39 07 30 00 01 
>00004706: 29 02 
>00004708: 0A 82 
>0000470A: 12 06 BD 01 00 00 
>00004710: 05 91 6D 06 D3 06 BE 01 02 00 A6 03 10 10 00 02 00 
>00004721: 09 07 38 07 00 00 00 
>00004728: 09 07 FD 02 00 00 01 
>0000472F: 09 07 F8 02 30 00 02 
>00004736: 29 02 
>00004738: 0A 82 
>0000473A: 12 86 BE 01 01 00 
>00004740: 17 02 
>00004742: 29 02 
>00004744: 07 94 6F 06 D5 06 BF 01 02 00 F6 03 10 11 00 00 FF 03 01 00 
>00004758: 5B 07 00 00 01 3C 00 
>0000475F: 5B 07 01 00 01 3C 00 
>00004766: 29 02 
>00004768: 05 91 70 06 D6 06 C0 01 02 00 BA 03 10 10 00 05 00 
>00004779: 09 07 51 06 00 00 00 
>00004780: 09 07 52 06 00 00 01 
>00004787: 09 07 53 06 30 00 02 
>0000478E: 09 07 54 06 00 00 03 
>00004795: 09 07 55 06 00 00 04 
>0000479C: 09 07 56 06 00 00 05 
>000047A3: 29 02 
>000047A5: 29 02 
>000047A7: 05 91 6E 06 D4 06 C1 01 02 00 CE 03 10 10 00 02 00 
>000047B8: 09 07 38 07 00 00 00 
>000047BF: 09 07 FD 02 00 00 01 
>000047C6: 09 07 F8 02 30 00 02 
>000047CD: 29 02 
>000047CF: 0A 82 
>000047D1: 12 86 C1 01 01 00 
>000047D7: 17 02 
>000047D9: 29 02 
>000047DB: 07 94 71 06 D7 06 C2 01 02 00 1E 04 10 11 00 00 FF 03 01 00 
>000047EF: 5B 07 00 00 01 3C 00 
>000047F6: 5B 07 01 00 01 3C 00 
>000047FD: 29 02 
>000047FF: 05 91 72 06 D8 06 C3 01 02 00 E2 03 10 10 00 05 00 
>00004810: 09 07 51 06 00 00 00 
>00004817: 09 07 52 06 00 00 01 
>0000481E: 09 07 53 06 30 00 02 
>00004825: 09 07 54 06 00 00 03 
>0000482C: 09 07 55 06 00 00 04 
>00004833: 09 07 56 06 00 00 05 
>0000483A: 29 02 
>0000483C: 29 02 
>0000483E: 29 02 
>00004840: 02 87 AA 00 00 00 00 
>00004847: 29 02 
>00004849: 05 91 D9 06 ED 06 C4 01 02 00 92 03 10 10 00 01 00 
>0000485A: 09 07 38 07 30 00 00 
>00004861: 09 07 39 07 00 00 01 
>00004868: 29 02 
>0000486A: 29 02 
>0000486C: 29 02 
>0000486E: 01 86 63 00 FA 03 
>00004874: 06 8E 30 04 44 04 C5 01 02 00 54 01 00 03 
>00004882: 29 02 
>00004884: 0A 82 
>00004886: 12 06 C5 01 00 00 
>0000488C: 0A 82 
>0000488E: 12 06 29 01 02 00 
>00004894: 05 91 47 04 48 04 C6 01 02 00 68 01 10 10 00 04 00 
>000048A5: 09 07 49 04 30 00 00 
>000048AC: 09 07 4B 04 00 00 02 
>000048B3: 09 07 4D 04 00 00 04 
>000048BA: 29 02 
>000048BC: 29 02 
>000048BE: 05 91 51 04 52 04 C7 01 02 00 58 03 10 10 00 03 00 
>000048CF: 09 07 38 07 00 00 00 
>000048D6: 09 07 53 04 00 00 01 
>000048DD: 09 07 54 04 00 00 02 
>000048E4: 09 07 55 04 30 00 03 
>000048EB: 29 02 
>000048ED: 05 91 18 06 2B 06 C8 01 02 00 B7 02 10 10 01 06 00 
>000048FE: 09 07 2C 06 30 00 01 
>00004905: 09 07 2F 06 00 00 06 
>0000490C: 09 07 2D 06 00 00 04 
>00004913: 09 07 2E 06 00 00 02 
>0000491A: 29 02 
>0000491C: 05 91 31 06 44 06 C9 01 02 00 A3 02 10 10 00 01 00 
>0000492D: 09 07 38 07 00 00 00 
>00004934: 09 07 39 07 30 00 01 
>0000493B: 29 02 
>0000493D: 05 91 61 04 62 04 CA 01 02 00 7C 01 10 10 00 01 00 
>0000494E: 09 07 FA 02 30 00 00 
>00004955: 09 07 F9 02 00 00 01 
>0000495C: 29 02 
>0000495E: 05 91 63 04 64 04 CB 01 02 00 90 01 10 10 00 01 00 
>0000496F: 09 07 FA 02 30 00 00 
>00004976: 09 07 F9 02 00 00 01 
>0000497D: 29 02 
>0000497F: 05 91 65 04 66 04 CC 01 02 00 A4 01 10 10 00 01 00 
>00004990: 09 07 FA 02 30 00 00 
>00004997: 09 07 F9 02 00 00 01 
>0000499E: 29 02 
>000049A0: 05 91 67 04 68 04 CD 01 02 00 B8 01 10 10 00 01 00 
>000049B1: 09 07 FA 02 30 00 00 
>000049B8: 09 07 F9 02 00 00 01 
>000049BF: 29 02 
>000049C1: 05 91 78 04 79 04 CE 01 02 00 CC 02 10 10 00 01 00 
>000049D2: 09 07 FA 02 30 00 00 
>000049D9: 09 07 F9 02 00 00 01 
>000049E0: 29 02 
>000049E2: 05 91 7A 04 7B 04 CF 01 02 00 E0 02 10 10 00 01 00 
>000049F3: 09 07 FA 02 30 00 00 
>000049FA: 09 07 F9 02 00 00 01 
>00004A01: 29 02 
>00004A03: 05 91 7C 04 7D 04 D0 01 02 00 F4 02 10 10 00 01 00 
>00004A14: 09 07 FA 02 30 00 00 
>00004A1B: 09 07 F9 02 00 00 01 
>00004A22: 29 02 
>00004A24: 05 91 7E 04 7F 04 D1 01 02 00 08 03 10 10 00 01 00 
>00004A35: 09 07 FA 02 30 00 00 
>00004A3C: 09 07 F9 02 00 00 01 
>00004A43: 29 02 
>00004A45: 05 91 B9 04 BA 04 D2 01 02 00 1C 03 10 10 00 01 00 
>00004A56: 09 07 FA 02 30 00 00 
>00004A5D: 09 07 F9 02 00 00 01 
>00004A64: 29 02 
>00004A66: 05 91 45 06 46 06 D3 01 02 00 F4 01 10 10 00 01 00 
>00004A77: 09 07 38 07 00 00 00 
>00004A7E: 09 07 39 07 30 00 01 
>00004A85: 29 02 
>00004A87: 05 91 56 04 57 04 D4 01 02 00 30 03 10 10 00 03 00 
>00004A98: 09 07 A8 00 30 00 00 
>00004A9F: 09 07 58 04 00 00 01 
>00004AA6: 09 07 59 04 00 00 02 
>00004AAD: 09 07 5A 04 00 00 03 
>00004AB4: 29 02 
>00004AB6: 05 91 80 04 81 04 D5 01 02 00 CC 01 10 10 00 01 00 
>00004AC7: 09 07 FA 02 00 00 00 
>00004ACE: 09 07 39 07 30 00 01 
>00004AD5: 29 02 
>00004AD7: 05 91 EF 06 02 07 D6 01 02 00 08 02 10 10 00 04 00 
>00004AE8: 09 07 03 07 30 00 00 
>00004AEF: 09 07 04 07 00 00 01 
>00004AF6: 09 07 05 07 00 00 02 
>00004AFD: 09 07 06 07 00 00 03 
>00004B04: 09 07 07 07 00 00 04 
>00004B0B: 29 02 
>00004B0D: 05 91 82 04 83 04 D7 01 02 00 E0 01 10 10 00 01 00 
>00004B1E: 09 07 84 04 30 00 00 
>00004B25: 09 07 85 04 00 00 01 
>00004B2C: 29 02 
>00004B2E: 05 91 69 04 6A 04 D8 01 02 00 79 02 10 10 00 09 00 
>00004B3F: 09 07 6F 04 30 00 00 
>00004B46: 09 07 70 04 00 00 03 
>00004B4D: 09 07 71 04 00 00 04 
>00004B54: 09 07 72 04 00 00 05 
>00004B5B: 09 07 73 04 00 00 06 
>00004B62: 09 07 A7 00 00 00 09 
>00004B69: 29 02 
>00004B6B: 03 08 8F 04 AA 00 91 04 
>00004B73: 03 08 A4 04 AA 00 A6 04 
>00004B7B: 02 87 57 06 00 00 00 
>00004B82: 29 02 
>00004B84: 05 91 59 06 6C 06 D9 01 02 00 7F 03 10 10 00 01 00 
>00004B95: 09 07 38 07 00 00 00 
>00004B9C: 09 07 39 07 30 00 01 
>00004BA3: 29 02 
>00004BA5: 0A 82 
>00004BA7: 12 06 D9 01 00 00 
>00004BAD: 05 91 73 06 D3 06 DA 01 02 00 A7 03 10 10 00 02 00 
>00004BBE: 09 07 38 07 00 00 00 
>00004BC5: 09 07 FD 02 00 00 01 
>00004BCC: 09 07 F8 02 30 00 02 
>00004BD3: 29 02 
>00004BD5: 0A 82 
>00004BD7: 12 86 DA 01 01 00 
>00004BDD: 17 02 
>00004BDF: 29 02 
>00004BE1: 07 94 74 06 D5 06 DB 01 02 00 F8 03 10 11 00 00 FF 03 01 00 
>00004BF5: 5B 07 00 00 01 3C 00 
>00004BFC: 5B 07 01 00 01 3C 00 
>00004C03: 29 02 
>00004C05: 05 91 75 06 D6 06 DC 01 02 00 BB 03 10 10 00 05 00 
>00004C16: 09 07 51 06 00 00 00 
>00004C1D: 09 07 52 06 00 00 01 
>00004C24: 09 07 53 06 30 00 02 
>00004C2B: 09 07 54 06 00 00 03 
>00004C32: 09 07 55 06 00 00 04 
>00004C39: 09 07 56 06 00 00 05 
>00004C40: 29 02 
>00004C42: 29 02 
>00004C44: 05 91 6E 06 D4 06 DD 01 02 00 CF 03 10 10 00 02 00 
>00004C55: 09 07 38 07 00 00 00 
>00004C5C: 09 07 FD 02 00 00 01 
>00004C63: 09 07 F8 02 30 00 02 
>00004C6A: 29 02 
>00004C6C: 0A 82 
>00004C6E: 12 86 DD 01 01 00 
>00004C74: 17 02 
>00004C76: 29 02 
>00004C78: 07 94 76 06 D7 06 DE 01 02 00 20 04 10 11 00 00 FF 03 01 00 
>00004C8C: 5B 07 00 00 01 3C 00 
>00004C93: 5B 07 01 00 01 3C 00 
>00004C9A: 29 02 
>00004C9C: 05 91 77 06 D8 06 DF 01 02 00 E3 03 10 10 00 05 00 
>00004CAD: 09 07 51 06 00 00 00 
>00004CB4: 09 07 52 06 00 00 01 
>00004CBB: 09 07 53 06 30 00 02 
>00004CC2: 09 07 54 06 00 00 03 
>00004CC9: 09 07 55 06 00 00 04 
>00004CD0: 09 07 56 06 00 00 05 
>00004CD7: 29 02 
>00004CD9: 29 02 
>00004CDB: 29 02 
>00004CDD: 02 87 AA 00 00 00 00 
>00004CE4: 29 02 
>00004CE6: 05 91 DA 06 ED 06 E0 01 02 00 93 03 10 10 00 01 00 
>00004CF7: 09 07 38 07 30 00 00 
>00004CFE: 09 07 39 07 00 00 01 
>00004D05: 29 02 
>00004D07: 29 02 
>00004D09: 29 02 
>00004D0B: 01 86 64 00 FC 03 
>00004D11: 06 8E 31 04 44 04 E1 01 02 00 55 01 00 03 
>00004D1F: 29 02 
>00004D21: 0A 82 
>00004D23: 12 06 E1 01 00 00 
>00004D29: 0A 82 
>00004D2B: 12 06 29 01 02 00 
>00004D31: 05 91 47 04 48 04 E2 01 02 00 69 01 10 10 00 04 00 
>00004D42: 09 07 49 04 30 00 00 
>00004D49: 09 07 4B 04 00 00 02 
>00004D50: 09 07 4D 04 00 00 04 
>00004D57: 29 02 
>00004D59: 29 02 
>00004D5B: 05 91 51 04 52 04 E3 01 02 00 59 03 10 10 00 03 00 
>00004D6C: 09 07 38 07 00 00 00 
>00004D73: 09 07 53 04 00 00 01 
>00004D7A: 09 07 54 04 00 00 02 
>00004D81: 09 07 55 04 30 00 03 
>00004D88: 29 02 
>00004D8A: 05 91 19 06 2B 06 E4 01 02 00 B8 02 10 10 01 06 00 
>00004D9B: 09 07 2C 06 30 00 01 
>00004DA2: 09 07 2F 06 00 00 06 
>00004DA9: 09 07 2D 06 00 00 04 
>00004DB0: 09 07 2E 06 00 00 02 
>00004DB7: 29 02 
>00004DB9: 05 91 32 06 44 06 E5 01 02 00 A4 02 10 10 00 01 00 
>00004DCA: 09 07 38 07 00 00 00 
>00004DD1: 09 07 39 07 30 00 01 
>00004DD8: 29 02 
>00004DDA: 05 91 61 04 62 04 E6 01 02 00 7D 01 10 10 00 01 00 
>00004DEB: 09 07 FA 02 30 00 00 
>00004DF2: 09 07 F9 02 00 00 01 
>00004DF9: 29 02 
>00004DFB: 05 91 63 04 64 04 E7 01 02 00 91 01 10 10 00 01 00 
>00004E0C: 09 07 FA 02 30 00 00 
>00004E13: 09 07 F9 02 00 00 01 
>00004E1A: 29 02 
>00004E1C: 05 91 65 04 66 04 E8 01 02 00 A5 01 10 10 00 01 00 
>00004E2D: 09 07 FA 02 30 00 00 
>00004E34: 09 07 F9 02 00 00 01 
>00004E3B: 29 02 
>00004E3D: 05 91 67 04 68 04 E9 01 02 00 B9 01 10 10 00 01 00 
>00004E4E: 09 07 FA 02 30 00 00 
>00004E55: 09 07 F9 02 00 00 01 
>00004E5C: 29 02 
>00004E5E: 05 91 78 04 79 04 EA 01 02 00 CD 02 10 10 00 01 00 
>00004E6F: 09 07 FA 02 30 00 00 
>00004E76: 09 07 F9 02 00 00 01 
>00004E7D: 29 02 
>00004E7F: 05 91 7A 04 7B 04 EB 01 02 00 E1 02 10 10 00 01 00 
>00004E90: 09 07 FA 02 30 00 00 
>00004E97: 09 07 F9 02 00 00 01 
>00004E9E: 29 02 
>00004EA0: 05 91 7C 04 7D 04 EC 01 02 00 F5 02 10 10 00 01 00 
>00004EB1: 09 07 FA 02 30 00 00 
>00004EB8: 09 07 F9 02 00 00 01 
>00004EBF: 29 02 
>00004EC1: 05 91 7E 04 7F 04 ED 01 02 00 09 03 10 10 00 01 00 
>00004ED2: 09 07 FA 02 30 00 00 
>00004ED9: 09 07 F9 02 00 00 01 
>00004EE0: 29 02 
>00004EE2: 05 91 B9 04 BA 04 EE 01 02 00 1D 03 10 10 00 01 00 
>00004EF3: 09 07 FA 02 30 00 00 
>00004EFA: 09 07 F9 02 00 00 01 
>00004F01: 29 02 
>00004F03: 05 91 45 06 46 06 EF 01 02 00 F5 01 10 10 00 01 00 
>00004F14: 09 07 38 07 00 00 00 
>00004F1B: 09 07 39 07 30 00 01 
>00004F22: 29 02 
>00004F24: 05 91 56 04 57 04 F0 01 02 00 31 03 10 10 00 03 00 
>00004F35: 09 07 A8 00 30 00 00 
>00004F3C: 09 07 58 04 00 00 01 
>00004F43: 09 07 59 04 00 00 02 
>00004F4A: 09 07 5A 04 00 00 03 
>00004F51: 29 02 
>00004F53: 05 91 80 04 81 04 F1 01 02 00 CD 01 10 10 00 01 00 
>00004F64: 09 07 FA 02 00 00 00 
>00004F6B: 09 07 39 07 30 00 01 
>00004F72: 29 02 
>00004F74: 05 91 F0 06 02 07 F2 01 02 00 09 02 10 10 00 04 00 
>00004F85: 09 07 03 07 30 00 00 
>00004F8C: 09 07 04 07 00 00 01 
>00004F93: 09 07 05 07 00 00 02 
>00004F9A: 09 07 06 07 00 00 03 
>00004FA1: 09 07 07 07 00 00 04 
>00004FA8: 29 02 
>00004FAA: 05 91 82 04 83 04 F3 01 02 00 E1 01 10 10 00 01 00 
>00004FBB: 09 07 84 04 30 00 00 
>00004FC2: 09 07 85 04 00 00 01 
>00004FC9: 29 02 
>00004FCB: 05 91 69 04 6A 04 F4 01 02 00 7A 02 10 10 00 09 00 
>00004FDC: 09 07 6F 04 30 00 00 
>00004FE3: 09 07 70 04 00 00 03 
>00004FEA: 09 07 71 04 00 00 04 
>00004FF1: 09 07 72 04 00 00 05 
>00004FF8: 09 07 73 04 00 00 06 
>00004FFF: 09 07 A7 00 00 00 09 
>00005006: 29 02 
>00005008: 03 08 8F 04 AA 00 92 04 
>00005010: 03 08 A4 04 AA 00 A7 04 
>00005018: 02 87 57 06 00 00 00 
>0000501F: 29 02 
>00005021: 05 91 5A 06 6C 06 F5 01 02 00 80 03 10 10 00 01 00 
>00005032: 09 07 38 07 00 00 00 
>00005039: 09 07 39 07 30 00 01 
>00005040: 29 02 
>00005042: 0A 82 
>00005044: 12 06 F5 01 00 00 
>0000504A: 05 91 78 06 D3 06 F6 01 02 00 A8 03 10 10 00 02 00 
>0000505B: 09 07 38 07 00 00 00 
>00005062: 09 07 FD 02 00 00 01 
>00005069: 09 07 F8 02 30 00 02 
>00005070: 29 02 
>00005072: 0A 82 
>00005074: 12 86 F6 01 01 00 
>0000507A: 17 02 
>0000507C: 29 02 
>0000507E: 07 94 79 06 D5 06 F7 01 02 00 FA 03 10 11 00 00 FF 03 01 00 
>00005092: 5B 07 00 00 01 3C 00 
>00005099: 5B 07 01 00 01 3C 00 
>000050A0: 29 02 
>000050A2: 05 91 7A 06 D6 06 F8 01 02 00 BC 03 10 10 00 05 00 
>000050B3: 09 07 51 06 00 00 00 
>000050BA: 09 07 52 06 00 00 01 
>000050C1: 09 07 53 06 30 00 02 
>000050C8: 09 07 54 06 00 00 03 
>000050CF: 09 07 55 06 00 00 04 
>000050D6: 09 07 56 06 00 00 05 
>000050DD: 29 02 
>000050DF: 29 02 
>000050E1: 05 91 6E 06 D4 06 F9 01 02 00 D0 03 10 10 00 02 00 
>000050F2: 09 07 38 07 00 00 00 
>000050F9: 09 07 FD 02 00 00 01 
>00005100: 09 07 F8 02 30 00 02 
>00005107: 29 02 
>00005109: 0A 82 
>0000510B: 12 86 F9 01 01 00 
>00005111: 17 02 
>00005113: 29 02 
>00005115: 07 94 7B 06 D7 06 FA 01 02 00 22 04 10 11 00 00 FF 03 01 00 
>00005129: 5B 07 00 00 01 3C 00 
>00005130: 5B 07 01 00 01 3C 00 
>00005137: 29 02 
>00005139: 05 91 7C 06 D8 06 FB 01 02 00 E4 03 10 10 00 05 00 
>0000514A: 09 07 51 06 00 00 00 
>00005151: 09 07 52 06 00 00 01 
>00005158: 09 07 53 06 30 00 02 
>0000515F: 09 07 54 06 00 00 03 
>00005166: 09 07 55 06 00 00 04 
>0000516D: 09 07 56 06 00 00 05 
>00005174: 29 02 
>00005176: 29 02 
>00005178: 29 02 
>0000517A: 02 87 AA 00 00 00 00 
>00005181: 29 02 
>00005183: 05 91 DB 06 ED 06 FC 01 02 00 94 03 10 10 00 01 00 
>00005194: 09 07 38 07 30 00 00 
>0000519B: 09 07 39 07 00 00 01 
>000051A2: 29 02 
>000051A4: 29 02 
>000051A6: 29 02 
>000051A8: 01 86 65 00 FE 03 
>000051AE: 06 8E 32 04 44 04 FD 01 02 00 56 01 00 03 
>000051BC: 29 02 
>000051BE: 0A 82 
>000051C0: 12 06 FD 01 00 00 
>000051C6: 0A 82 
>000051C8: 12 06 29 01 02 00 
>000051CE: 05 91 47 04 48 04 FE 01 02 00 6A 01 10 10 00 04 00 
>000051DF: 09 07 49 04 30 00 00 
>000051E6: 09 07 4B 04 00 00 02 
>000051ED: 09 07 4D 04 00 00 04 
>000051F4: 29 02 
>000051F6: 29 02 
>000051F8: 05 91 51 04 52 04 FF 01 02 00 5A 03 10 10 00 03 00 
>00005209: 09 07 38 07 00 00 00 
>00005210: 09 07 53 04 00 00 01 
>00005217: 09 07 54 04 00 00 02 
>0000521E: 09 07 55 04 30 00 03 
>00005225: 29 02 
>00005227: 05 91 1A 06 2B 06 00 02 02 00 B9 02 10 10 01 06 00 
>00005238: 09 07 2C 06 30 00 01 
>0000523F: 09 07 2F 06 00 00 06 
>00005246: 09 07 2D 06 00 00 04 
>0000524D: 09 07 2E 06 00 00 02 
>00005254: 29 02 
>00005256: 05 91 33 06 44 06 01 02 02 00 A5 02 10 10 00 01 00 
>00005267: 09 07 38 07 00 00 00 
>0000526E: 09 07 39 07 30 00 01 
>00005275: 29 02 
>00005277: 05 91 61 04 62 04 02 02 02 00 7E 01 10 10 00 01 00 
>00005288: 09 07 FA 02 30 00 00 
>0000528F: 09 07 F9 02 00 00 01 
>00005296: 29 02 
>00005298: 05 91 63 04 64 04 03 02 02 00 92 01 10 10 00 01 00 
>000052A9: 09 07 FA 02 30 00 00 
>000052B0: 09 07 F9 02 00 00 01 
>000052B7: 29 02 
>000052B9: 05 91 65 04 66 04 04 02 02 00 A6 01 10 10 00 01 00 
>000052CA: 09 07 FA 02 30 00 00 
>000052D1: 09 07 F9 02 00 00 01 
>000052D8: 29 02 
>000052DA: 05 91 67 04 68 04 05 02 02 00 BA 01 10 10 00 01 00 
>000052EB: 09 07 FA 02 30 00 00 
>000052F2: 09 07 F9 02 00 00 01 
>000052F9: 29 02 
>000052FB: 05 91 78 04 79 04 06 02 02 00 CE 02 10 10 00 01 00 
>0000530C: 09 07 FA 02 30 00 00 
>00005313: 09 07 F9 02 00 00 01 
>0000531A: 29 02 
>0000531C: 05 91 7A 04 7B 04 07 02 02 00 E2 02 10 10 00 01 00 
>0000532D: 09 07 FA 02 30 00 00 
>00005334: 09 07 F9 02 00 00 01 
>0000533B: 29 02 
>0000533D: 05 91 7C 04 7D 04 08 02 02 00 F6 02 10 10 00 01 00 
>0000534E: 09 07 FA 02 30 00 00 
>00005355: 09 07 F9 02 00 00 01 
>0000535C: 29 02 
>0000535E: 05 91 7E 04 7F 04 09 02 02 00 0A 03 10 10 00 01 00 
>0000536F: 09 07 FA 02 30 00 00 
>00005376: 09 07 F9 02 00 00 01 
>0000537D: 29 02 
>0000537F: 05 91 B9 04 BA 04 0A 02 02 00 1E 03 10 10 00 01 00 
>00005390: 09 07 FA 02 30 00 00 
>00005397: 09 07 F9 02 00 00 01 
>0000539E: 29 02 
>000053A0: 05 91 45 06 46 06 0B 02 02 00 F6 01 10 10 00 01 00 
>000053B1: 09 07 38 07 00 00 00 
>000053B8: 09 07 39 07 30 00 01 
>000053BF: 29 02 
>000053C1: 05 91 56 04 57 04 0C 02 02 00 32 03 10 10 00 03 00 
>000053D2: 09 07 A8 00 30 00 00 
>000053D9: 09 07 58 04 00 00 01 
>000053E0: 09 07 59 04 00 00 02 
>000053E7: 09 07 5A 04 00 00 03 
>000053EE: 29 02 
>000053F0: 05 91 80 04 81 04 0D 02 02 00 CE 01 10 10 00 01 00 
>00005401: 09 07 FA 02 00 00 00 
>00005408: 09 07 39 07 30 00 01 
>0000540F: 29 02 
>00005411: 05 91 F1 06 02 07 0E 02 02 00 0A 02 10 10 00 04 00 
>00005422: 09 07 03 07 30 00 00 
>00005429: 09 07 04 07 00 00 01 
>00005430: 09 07 05 07 00 00 02 
>00005437: 09 07 06 07 00 00 03 
>0000543E: 09 07 07 07 00 00 04 
>00005445: 29 02 
>00005447: 05 91 82 04 83 04 0F 02 02 00 E2 01 10 10 00 01 00 
>00005458: 09 07 84 04 30 00 00 
>0000545F: 09 07 85 04 00 00 01 
>00005466: 29 02 
>00005468: 05 91 69 04 6A 04 10 02 02 00 7B 02 10 10 00 09 00 
>00005479: 09 07 6F 04 30 00 00 
>00005480: 09 07 70 04 00 00 03 
>00005487: 09 07 71 04 00 00 04 
>0000548E: 09 07 72 04 00 00 05 
>00005495: 09 07 73 04 00 00 06 
>0000549C: 09 07 A7 00 00 00 09 
>000054A3: 29 02 
>000054A5: 03 08 8F 04 AA 00 93 04 
>000054AD: 03 08 A4 04 AA 00 A8 04 
>000054B5: 02 87 57 06 00 00 00 
>000054BC: 29 02 
>000054BE: 05 91 5B 06 6C 06 11 02 02 00 81 03 10 10 00 01 00 
>000054CF: 09 07 38 07 00 00 00 
>000054D6: 09 07 39 07 30 00 01 
>000054DD: 29 02 
>000054DF: 0A 82 
>000054E1: 12 06 11 02 00 00 
>000054E7: 05 91 7D 06 D3 06 12 02 02 00 A9 03 10 10 00 02 00 
>000054F8: 09 07 38 07 00 00 00 
>000054FF: 09 07 FD 02 00 00 01 
>00005506: 09 07 F8 02 30 00 02 
>0000550D: 29 02 
>0000550F: 0A 82 
>00005511: 12 86 12 02 01 00 
>00005517: 17 02 
>00005519: 29 02 
>0000551B: 07 94 7E 06 D5 06 13 02 02 00 FC 03 10 11 00 00 FF 03 01 00 
>0000552F: 5B 07 00 00 01 3C 00 
>00005536: 5B 07 01 00 01 3C 00 
>0000553D: 29 02 
>0000553F: 05 91 7F 06 D6 06 14 02 02 00 BD 03 10 10 00 05 00 
>00005550: 09 07 51 06 00 00 00 
>00005557: 09 07 52 06 00 00 01 
>0000555E: 09 07 53 06 30 00 02 
>00005565: 09 07 54 06 00 00 03 
>0000556C: 09 07 55 06 00 00 04 
>00005573: 09 07 56 06 00 00 05 
>0000557A: 29 02 
>0000557C: 29 02 
>0000557E: 05 91 6E 06 D4 06 15 02 02 00 D1 03 10 10 00 02 00 
>0000558F: 09 07 38 07 00 00 00 
>00005596: 09 07 FD 02 00 00 01 
>0000559D: 09 07 F8 02 30 00 02 
>000055A4: 29 02 
>000055A6: 0A 82 
>000055A8: 12 86 15 02 01 00 
>000055AE: 17 02 
>000055B0: 29 02 
>000055B2: 07 94 80 06 D7 06 16 02 02 00 24 04 10 11 00 00 FF 03 01 00 
>000055C6: 5B 07 00 00 01 3C 00 
>000055CD: 5B 07 01 00 01 3C 00 
>000055D4: 29 02 
>000055D6: 05 91 81 06 D8 06 17 02 02 00 E5 03 10 10 00 05 00 
>000055E7: 09 07 51 06 00 00 00 
>000055EE: 09 07 52 06 00 00 01 
>000055F5: 09 07 53 06 30 00 02 
>000055FC: 09 07 54 06 00 00 03 
>00005603: 09 07 55 06 00 00 04 
>0000560A: 09 07 56 06 00 00 05 
>00005611: 29 02 
>00005613: 29 02 
>00005615: 29 02 
>00005617: 02 87 AA 00 00 00 00 
>0000561E: 29 02 
>00005620: 05 91 DC 06 ED 06 18 02 02 00 95 03 10 10 00 01 00 
>00005631: 09 07 38 07 30 00 00 
>00005638: 09 07 39 07 00 00 01 
>0000563F: 29 02 
>00005641: 29 02 
>00005643: 29 02 
>00005645: 01 86 66 00 00 04 
>0000564B: 06 8E 33 04 44 04 19 02 02 00 57 01 00 03 
>00005659: 29 02 
>0000565B: 0A 82 
>0000565D: 12 06 19 02 00 00 
>00005663: 0A 82 
>00005665: 12 06 29 01 02 00 
>0000566B: 05 91 47 04 48 04 1A 02 02 00 6B 01 10 10 00 04 00 
>0000567C: 09 07 49 04 30 00 00 
>00005683: 09 07 4B 04 00 00 02 
>0000568A: 09 07 4D 04 00 00 04 
>00005691: 29 02 
>00005693: 29 02 
>00005695: 05 91 51 04 52 04 1B 02 02 00 5B 03 10 10 00 03 00 
>000056A6: 09 07 38 07 00 00 00 
>000056AD: 09 07 53 04 00 00 01 
>000056B4: 09 07 54 04 00 00 02 
>000056BB: 09 07 55 04 30 00 03 
>000056C2: 29 02 
>000056C4: 05 91 1B 06 2B 06 1C 02 02 00 BA 02 10 10 01 06 00 
>000056D5: 09 07 2C 06 30 00 01 
>000056DC: 09 07 2F 06 00 00 06 
>000056E3: 09 07 2D 06 00 00 04 
>000056EA: 09 07 2E 06 00 00 02 
>000056F1: 29 02 
>000056F3: 05 91 34 06 44 06 1D 02 02 00 A6 02 10 10 00 01 00 
>00005704: 09 07 38 07 00 00 00 
>0000570B: 09 07 39 07 30 00 01 
>00005712: 29 02 
>00005714: 05 91 61 04 62 04 1E 02 02 00 7F 01 10 10 00 01 00 
>00005725: 09 07 FA 02 30 00 00 
>0000572C: 09 07 F9 02 00 00 01 
>00005733: 29 02 
>00005735: 05 91 63 04 64 04 1F 02 02 00 93 01 10 10 00 01 00 
>00005746: 09 07 FA 02 30 00 00 
>0000574D: 09 07 F9 02 00 00 01 
>00005754: 29 02 
>00005756: 05 91 65 04 66 04 20 02 02 00 A7 01 10 10 00 01 00 
>00005767: 09 07 FA 02 30 00 00 
>0000576E: 09 07 F9 02 00 00 01 
>00005775: 29 02 
>00005777: 05 91 67 04 68 04 21 02 02 00 BB 01 10 10 00 01 00 
>00005788: 09 07 FA 02 30 00 00 
>0000578F: 09 07 F9 02 00 00 01 
>00005796: 29 02 
>00005798: 05 91 78 04 79 04 22 02 02 00 CF 02 10 10 00 01 00 
>000057A9: 09 07 FA 02 30 00 00 
>000057B0: 09 07 F9 02 00 00 01 
>000057B7: 29 02 
>000057B9: 05 91 7A 04 7B 04 23 02 02 00 E3 02 10 10 00 01 00 
>000057CA: 09 07 FA 02 30 00 00 
>000057D1: 09 07 F9 02 00 00 01 
>000057D8: 29 02 
>000057DA: 05 91 7C 04 7D 04 24 02 02 00 F7 02 10 10 00 01 00 
>000057EB: 09 07 FA 02 30 00 00 
>000057F2: 09 07 F9 02 00 00 01 
>000057F9: 29 02 
>000057FB: 05 91 7E 04 7F 04 25 02 02 00 0B 03 10 10 00 01 00 
>0000580C: 09 07 FA 02 30 00 00 
>00005813: 09 07 F9 02 00 00 01 
>0000581A: 29 02 
>0000581C: 05 91 B9 04 BA 04 26 02 02 00 1F 03 10 10 00 01 00 
>0000582D: 09 07 FA 02 30 00 00 
>00005834: 09 07 F9 02 00 00 01 
>0000583B: 29 02 
>0000583D: 05 91 45 06 46 06 27 02 02 00 F7 01 10 10 00 01 00 
>0000584E: 09 07 38 07 00 00 00 
>00005855: 09 07 39 07 30 00 01 
>0000585C: 29 02 
>0000585E: 05 91 56 04 57 04 28 02 02 00 33 03 10 10 00 03 00 
>0000586F: 09 07 A8 00 30 00 00 
>00005876: 09 07 58 04 00 00 01 
>0000587D: 09 07 59 04 00 00 02 
>00005884: 09 07 5A 04 00 00 03 
>0000588B: 29 02 
>0000588D: 05 91 80 04 81 04 29 02 02 00 CF 01 10 10 00 01 00 
>0000589E: 09 07 FA 02 00 00 00 
>000058A5: 09 07 39 07 30 00 01 
>000058AC: 29 02 
>000058AE: 05 91 F2 06 02 07 2A 02 02 00 0B 02 10 10 00 04 00 
>000058BF: 09 07 03 07 30 00 00 
>000058C6: 09 07 04 07 00 00 01 
>000058CD: 09 07 05 07 00 00 02 
>000058D4: 09 07 06 07 00 00 03 
>000058DB: 09 07 07 07 00 00 04 
>000058E2: 29 02 
>000058E4: 05 91 82 04 83 04 2B 02 02 00 E3 01 10 10 00 01 00 
>000058F5: 09 07 84 04 30 00 00 
>000058FC: 09 07 85 04 00 00 01 
>00005903: 29 02 
>00005905: 05 91 69 04 6A 04 2C 02 02 00 7C 02 10 10 00 09 00 
>00005916: 09 07 6F 04 30 00 00 
>0000591D: 09 07 70 04 00 00 03 
>00005924: 09 07 71 04 00 00 04 
>0000592B: 09 07 72 04 00 00 05 
>00005932: 09 07 73 04 00 00 06 
>00005939: 09 07 A7 00 00 00 09 
>00005940: 29 02 
>00005942: 03 08 8F 04 AA 00 94 04 
>0000594A: 03 08 A4 04 AA 00 A9 04 
>00005952: 02 87 57 06 00 00 00 
>00005959: 29 02 
>0000595B: 05 91 5C 06 6C 06 2D 02 02 00 82 03 10 10 00 01 00 
>0000596C: 09 07 38 07 00 00 00 
>00005973: 09 07 39 07 30 00 01 
>0000597A: 29 02 
>0000597C: 0A 82 
>0000597E: 12 06 2D 02 00 00 
>00005984: 05 91 82 06 D3 06 2E 02 02 00 AA 03 10 10 00 02 00 
>00005995: 09 07 38 07 00 00 00 
>0000599C: 09 07 FD 02 00 00 01 
>000059A3: 09 07 F8 02 30 00 02 
>000059AA: 29 02 
>000059AC: 0A 82 
>000059AE: 12 86 2E 02 01 00 
>000059B4: 17 02 
>000059B6: 29 02 
>000059B8: 07 94 83 06 D5 06 2F 02 02 00 FE 03 10 11 00 00 FF 03 01 00 
>000059CC: 5B 07 00 00 01 3C 00 
>000059D3: 5B 07 01 00 01 3C 00 
>000059DA: 29 02 
>000059DC: 05 91 84 06 D6 06 30 02 02 00 BE 03 10 10 00 05 00 
>000059ED: 09 07 51 06 00 00 00 
>000059F4: 09 07 52 06 00 00 01 
>000059FB: 09 07 53 06 30 00 02 
>00005A02: 09 07 54 06 00 00 03 
>00005A09: 09 07 55 06 00 00 04 
>00005A10: 09 07 56 06 00 00 05 
>00005A17: 29 02 
>00005A19: 29 02 
>00005A1B: 05 91 6E 06 D4 06 31 02 02 00 D2 03 10 10 00 02 00 
>00005A2C: 09 07 38 07 00 00 00 
>00005A33: 09 07 FD 02 00 00 01 
>00005A3A: 09 07 F8 02 30 00 02 
>00005A41: 29 02 
>00005A43: 0A 82 
>00005A45: 12 86 31 02 01 00 
>00005A4B: 17 02 
>00005A4D: 29 02 
>00005A4F: 07 94 85 06 D7 06 32 02 02 00 26 04 10 11 00 00 FF 03 01 00 
>00005A63: 5B 07 00 00 01 3C 00 
>00005A6A: 5B 07 01 00 01 3C 00 
>00005A71: 29 02 
>00005A73: 05 91 86 06 D8 06 33 02 02 00 E6 03 10 10 00 05 00 
>00005A84: 09 07 51 06 00 00 00 
>00005A8B: 09 07 52 06 00 00 01 
>00005A92: 09 07 53 06 30 00 02 
>00005A99: 09 07 54 06 00 00 03 
>00005AA0: 09 07 55 06 00 00 04 
>00005AA7: 09 07 56 06 00 00 05 
>00005AAE: 29 02 
>00005AB0: 29 02 
>00005AB2: 29 02 
>00005AB4: 02 87 AA 00 00 00 00 
>00005ABB: 29 02 
>00005ABD: 05 91 DD 06 ED 06 34 02 02 00 96 03 10 10 00 01 00 
>00005ACE: 09 07 38 07 30 00 00 
>00005AD5: 09 07 39 07 00 00 01 
>00005ADC: 29 02 
>00005ADE: 29 02 
>00005AE0: 29 02 
>00005AE2: 01 86 67 00 02 04 
>00005AE8: 06 8E 34 04 44 04 35 02 02 00 58 01 00 03 
>00005AF6: 29 02 
>00005AF8: 0A 82 
>00005AFA: 12 06 35 02 00 00 
>00005B00: 0A 82 
>00005B02: 12 06 29 01 02 00 
>00005B08: 05 91 47 04 48 04 36 02 02 00 6C 01 10 10 00 04 00 
>00005B19: 09 07 49 04 30 00 00 
>00005B20: 09 07 4B 04 00 00 02 
>00005B27: 09 07 4D 04 00 00 04 
>00005B2E: 29 02 
>00005B30: 29 02 
>00005B32: 05 91 51 04 52 04 37 02 02 00 5C 03 10 10 00 03 00 
>00005B43: 09 07 38 07 00 00 00 
>00005B4A: 09 07 53 04 00 00 01 
>00005B51: 09 07 54 04 00 00 02 
>00005B58: 09 07 55 04 30 00 03 
>00005B5F: 29 02 
>00005B61: 05 91 1C 06 2B 06 38 02 02 00 BB 02 10 10 01 06 00 
>00005B72: 09 07 2C 06 30 00 01 
>00005B79: 09 07 2F 06 00 00 06 
>00005B80: 09 07 2D 06 00 00 04 
>00005B87: 09 07 2E 06 00 00 02 
>00005B8E: 29 02 
>00005B90: 05 91 35 06 44 06 39 02 02 00 A7 02 10 10 00 01 00 
>00005BA1: 09 07 38 07 00 00 00 
>00005BA8: 09 07 39 07 30 00 01 
>00005BAF: 29 02 
>00005BB1: 05 91 61 04 62 04 3A 02 02 00 80 01 10 10 00 01 00 
>00005BC2: 09 07 FA 02 30 00 00 
>00005BC9: 09 07 F9 02 00 00 01 
>00005BD0: 29 02 
>00005BD2: 05 91 63 04 64 04 3B 02 02 00 94 01 10 10 00 01 00 
>00005BE3: 09 07 FA 02 30 00 00 
>00005BEA: 09 07 F9 02 00 00 01 
>00005BF1: 29 02 
>00005BF3: 05 91 65 04 66 04 3C 02 02 00 A8 01 10 10 00 01 00 
>00005C04: 09 07 FA 02 30 00 00 
>00005C0B: 09 07 F9 02 00 00 01 
>00005C12: 29 02 
>00005C14: 05 91 67 04 68 04 3D 02 02 00 BC 01 10 10 00 01 00 
>00005C25: 09 07 FA 02 30 00 00 
>00005C2C: 09 07 F9 02 00 00 01 
>00005C33: 29 02 
>00005C35: 05 91 78 04 79 04 3E 02 02 00 D0 02 10 10 00 01 00 
>00005C46: 09 07 FA 02 30 00 00 
>00005C4D: 09 07 F9 02 00 00 01 
>00005C54: 29 02 
>00005C56: 05 91 7A 04 7B 04 3F 02 02 00 E4 02 10 10 00 01 00 
>00005C67: 09 07 FA 02 30 00 00 
>00005C6E: 09 07 F9 02 00 00 01 
>00005C75: 29 02 
>00005C77: 05 91 7C 04 7D 04 40 02 02 00 F8 02 10 10 00 01 00 
>00005C88: 09 07 FA 02 30 00 00 
>00005C8F: 09 07 F9 02 00 00 01 
>00005C96: 29 02 
>00005C98: 05 91 7E 04 7F 04 41 02 02 00 0C 03 10 10 00 01 00 
>00005CA9: 09 07 FA 02 30 00 00 
>00005CB0: 09 07 F9 02 00 00 01 
>00005CB7: 29 02 
>00005CB9: 05 91 B9 04 BA 04 42 02 02 00 20 03 10 10 00 01 00 
>00005CCA: 09 07 FA 02 30 00 00 
>00005CD1: 09 07 F9 02 00 00 01 
>00005CD8: 29 02 
>00005CDA: 05 91 45 06 46 06 43 02 02 00 F8 01 10 10 00 01 00 
>00005CEB: 09 07 38 07 00 00 00 
>00005CF2: 09 07 39 07 30 00 01 
>00005CF9: 29 02 
>00005CFB: 05 91 56 04 57 04 44 02 02 00 34 03 10 10 00 03 00 
>00005D0C: 09 07 A8 00 30 00 00 
>00005D13: 09 07 58 04 00 00 01 
>00005D1A: 09 07 59 04 00 00 02 
>00005D21: 09 07 5A 04 00 00 03 
>00005D28: 29 02 
>00005D2A: 05 91 80 04 81 04 45 02 02 00 D0 01 10 10 00 01 00 
>00005D3B: 09 07 FA 02 00 00 00 
>00005D42: 09 07 39 07 30 00 01 
>00005D49: 29 02 
>00005D4B: 05 91 F3 06 02 07 46 02 02 00 0C 02 10 10 00 04 00 
>00005D5C: 09 07 03 07 30 00 00 
>00005D63: 09 07 04 07 00 00 01 
>00005D6A: 09 07 05 07 00 00 02 
>00005D71: 09 07 06 07 00 00 03 
>00005D78: 09 07 07 07 00 00 04 
>00005D7F: 29 02 
>00005D81: 05 91 82 04 83 04 47 02 02 00 E4 01 10 10 00 01 00 
>00005D92: 09 07 84 04 30 00 00 
>00005D99: 09 07 85 04 00 00 01 
>00005DA0: 29 02 
>00005DA2: 05 91 69 04 6A 04 48 02 02 00 7D 02 10 10 00 09 00 
>00005DB3: 09 07 6F 04 30 00 00 
>00005DBA: 09 07 70 04 00 00 03 
>00005DC1: 09 07 71 04 00 00 04 
>00005DC8: 09 07 72 04 00 00 05 
>00005DCF: 09 07 73 04 00 00 06 
>00005DD6: 09 07 A7 00 00 00 09 
>00005DDD: 29 02 
>00005DDF: 03 08 8F 04 AA 00 95 04 
>00005DE7: 03 08 A4 04 AA 00 AA 04 
>00005DEF: 02 87 57 06 00 00 00 
>00005DF6: 29 02 
>00005DF8: 05 91 5D 06 6C 06 49 02 02 00 83 03 10 10 00 01 00 
>00005E09: 09 07 38 07 00 00 00 
>00005E10: 09 07 39 07 30 00 01 
>00005E17: 29 02 
>00005E19: 0A 82 
>00005E1B: 12 06 49 02 00 00 
>00005E21: 05 91 87 06 D3 06 4A 02 02 00 AB 03 10 10 00 02 00 
>00005E32: 09 07 38 07 00 00 00 
>00005E39: 09 07 FD 02 00 00 01 
>00005E40: 09 07 F8 02 30 00 02 
>00005E47: 29 02 
>00005E49: 0A 82 
>00005E4B: 12 86 4A 02 01 00 
>00005E51: 17 02 
>00005E53: 29 02 
>00005E55: 07 94 88 06 D5 06 4B 02 02 00 00 04 10 11 00 00 FF 03 01 00 
>00005E69: 5B 07 00 00 01 3C 00 
>00005E70: 5B 07 01 00 01 3C 00 
>00005E77: 29 02 
>00005E79: 05 91 89 06 D6 06 4C 02 02 00 BF 03 10 10 00 05 00 
>00005E8A: 09 07 51 06 00 00 00 
>00005E91: 09 07 52 06 00 00 01 
>00005E98: 09 07 53 06 30 00 02 
>00005E9F: 09 07 54 06 00 00 03 
>00005EA6: 09 07 55 06 00 00 04 
>00005EAD: 09 07 56 06 00 00 05 
>00005EB4: 29 02 
>00005EB6: 29 02 
>00005EB8: 05 91 6E 06 D4 06 4D 02 02 00 D3 03 10 10 00 02 00 
>00005EC9: 09 07 38 07 00 00 00 
>00005ED0: 09 07 FD 02 00 00 01 
>00005ED7: 09 07 F8 02 30 00 02 
>00005EDE: 29 02 
>00005EE0: 0A 82 
>00005EE2: 12 86 4D 02 01 00 
>00005EE8: 17 02 
>00005EEA: 29 02 
>00005EEC: 07 94 8A 06 D7 06 4E 02 02 00 28 04 10 11 00 00 FF 03 01 00 
>00005F00: 5B 07 00 00 01 3C 00 
>00005F07: 5B 07 01 00 01 3C 00 
>00005F0E: 29 02 
>00005F10: 05 91 8B 06 D8 06 4F 02 02 00 E7 03 10 10 00 05 00 
>00005F21: 09 07 51 06 00 00 00 
>00005F28: 09 07 52 06 00 00 01 
>00005F2F: 09 07 53 06 30 00 02 
>00005F36: 09 07 54 06 00 00 03 
>00005F3D: 09 07 55 06 00 00 04 
>00005F44: 09 07 56 06 00 00 05 
>00005F4B: 29 02 
>00005F4D: 29 02 
>00005F4F: 29 02 
>00005F51: 02 87 AA 00 00 00 00 
>00005F58: 29 02 
>00005F5A: 05 91 DE 06 ED 06 50 02 02 00 97 03 10 10 00 01 00 
>00005F6B: 09 07 38 07 30 00 00 
>00005F72: 09 07 39 07 00 00 01 
>00005F79: 29 02 
>00005F7B: 29 02 
>00005F7D: 29 02 
>00005F7F: 01 86 02 01 04 04 
>00005F85: 06 8E 35 04 44 04 51 02 02 00 59 01 00 03 
>00005F93: 29 02 
>00005F95: 0A 82 
>00005F97: 12 06 51 02 00 00 
>00005F9D: 0A 82 
>00005F9F: 12 06 29 01 02 00 
>00005FA5: 05 91 47 04 48 04 52 02 02 00 6D 01 10 10 00 04 00 
>00005FB6: 09 07 49 04 30 00 00 
>00005FBD: 09 07 4B 04 00 00 02 
>00005FC4: 09 07 4D 04 00 00 04 
>00005FCB: 29 02 
>00005FCD: 29 02 
>00005FCF: 05 91 51 04 52 04 53 02 02 00 5D 03 10 10 00 03 00 
>00005FE0: 09 07 38 07 00 00 00 
>00005FE7: 09 07 53 04 00 00 01 
>00005FEE: 09 07 54 04 00 00 02 
>00005FF5: 09 07 55 04 30 00 03 
>00005FFC: 29 02 
>00005FFE: 05 91 1D 06 2B 06 54 02 02 00 BC 02 10 10 01 06 00 
>0000600F: 09 07 2C 06 30 00 01 
>00006016: 09 07 2F 06 00 00 06 
>0000601D: 09 07 2D 06 00 00 04 
>00006024: 09 07 2E 06 00 00 02 
>0000602B: 29 02 
>0000602D: 05 91 36 06 44 06 55 02 02 00 A8 02 10 10 00 01 00 
>0000603E: 09 07 38 07 00 00 00 
>00006045: 09 07 39 07 30 00 01 
>0000604C: 29 02 
>0000604E: 05 91 61 04 62 04 56 02 02 00 81 01 10 10 00 01 00 
>0000605F: 09 07 FA 02 30 00 00 
>00006066: 09 07 F9 02 00 00 01 
>0000606D: 29 02 
>0000606F: 05 91 63 04 64 04 57 02 02 00 95 01 10 10 00 01 00 
>00006080: 09 07 FA 02 30 00 00 
>00006087: 09 07 F9 02 00 00 01 
>0000608E: 29 02 
>00006090: 05 91 65 04 66 04 58 02 02 00 A9 01 10 10 00 01 00 
>000060A1: 09 07 FA 02 30 00 00 
>000060A8: 09 07 F9 02 00 00 01 
>000060AF: 29 02 
>000060B1: 05 91 67 04 68 04 59 02 02 00 BD 01 10 10 00 01 00 
>000060C2: 09 07 FA 02 30 00 00 
>000060C9: 09 07 F9 02 00 00 01 
>000060D0: 29 02 
>000060D2: 05 91 78 04 79 04 5A 02 02 00 D1 02 10 10 00 01 00 
>000060E3: 09 07 FA 02 30 00 00 
>000060EA: 09 07 F9 02 00 00 01 
>000060F1: 29 02 
>000060F3: 05 91 7A 04 7B 04 5B 02 02 00 E5 02 10 10 00 01 00 
>00006104: 09 07 FA 02 30 00 00 
>0000610B: 09 07 F9 02 00 00 01 
>00006112: 29 02 
>00006114: 05 91 7C 04 7D 04 5C 02 02 00 F9 02 10 10 00 01 00 
>00006125: 09 07 FA 02 30 00 00 
>0000612C: 09 07 F9 02 00 00 01 
>00006133: 29 02 
>00006135: 05 91 7E 04 7F 04 5D 02 02 00 0D 03 10 10 00 01 00 
>00006146: 09 07 FA 02 30 00 00 
>0000614D: 09 07 F9 02 00 00 01 
>00006154: 29 02 
>00006156: 05 91 B9 04 BA 04 5E 02 02 00 21 03 10 10 00 01 00 
>00006167: 09 07 FA 02 30 00 00 
>0000616E: 09 07 F9 02 00 00 01 
>00006175: 29 02 
>00006177: 05 91 45 06 46 06 5F 02 02 00 F9 01 10 10 00 01 00 
>00006188: 09 07 38 07 00 00 00 
>0000618F: 09 07 39 07 30 00 01 
>00006196: 29 02 
>00006198: 05 91 56 04 57 04 60 02 02 00 35 03 10 10 00 03 00 
>000061A9: 09 07 A8 00 30 00 00 
>000061B0: 09 07 58 04 00 00 01 
>000061B7: 09 07 59 04 00 00 02 
>000061BE: 09 07 5A 04 00 00 03 
>000061C5: 29 02 
>000061C7: 05 91 80 04 81 04 61 02 02 00 D1 01 10 10 00 01 00 
>000061D8: 09 07 FA 02 00 00 00 
>000061DF: 09 07 39 07 30 00 01 
>000061E6: 29 02 
>000061E8: 05 91 F4 06 02 07 62 02 02 00 0D 02 10 10 00 04 00 
>000061F9: 09 07 03 07 30 00 00 
>00006200: 09 07 04 07 00 00 01 
>00006207: 09 07 05 07 00 00 02 
>0000620E: 09 07 06 07 00 00 03 
>00006215: 09 07 07 07 00 00 04 
>0000621C: 29 02 
>0000621E: 05 91 82 04 83 04 63 02 02 00 E5 01 10 10 00 01 00 
>0000622F: 09 07 84 04 30 00 00 
>00006236: 09 07 85 04 00 00 01 
>0000623D: 29 02 
>0000623F: 05 91 69 04 6A 04 64 02 02 00 7E 02 10 10 00 09 00 
>00006250: 09 07 6F 04 30 00 00 
>00006257: 09 07 70 04 00 00 03 
>0000625E: 09 07 71 04 00 00 04 
>00006265: 09 07 72 04 00 00 05 
>0000626C: 09 07 73 04 00 00 06 
>00006273: 09 07 A7 00 00 00 09 
>0000627A: 29 02 
>0000627C: 03 08 8F 04 AA 00 96 04 
>00006284: 03 08 A4 04 AA 00 AB 04 
>0000628C: 02 87 57 06 00 00 00 
>00006293: 29 02 
>00006295: 05 91 5E 06 6C 06 65 02 02 00 84 03 10 10 00 01 00 
>000062A6: 09 07 38 07 00 00 00 
>000062AD: 09 07 39 07 30 00 01 
>000062B4: 29 02 
>000062B6: 0A 82 
>000062B8: 12 06 65 02 00 00 
>000062BE: 05 91 8C 06 D3 06 66 02 02 00 AC 03 10 10 00 02 00 
>000062CF: 09 07 38 07 00 00 00 
>000062D6: 09 07 FD 02 00 00 01 
>000062DD: 09 07 F8 02 30 00 02 
>000062E4: 29 02 
>000062E6: 0A 82 
>000062E8: 12 86 66 02 01 00 
>000062EE: 17 02 
>000062F0: 29 02 
>000062F2: 07 94 8D 06 D5 06 67 02 02 00 02 04 10 11 00 00 FF 03 01 00 
>00006306: 5B 07 00 00 01 3C 00 
>0000630D: 5B 07 01 00 01 3C 00 
>00006314: 29 02 
>00006316: 05 91 8E 06 D6 06 68 02 02 00 C0 03 10 10 00 05 00 
>00006327: 09 07 51 06 00 00 00 
>0000632E: 09 07 52 06 00 00 01 
>00006335: 09 07 53 06 30 00 02 
>0000633C: 09 07 54 06 00 00 03 
>00006343: 09 07 55 06 00 00 04 
>0000634A: 09 07 56 06 00 00 05 
>00006351: 29 02 
>00006353: 29 02 
>00006355: 05 91 6E 06 D4 06 69 02 02 00 D4 03 10 10 00 02 00 
>00006366: 09 07 38 07 00 00 00 
>0000636D: 09 07 FD 02 00 00 01 
>00006374: 09 07 F8 02 30 00 02 
>0000637B: 29 02 
>0000637D: 0A 82 
>0000637F: 12 86 69 02 01 00 
>00006385: 17 02 
>00006387: 29 02 
>00006389: 07 94 8F 06 D7 06 6A 02 02 00 2A 04 10 11 00 00 FF 03 01 00 
>0000639D: 5B 07 00 00 01 3C 00 
>000063A4: 5B 07 01 00 01 3C 00 
>000063AB: 29 02 
>000063AD: 05 91 90 06 D8 06 6B 02 02 00 E8 03 10 10 00 05 00 
>000063BE: 09 07 51 06 00 00 00 
>000063C5: 09 07 52 06 00 00 01 
>000063CC: 09 07 53 06 30 00 02 
>000063D3: 09 07 54 06 00 00 03 
>000063DA: 09 07 55 06 00 00 04 
>000063E1: 09 07 56 06 00 00 05 
>000063E8: 29 02 
>000063EA: 29 02 
>000063EC: 29 02 
>000063EE: 02 87 AA 00 00 00 00 
>000063F5: 29 02 
>000063F7: 05 91 DF 06 ED 06 6C 02 02 00 98 03 10 10 00 01 00 
>00006408: 09 07 38 07 30 00 00 
>0000640F: 09 07 39 07 00 00 01 
>00006416: 29 02 
>00006418: 29 02 
>0000641A: 29 02 
>0000641C: 01 86 03 01 06 04 
>00006422: 06 8E 36 04 44 04 6D 02 02 00 5A 01 00 03 
>00006430: 29 02 
>00006432: 0A 82 
>00006434: 12 06 6D 02 00 00 
>0000643A: 0A 82 
>0000643C: 12 06 29 01 02 00 
>00006442: 05 91 47 04 48 04 6E 02 02 00 6E 01 10 10 00 04 00 
>00006453: 09 07 49 04 30 00 00 
>0000645A: 09 07 4B 04 00 00 02 
>00006461: 09 07 4D 04 00 00 04 
>00006468: 29 02 
>0000646A: 29 02 
>0000646C: 05 91 51 04 52 04 6F 02 02 00 5E 03 10 10 00 03 00 
>0000647D: 09 07 38 07 00 00 00 
>00006484: 09 07 53 04 00 00 01 
>0000648B: 09 07 54 04 00 00 02 
>00006492: 09 07 55 04 30 00 03 
>00006499: 29 02 
>0000649B: 05 91 1E 06 2B 06 70 02 02 00 BD 02 10 10 01 06 00 
>000064AC: 09 07 2C 06 30 00 01 
>000064B3: 09 07 2F 06 00 00 06 
>000064BA: 09 07 2D 06 00 00 04 
>000064C1: 09 07 2E 06 00 00 02 
>000064C8: 29 02 
>000064CA: 05 91 37 06 44 06 71 02 02 00 A9 02 10 10 00 01 00 
>000064DB: 09 07 38 07 00 00 00 
>000064E2: 09 07 39 07 30 00 01 
>000064E9: 29 02 
>000064EB: 05 91 61 04 62 04 72 02 02 00 82 01 10 10 00 01 00 
>000064FC: 09 07 FA 02 30 00 00 
>00006503: 09 07 F9 02 00 00 01 
>0000650A: 29 02 
>0000650C: 05 91 63 04 64 04 73 02 02 00 96 01 10 10 00 01 00 
>0000651D: 09 07 FA 02 30 00 00 
>00006524: 09 07 F9 02 00 00 01 
>0000652B: 29 02 
>0000652D: 05 91 65 04 66 04 74 02 02 00 AA 01 10 10 00 01 00 
>0000653E: 09 07 FA 02 30 00 00 
>00006545: 09 07 F9 02 00 00 01 
>0000654C: 29 02 
>0000654E: 05 91 67 04 68 04 75 02 02 00 BE 01 10 10 00 01 00 
>0000655F: 09 07 FA 02 30 00 00 
>00006566: 09 07 F9 02 00 00 01 
>0000656D: 29 02 
>0000656F: 05 91 78 04 79 04 76 02 02 00 D2 02 10 10 00 01 00 
>00006580: 09 07 FA 02 30 00 00 
>00006587: 09 07 F9 02 00 00 01 
>0000658E: 29 02 
>00006590: 05 91 7A 04 7B 04 77 02 02 00 E6 02 10 10 00 01 00 
>000065A1: 09 07 FA 02 30 00 00 
>000065A8: 09 07 F9 02 00 00 01 
>000065AF: 29 02 
>000065B1: 05 91 7C 04 7D 04 78 02 02 00 FA 02 10 10 00 01 00 
>000065C2: 09 07 FA 02 30 00 00 
>000065C9: 09 07 F9 02 00 00 01 
>000065D0: 29 02 
>000065D2: 05 91 7E 04 7F 04 79 02 02 00 0E 03 10 10 00 01 00 
>000065E3: 09 07 FA 02 30 00 00 
>000065EA: 09 07 F9 02 00 00 01 
>000065F1: 29 02 
>000065F3: 05 91 B9 04 BA 04 7A 02 02 00 22 03 10 10 00 01 00 
>00006604: 09 07 FA 02 30 00 00 
>0000660B: 09 07 F9 02 00 00 01 
>00006612: 29 02 
>00006614: 05 91 45 06 46 06 7B 02 02 00 FA 01 10 10 00 01 00 
>00006625: 09 07 38 07 00 00 00 
>0000662C: 09 07 39 07 30 00 01 
>00006633: 29 02 
>00006635: 05 91 56 04 57 04 7C 02 02 00 36 03 10 10 00 03 00 
>00006646: 09 07 A8 00 30 00 00 
>0000664D: 09 07 58 04 00 00 01 
>00006654: 09 07 59 04 00 00 02 
>0000665B: 09 07 5A 04 00 00 03 
>00006662: 29 02 
>00006664: 05 91 80 04 81 04 7D 02 02 00 D2 01 10 10 00 01 00 
>00006675: 09 07 FA 02 00 00 00 
>0000667C: 09 07 39 07 30 00 01 
>00006683: 29 02 
>00006685: 05 91 F5 06 02 07 7E 02 02 00 0E 02 10 10 00 04 00 
>00006696: 09 07 03 07 30 00 00 
>0000669D: 09 07 04 07 00 00 01 
>000066A4: 09 07 05 07 00 00 02 
>000066AB: 09 07 06 07 00 00 03 
>000066B2: 09 07 07 07 00 00 04 
>000066B9: 29 02 
>000066BB: 05 91 82 04 83 04 7F 02 02 00 E6 01 10 10 00 01 00 
>000066CC: 09 07 84 04 30 00 00 
>000066D3: 09 07 85 04 00 00 01 
>000066DA: 29 02 
>000066DC: 05 91 69 04 6A 04 80 02 02 00 7F 02 10 10 00 09 00 
>000066ED: 09 07 6F 04 30 00 00 
>000066F4: 09 07 70 04 00 00 03 
>000066FB: 09 07 71 04 00 00 04 
>00006702: 09 07 72 04 00 00 05 
>00006709: 09 07 73 04 00 00 06 
>00006710: 09 07 A7 00 00 00 09 
>00006717: 29 02 
>00006719: 03 08 8F 04 AA 00 97 04 
>00006721: 03 08 A4 04 AA 00 AC 04 
>00006729: 02 87 57 06 00 00 00 
>00006730: 29 02 
>00006732: 05 91 5F 06 6C 06 81 02 02 00 85 03 10 10 00 01 00 
>00006743: 09 07 38 07 00 00 00 
>0000674A: 09 07 39 07 30 00 01 
>00006751: 29 02 
>00006753: 0A 82 
>00006755: 12 06 81 02 00 00 
>0000675B: 05 91 91 06 D3 06 82 02 02 00 AD 03 10 10 00 02 00 
>0000676C: 09 07 38 07 00 00 00 
>00006773: 09 07 FD 02 00 00 01 
>0000677A: 09 07 F8 02 30 00 02 
>00006781: 29 02 
>00006783: 0A 82 
>00006785: 12 86 82 02 01 00 
>0000678B: 17 02 
>0000678D: 29 02 
>0000678F: 07 94 92 06 D5 06 83 02 02 00 04 04 10 11 00 00 FF 03 01 00 
>000067A3: 5B 07 00 00 01 3C 00 
>000067AA: 5B 07 01 00 01 3C 00 
>000067B1: 29 02 
>000067B3: 05 91 93 06 D6 06 84 02 02 00 C1 03 10 10 00 05 00 
>000067C4: 09 07 51 06 00 00 00 
>000067CB: 09 07 52 06 00 00 01 
>000067D2: 09 07 53 06 30 00 02 
>000067D9: 09 07 54 06 00 00 03 
>000067E0: 09 07 55 06 00 00 04 
>000067E7: 09 07 56 06 00 00 05 
>000067EE: 29 02 
>000067F0: 29 02 
>000067F2: 05 91 6E 06 D4 06 85 02 02 00 D5 03 10 10 00 02 00 
>00006803: 09 07 38 07 00 00 00 
>0000680A: 09 07 FD 02 00 00 01 
>00006811: 09 07 F8 02 30 00 02 
>00006818: 29 02 
>0000681A: 0A 82 
>0000681C: 12 86 85 02 01 00 
>00006822: 17 02 
>00006824: 29 02 
>00006826: 07 94 94 06 D7 06 86 02 02 00 2C 04 10 11 00 00 FF 03 01 00 
>0000683A: 5B 07 00 00 01 3C 00 
>00006841: 5B 07 01 00 01 3C 00 
>00006848: 29 02 
>0000684A: 05 91 95 06 D8 06 87 02 02 00 E9 03 10 10 00 05 00 
>0000685B: 09 07 51 06 00 00 00 
>00006862: 09 07 52 06 00 00 01 
>00006869: 09 07 53 06 30 00 02 
>00006870: 09 07 54 06 00 00 03 
>00006877: 09 07 55 06 00 00 04 
>0000687E: 09 07 56 06 00 00 05 
>00006885: 29 02 
>00006887: 29 02 
>00006889: 29 02 
>0000688B: 02 87 AA 00 00 00 00 
>00006892: 29 02 
>00006894: 05 91 E0 06 ED 06 88 02 02 00 99 03 10 10 00 01 00 
>000068A5: 09 07 38 07 30 00 00 
>000068AC: 09 07 39 07 00 00 01 
>000068B3: 29 02 
>000068B5: 29 02 
>000068B7: 29 02 
>000068B9: 01 86 69 00 08 04 
>000068BF: 06 8E 37 04 44 04 89 02 02 00 5B 01 00 03 
>000068CD: 29 02 
>000068CF: 0A 82 
>000068D1: 12 06 89 02 00 00 
>000068D7: 0A 82 
>000068D9: 12 06 29 01 02 00 
>000068DF: 05 91 47 04 48 04 8A 02 02 00 6F 01 10 10 00 04 00 
>000068F0: 09 07 49 04 30 00 00 
>000068F7: 09 07 4B 04 00 00 02 
>000068FE: 09 07 4D 04 00 00 04 
>00006905: 29 02 
>00006907: 29 02 
>00006909: 05 91 51 04 52 04 8B 02 02 00 5F 03 10 10 00 03 00 
>0000691A: 09 07 38 07 00 00 00 
>00006921: 09 07 53 04 00 00 01 
>00006928: 09 07 54 04 00 00 02 
>0000692F: 09 07 55 04 30 00 03 
>00006936: 29 02 
>00006938: 05 91 1F 06 2B 06 8C 02 02 00 BE 02 10 10 01 06 00 
>00006949: 09 07 2C 06 30 00 01 
>00006950: 09 07 2F 06 00 00 06 
>00006957: 09 07 2D 06 00 00 04 
>0000695E: 09 07 2E 06 00 00 02 
>00006965: 29 02 
>00006967: 05 91 38 06 44 06 8D 02 02 00 AA 02 10 10 00 01 00 
>00006978: 09 07 38 07 00 00 00 
>0000697F: 09 07 39 07 30 00 01 
>00006986: 29 02 
>00006988: 05 91 61 04 62 04 8E 02 02 00 83 01 10 10 00 01 00 
>00006999: 09 07 FA 02 30 00 00 
>000069A0: 09 07 F9 02 00 00 01 
>000069A7: 29 02 
>000069A9: 05 91 63 04 64 04 8F 02 02 00 97 01 10 10 00 01 00 
>000069BA: 09 07 FA 02 30 00 00 
>000069C1: 09 07 F9 02 00 00 01 
>000069C8: 29 02 
>000069CA: 05 91 65 04 66 04 90 02 02 00 AB 01 10 10 00 01 00 
>000069DB: 09 07 FA 02 30 00 00 
>000069E2: 09 07 F9 02 00 00 01 
>000069E9: 29 02 
>000069EB: 05 91 67 04 68 04 91 02 02 00 BF 01 10 10 00 01 00 
>000069FC: 09 07 FA 02 30 00 00 
>00006A03: 09 07 F9 02 00 00 01 
>00006A0A: 29 02 
>00006A0C: 05 91 78 04 79 04 92 02 02 00 D3 02 10 10 00 01 00 
>00006A1D: 09 07 FA 02 30 00 00 
>00006A24: 09 07 F9 02 00 00 01 
>00006A2B: 29 02 
>00006A2D: 05 91 7A 04 7B 04 93 02 02 00 E7 02 10 10 00 01 00 
>00006A3E: 09 07 FA 02 30 00 00 
>00006A45: 09 07 F9 02 00 00 01 
>00006A4C: 29 02 
>00006A4E: 05 91 7C 04 7D 04 94 02 02 00 FB 02 10 10 00 01 00 
>00006A5F: 09 07 FA 02 30 00 00 
>00006A66: 09 07 F9 02 00 00 01 
>00006A6D: 29 02 
>00006A6F: 05 91 7E 04 7F 04 95 02 02 00 0F 03 10 10 00 01 00 
>00006A80: 09 07 FA 02 30 00 00 
>00006A87: 09 07 F9 02 00 00 01 
>00006A8E: 29 02 
>00006A90: 05 91 B9 04 BA 04 96 02 02 00 23 03 10 10 00 01 00 
>00006AA1: 09 07 FA 02 30 00 00 
>00006AA8: 09 07 F9 02 00 00 01 
>00006AAF: 29 02 
>00006AB1: 05 91 45 06 46 06 97 02 02 00 FB 01 10 10 00 01 00 
>00006AC2: 09 07 38 07 00 00 00 
>00006AC9: 09 07 39 07 30 00 01 
>00006AD0: 29 02 
>00006AD2: 05 91 56 04 57 04 98 02 02 00 37 03 10 10 00 03 00 
>00006AE3: 09 07 A8 00 30 00 00 
>00006AEA: 09 07 58 04 00 00 01 
>00006AF1: 09 07 59 04 00 00 02 
>00006AF8: 09 07 5A 04 00 00 03 
>00006AFF: 29 02 
>00006B01: 05 91 80 04 81 04 99 02 02 00 D3 01 10 10 00 01 00 
>00006B12: 09 07 FA 02 00 00 00 
>00006B19: 09 07 39 07 30 00 01 
>00006B20: 29 02 
>00006B22: 05 91 F6 06 02 07 9A 02 02 00 0F 02 10 10 00 04 00 
>00006B33: 09 07 03 07 30 00 00 
>00006B3A: 09 07 04 07 00 00 01 
>00006B41: 09 07 05 07 00 00 02 
>00006B48: 09 07 06 07 00 00 03 
>00006B4F: 09 07 07 07 00 00 04 
>00006B56: 29 02 
>00006B58: 05 91 82 04 83 04 9B 02 02 00 E7 01 10 10 00 01 00 
>00006B69: 09 07 84 04 30 00 00 
>00006B70: 09 07 85 04 00 00 01 
>00006B77: 29 02 
>00006B79: 05 91 69 04 6A 04 9C 02 02 00 80 02 10 10 00 09 00 
>00006B8A: 09 07 6F 04 30 00 00 
>00006B91: 09 07 70 04 00 00 03 
>00006B98: 09 07 71 04 00 00 04 
>00006B9F: 09 07 72 04 00 00 05 
>00006BA6: 09 07 73 04 00 00 06 
>00006BAD: 09 07 A7 00 00 00 09 
>00006BB4: 29 02 
>00006BB6: 03 08 8F 04 AA 00 98 04 
>00006BBE: 03 08 A4 04 AA 00 AD 04 
>00006BC6: 02 87 57 06 00 00 00 
>00006BCD: 29 02 
>00006BCF: 05 91 60 06 6C 06 9D 02 02 00 86 03 10 10 00 01 00 
>00006BE0: 09 07 38 07 00 00 00 
>00006BE7: 09 07 39 07 30 00 01 
>00006BEE: 29 02 
>00006BF0: 0A 82 
>00006BF2: 12 06 9D 02 00 00 
>00006BF8: 05 91 96 06 D3 06 9E 02 02 00 AE 03 10 10 00 02 00 
>00006C09: 09 07 38 07 00 00 00 
>00006C10: 09 07 FD 02 00 00 01 
>00006C17: 09 07 F8 02 30 00 02 
>00006C1E: 29 02 
>00006C20: 0A 82 
>00006C22: 12 86 9E 02 01 00 
>00006C28: 17 02 
>00006C2A: 29 02 
>00006C2C: 07 94 97 06 D5 06 9F 02 02 00 06 04 10 11 00 00 FF 03 01 00 
>00006C40: 5B 07 00 00 01 3C 00 
>00006C47: 5B 07 01 00 01 3C 00 
>00006C4E: 29 02 
>00006C50: 05 91 98 06 D6 06 A0 02 02 00 C2 03 10 10 00 05 00 
>00006C61: 09 07 51 06 00 00 00 
>00006C68: 09 07 52 06 00 00 01 
>00006C6F: 09 07 53 06 30 00 02 
>00006C76: 09 07 54 06 00 00 03 
>00006C7D: 09 07 55 06 00 00 04 
>00006C84: 09 07 56 06 00 00 05 
>00006C8B: 29 02 
>00006C8D: 29 02 
>00006C8F: 05 91 6E 06 D4 06 A1 02 02 00 D6 03 10 10 00 02 00 
>00006CA0: 09 07 38 07 00 00 00 
>00006CA7: 09 07 FD 02 00 00 01 
>00006CAE: 09 07 F8 02 30 00 02 
>00006CB5: 29 02 
>00006CB7: 0A 82 
>00006CB9: 12 86 A1 02 01 00 
>00006CBF: 17 02 
>00006CC1: 29 02 
>00006CC3: 07 94 99 06 D7 06 A2 02 02 00 2E 04 10 11 00 00 FF 03 01 00 
>00006CD7: 5B 07 00 00 01 3C 00 
>00006CDE: 5B 07 01 00 01 3C 00 
>00006CE5: 29 02 
>00006CE7: 05 91 9A 06 D8 06 A3 02 02 00 EA 03 10 10 00 05 00 
>00006CF8: 09 07 51 06 00 00 00 
>00006CFF: 09 07 52 06 00 00 01 
>00006D06: 09 07 53 06 30 00 02 
>00006D0D: 09 07 54 06 00 00 03 
>00006D14: 09 07 55 06 00 00 04 
>00006D1B: 09 07 56 06 00 00 05 
>00006D22: 29 02 
>00006D24: 29 02 
>00006D26: 29 02 
>00006D28: 02 87 AA 00 00 00 00 
>00006D2F: 29 02 
>00006D31: 05 91 E1 06 ED 06 A4 02 02 00 9A 03 10 10 00 01 00 
>00006D42: 09 07 38 07 30 00 00 
>00006D49: 09 07 39 07 00 00 01 
>00006D50: 29 02 
>00006D52: 29 02 
>00006D54: 29 02 
>00006D56: 01 86 6A 00 0A 04 
>00006D5C: 06 8E 38 04 44 04 A5 02 02 00 5C 01 00 03 
>00006D6A: 29 02 
>00006D6C: 0A 82 
>00006D6E: 12 06 A5 02 00 00 
>00006D74: 0A 82 
>00006D76: 12 06 29 01 02 00 
>00006D7C: 05 91 47 04 48 04 A6 02 02 00 70 01 10 10 00 04 00 
>00006D8D: 09 07 49 04 30 00 00 
>00006D94: 09 07 4B 04 00 00 02 
>00006D9B: 09 07 4D 04 00 00 04 
>00006DA2: 29 02 
>00006DA4: 29 02 
>00006DA6: 05 91 51 04 52 04 A7 02 02 00 60 03 10 10 00 03 00 
>00006DB7: 09 07 38 07 00 00 00 
>00006DBE: 09 07 53 04 00 00 01 
>00006DC5: 09 07 54 04 00 00 02 
>00006DCC: 09 07 55 04 30 00 03 
>00006DD3: 29 02 
>00006DD5: 05 91 20 06 2B 06 A8 02 02 00 BF 02 10 10 01 06 00 
>00006DE6: 09 07 2C 06 30 00 01 
>00006DED: 09 07 2F 06 00 00 06 
>00006DF4: 09 07 2D 06 00 00 04 
>00006DFB: 09 07 2E 06 00 00 02 
>00006E02: 29 02 
>00006E04: 05 91 39 06 44 06 A9 02 02 00 AB 02 10 10 00 01 00 
>00006E15: 09 07 38 07 00 00 00 
>00006E1C: 09 07 39 07 30 00 01 
>00006E23: 29 02 
>00006E25: 05 91 61 04 62 04 AA 02 02 00 84 01 10 10 00 01 00 
>00006E36: 09 07 FA 02 30 00 00 
>00006E3D: 09 07 F9 02 00 00 01 
>00006E44: 29 02 
>00006E46: 05 91 63 04 64 04 AB 02 02 00 98 01 10 10 00 01 00 
>00006E57: 09 07 FA 02 30 00 00 
>00006E5E: 09 07 F9 02 00 00 01 
>00006E65: 29 02 
>00006E67: 05 91 65 04 66 04 AC 02 02 00 AC 01 10 10 00 01 00 
>00006E78: 09 07 FA 02 30 00 00 
>00006E7F: 09 07 F9 02 00 00 01 
>00006E86: 29 02 
>00006E88: 05 91 67 04 68 04 AD 02 02 00 C0 01 10 10 00 01 00 
>00006E99: 09 07 FA 02 30 00 00 
>00006EA0: 09 07 F9 02 00 00 01 
>00006EA7: 29 02 
>00006EA9: 05 91 78 04 79 04 AE 02 02 00 D4 02 10 10 00 01 00 
>00006EBA: 09 07 FA 02 30 00 00 
>00006EC1: 09 07 F9 02 00 00 01 
>00006EC8: 29 02 
>00006ECA: 05 91 7A 04 7B 04 AF 02 02 00 E8 02 10 10 00 01 00 
>00006EDB: 09 07 FA 02 30 00 00 
>00006EE2: 09 07 F9 02 00 00 01 
>00006EE9: 29 02 
>00006EEB: 05 91 7C 04 7D 04 B0 02 02 00 FC 02 10 10 00 01 00 
>00006EFC: 09 07 FA 02 30 00 00 
>00006F03: 09 07 F9 02 00 00 01 
>00006F0A: 29 02 
>00006F0C: 05 91 7E 04 7F 04 B1 02 02 00 10 03 10 10 00 01 00 
>00006F1D: 09 07 FA 02 30 00 00 
>00006F24: 09 07 F9 02 00 00 01 
>00006F2B: 29 02 
>00006F2D: 05 91 B9 04 BA 04 B2 02 02 00 24 03 10 10 00 01 00 
>00006F3E: 09 07 FA 02 30 00 00 
>00006F45: 09 07 F9 02 00 00 01 
>00006F4C: 29 02 
>00006F4E: 05 91 45 06 46 06 B3 02 02 00 FC 01 10 10 00 01 00 
>00006F5F: 09 07 38 07 00 00 00 
>00006F66: 09 07 39 07 30 00 01 
>00006F6D: 29 02 
>00006F6F: 05 91 56 04 57 04 B4 02 02 00 38 03 10 10 00 03 00 
>00006F80: 09 07 A8 00 30 00 00 
>00006F87: 09 07 58 04 00 00 01 
>00006F8E: 09 07 59 04 00 00 02 
>00006F95: 09 07 5A 04 00 00 03 
>00006F9C: 29 02 
>00006F9E: 05 91 80 04 81 04 B5 02 02 00 D4 01 10 10 00 01 00 
>00006FAF: 09 07 FA 02 00 00 00 
>00006FB6: 09 07 39 07 30 00 01 
>00006FBD: 29 02 
>00006FBF: 05 91 F7 06 02 07 B6 02 02 00 10 02 10 10 00 04 00 
>00006FD0: 09 07 03 07 30 00 00 
>00006FD7: 09 07 04 07 00 00 01 
>00006FDE: 09 07 05 07 00 00 02 
>00006FE5: 09 07 06 07 00 00 03 
>00006FEC: 09 07 07 07 00 00 04 
>00006FF3: 29 02 
>00006FF5: 05 91 82 04 83 04 B7 02 02 00 E8 01 10 10 00 01 00 
>00007006: 09 07 84 04 30 00 00 
>0000700D: 09 07 85 04 00 00 01 
>00007014: 29 02 
>00007016: 05 91 69 04 6A 04 B8 02 02 00 81 02 10 10 00 09 00 
>00007027: 09 07 6F 04 30 00 00 
>0000702E: 09 07 70 04 00 00 03 
>00007035: 09 07 71 04 00 00 04 
>0000703C: 09 07 72 04 00 00 05 
>00007043: 09 07 73 04 00 00 06 
>0000704A: 09 07 A7 00 00 00 09 
>00007051: 29 02 
>00007053: 03 08 8F 04 AA 00 99 04 
>0000705B: 03 08 A4 04 AA 00 AE 04 
>00007063: 02 87 57 06 00 00 00 
>0000706A: 29 02 
>0000706C: 05 91 61 06 6C 06 B9 02 02 00 87 03 10 10 00 01 00 
>0000707D: 09 07 38 07 00 00 00 
>00007084: 09 07 39 07 30 00 01 
>0000708B: 29 02 
>0000708D: 0A 82 
>0000708F: 12 06 B9 02 00 00 
>00007095: 05 91 9B 06 D3 06 BA 02 02 00 AF 03 10 10 00 02 00 
>000070A6: 09 07 38 07 00 00 00 
>000070AD: 09 07 FD 02 00 00 01 
>000070B4: 09 07 F8 02 30 00 02 
>000070BB: 29 02 
>000070BD: 0A 82 
>000070BF: 12 86 BA 02 01 00 
>000070C5: 17 02 
>000070C7: 29 02 
>000070C9: 07 94 9C 06 D5 06 BB 02 02 00 08 04 10 11 00 00 FF 03 01 00 
>000070DD: 5B 07 00 00 01 3C 00 
>000070E4: 5B 07 01 00 01 3C 00 
>000070EB: 29 02 
>000070ED: 05 91 9D 06 D6 06 BC 02 02 00 C3 03 10 10 00 05 00 
>000070FE: 09 07 51 06 00 00 00 
>00007105: 09 07 52 06 00 00 01 
>0000710C: 09 07 53 06 30 00 02 
>00007113: 09 07 54 06 00 00 03 
>0000711A: 09 07 55 06 00 00 04 
>00007121: 09 07 56 06 00 00 05 
>00007128: 29 02 
>0000712A: 29 02 
>0000712C: 05 91 6E 06 D4 06 BD 02 02 00 D7 03 10 10 00 02 00 
>0000713D: 09 07 38 07 00 00 00 
>00007144: 09 07 FD 02 00 00 01 
>0000714B: 09 07 F8 02 30 00 02 
>00007152: 29 02 
>00007154: 0A 82 
>00007156: 12 86 BD 02 01 00 
>0000715C: 17 02 
>0000715E: 29 02 
>00007160: 07 94 9E 06 D7 06 BE 02 02 00 30 04 10 11 00 00 FF 03 01 00 
>00007174: 5B 07 00 00 01 3C 00 
>0000717B: 5B 07 01 00 01 3C 00 
>00007182: 29 02 
>00007184: 05 91 9F 06 D8 06 BF 02 02 00 EB 03 10 10 00 05 00 
>00007195: 09 07 51 06 00 00 00 
>0000719C: 09 07 52 06 00 00 01 
>000071A3: 09 07 53 06 30 00 02 
>000071AA: 09 07 54 06 00 00 03 
>000071B1: 09 07 55 06 00 00 04 
>000071B8: 09 07 56 06 00 00 05 
>000071BF: 29 02 
>000071C1: 29 02 
>000071C3: 29 02 
>000071C5: 02 87 AA 00 00 00 00 
>000071CC: 29 02 
>000071CE: 05 91 E2 06 ED 06 C0 02 02 00 9B 03 10 10 00 01 00 
>000071DF: 09 07 38 07 30 00 00 
>000071E6: 09 07 39 07 00 00 01 
>000071ED: 29 02 
>000071EF: 29 02 
>000071F1: 29 02 
>000071F3: 01 86 6B 00 0C 04 
>000071F9: 06 8E 39 04 44 04 C1 02 02 00 5D 01 00 03 
>00007207: 29 02 
>00007209: 0A 82 
>0000720B: 12 06 C1 02 00 00 
>00007211: 0A 82 
>00007213: 12 06 29 01 02 00 
>00007219: 05 91 47 04 48 04 C2 02 02 00 71 01 10 10 00 04 00 
>0000722A: 09 07 49 04 30 00 00 
>00007231: 09 07 4B 04 00 00 02 
>00007238: 09 07 4D 04 00 00 04 
>0000723F: 29 02 
>00007241: 29 02 
>00007243: 05 91 51 04 52 04 C3 02 02 00 61 03 10 10 00 03 00 
>00007254: 09 07 38 07 00 00 00 
>0000725B: 09 07 53 04 00 00 01 
>00007262: 09 07 54 04 00 00 02 
>00007269: 09 07 55 04 30 00 03 
>00007270: 29 02 
>00007272: 05 91 21 06 2B 06 C4 02 02 00 C0 02 10 10 01 06 00 
>00007283: 09 07 2C 06 30 00 01 
>0000728A: 09 07 2F 06 00 00 06 
>00007291: 09 07 2D 06 00 00 04 
>00007298: 09 07 2E 06 00 00 02 
>0000729F: 29 02 
>000072A1: 05 91 3A 06 44 06 C5 02 02 00 AC 02 10 10 00 01 00 
>000072B2: 09 07 38 07 00 00 00 
>000072B9: 09 07 39 07 30 00 01 
>000072C0: 29 02 
>000072C2: 05 91 61 04 62 04 C6 02 02 00 85 01 10 10 00 01 00 
>000072D3: 09 07 FA 02 30 00 00 
>000072DA: 09 07 F9 02 00 00 01 
>000072E1: 29 02 
>000072E3: 05 91 63 04 64 04 C7 02 02 00 99 01 10 10 00 01 00 
>000072F4: 09 07 FA 02 30 00 00 
>000072FB: 09 07 F9 02 00 00 01 
>00007302: 29 02 
>00007304: 05 91 65 04 66 04 C8 02 02 00 AD 01 10 10 00 01 00 
>00007315: 09 07 FA 02 30 00 00 
>0000731C: 09 07 F9 02 00 00 01 
>00007323: 29 02 
>00007325: 05 91 67 04 68 04 C9 02 02 00 C1 01 10 10 00 01 00 
>00007336: 09 07 FA 02 30 00 00 
>0000733D: 09 07 F9 02 00 00 01 
>00007344: 29 02 
>00007346: 05 91 78 04 79 04 CA 02 02 00 D5 02 10 10 00 01 00 
>00007357: 09 07 FA 02 30 00 00 
>0000735E: 09 07 F9 02 00 00 01 
>00007365: 29 02 
>00007367: 05 91 7A 04 7B 04 CB 02 02 00 E9 02 10 10 00 01 00 
>00007378: 09 07 FA 02 30 00 00 
>0000737F: 09 07 F9 02 00 00 01 
>00007386: 29 02 
>00007388: 05 91 7C 04 7D 04 CC 02 02 00 FD 02 10 10 00 01 00 
>00007399: 09 07 FA 02 30 00 00 
>000073A0: 09 07 F9 02 00 00 01 
>000073A7: 29 02 
>000073A9: 05 91 7E 04 7F 04 CD 02 02 00 11 03 10 10 00 01 00 
>000073BA: 09 07 FA 02 30 00 00 
>000073C1: 09 07 F9 02 00 00 01 
>000073C8: 29 02 
>000073CA: 05 91 B9 04 BA 04 CE 02 02 00 25 03 10 10 00 01 00 
>000073DB: 09 07 FA 02 30 00 00 
>000073E2: 09 07 F9 02 00 00 01 
>000073E9: 29 02 
>000073EB: 05 91 45 06 46 06 CF 02 02 00 FD 01 10 10 00 01 00 
>000073FC: 09 07 38 07 00 00 00 
>00007403: 09 07 39 07 30 00 01 
>0000740A: 29 02 
>0000740C: 05 91 56 04 57 04 D0 02 02 00 39 03 10 10 00 03 00 
>0000741D: 09 07 A8 00 30 00 00 
>00007424: 09 07 58 04 00 00 01 
>0000742B: 09 07 59 04 00 00 02 
>00007432: 09 07 5A 04 00 00 03 
>00007439: 29 02 
>0000743B: 05 91 80 04 81 04 D1 02 02 00 D5 01 10 10 00 01 00 
>0000744C: 09 07 FA 02 00 00 00 
>00007453: 09 07 39 07 30 00 01 
>0000745A: 29 02 
>0000745C: 05 91 F8 06 02 07 D2 02 02 00 11 02 10 10 00 04 00 
>0000746D: 09 07 03 07 30 00 00 
>00007474: 09 07 04 07 00 00 01 
>0000747B: 09 07 05 07 00 00 02 
>00007482: 09 07 06 07 00 00 03 
>00007489: 09 07 07 07 00 00 04 
>00007490: 29 02 
>00007492: 05 91 82 04 83 04 D3 02 02 00 E9 01 10 10 00 01 00 
>000074A3: 09 07 84 04 30 00 00 
>000074AA: 09 07 85 04 00 00 01 
>000074B1: 29 02 
>000074B3: 05 91 69 04 6A 04 D4 02 02 00 82 02 10 10 00 09 00 
>000074C4: 09 07 6F 04 30 00 00 
>000074CB: 09 07 70 04 00 00 03 
>000074D2: 09 07 71 04 00 00 04 
>000074D9: 09 07 72 04 00 00 05 
>000074E0: 09 07 73 04 00 00 06 
>000074E7: 09 07 A7 00 00 00 09 
>000074EE: 29 02 
>000074F0: 03 08 8F 04 AA 00 9A 04 
>000074F8: 03 08 A4 04 AA 00 AF 04 
>00007500: 02 87 57 06 00 00 00 
>00007507: 29 02 
>00007509: 05 91 62 06 6C 06 D5 02 02 00 88 03 10 10 00 01 00 
>0000751A: 09 07 38 07 00 00 00 
>00007521: 09 07 39 07 30 00 01 
>00007528: 29 02 
>0000752A: 0A 82 
>0000752C: 12 06 D5 02 00 00 
>00007532: 05 91 A0 06 D3 06 D6 02 02 00 B0 03 10 10 00 02 00 
>00007543: 09 07 38 07 00 00 00 
>0000754A: 09 07 FD 02 00 00 01 
>00007551: 09 07 F8 02 30 00 02 
>00007558: 29 02 
>0000755A: 0A 82 
>0000755C: 12 86 D6 02 01 00 
>00007562: 17 02 
>00007564: 29 02 
>00007566: 07 94 A1 06 D5 06 D7 02 02 00 0A 04 10 11 00 00 FF 03 01 00 
>0000757A: 5B 07 00 00 01 3C 00 
>00007581: 5B 07 01 00 01 3C 00 
>00007588: 29 02 
>0000758A: 05 91 A2 06 D6 06 D8 02 02 00 C4 03 10 10 00 05 00 
>0000759B: 09 07 51 06 00 00 00 
>000075A2: 09 07 52 06 00 00 01 
>000075A9: 09 07 53 06 30 00 02 
>000075B0: 09 07 54 06 00 00 03 
>000075B7: 09 07 55 06 00 00 04 
>000075BE: 09 07 56 06 00 00 05 
>000075C5: 29 02 
>000075C7: 29 02 
>000075C9: 05 91 6E 06 D4 06 D9 02 02 00 D8 03 10 10 00 02 00 
>000075DA: 09 07 38 07 00 00 00 
>000075E1: 09 07 FD 02 00 00 01 
>000075E8: 09 07 F8 02 30 00 02 
>000075EF: 29 02 
>000075F1: 0A 82 
>000075F3: 12 86 D9 02 01 00 
>000075F9: 17 02 
>000075FB: 29 02 
>000075FD: 07 94 A3 06 D7 06 DA 02 02 00 32 04 10 11 00 00 FF 03 01 00 
>00007611: 5B 07 00 00 01 3C 00 
>00007618: 5B 07 01 00 01 3C 00 
>0000761F: 29 02 
>00007621: 05 91 A4 06 D8 06 DB 02 02 00 EC 03 10 10 00 05 00 
>00007632: 09 07 51 06 00 00 00 
>00007639: 09 07 52 06 00 00 01 
>00007640: 09 07 53 06 30 00 02 
>00007647: 09 07 54 06 00 00 03 
>0000764E: 09 07 55 06 00 00 04 
>00007655: 09 07 56 06 00 00 05 
>0000765C: 29 02 
>0000765E: 29 02 
>00007660: 29 02 
>00007662: 02 87 AA 00 00 00 00 
>00007669: 29 02 
>0000766B: 05 91 E3 06 ED 06 DC 02 02 00 9C 03 10 10 00 01 00 
>0000767C: 09 07 38 07 30 00 00 
>00007683: 09 07 39 07 00 00 01 
>0000768A: 29 02 
>0000768C: 29 02 
>0000768E: 29 02 
>00007690: 01 86 6C 00 0E 04 
>00007696: 06 8E 3A 04 44 04 DD 02 02 00 5E 01 00 03 
>000076A4: 29 02 
>000076A6: 0A 82 
>000076A8: 12 06 DD 02 00 00 
>000076AE: 0A 82 
>000076B0: 12 06 29 01 02 00 
>000076B6: 05 91 47 04 48 04 DE 02 02 00 72 01 10 10 00 04 00 
>000076C7: 09 07 49 04 30 00 00 
>000076CE: 09 07 4B 04 00 00 02 
>000076D5: 09 07 4D 04 00 00 04 
>000076DC: 29 02 
>000076DE: 29 02 
>000076E0: 05 91 51 04 52 04 DF 02 02 00 62 03 10 10 00 03 00 
>000076F1: 09 07 38 07 00 00 00 
>000076F8: 09 07 53 04 00 00 01 
>000076FF: 09 07 54 04 00 00 02 
>00007706: 09 07 55 04 30 00 03 
>0000770D: 29 02 
>0000770F: 05 91 22 06 2B 06 E0 02 02 00 C1 02 10 10 01 06 00 
>00007720: 09 07 2C 06 30 00 01 
>00007727: 09 07 2F 06 00 00 06 
>0000772E: 09 07 2D 06 00 00 04 
>00007735: 09 07 2E 06 00 00 02 
>0000773C: 29 02 
>0000773E: 05 91 3B 06 44 06 E1 02 02 00 AD 02 10 10 00 01 00 
>0000774F: 09 07 38 07 00 00 00 
>00007756: 09 07 39 07 30 00 01 
>0000775D: 29 02 
>0000775F: 05 91 61 04 62 04 E2 02 02 00 86 01 10 10 00 01 00 
>00007770: 09 07 FA 02 30 00 00 
>00007777: 09 07 F9 02 00 00 01 
>0000777E: 29 02 
>00007780: 05 91 63 04 64 04 E3 02 02 00 9A 01 10 10 00 01 00 
>00007791: 09 07 FA 02 30 00 00 
>00007798: 09 07 F9 02 00 00 01 
>0000779F: 29 02 
>000077A1: 05 91 65 04 66 04 E4 02 02 00 AE 01 10 10 00 01 00 
>000077B2: 09 07 FA 02 30 00 00 
>000077B9: 09 07 F9 02 00 00 01 
>000077C0: 29 02 
>000077C2: 05 91 67 04 68 04 E5 02 02 00 C2 01 10 10 00 01 00 
>000077D3: 09 07 FA 02 30 00 00 
>000077DA: 09 07 F9 02 00 00 01 
>000077E1: 29 02 
>000077E3: 05 91 78 04 79 04 E6 02 02 00 D6 02 10 10 00 01 00 
>000077F4: 09 07 FA 02 30 00 00 
>000077FB: 09 07 F9 02 00 00 01 
>00007802: 29 02 
>00007804: 05 91 7A 04 7B 04 E7 02 02 00 EA 02 10 10 00 01 00 
>00007815: 09 07 FA 02 30 00 00 
>0000781C: 09 07 F9 02 00 00 01 
>00007823: 29 02 
>00007825: 05 91 7C 04 7D 04 E8 02 02 00 FE 02 10 10 00 01 00 
>00007836: 09 07 FA 02 30 00 00 
>0000783D: 09 07 F9 02 00 00 01 
>00007844: 29 02 
>00007846: 05 91 7E 04 7F 04 E9 02 02 00 12 03 10 10 00 01 00 
>00007857: 09 07 FA 02 30 00 00 
>0000785E: 09 07 F9 02 00 00 01 
>00007865: 29 02 
>00007867: 05 91 B9 04 BA 04 EA 02 02 00 26 03 10 10 00 01 00 
>00007878: 09 07 FA 02 30 00 00 
>0000787F: 09 07 F9 02 00 00 01 
>00007886: 29 02 
>00007888: 05 91 45 06 46 06 EB 02 02 00 FE 01 10 10 00 01 00 
>00007899: 09 07 38 07 00 00 00 
>000078A0: 09 07 39 07 30 00 01 
>000078A7: 29 02 
>000078A9: 05 91 56 04 57 04 EC 02 02 00 3A 03 10 10 00 03 00 
>000078BA: 09 07 A8 00 30 00 00 
>000078C1: 09 07 58 04 00 00 01 
>000078C8: 09 07 59 04 00 00 02 
>000078CF: 09 07 5A 04 00 00 03 
>000078D6: 29 02 
>000078D8: 05 91 80 04 81 04 ED 02 02 00 D6 01 10 10 00 01 00 
>000078E9: 09 07 FA 02 00 00 00 
>000078F0: 09 07 39 07 30 00 01 
>000078F7: 29 02 
>000078F9: 05 91 F9 06 02 07 EE 02 02 00 12 02 10 10 00 04 00 
>0000790A: 09 07 03 07 30 00 00 
>00007911: 09 07 04 07 00 00 01 
>00007918: 09 07 05 07 00 00 02 
>0000791F: 09 07 06 07 00 00 03 
>00007926: 09 07 07 07 00 00 04 
>0000792D: 29 02 
>0000792F: 05 91 82 04 83 04 EF 02 02 00 EA 01 10 10 00 01 00 
>00007940: 09 07 84 04 30 00 00 
>00007947: 09 07 85 04 00 00 01 
>0000794E: 29 02 
>00007950: 05 91 69 04 6A 04 F0 02 02 00 83 02 10 10 00 09 00 
>00007961: 09 07 6F 04 30 00 00 
>00007968: 09 07 70 04 00 00 03 
>0000796F: 09 07 71 04 00 00 04 
>00007976: 09 07 72 04 00 00 05 
>0000797D: 09 07 73 04 00 00 06 
>00007984: 09 07 A7 00 00 00 09 
>0000798B: 29 02 
>0000798D: 03 08 8F 04 AA 00 9B 04 
>00007995: 03 08 A4 04 AA 00 B0 04 
>0000799D: 02 87 57 06 00 00 00 
>000079A4: 29 02 
>000079A6: 05 91 63 06 6C 06 F1 02 02 00 89 03 10 10 00 01 00 
>000079B7: 09 07 38 07 00 00 00 
>000079BE: 09 07 39 07 30 00 01 
>000079C5: 29 02 
>000079C7: 0A 82 
>000079C9: 12 06 F1 02 00 00 
>000079CF: 05 91 A5 06 D3 06 F2 02 02 00 B1 03 10 10 00 02 00 
>000079E0: 09 07 38 07 00 00 00 
>000079E7: 09 07 FD 02 00 00 01 
>000079EE: 09 07 F8 02 30 00 02 
>000079F5: 29 02 
>000079F7: 0A 82 
>000079F9: 12 86 F2 02 01 00 
>000079FF: 17 02 
>00007A01: 29 02 
>00007A03: 07 94 A6 06 D5 06 F3 02 02 00 0C 04 10 11 00 00 FF 03 01 00 
>00007A17: 5B 07 00 00 01 3C 00 
>00007A1E: 5B 07 01 00 01 3C 00 
>00007A25: 29 02 
>00007A27: 05 91 A7 06 D6 06 F4 02 02 00 C5 03 10 10 00 05 00 
>00007A38: 09 07 51 06 00 00 00 
>00007A3F: 09 07 52 06 00 00 01 
>00007A46: 09 07 53 06 30 00 02 
>00007A4D: 09 07 54 06 00 00 03 
>00007A54: 09 07 55 06 00 00 04 
>00007A5B: 09 07 56 06 00 00 05 
>00007A62: 29 02 
>00007A64: 29 02 
>00007A66: 05 91 6E 06 D4 06 F5 02 02 00 D9 03 10 10 00 02 00 
>00007A77: 09 07 38 07 00 00 00 
>00007A7E: 09 07 FD 02 00 00 01 
>00007A85: 09 07 F8 02 30 00 02 
>00007A8C: 29 02 
>00007A8E: 0A 82 
>00007A90: 12 86 F5 02 01 00 
>00007A96: 17 02 
>00007A98: 29 02 
>00007A9A: 07 94 A8 06 D7 06 F6 02 02 00 34 04 10 11 00 00 FF 03 01 00 
>00007AAE: 5B 07 00 00 01 3C 00 
>00007AB5: 5B 07 01 00 01 3C 00 
>00007ABC: 29 02 
>00007ABE: 05 91 A9 06 D8 06 F7 02 02 00 ED 03 10 10 00 05 00 
>00007ACF: 09 07 51 06 00 00 00 
>00007AD6: 09 07 52 06 00 00 01 
>00007ADD: 09 07 53 06 30 00 02 
>00007AE4: 09 07 54 06 00 00 03 
>00007AEB: 09 07 55 06 00 00 04 
>00007AF2: 09 07 56 06 00 00 05 
>00007AF9: 29 02 
>00007AFB: 29 02 
>00007AFD: 29 02 
>00007AFF: 02 87 AA 00 00 00 00 
>00007B06: 29 02 
>00007B08: 05 91 E4 06 ED 06 F8 02 02 00 9D 03 10 10 00 01 00 
>00007B19: 09 07 38 07 30 00 00 
>00007B20: 09 07 39 07 00 00 01 
>00007B27: 29 02 
>00007B29: 29 02 
>00007B2B: 29 02 
>00007B2D: 01 86 6D 00 10 04 
>00007B33: 06 8E 3B 04 44 04 F9 02 02 00 5F 01 00 03 
>00007B41: 29 02 
>00007B43: 0A 82 
>00007B45: 12 06 F9 02 00 00 
>00007B4B: 0A 82 
>00007B4D: 12 06 29 01 02 00 
>00007B53: 05 91 47 04 48 04 FA 02 02 00 73 01 10 10 00 04 00 
>00007B64: 09 07 49 04 30 00 00 
>00007B6B: 09 07 4B 04 00 00 02 
>00007B72: 09 07 4D 04 00 00 04 
>00007B79: 29 02 
>00007B7B: 29 02 
>00007B7D: 05 91 51 04 52 04 FB 02 02 00 63 03 10 10 00 03 00 
>00007B8E: 09 07 38 07 00 00 00 
>00007B95: 09 07 53 04 00 00 01 
>00007B9C: 09 07 54 04 00 00 02 
>00007BA3: 09 07 55 04 30 00 03 
>00007BAA: 29 02 
>00007BAC: 05 91 23 06 2B 06 FC 02 02 00 C2 02 10 10 01 06 00 
>00007BBD: 09 07 2C 06 30 00 01 
>00007BC4: 09 07 2F 06 00 00 06 
>00007BCB: 09 07 2D 06 00 00 04 
>00007BD2: 09 07 2E 06 00 00 02 
>00007BD9: 29 02 
>00007BDB: 05 91 3C 06 44 06 FD 02 02 00 AE 02 10 10 00 01 00 
>00007BEC: 09 07 38 07 00 00 00 
>00007BF3: 09 07 39 07 30 00 01 
>00007BFA: 29 02 
>00007BFC: 05 91 61 04 62 04 FE 02 02 00 87 01 10 10 00 01 00 
>00007C0D: 09 07 FA 02 30 00 00 
>00007C14: 09 07 F9 02 00 00 01 
>00007C1B: 29 02 
>00007C1D: 05 91 63 04 64 04 FF 02 02 00 9B 01 10 10 00 01 00 
>00007C2E: 09 07 FA 02 30 00 00 
>00007C35: 09 07 F9 02 00 00 01 
>00007C3C: 29 02 
>00007C3E: 05 91 65 04 66 04 00 03 02 00 AF 01 10 10 00 01 00 
>00007C4F: 09 07 FA 02 30 00 00 
>00007C56: 09 07 F9 02 00 00 01 
>00007C5D: 29 02 
>00007C5F: 05 91 67 04 68 04 01 03 02 00 C3 01 10 10 00 01 00 
>00007C70: 09 07 FA 02 30 00 00 
>00007C77: 09 07 F9 02 00 00 01 
>00007C7E: 29 02 
>00007C80: 05 91 78 04 79 04 02 03 02 00 D7 02 10 10 00 01 00 
>00007C91: 09 07 FA 02 30 00 00 
>00007C98: 09 07 F9 02 00 00 01 
>00007C9F: 29 02 
>00007CA1: 05 91 7A 04 7B 04 03 03 02 00 EB 02 10 10 00 01 00 
>00007CB2: 09 07 FA 02 30 00 00 
>00007CB9: 09 07 F9 02 00 00 01 
>00007CC0: 29 02 
>00007CC2: 05 91 7C 04 7D 04 04 03 02 00 FF 02 10 10 00 01 00 
>00007CD3: 09 07 FA 02 30 00 00 
>00007CDA: 09 07 F9 02 00 00 01 
>00007CE1: 29 02 
>00007CE3: 05 91 7E 04 7F 04 05 03 02 00 13 03 10 10 00 01 00 
>00007CF4: 09 07 FA 02 30 00 00 
>00007CFB: 09 07 F9 02 00 00 01 
>00007D02: 29 02 
>00007D04: 05 91 B9 04 BA 04 06 03 02 00 27 03 10 10 00 01 00 
>00007D15: 09 07 FA 02 30 00 00 
>00007D1C: 09 07 F9 02 00 00 01 
>00007D23: 29 02 
>00007D25: 05 91 45 06 46 06 07 03 02 00 FF 01 10 10 00 01 00 
>00007D36: 09 07 38 07 00 00 00 
>00007D3D: 09 07 39 07 30 00 01 
>00007D44: 29 02 
>00007D46: 05 91 56 04 57 04 08 03 02 00 3B 03 10 10 00 03 00 
>00007D57: 09 07 A8 00 30 00 00 
>00007D5E: 09 07 58 04 00 00 01 
>00007D65: 09 07 59 04 00 00 02 
>00007D6C: 09 07 5A 04 00 00 03 
>00007D73: 29 02 
>00007D75: 05 91 80 04 81 04 09 03 02 00 D7 01 10 10 00 01 00 
>00007D86: 09 07 FA 02 00 00 00 
>00007D8D: 09 07 39 07 30 00 01 
>00007D94: 29 02 
>00007D96: 05 91 FA 06 02 07 0A 03 02 00 13 02 10 10 00 04 00 
>00007DA7: 09 07 03 07 30 00 00 
>00007DAE: 09 07 04 07 00 00 01 
>00007DB5: 09 07 05 07 00 00 02 
>00007DBC: 09 07 06 07 00 00 03 
>00007DC3: 09 07 07 07 00 00 04 
>00007DCA: 29 02 
>00007DCC: 05 91 82 04 83 04 0B 03 02 00 EB 01 10 10 00 01 00 
>00007DDD: 09 07 84 04 30 00 00 
>00007DE4: 09 07 85 04 00 00 01 
>00007DEB: 29 02 
>00007DED: 05 91 69 04 6A 04 0C 03 02 00 84 02 10 10 00 09 00 
>00007DFE: 09 07 6F 04 30 00 00 
>00007E05: 09 07 70 04 00 00 03 
>00007E0C: 09 07 71 04 00 00 04 
>00007E13: 09 07 72 04 00 00 05 
>00007E1A: 09 07 73 04 00 00 06 
>00007E21: 09 07 A7 00 00 00 09 
>00007E28: 29 02 
>00007E2A: 03 08 8F 04 AA 00 9C 04 
>00007E32: 03 08 A4 04 AA 00 B1 04 
>00007E3A: 02 87 57 06 00 00 00 
>00007E41: 29 02 
>00007E43: 05 91 64 06 6C 06 0D 03 02 00 8A 03 10 10 00 01 00 
>00007E54: 09 07 38 07 00 00 00 
>00007E5B: 09 07 39 07 30 00 01 
>00007E62: 29 02 
>00007E64: 0A 82 
>00007E66: 12 06 0D 03 00 00 
>00007E6C: 05 91 AA 06 D3 06 0E 03 02 00 B2 03 10 10 00 02 00 
>00007E7D: 09 07 38 07 00 00 00 
>00007E84: 09 07 FD 02 00 00 01 
>00007E8B: 09 07 F8 02 30 00 02 
>00007E92: 29 02 
>00007E94: 0A 82 
>00007E96: 12 86 0E 03 01 00 
>00007E9C: 17 02 
>00007E9E: 29 02 
>00007EA0: 07 94 AB 06 D5 06 0F 03 02 00 0E 04 10 11 00 00 FF 03 01 00 
>00007EB4: 5B 07 00 00 01 3C 00 
>00007EBB: 5B 07 01 00 01 3C 00 
>00007EC2: 29 02 
>00007EC4: 05 91 AC 06 D6 06 10 03 02 00 C6 03 10 10 00 05 00 
>00007ED5: 09 07 51 06 00 00 00 
>00007EDC: 09 07 52 06 00 00 01 
>00007EE3: 09 07 53 06 30 00 02 
>00007EEA: 09 07 54 06 00 00 03 
>00007EF1: 09 07 55 06 00 00 04 
>00007EF8: 09 07 56 06 00 00 05 
>00007EFF: 29 02 
>00007F01: 29 02 
>00007F03: 05 91 6E 06 D4 06 11 03 02 00 DA 03 10 10 00 02 00 
>00007F14: 09 07 38 07 00 00 00 
>00007F1B: 09 07 FD 02 00 00 01 
>00007F22: 09 07 F8 02 30 00 02 
>00007F29: 29 02 
>00007F2B: 0A 82 
>00007F2D: 12 86 11 03 01 00 
>00007F33: 17 02 
>00007F35: 29 02 
>00007F37: 07 94 AD 06 D7 06 12 03 02 00 36 04 10 11 00 00 FF 03 01 00 
>00007F4B: 5B 07 00 00 01 3C 00 
>00007F52: 5B 07 01 00 01 3C 00 
>00007F59: 29 02 
>00007F5B: 05 91 AE 06 D8 06 13 03 02 00 EE 03 10 10 00 05 00 
>00007F6C: 09 07 51 06 00 00 00 
>00007F73: 09 07 52 06 00 00 01 
>00007F7A: 09 07 53 06 30 00 02 
>00007F81: 09 07 54 06 00 00 03 
>00007F88: 09 07 55 06 00 00 04 
>00007F8F: 09 07 56 06 00 00 05 
>00007F96: 29 02 
>00007F98: 29 02 
>00007F9A: 29 02 
>00007F9C: 02 87 AA 00 00 00 00 
>00007FA3: 29 02 
>00007FA5: 05 91 E5 06 ED 06 14 03 02 00 9E 03 10 10 00 01 00 
>00007FB6: 09 07 38 07 30 00 00 
>00007FBD: 09 07 39 07 00 00 01 
>00007FC4: 29 02 
>00007FC6: 29 02 
>00007FC8: 29 02 
>00007FCA: 01 86 6E 00 12 04 
>00007FD0: 06 8E 3C 04 44 04 15 03 02 00 60 01 00 03 
>00007FDE: 29 02 
>00007FE0: 0A 82 
>00007FE2: 12 06 15 03 00 00 
>00007FE8: 0A 82 
>00007FEA: 12 06 29 01 02 00 
>00007FF0: 05 91 47 04 48 04 16 03 02 00 74 01 10 10 00 04 00 
>00008001: 09 07 49 04 30 00 00 
>00008008: 09 07 4B 04 00 00 02 
>0000800F: 09 07 4D 04 00 00 04 
>00008016: 29 02 
>00008018: 29 02 
>0000801A: 05 91 51 04 52 04 17 03 02 00 64 03 10 10 00 03 00 
>0000802B: 09 07 38 07 00 00 00 
>00008032: 09 07 53 04 00 00 01 
>00008039: 09 07 54 04 00 00 02 
>00008040: 09 07 55 04 30 00 03 
>00008047: 29 02 
>00008049: 05 91 24 06 2B 06 18 03 02 00 C3 02 10 10 01 06 00 
>0000805A: 09 07 2C 06 30 00 01 
>00008061: 09 07 2F 06 00 00 06 
>00008068: 09 07 2D 06 00 00 04 
>0000806F: 09 07 2E 06 00 00 02 
>00008076: 29 02 
>00008078: 05 91 3D 06 44 06 19 03 02 00 AF 02 10 10 00 01 00 
>00008089: 09 07 38 07 00 00 00 
>00008090: 09 07 39 07 30 00 01 
>00008097: 29 02 
>00008099: 05 91 61 04 62 04 1A 03 02 00 88 01 10 10 00 01 00 
>000080AA: 09 07 FA 02 30 00 00 
>000080B1: 09 07 F9 02 00 00 01 
>000080B8: 29 02 
>000080BA: 05 91 63 04 64 04 1B 03 02 00 9C 01 10 10 00 01 00 
>000080CB: 09 07 FA 02 30 00 00 
>000080D2: 09 07 F9 02 00 00 01 
>000080D9: 29 02 
>000080DB: 05 91 65 04 66 04 1C 03 02 00 B0 01 10 10 00 01 00 
>000080EC: 09 07 FA 02 30 00 00 
>000080F3: 09 07 F9 02 00 00 01 
>000080FA: 29 02 
>000080FC: 05 91 67 04 68 04 1D 03 02 00 C4 01 10 10 00 01 00 
>0000810D: 09 07 FA 02 30 00 00 
>00008114: 09 07 F9 02 00 00 01 
>0000811B: 29 02 
>0000811D: 05 91 78 04 79 04 1E 03 02 00 D8 02 10 10 00 01 00 
>0000812E: 09 07 FA 02 30 00 00 
>00008135: 09 07 F9 02 00 00 01 
>0000813C: 29 02 
>0000813E: 05 91 7A 04 7B 04 1F 03 02 00 EC 02 10 10 00 01 00 
>0000814F: 09 07 FA 02 30 00 00 
>00008156: 09 07 F9 02 00 00 01 
>0000815D: 29 02 
>0000815F: 05 91 7C 04 7D 04 20 03 02 00 00 03 10 10 00 01 00 
>00008170: 09 07 FA 02 30 00 00 
>00008177: 09 07 F9 02 00 00 01 
>0000817E: 29 02 
>00008180: 05 91 7E 04 7F 04 21 03 02 00 14 03 10 10 00 01 00 
>00008191: 09 07 FA 02 30 00 00 
>00008198: 09 07 F9 02 00 00 01 
>0000819F: 29 02 
>000081A1: 05 91 B9 04 BA 04 22 03 02 00 28 03 10 10 00 01 00 
>000081B2: 09 07 FA 02 30 00 00 
>000081B9: 09 07 F9 02 00 00 01 
>000081C0: 29 02 
>000081C2: 05 91 45 06 46 06 23 03 02 00 00 02 10 10 00 01 00 
>000081D3: 09 07 38 07 00 00 00 
>000081DA: 09 07 39 07 30 00 01 
>000081E1: 29 02 
>000081E3: 05 91 56 04 57 04 24 03 02 00 3C 03 10 10 00 03 00 
>000081F4: 09 07 A8 00 30 00 00 
>000081FB: 09 07 58 04 00 00 01 
>00008202: 09 07 59 04 00 00 02 
>00008209: 09 07 5A 04 00 00 03 
>00008210: 29 02 
>00008212: 05 91 80 04 81 04 25 03 02 00 D8 01 10 10 00 01 00 
>00008223: 09 07 FA 02 00 00 00 
>0000822A: 09 07 39 07 30 00 01 
>00008231: 29 02 
>00008233: 05 91 FB 06 02 07 26 03 02 00 14 02 10 10 00 04 00 
>00008244: 09 07 03 07 30 00 00 
>0000824B: 09 07 04 07 00 00 01 
>00008252: 09 07 05 07 00 00 02 
>00008259: 09 07 06 07 00 00 03 
>00008260: 09 07 07 07 00 00 04 
>00008267: 29 02 
>00008269: 05 91 82 04 83 04 27 03 02 00 EC 01 10 10 00 01 00 
>0000827A: 09 07 84 04 30 00 00 
>00008281: 09 07 85 04 00 00 01 
>00008288: 29 02 
>0000828A: 05 91 69 04 6A 04 28 03 02 00 85 02 10 10 00 09 00 
>0000829B: 09 07 6F 04 30 00 00 
>000082A2: 09 07 70 04 00 00 03 
>000082A9: 09 07 71 04 00 00 04 
>000082B0: 09 07 72 04 00 00 05 
>000082B7: 09 07 73 04 00 00 06 
>000082BE: 09 07 A7 00 00 00 09 
>000082C5: 29 02 
>000082C7: 03 08 8F 04 AA 00 9D 04 
>000082CF: 03 08 A4 04 AA 00 B2 04 
>000082D7: 02 87 57 06 00 00 00 
>000082DE: 29 02 
>000082E0: 05 91 65 06 6C 06 29 03 02 00 8B 03 10 10 00 01 00 
>000082F1: 09 07 38 07 00 00 00 
>000082F8: 09 07 39 07 30 00 01 
>000082FF: 29 02 
>00008301: 0A 82 
>00008303: 12 06 29 03 00 00 
>00008309: 05 91 AF 06 D3 06 2A 03 02 00 B3 03 10 10 00 02 00 
>0000831A: 09 07 38 07 00 00 00 
>00008321: 09 07 FD 02 00 00 01 
>00008328: 09 07 F8 02 30 00 02 
>0000832F: 29 02 
>00008331: 0A 82 
>00008333: 12 86 2A 03 01 00 
>00008339: 17 02 
>0000833B: 29 02 
>0000833D: 07 94 B0 06 D5 06 2B 03 02 00 10 04 10 11 00 00 FF 03 01 00 
>00008351: 5B 07 00 00 01 3C 00 
>00008358: 5B 07 01 00 01 3C 00 
>0000835F: 29 02 
>00008361: 05 91 B1 06 D6 06 2C 03 02 00 C7 03 10 10 00 05 00 
>00008372: 09 07 51 06 00 00 00 
>00008379: 09 07 52 06 00 00 01 
>00008380: 09 07 53 06 30 00 02 
>00008387: 09 07 54 06 00 00 03 
>0000838E: 09 07 55 06 00 00 04 
>00008395: 09 07 56 06 00 00 05 
>0000839C: 29 02 
>0000839E: 29 02 
>000083A0: 05 91 6E 06 D4 06 2D 03 02 00 DB 03 10 10 00 02 00 
>000083B1: 09 07 38 07 00 00 00 
>000083B8: 09 07 FD 02 00 00 01 
>000083BF: 09 07 F8 02 30 00 02 
>000083C6: 29 02 
>000083C8: 0A 82 
>000083CA: 12 86 2D 03 01 00 
>000083D0: 17 02 
>000083D2: 29 02 
>000083D4: 07 94 B2 06 D7 06 2E 03 02 00 38 04 10 11 00 00 FF 03 01 00 
>000083E8: 5B 07 00 00 01 3C 00 
>000083EF: 5B 07 01 00 01 3C 00 
>000083F6: 29 02 
>000083F8: 05 91 B3 06 D8 06 2F 03 02 00 EF 03 10 10 00 05 00 
>00008409: 09 07 51 06 00 00 00 
>00008410: 09 07 52 06 00 00 01 
>00008417: 09 07 53 06 30 00 02 
>0000841E: 09 07 54 06 00 00 03 
>00008425: 09 07 55 06 00 00 04 
>0000842C: 09 07 56 06 00 00 05 
>00008433: 29 02 
>00008435: 29 02 
>00008437: 29 02 
>00008439: 02 87 AA 00 00 00 00 
>00008440: 29 02 
>00008442: 05 91 E6 06 ED 06 30 03 02 00 9F 03 10 10 00 01 00 
>00008453: 09 07 38 07 30 00 00 
>0000845A: 09 07 39 07 00 00 01 
>00008461: 29 02 
>00008463: 29 02 
>00008465: 29 02 
>00008467: 01 86 6F 00 14 04 
>0000846D: 06 8E 3D 04 44 04 31 03 02 00 61 01 00 03 
>0000847B: 29 02 
>0000847D: 0A 82 
>0000847F: 12 06 31 03 00 00 
>00008485: 0A 82 
>00008487: 12 06 29 01 02 00 
>0000848D: 05 91 47 04 48 04 32 03 02 00 75 01 10 10 00 04 00 
>0000849E: 09 07 49 04 30 00 00 
>000084A5: 09 07 4B 04 00 00 02 
>000084AC: 09 07 4D 04 00 00 04 
>000084B3: 29 02 
>000084B5: 29 02 
>000084B7: 05 91 51 04 52 04 33 03 02 00 65 03 10 10 00 03 00 
>000084C8: 09 07 38 07 00 00 00 
>000084CF: 09 07 53 04 00 00 01 
>000084D6: 09 07 54 04 00 00 02 
>000084DD: 09 07 55 04 30 00 03 
>000084E4: 29 02 
>000084E6: 05 91 25 06 2B 06 34 03 02 00 C4 02 10 10 01 06 00 
>000084F7: 09 07 2C 06 30 00 01 
>000084FE: 09 07 2F 06 00 00 06 
>00008505: 09 07 2D 06 00 00 04 
>0000850C: 09 07 2E 06 00 00 02 
>00008513: 29 02 
>00008515: 05 91 3E 06 44 06 35 03 02 00 B0 02 10 10 00 01 00 
>00008526: 09 07 38 07 00 00 00 
>0000852D: 09 07 39 07 30 00 01 
>00008534: 29 02 
>00008536: 05 91 61 04 62 04 36 03 02 00 89 01 10 10 00 01 00 
>00008547: 09 07 FA 02 30 00 00 
>0000854E: 09 07 F9 02 00 00 01 
>00008555: 29 02 
>00008557: 05 91 63 04 64 04 37 03 02 00 9D 01 10 10 00 01 00 
>00008568: 09 07 FA 02 30 00 00 
>0000856F: 09 07 F9 02 00 00 01 
>00008576: 29 02 
>00008578: 05 91 65 04 66 04 38 03 02 00 B1 01 10 10 00 01 00 
>00008589: 09 07 FA 02 30 00 00 
>00008590: 09 07 F9 02 00 00 01 
>00008597: 29 02 
>00008599: 05 91 67 04 68 04 39 03 02 00 C5 01 10 10 00 01 00 
>000085AA: 09 07 FA 02 30 00 00 
>000085B1: 09 07 F9 02 00 00 01 
>000085B8: 29 02 
>000085BA: 05 91 78 04 79 04 3A 03 02 00 D9 02 10 10 00 01 00 
>000085CB: 09 07 FA 02 30 00 00 
>000085D2: 09 07 F9 02 00 00 01 
>000085D9: 29 02 
>000085DB: 05 91 7A 04 7B 04 3B 03 02 00 ED 02 10 10 00 01 00 
>000085EC: 09 07 FA 02 30 00 00 
>000085F3: 09 07 F9 02 00 00 01 
>000085FA: 29 02 
>000085FC: 05 91 7C 04 7D 04 3C 03 02 00 01 03 10 10 00 01 00 
>0000860D: 09 07 FA 02 30 00 00 
>00008614: 09 07 F9 02 00 00 01 
>0000861B: 29 02 
>0000861D: 05 91 7E 04 7F 04 3D 03 02 00 15 03 10 10 00 01 00 
>0000862E: 09 07 FA 02 30 00 00 
>00008635: 09 07 F9 02 00 00 01 
>0000863C: 29 02 
>0000863E: 05 91 B9 04 BA 04 3E 03 02 00 29 03 10 10 00 01 00 
>0000864F: 09 07 FA 02 30 00 00 
>00008656: 09 07 F9 02 00 00 01 
>0000865D: 29 02 
>0000865F: 05 91 45 06 46 06 3F 03 02 00 01 02 10 10 00 01 00 
>00008670: 09 07 38 07 00 00 00 
>00008677: 09 07 39 07 30 00 01 
>0000867E: 29 02 
>00008680: 05 91 56 04 57 04 40 03 02 00 3D 03 10 10 00 03 00 
>00008691: 09 07 A8 00 30 00 00 
>00008698: 09 07 58 04 00 00 01 
>0000869F: 09 07 59 04 00 00 02 
>000086A6: 09 07 5A 04 00 00 03 
>000086AD: 29 02 
>000086AF: 05 91 80 04 81 04 41 03 02 00 D9 01 10 10 00 01 00 
>000086C0: 09 07 FA 02 00 00 00 
>000086C7: 09 07 39 07 30 00 01 
>000086CE: 29 02 
>000086D0: 05 91 FC 06 02 07 42 03 02 00 15 02 10 10 00 04 00 
>000086E1: 09 07 03 07 30 00 00 
>000086E8: 09 07 04 07 00 00 01 
>000086EF: 09 07 05 07 00 00 02 
>000086F6: 09 07 06 07 00 00 03 
>000086FD: 09 07 07 07 00 00 04 
>00008704: 29 02 
>00008706: 05 91 82 04 83 04 43 03 02 00 ED 01 10 10 00 01 00 
>00008717: 09 07 84 04 30 00 00 
>0000871E: 09 07 85 04 00 00 01 
>00008725: 29 02 
>00008727: 05 91 69 04 6A 04 44 03 02 00 86 02 10 10 00 09 00 
>00008738: 09 07 6F 04 30 00 00 
>0000873F: 09 07 70 04 00 00 03 
>00008746: 09 07 71 04 00 00 04 
>0000874D: 09 07 72 04 00 00 05 
>00008754: 09 07 73 04 00 00 06 
>0000875B: 09 07 A7 00 00 00 09 
>00008762: 29 02 
>00008764: 03 08 8F 04 AA 00 9E 04 
>0000876C: 03 08 A4 04 AA 00 B3 04 
>00008774: 02 87 57 06 00 00 00 
>0000877B: 29 02 
>0000877D: 05 91 66 06 6C 06 45 03 02 00 8C 03 10 10 00 01 00 
>0000878E: 09 07 38 07 00 00 00 
>00008795: 09 07 39 07 30 00 01 
>0000879C: 29 02 
>0000879E: 0A 82 
>000087A0: 12 06 45 03 00 00 
>000087A6: 05 91 B4 06 D3 06 46 03 02 00 B4 03 10 10 00 02 00 
>000087B7: 09 07 38 07 00 00 00 
>000087BE: 09 07 FD 02 00 00 01 
>000087C5: 09 07 F8 02 30 00 02 
>000087CC: 29 02 
>000087CE: 0A 82 
>000087D0: 12 86 46 03 01 00 
>000087D6: 17 02 
>000087D8: 29 02 
>000087DA: 07 94 B5 06 D5 06 47 03 02 00 12 04 10 11 00 00 FF 03 01 00 
>000087EE: 5B 07 00 00 01 3C 00 
>000087F5: 5B 07 01 00 01 3C 00 
>000087FC: 29 02 
>000087FE: 05 91 B6 06 D6 06 48 03 02 00 C8 03 10 10 00 05 00 
>0000880F: 09 07 51 06 00 00 00 
>00008816: 09 07 52 06 00 00 01 
>0000881D: 09 07 53 06 30 00 02 
>00008824: 09 07 54 06 00 00 03 
>0000882B: 09 07 55 06 00 00 04 
>00008832: 09 07 56 06 00 00 05 
>00008839: 29 02 
>0000883B: 29 02 
>0000883D: 05 91 6E 06 D4 06 49 03 02 00 DC 03 10 10 00 02 00 
>0000884E: 09 07 38 07 00 00 00 
>00008855: 09 07 FD 02 00 00 01 
>0000885C: 09 07 F8 02 30 00 02 
>00008863: 29 02 
>00008865: 0A 82 
>00008867: 12 86 49 03 01 00 
>0000886D: 17 02 
>0000886F: 29 02 
>00008871: 07 94 B7 06 D7 06 4A 03 02 00 3A 04 10 11 00 00 FF 03 01 00 
>00008885: 5B 07 00 00 01 3C 00 
>0000888C: 5B 07 01 00 01 3C 00 
>00008893: 29 02 
>00008895: 05 91 B8 06 D8 06 4B 03 02 00 F0 03 10 10 00 05 00 
>000088A6: 09 07 51 06 00 00 00 
>000088AD: 09 07 52 06 00 00 01 
>000088B4: 09 07 53 06 30 00 02 
>000088BB: 09 07 54 06 00 00 03 
>000088C2: 09 07 55 06 00 00 04 
>000088C9: 09 07 56 06 00 00 05 
>000088D0: 29 02 
>000088D2: 29 02 
>000088D4: 29 02 
>000088D6: 02 87 AA 00 00 00 00 
>000088DD: 29 02 
>000088DF: 05 91 E7 06 ED 06 4C 03 02 00 A0 03 10 10 00 01 00 
>000088F0: 09 07 38 07 30 00 00 
>000088F7: 09 07 39 07 00 00 01 
>000088FE: 29 02 
>00008900: 29 02 
>00008902: 29 02 
>00008904: 01 86 70 00 16 04 
>0000890A: 06 8E 3E 04 44 04 4D 03 02 00 62 01 00 03 
>00008918: 29 02 
>0000891A: 0A 82 
>0000891C: 12 06 4D 03 00 00 
>00008922: 0A 82 
>00008924: 12 06 29 01 02 00 
>0000892A: 05 91 47 04 48 04 4E 03 02 00 76 01 10 10 00 04 00 
>0000893B: 09 07 49 04 30 00 00 
>00008942: 09 07 4B 04 00 00 02 
>00008949: 09 07 4D 04 00 00 04 
>00008950: 29 02 
>00008952: 29 02 
>00008954: 05 91 51 04 52 04 4F 03 02 00 66 03 10 10 00 03 00 
>00008965: 09 07 38 07 00 00 00 
>0000896C: 09 07 53 04 00 00 01 
>00008973: 09 07 54 04 00 00 02 
>0000897A: 09 07 55 04 30 00 03 
>00008981: 29 02 
>00008983: 05 91 26 06 2B 06 50 03 02 00 C5 02 10 10 01 06 00 
>00008994: 09 07 2C 06 30 00 01 
>0000899B: 09 07 2F 06 00 00 06 
>000089A2: 09 07 2D 06 00 00 04 
>000089A9: 09 07 2E 06 00 00 02 
>000089B0: 29 02 
>000089B2: 05 91 3F 06 44 06 51 03 02 00 B1 02 10 10 00 01 00 
>000089C3: 09 07 38 07 00 00 00 
>000089CA: 09 07 39 07 30 00 01 
>000089D1: 29 02 
>000089D3: 05 91 61 04 62 04 52 03 02 00 8A 01 10 10 00 01 00 
>000089E4: 09 07 FA 02 30 00 00 
>000089EB: 09 07 F9 02 00 00 01 
>000089F2: 29 02 
>000089F4: 05 91 63 04 64 04 53 03 02 00 9E 01 10 10 00 01 00 
>00008A05: 09 07 FA 02 30 00 00 
>00008A0C: 09 07 F9 02 00 00 01 
>00008A13: 29 02 
>00008A15: 05 91 65 04 66 04 54 03 02 00 B2 01 10 10 00 01 00 
>00008A26: 09 07 FA 02 30 00 00 
>00008A2D: 09 07 F9 02 00 00 01 
>00008A34: 29 02 
>00008A36: 05 91 67 04 68 04 55 03 02 00 C6 01 10 10 00 01 00 
>00008A47: 09 07 FA 02 30 00 00 
>00008A4E: 09 07 F9 02 00 00 01 
>00008A55: 29 02 
>00008A57: 05 91 78 04 79 04 56 03 02 00 DA 02 10 10 00 01 00 
>00008A68: 09 07 FA 02 30 00 00 
>00008A6F: 09 07 F9 02 00 00 01 
>00008A76: 29 02 
>00008A78: 05 91 7A 04 7B 04 57 03 02 00 EE 02 10 10 00 01 00 
>00008A89: 09 07 FA 02 30 00 00 
>00008A90: 09 07 F9 02 00 00 01 
>00008A97: 29 02 
>00008A99: 05 91 7C 04 7D 04 58 03 02 00 02 03 10 10 00 01 00 
>00008AAA: 09 07 FA 02 30 00 00 
>00008AB1: 09 07 F9 02 00 00 01 
>00008AB8: 29 02 
>00008ABA: 05 91 7E 04 7F 04 59 03 02 00 16 03 10 10 00 01 00 
>00008ACB: 09 07 FA 02 30 00 00 
>00008AD2: 09 07 F9 02 00 00 01 
>00008AD9: 29 02 
>00008ADB: 05 91 B9 04 BA 04 5A 03 02 00 2A 03 10 10 00 01 00 
>00008AEC: 09 07 FA 02 30 00 00 
>00008AF3: 09 07 F9 02 00 00 01 
>00008AFA: 29 02 
>00008AFC: 05 91 45 06 46 06 5B 03 02 00 02 02 10 10 00 01 00 
>00008B0D: 09 07 38 07 00 00 00 
>00008B14: 09 07 39 07 30 00 01 
>00008B1B: 29 02 
>00008B1D: 05 91 56 04 57 04 5C 03 02 00 3E 03 10 10 00 03 00 
>00008B2E: 09 07 A8 00 30 00 00 
>00008B35: 09 07 58 04 00 00 01 
>00008B3C: 09 07 59 04 00 00 02 
>00008B43: 09 07 5A 04 00 00 03 
>00008B4A: 29 02 
>00008B4C: 05 91 80 04 81 04 5D 03 02 00 DA 01 10 10 00 01 00 
>00008B5D: 09 07 FA 02 00 00 00 
>00008B64: 09 07 39 07 30 00 01 
>00008B6B: 29 02 
>00008B6D: 05 91 FD 06 02 07 5E 03 02 00 16 02 10 10 00 04 00 
>00008B7E: 09 07 03 07 30 00 00 
>00008B85: 09 07 04 07 00 00 01 
>00008B8C: 09 07 05 07 00 00 02 
>00008B93: 09 07 06 07 00 00 03 
>00008B9A: 09 07 07 07 00 00 04 
>00008BA1: 29 02 
>00008BA3: 05 91 82 04 83 04 5F 03 02 00 EE 01 10 10 00 01 00 
>00008BB4: 09 07 84 04 30 00 00 
>00008BBB: 09 07 85 04 00 00 01 
>00008BC2: 29 02 
>00008BC4: 05 91 69 04 6A 04 60 03 02 00 87 02 10 10 00 09 00 
>00008BD5: 09 07 6F 04 30 00 00 
>00008BDC: 09 07 70 04 00 00 03 
>00008BE3: 09 07 71 04 00 00 04 
>00008BEA: 09 07 72 04 00 00 05 
>00008BF1: 09 07 73 04 00 00 06 
>00008BF8: 09 07 A7 00 00 00 09 
>00008BFF: 29 02 
>00008C01: 03 08 8F 04 AA 00 9F 04 
>00008C09: 03 08 A4 04 AA 00 B4 04 
>00008C11: 02 87 57 06 00 00 00 
>00008C18: 29 02 
>00008C1A: 05 91 67 06 6C 06 61 03 02 00 8D 03 10 10 00 01 00 
>00008C2B: 09 07 38 07 00 00 00 
>00008C32: 09 07 39 07 30 00 01 
>00008C39: 29 02 
>00008C3B: 0A 82 
>00008C3D: 12 06 61 03 00 00 
>00008C43: 05 91 B9 06 D3 06 62 03 02 00 B5 03 10 10 00 02 00 
>00008C54: 09 07 38 07 00 00 00 
>00008C5B: 09 07 FD 02 00 00 01 
>00008C62: 09 07 F8 02 30 00 02 
>00008C69: 29 02 
>00008C6B: 0A 82 
>00008C6D: 12 86 62 03 01 00 
>00008C73: 17 02 
>00008C75: 29 02 
>00008C77: 07 94 BA 06 D5 06 63 03 02 00 14 04 10 11 00 00 FF 03 01 00 
>00008C8B: 5B 07 00 00 01 3C 00 
>00008C92: 5B 07 01 00 01 3C 00 
>00008C99: 29 02 
>00008C9B: 05 91 BB 06 D6 06 64 03 02 00 C9 03 10 10 00 05 00 
>00008CAC: 09 07 51 06 00 00 00 
>00008CB3: 09 07 52 06 00 00 01 
>00008CBA: 09 07 53 06 30 00 02 
>00008CC1: 09 07 54 06 00 00 03 
>00008CC8: 09 07 55 06 00 00 04 
>00008CCF: 09 07 56 06 00 00 05 
>00008CD6: 29 02 
>00008CD8: 29 02 
>00008CDA: 05 91 6E 06 D4 06 65 03 02 00 DD 03 10 10 00 02 00 
>00008CEB: 09 07 38 07 00 00 00 
>00008CF2: 09 07 FD 02 00 00 01 
>00008CF9: 09 07 F8 02 30 00 02 
>00008D00: 29 02 
>00008D02: 0A 82 
>00008D04: 12 86 65 03 01 00 
>00008D0A: 17 02 
>00008D0C: 29 02 
>00008D0E: 07 94 BC 06 D7 06 66 03 02 00 3C 04 10 11 00 00 FF 03 01 00 
>00008D22: 5B 07 00 00 01 3C 00 
>00008D29: 5B 07 01 00 01 3C 00 
>00008D30: 29 02 
>00008D32: 05 91 BD 06 D8 06 67 03 02 00 F1 03 10 10 00 05 00 
>00008D43: 09 07 51 06 00 00 00 
>00008D4A: 09 07 52 06 00 00 01 
>00008D51: 09 07 53 06 30 00 02 
>00008D58: 09 07 54 06 00 00 03 
>00008D5F: 09 07 55 06 00 00 04 
>00008D66: 09 07 56 06 00 00 05 
>00008D6D: 29 02 
>00008D6F: 29 02 
>00008D71: 29 02 
>00008D73: 02 87 AA 00 00 00 00 
>00008D7A: 29 02 
>00008D7C: 05 91 E8 06 ED 06 68 03 02 00 A1 03 10 10 00 01 00 
>00008D8D: 09 07 38 07 30 00 00 
>00008D94: 09 07 39 07 00 00 01 
>00008D9B: 29 02 
>00008D9D: 29 02 
>00008D9F: 29 02 
>00008DA1: 01 86 71 00 18 04 
>00008DA7: 06 8E 3F 04 44 04 69 03 02 00 63 01 00 03 
>00008DB5: 29 02 
>00008DB7: 0A 82 
>00008DB9: 12 06 69 03 00 00 
>00008DBF: 0A 82 
>00008DC1: 12 06 29 01 02 00 
>00008DC7: 05 91 47 04 48 04 6A 03 02 00 77 01 10 10 00 04 00 
>00008DD8: 09 07 49 04 30 00 00 
>00008DDF: 09 07 4B 04 00 00 02 
>00008DE6: 09 07 4D 04 00 00 04 
>00008DED: 29 02 
>00008DEF: 29 02 
>00008DF1: 05 91 51 04 52 04 6B 03 02 00 67 03 10 10 00 03 00 
>00008E02: 09 07 38 07 00 00 00 
>00008E09: 09 07 53 04 00 00 01 
>00008E10: 09 07 54 04 00 00 02 
>00008E17: 09 07 55 04 30 00 03 
>00008E1E: 29 02 
>00008E20: 05 91 27 06 2B 06 6C 03 02 00 C6 02 10 10 01 06 00 
>00008E31: 09 07 2C 06 30 00 01 
>00008E38: 09 07 2F 06 00 00 06 
>00008E3F: 09 07 2D 06 00 00 04 
>00008E46: 09 07 2E 06 00 00 02 
>00008E4D: 29 02 
>00008E4F: 05 91 40 06 44 06 6D 03 02 00 B2 02 10 10 00 01 00 
>00008E60: 09 07 38 07 00 00 00 
>00008E67: 09 07 39 07 30 00 01 
>00008E6E: 29 02 
>00008E70: 05 91 61 04 62 04 6E 03 02 00 8B 01 10 10 00 01 00 
>00008E81: 09 07 FA 02 30 00 00 
>00008E88: 09 07 F9 02 00 00 01 
>00008E8F: 29 02 
>00008E91: 05 91 63 04 64 04 6F 03 02 00 9F 01 10 10 00 01 00 
>00008EA2: 09 07 FA 02 30 00 00 
>00008EA9: 09 07 F9 02 00 00 01 
>00008EB0: 29 02 
>00008EB2: 05 91 65 04 66 04 70 03 02 00 B3 01 10 10 00 01 00 
>00008EC3: 09 07 FA 02 30 00 00 
>00008ECA: 09 07 F9 02 00 00 01 
>00008ED1: 29 02 
>00008ED3: 05 91 67 04 68 04 71 03 02 00 C7 01 10 10 00 01 00 
>00008EE4: 09 07 FA 02 30 00 00 
>00008EEB: 09 07 F9 02 00 00 01 
>00008EF2: 29 02 
>00008EF4: 05 91 78 04 79 04 72 03 02 00 DB 02 10 10 00 01 00 
>00008F05: 09 07 FA 02 30 00 00 
>00008F0C: 09 07 F9 02 00 00 01 
>00008F13: 29 02 
>00008F15: 05 91 7A 04 7B 04 73 03 02 00 EF 02 10 10 00 01 00 
>00008F26: 09 07 FA 02 30 00 00 
>00008F2D: 09 07 F9 02 00 00 01 
>00008F34: 29 02 
>00008F36: 05 91 7C 04 7D 04 74 03 02 00 03 03 10 10 00 01 00 
>00008F47: 09 07 FA 02 30 00 00 
>00008F4E: 09 07 F9 02 00 00 01 
>00008F55: 29 02 
>00008F57: 05 91 7E 04 7F 04 75 03 02 00 17 03 10 10 00 01 00 
>00008F68: 09 07 FA 02 30 00 00 
>00008F6F: 09 07 F9 02 00 00 01 
>00008F76: 29 02 
>00008F78: 05 91 B9 04 BA 04 76 03 02 00 2B 03 10 10 00 01 00 
>00008F89: 09 07 FA 02 30 00 00 
>00008F90: 09 07 F9 02 00 00 01 
>00008F97: 29 02 
>00008F99: 05 91 45 06 46 06 77 03 02 00 03 02 10 10 00 01 00 
>00008FAA: 09 07 38 07 00 00 00 
>00008FB1: 09 07 39 07 30 00 01 
>00008FB8: 29 02 
>00008FBA: 05 91 56 04 57 04 78 03 02 00 3F 03 10 10 00 03 00 
>00008FCB: 09 07 A8 00 30 00 00 
>00008FD2: 09 07 58 04 00 00 01 
>00008FD9: 09 07 59 04 00 00 02 
>00008FE0: 09 07 5A 04 00 00 03 
>00008FE7: 29 02 
>00008FE9: 05 91 80 04 81 04 79 03 02 00 DB 01 10 10 00 01 00 
>00008FFA: 09 07 FA 02 00 00 00 
>00009001: 09 07 39 07 30 00 01 
>00009008: 29 02 
>0000900A: 05 91 FE 06 02 07 7A 03 02 00 17 02 10 10 00 04 00 
>0000901B: 09 07 03 07 30 00 00 
>00009022: 09 07 04 07 00 00 01 
>00009029: 09 07 05 07 00 00 02 
>00009030: 09 07 06 07 00 00 03 
>00009037: 09 07 07 07 00 00 04 
>0000903E: 29 02 
>00009040: 05 91 82 04 83 04 7B 03 02 00 EF 01 10 10 00 01 00 
>00009051: 09 07 84 04 30 00 00 
>00009058: 09 07 85 04 00 00 01 
>0000905F: 29 02 
>00009061: 05 91 69 04 6A 04 7C 03 02 00 88 02 10 10 00 09 00 
>00009072: 09 07 6F 04 30 00 00 
>00009079: 09 07 70 04 00 00 03 
>00009080: 09 07 71 04 00 00 04 
>00009087: 09 07 72 04 00 00 05 
>0000908E: 09 07 73 04 00 00 06 
>00009095: 09 07 A7 00 00 00 09 
>0000909C: 29 02 
>0000909E: 03 08 8F 04 AA 00 A0 04 
>000090A6: 03 08 A4 04 AA 00 B5 04 
>000090AE: 02 87 57 06 00 00 00 
>000090B5: 29 02 
>000090B7: 05 91 68 06 6C 06 7D 03 02 00 8E 03 10 10 00 01 00 
>000090C8: 09 07 38 07 00 00 00 
>000090CF: 09 07 39 07 30 00 01 
>000090D6: 29 02 
>000090D8: 0A 82 
>000090DA: 12 06 7D 03 00 00 
>000090E0: 05 91 BE 06 D3 06 7E 03 02 00 B6 03 10 10 00 02 00 
>000090F1: 09 07 38 07 00 00 00 
>000090F8: 09 07 FD 02 00 00 01 
>000090FF: 09 07 F8 02 30 00 02 
>00009106: 29 02 
>00009108: 0A 82 
>0000910A: 12 86 7E 03 01 00 
>00009110: 17 02 
>00009112: 29 02 
>00009114: 07 94 BF 06 D5 06 7F 03 02 00 16 04 10 11 00 00 FF 03 01 00 
>00009128: 5B 07 00 00 01 3C 00 
>0000912F: 5B 07 01 00 01 3C 00 
>00009136: 29 02 
>00009138: 05 91 C0 06 D6 06 80 03 02 00 CA 03 10 10 00 05 00 
>00009149: 09 07 51 06 00 00 00 
>00009150: 09 07 52 06 00 00 01 
>00009157: 09 07 53 06 30 00 02 
>0000915E: 09 07 54 06 00 00 03 
>00009165: 09 07 55 06 00 00 04 
>0000916C: 09 07 56 06 00 00 05 
>00009173: 29 02 
>00009175: 29 02 
>00009177: 05 91 6E 06 D4 06 81 03 02 00 DE 03 10 10 00 02 00 
>00009188: 09 07 38 07 00 00 00 
>0000918F: 09 07 FD 02 00 00 01 
>00009196: 09 07 F8 02 30 00 02 
>0000919D: 29 02 
>0000919F: 0A 82 
>000091A1: 12 86 81 03 01 00 
>000091A7: 17 02 
>000091A9: 29 02 
>000091AB: 07 94 C1 06 D7 06 82 03 02 00 3E 04 10 11 00 00 FF 03 01 00 
>000091BF: 5B 07 00 00 01 3C 00 
>000091C6: 5B 07 01 00 01 3C 00 
>000091CD: 29 02 
>000091CF: 05 91 C2 06 D8 06 83 03 02 00 F2 03 10 10 00 05 00 
>000091E0: 09 07 51 06 00 00 00 
>000091E7: 09 07 52 06 00 00 01 
>000091EE: 09 07 53 06 30 00 02 
>000091F5: 09 07 54 06 00 00 03 
>000091FC: 09 07 55 06 00 00 04 
>00009203: 09 07 56 06 00 00 05 
>0000920A: 29 02 
>0000920C: 29 02 
>0000920E: 29 02 
>00009210: 02 87 AA 00 00 00 00 
>00009217: 29 02 
>00009219: 05 91 E9 06 ED 06 84 03 02 00 A2 03 10 10 00 01 00 
>0000922A: 09 07 38 07 30 00 00 
>00009231: 09 07 39 07 00 00 01 
>00009238: 29 02 
>0000923A: 29 02 
>0000923C: 29 02 
>0000923E: 01 86 72 00 1A 04 
>00009244: 06 8E 40 04 44 04 85 03 02 00 64 01 00 03 
>00009252: 29 02 
>00009254: 0A 82 
>00009256: 12 06 85 03 00 00 
>0000925C: 0A 82 
>0000925E: 12 06 29 01 02 00 
>00009264: 05 91 47 04 48 04 86 03 02 00 78 01 10 10 00 04 00 
>00009275: 09 07 49 04 30 00 00 
>0000927C: 09 07 4B 04 00 00 02 
>00009283: 09 07 4D 04 00 00 04 
>0000928A: 29 02 
>0000928C: 29 02 
>0000928E: 05 91 51 04 52 04 87 03 02 00 68 03 10 10 00 03 00 
>0000929F: 09 07 38 07 00 00 00 
>000092A6: 09 07 53 04 00 00 01 
>000092AD: 09 07 54 04 00 00 02 
>000092B4: 09 07 55 04 30 00 03 
>000092BB: 29 02 
>000092BD: 05 91 28 06 2B 06 88 03 02 00 C7 02 10 10 01 06 00 
>000092CE: 09 07 2C 06 30 00 01 
>000092D5: 09 07 2F 06 00 00 06 
>000092DC: 09 07 2D 06 00 00 04 
>000092E3: 09 07 2E 06 00 00 02 
>000092EA: 29 02 
>000092EC: 05 91 41 06 44 06 89 03 02 00 B3 02 10 10 00 01 00 
>000092FD: 09 07 38 07 00 00 00 
>00009304: 09 07 39 07 30 00 01 
>0000930B: 29 02 
>0000930D: 05 91 61 04 62 04 8A 03 02 00 8C 01 10 10 00 01 00 
>0000931E: 09 07 FA 02 30 00 00 
>00009325: 09 07 F9 02 00 00 01 
>0000932C: 29 02 
>0000932E: 05 91 63 04 64 04 8B 03 02 00 A0 01 10 10 00 01 00 
>0000933F: 09 07 FA 02 30 00 00 
>00009346: 09 07 F9 02 00 00 01 
>0000934D: 29 02 
>0000934F: 05 91 65 04 66 04 8C 03 02 00 B4 01 10 10 00 01 00 
>00009360: 09 07 FA 02 30 00 00 
>00009367: 09 07 F9 02 00 00 01 
>0000936E: 29 02 
>00009370: 05 91 67 04 68 04 8D 03 02 00 C8 01 10 10 00 01 00 
>00009381: 09 07 FA 02 30 00 00 
>00009388: 09 07 F9 02 00 00 01 
>0000938F: 29 02 
>00009391: 05 91 78 04 79 04 8E 03 02 00 DC 02 10 10 00 01 00 
>000093A2: 09 07 FA 02 30 00 00 
>000093A9: 09 07 F9 02 00 00 01 
>000093B0: 29 02 
>000093B2: 05 91 7A 04 7B 04 8F 03 02 00 F0 02 10 10 00 01 00 
>000093C3: 09 07 FA 02 30 00 00 
>000093CA: 09 07 F9 02 00 00 01 
>000093D1: 29 02 
>000093D3: 05 91 7C 04 7D 04 90 03 02 00 04 03 10 10 00 01 00 
>000093E4: 09 07 FA 02 30 00 00 
>000093EB: 09 07 F9 02 00 00 01 
>000093F2: 29 02 
>000093F4: 05 91 7E 04 7F 04 91 03 02 00 18 03 10 10 00 01 00 
>00009405: 09 07 FA 02 30 00 00 
>0000940C: 09 07 F9 02 00 00 01 
>00009413: 29 02 
>00009415: 05 91 B9 04 BA 04 92 03 02 00 2C 03 10 10 00 01 00 
>00009426: 09 07 FA 02 30 00 00 
>0000942D: 09 07 F9 02 00 00 01 
>00009434: 29 02 
>00009436: 05 91 45 06 46 06 93 03 02 00 04 02 10 10 00 01 00 
>00009447: 09 07 38 07 00 00 00 
>0000944E: 09 07 39 07 30 00 01 
>00009455: 29 02 
>00009457: 05 91 56 04 57 04 94 03 02 00 40 03 10 10 00 03 00 
>00009468: 09 07 A8 00 30 00 00 
>0000946F: 09 07 58 04 00 00 01 
>00009476: 09 07 59 04 00 00 02 
>0000947D: 09 07 5A 04 00 00 03 
>00009484: 29 02 
>00009486: 05 91 80 04 81 04 95 03 02 00 DC 01 10 10 00 01 00 
>00009497: 09 07 FA 02 00 00 00 
>0000949E: 09 07 39 07 30 00 01 
>000094A5: 29 02 
>000094A7: 05 91 FF 06 02 07 96 03 02 00 18 02 10 10 00 04 00 
>000094B8: 09 07 03 07 30 00 00 
>000094BF: 09 07 04 07 00 00 01 
>000094C6: 09 07 05 07 00 00 02 
>000094CD: 09 07 06 07 00 00 03 
>000094D4: 09 07 07 07 00 00 04 
>000094DB: 29 02 
>000094DD: 05 91 82 04 83 04 97 03 02 00 F0 01 10 10 00 01 00 
>000094EE: 09 07 84 04 30 00 00 
>000094F5: 09 07 85 04 00 00 01 
>000094FC: 29 02 
>000094FE: 05 91 69 04 6A 04 98 03 02 00 89 02 10 10 00 09 00 
>0000950F: 09 07 6F 04 30 00 00 
>00009516: 09 07 70 04 00 00 03 
>0000951D: 09 07 71 04 00 00 04 
>00009524: 09 07 72 04 00 00 05 
>0000952B: 09 07 73 04 00 00 06 
>00009532: 09 07 A7 00 00 00 09 
>00009539: 29 02 
>0000953B: 03 08 8F 04 AA 00 A1 04 
>00009543: 03 08 A4 04 AA 00 B6 04 
>0000954B: 02 87 57 06 00 00 00 
>00009552: 29 02 
>00009554: 05 91 69 06 6C 06 99 03 02 00 8F 03 10 10 00 01 00 
>00009565: 09 07 38 07 00 00 00 
>0000956C: 09 07 39 07 30 00 01 
>00009573: 29 02 
>00009575: 0A 82 
>00009577: 12 06 99 03 00 00 
>0000957D: 05 91 C3 06 D3 06 9A 03 02 00 B7 03 10 10 00 02 00 
>0000958E: 09 07 38 07 00 00 00 
>00009595: 09 07 FD 02 00 00 01 
>0000959C: 09 07 F8 02 30 00 02 
>000095A3: 29 02 
>000095A5: 0A 82 
>000095A7: 12 86 9A 03 01 00 
>000095AD: 17 02 
>000095AF: 29 02 
>000095B1: 07 94 C4 06 D5 06 9B 03 02 00 18 04 10 11 00 00 FF 03 01 00 
>000095C5: 5B 07 00 00 01 3C 00 
>000095CC: 5B 07 01 00 01 3C 00 
>000095D3: 29 02 
>000095D5: 05 91 C5 06 D6 06 9C 03 02 00 CB 03 10 10 00 05 00 
>000095E6: 09 07 51 06 00 00 00 
>000095ED: 09 07 52 06 00 00 01 
>000095F4: 09 07 53 06 30 00 02 
>000095FB: 09 07 54 06 00 00 03 
>00009602: 09 07 55 06 00 00 04 
>00009609: 09 07 56 06 00 00 05 
>00009610: 29 02 
>00009612: 29 02 
>00009614: 05 91 6E 06 D4 06 9D 03 02 00 DF 03 10 10 00 02 00 
>00009625: 09 07 38 07 00 00 00 
>0000962C: 09 07 FD 02 00 00 01 
>00009633: 09 07 F8 02 30 00 02 
>0000963A: 29 02 
>0000963C: 0A 82 
>0000963E: 12 86 9D 03 01 00 
>00009644: 17 02 
>00009646: 29 02 
>00009648: 07 94 C6 06 D7 06 9E 03 02 00 40 04 10 11 00 00 FF 03 01 00 
>0000965C: 5B 07 00 00 01 3C 00 
>00009663: 5B 07 01 00 01 3C 00 
>0000966A: 29 02 
>0000966C: 05 91 C7 06 D8 06 9F 03 02 00 F3 03 10 10 00 05 00 
>0000967D: 09 07 51 06 00 00 00 
>00009684: 09 07 52 06 00 00 01 
>0000968B: 09 07 53 06 30 00 02 
>00009692: 09 07 54 06 00 00 03 
>00009699: 09 07 55 06 00 00 04 
>000096A0: 09 07 56 06 00 00 05 
>000096A7: 29 02 
>000096A9: 29 02 
>000096AB: 29 02 
>000096AD: 02 87 AA 00 00 00 00 
>000096B4: 29 02 
>000096B6: 05 91 EA 06 ED 06 A0 03 02 00 A3 03 10 10 00 01 00 
>000096C7: 09 07 38 07 30 00 00 
>000096CE: 09 07 39 07 00 00 01 
>000096D5: 29 02 
>000096D7: 29 02 
>000096D9: 29 02 
>000096DB: 01 86 73 00 1C 04 
>000096E1: 06 8E 41 04 44 04 A1 03 02 00 65 01 00 03 
>000096EF: 29 02 
>000096F1: 0A 82 
>000096F3: 12 06 A1 03 00 00 
>000096F9: 0A 82 
>000096FB: 12 06 29 01 02 00 
>00009701: 05 91 47 04 48 04 A2 03 02 00 79 01 10 10 00 04 00 
>00009712: 09 07 49 04 30 00 00 
>00009719: 09 07 4B 04 00 00 02 
>00009720: 09 07 4D 04 00 00 04 
>00009727: 29 02 
>00009729: 29 02 
>0000972B: 05 91 51 04 52 04 A3 03 02 00 69 03 10 10 00 03 00 
>0000973C: 09 07 38 07 00 00 00 
>00009743: 09 07 53 04 00 00 01 
>0000974A: 09 07 54 04 00 00 02 
>00009751: 09 07 55 04 30 00 03 
>00009758: 29 02 
>0000975A: 05 91 29 06 2B 06 A4 03 02 00 C8 02 10 10 01 06 00 
>0000976B: 09 07 2C 06 30 00 01 
>00009772: 09 07 2F 06 00 00 06 
>00009779: 09 07 2D 06 00 00 04 
>00009780: 09 07 2E 06 00 00 02 
>00009787: 29 02 
>00009789: 05 91 42 06 44 06 A5 03 02 00 B4 02 10 10 00 01 00 
>0000979A: 09 07 38 07 00 00 00 
>000097A1: 09 07 39 07 30 00 01 
>000097A8: 29 02 
>000097AA: 05 91 61 04 62 04 A6 03 02 00 8D 01 10 10 00 01 00 
>000097BB: 09 07 FA 02 30 00 00 
>000097C2: 09 07 F9 02 00 00 01 
>000097C9: 29 02 
>000097CB: 05 91 63 04 64 04 A7 03 02 00 A1 01 10 10 00 01 00 
>000097DC: 09 07 FA 02 30 00 00 
>000097E3: 09 07 F9 02 00 00 01 
>000097EA: 29 02 
>000097EC: 05 91 65 04 66 04 A8 03 02 00 B5 01 10 10 00 01 00 
>000097FD: 09 07 FA 02 30 00 00 
>00009804: 09 07 F9 02 00 00 01 
>0000980B: 29 02 
>0000980D: 05 91 67 04 68 04 A9 03 02 00 C9 01 10 10 00 01 00 
>0000981E: 09 07 FA 02 30 00 00 
>00009825: 09 07 F9 02 00 00 01 
>0000982C: 29 02 
>0000982E: 05 91 78 04 79 04 AA 03 02 00 DD 02 10 10 00 01 00 
>0000983F: 09 07 FA 02 30 00 00 
>00009846: 09 07 F9 02 00 00 01 
>0000984D: 29 02 
>0000984F: 05 91 7A 04 7B 04 AB 03 02 00 F1 02 10 10 00 01 00 
>00009860: 09 07 FA 02 30 00 00 
>00009867: 09 07 F9 02 00 00 01 
>0000986E: 29 02 
>00009870: 05 91 7C 04 7D 04 AC 03 02 00 05 03 10 10 00 01 00 
>00009881: 09 07 FA 02 30 00 00 
>00009888: 09 07 F9 02 00 00 01 
>0000988F: 29 02 
>00009891: 05 91 7E 04 7F 04 AD 03 02 00 19 03 10 10 00 01 00 
>000098A2: 09 07 FA 02 30 00 00 
>000098A9: 09 07 F9 02 00 00 01 
>000098B0: 29 02 
>000098B2: 05 91 B9 04 BA 04 AE 03 02 00 2D 03 10 10 00 01 00 
>000098C3: 09 07 FA 02 30 00 00 
>000098CA: 09 07 F9 02 00 00 01 
>000098D1: 29 02 
>000098D3: 05 91 45 06 46 06 AF 03 02 00 05 02 10 10 00 01 00 
>000098E4: 09 07 38 07 00 00 00 
>000098EB: 09 07 39 07 30 00 01 
>000098F2: 29 02 
>000098F4: 05 91 56 04 57 04 B0 03 02 00 41 03 10 10 00 03 00 
>00009905: 09 07 A8 00 30 00 00 
>0000990C: 09 07 58 04 00 00 01 
>00009913: 09 07 59 04 00 00 02 
>0000991A: 09 07 5A 04 00 00 03 
>00009921: 29 02 
>00009923: 05 91 80 04 81 04 B1 03 02 00 DD 01 10 10 00 01 00 
>00009934: 09 07 FA 02 00 00 00 
>0000993B: 09 07 39 07 30 00 01 
>00009942: 29 02 
>00009944: 05 91 00 07 02 07 B2 03 02 00 19 02 10 10 00 04 00 
>00009955: 09 07 03 07 30 00 00 
>0000995C: 09 07 04 07 00 00 01 
>00009963: 09 07 05 07 00 00 02 
>0000996A: 09 07 06 07 00 00 03 
>00009971: 09 07 07 07 00 00 04 
>00009978: 29 02 
>0000997A: 05 91 82 04 83 04 B3 03 02 00 F1 01 10 10 00 01 00 
>0000998B: 09 07 84 04 30 00 00 
>00009992: 09 07 85 04 00 00 01 
>00009999: 29 02 
>0000999B: 05 91 69 04 6A 04 B4 03 02 00 8A 02 10 10 00 09 00 
>000099AC: 09 07 6F 04 30 00 00 
>000099B3: 09 07 70 04 00 00 03 
>000099BA: 09 07 71 04 00 00 04 
>000099C1: 09 07 72 04 00 00 05 
>000099C8: 09 07 73 04 00 00 06 
>000099CF: 09 07 A7 00 00 00 09 
>000099D6: 29 02 
>000099D8: 03 08 8F 04 AA 00 A2 04 
>000099E0: 03 08 A4 04 AA 00 B7 04 
>000099E8: 02 87 57 06 00 00 00 
>000099EF: 29 02 
>000099F1: 05 91 6A 06 6C 06 B5 03 02 00 90 03 10 10 00 01 00 
>00009A02: 09 07 38 07 00 00 00 
>00009A09: 09 07 39 07 30 00 01 
>00009A10: 29 02 
>00009A12: 0A 82 
>00009A14: 12 06 B5 03 00 00 
>00009A1A: 05 91 C8 06 D3 06 B6 03 02 00 B8 03 10 10 00 02 00 
>00009A2B: 09 07 38 07 00 00 00 
>00009A32: 09 07 FD 02 00 00 01 
>00009A39: 09 07 F8 02 30 00 02 
>00009A40: 29 02 
>00009A42: 0A 82 
>00009A44: 12 86 B6 03 01 00 
>00009A4A: 17 02 
>00009A4C: 29 02 
>00009A4E: 07 94 C9 06 D5 06 B7 03 02 00 1A 04 10 11 00 00 FF 03 01 00 
>00009A62: 5B 07 00 00 01 3C 00 
>00009A69: 5B 07 01 00 01 3C 00 
>00009A70: 29 02 
>00009A72: 05 91 CA 06 D6 06 B8 03 02 00 CC 03 10 10 00 05 00 
>00009A83: 09 07 51 06 00 00 00 
>00009A8A: 09 07 52 06 00 00 01 
>00009A91: 09 07 53 06 30 00 02 
>00009A98: 09 07 54 06 00 00 03 
>00009A9F: 09 07 55 06 00 00 04 
>00009AA6: 09 07 56 06 00 00 05 
>00009AAD: 29 02 
>00009AAF: 29 02 
>00009AB1: 05 91 6E 06 D4 06 B9 03 02 00 E0 03 10 10 00 02 00 
>00009AC2: 09 07 38 07 00 00 00 
>00009AC9: 09 07 FD 02 00 00 01 
>00009AD0: 09 07 F8 02 30 00 02 
>00009AD7: 29 02 
>00009AD9: 0A 82 
>00009ADB: 12 86 B9 03 01 00 
>00009AE1: 17 02 
>00009AE3: 29 02 
>00009AE5: 07 94 CB 06 D7 06 BA 03 02 00 42 04 10 11 00 00 FF 03 01 00 
>00009AF9: 5B 07 00 00 01 3C 00 
>00009B00: 5B 07 01 00 01 3C 00 
>00009B07: 29 02 
>00009B09: 05 91 CC 06 D8 06 BB 03 02 00 F4 03 10 10 00 05 00 
>00009B1A: 09 07 51 06 00 00 00 
>00009B21: 09 07 52 06 00 00 01 
>00009B28: 09 07 53 06 30 00 02 
>00009B2F: 09 07 54 06 00 00 03 
>00009B36: 09 07 55 06 00 00 04 
>00009B3D: 09 07 56 06 00 00 05 
>00009B44: 29 02 
>00009B46: 29 02 
>00009B48: 29 02 
>00009B4A: 02 87 AA 00 00 00 00 
>00009B51: 29 02 
>00009B53: 05 91 EB 06 ED 06 BC 03 02 00 A4 03 10 10 00 01 00 
>00009B64: 09 07 38 07 30 00 00 
>00009B6B: 09 07 39 07 00 00 01 
>00009B72: 29 02 
>00009B74: 29 02 
>00009B76: 29 02 
>00009B78: 01 86 74 00 1E 04 
>00009B7E: 06 8E 42 04 44 04 BD 03 02 00 66 01 00 03 
>00009B8C: 29 02 
>00009B8E: 0A 82 
>00009B90: 12 06 BD 03 00 00 
>00009B96: 0A 82 
>00009B98: 12 06 29 01 02 00 
>00009B9E: 05 91 47 04 48 04 BE 03 02 00 7A 01 10 10 00 04 00 
>00009BAF: 09 07 49 04 30 00 00 
>00009BB6: 09 07 4B 04 00 00 02 
>00009BBD: 09 07 4D 04 00 00 04 
>00009BC4: 29 02 
>00009BC6: 29 02 
>00009BC8: 05 91 51 04 52 04 BF 03 02 00 6A 03 10 10 00 03 00 
>00009BD9: 09 07 38 07 00 00 00 
>00009BE0: 09 07 53 04 00 00 01 
>00009BE7: 09 07 54 04 00 00 02 
>00009BEE: 09 07 55 04 30 00 03 
>00009BF5: 29 02 
>00009BF7: 05 91 2A 06 2B 06 C0 03 02 00 C9 02 10 10 01 06 00 
>00009C08: 09 07 2C 06 30 00 01 
>00009C0F: 09 07 2F 06 00 00 06 
>00009C16: 09 07 2D 06 00 00 04 
>00009C1D: 09 07 2E 06 00 00 02 
>00009C24: 29 02 
>00009C26: 05 91 43 06 44 06 C1 03 02 00 B5 02 10 10 00 01 00 
>00009C37: 09 07 38 07 00 00 00 
>00009C3E: 09 07 39 07 30 00 01 
>00009C45: 29 02 
>00009C47: 05 91 61 04 62 04 C2 03 02 00 8E 01 10 10 00 01 00 
>00009C58: 09 07 FA 02 30 00 00 
>00009C5F: 09 07 F9 02 00 00 01 
>00009C66: 29 02 
>00009C68: 05 91 63 04 64 04 C3 03 02 00 A2 01 10 10 00 01 00 
>00009C79: 09 07 FA 02 30 00 00 
>00009C80: 09 07 F9 02 00 00 01 
>00009C87: 29 02 
>00009C89: 05 91 65 04 66 04 C4 03 02 00 B6 01 10 10 00 01 00 
>00009C9A: 09 07 FA 02 30 00 00 
>00009CA1: 09 07 F9 02 00 00 01 
>00009CA8: 29 02 
>00009CAA: 05 91 67 04 68 04 C5 03 02 00 CA 01 10 10 00 01 00 
>00009CBB: 09 07 FA 02 30 00 00 
>00009CC2: 09 07 F9 02 00 00 01 
>00009CC9: 29 02 
>00009CCB: 05 91 78 04 79 04 C6 03 02 00 DE 02 10 10 00 01 00 
>00009CDC: 09 07 FA 02 30 00 00 
>00009CE3: 09 07 F9 02 00 00 01 
>00009CEA: 29 02 
>00009CEC: 05 91 7A 04 7B 04 C7 03 02 00 F2 02 10 10 00 01 00 
>00009CFD: 09 07 FA 02 30 00 00 
>00009D04: 09 07 F9 02 00 00 01 
>00009D0B: 29 02 
>00009D0D: 05 91 7C 04 7D 04 C8 03 02 00 06 03 10 10 00 01 00 
>00009D1E: 09 07 FA 02 30 00 00 
>00009D25: 09 07 F9 02 00 00 01 
>00009D2C: 29 02 
>00009D2E: 05 91 7E 04 7F 04 C9 03 02 00 1A 03 10 10 00 01 00 
>00009D3F: 09 07 FA 02 30 00 00 
>00009D46: 09 07 F9 02 00 00 01 
>00009D4D: 29 02 
>00009D4F: 05 91 B9 04 BA 04 CA 03 02 00 2E 03 10 10 00 01 00 
>00009D60: 09 07 FA 02 30 00 00 
>00009D67: 09 07 F9 02 00 00 01 
>00009D6E: 29 02 
>00009D70: 05 91 45 06 46 06 CB 03 02 00 06 02 10 10 00 01 00 
>00009D81: 09 07 38 07 00 00 00 
>00009D88: 09 07 39 07 30 00 01 
>00009D8F: 29 02 
>00009D91: 05 91 56 04 57 04 CC 03 02 00 42 03 10 10 00 03 00 
>00009DA2: 09 07 A8 00 30 00 00 
>00009DA9: 09 07 58 04 00 00 01 
>00009DB0: 09 07 59 04 00 00 02 
>00009DB7: 09 07 5A 04 00 00 03 
>00009DBE: 29 02 
>00009DC0: 05 91 80 04 81 04 CD 03 02 00 DE 01 10 10 00 01 00 
>00009DD1: 09 07 FA 02 00 00 00 
>00009DD8: 09 07 39 07 30 00 01 
>00009DDF: 29 02 
>00009DE1: 05 91 01 07 02 07 CE 03 02 00 1A 02 10 10 00 04 00 
>00009DF2: 09 07 03 07 30 00 00 
>00009DF9: 09 07 04 07 00 00 01 
>00009E00: 09 07 05 07 00 00 02 
>00009E07: 09 07 06 07 00 00 03 
>00009E0E: 09 07 07 07 00 00 04 
>00009E15: 29 02 
>00009E17: 05 91 82 04 83 04 CF 03 02 00 F2 01 10 10 00 01 00 
>00009E28: 09 07 84 04 30 00 00 
>00009E2F: 09 07 85 04 00 00 01 
>00009E36: 29 02 
>00009E38: 05 91 69 04 6A 04 D0 03 02 00 8B 02 10 10 00 09 00 
>00009E49: 09 07 6F 04 30 00 00 
>00009E50: 09 07 70 04 00 00 03 
>00009E57: 09 07 71 04 00 00 04 
>00009E5E: 09 07 72 04 00 00 05 
>00009E65: 09 07 73 04 00 00 06 
>00009E6C: 09 07 A7 00 00 00 09 
>00009E73: 29 02 
>00009E75: 03 08 8F 04 AA 00 A3 04 
>00009E7D: 03 08 A4 04 AA 00 B8 04 
>00009E85: 02 87 57 06 00 00 00 
>00009E8C: 29 02 
>00009E8E: 05 91 6B 06 6C 06 D1 03 02 00 91 03 10 10 00 01 00 
>00009E9F: 09 07 38 07 00 00 00 
>00009EA6: 09 07 39 07 30 00 01 
>00009EAD: 29 02 
>00009EAF: 0A 82 
>00009EB1: 12 06 D1 03 00 00 
>00009EB7: 05 91 CD 06 D3 06 D2 03 02 00 B9 03 10 10 00 02 00 
>00009EC8: 09 07 38 07 00 00 00 
>00009ECF: 09 07 FD 02 00 00 01 
>00009ED6: 09 07 F8 02 30 00 02 
>00009EDD: 29 02 
>00009EDF: 0A 82 
>00009EE1: 12 86 D2 03 01 00 
>00009EE7: 17 02 
>00009EE9: 29 02 
>00009EEB: 07 94 CF 06 D5 06 D3 03 02 00 1C 04 10 11 00 00 FF 03 01 00 
>00009EFF: 5B 07 00 00 01 3C 00 
>00009F06: 5B 07 01 00 01 3C 00 
>00009F0D: 29 02 
>00009F0F: 05 91 D0 06 D6 06 D4 03 02 00 CD 03 10 10 00 05 00 
>00009F20: 09 07 51 06 00 00 00 
>00009F27: 09 07 52 06 00 00 01 
>00009F2E: 09 07 53 06 30 00 02 
>00009F35: 09 07 54 06 00 00 03 
>00009F3C: 09 07 55 06 00 00 04 
>00009F43: 09 07 56 06 00 00 05 
>00009F4A: 29 02 
>00009F4C: 29 02 
>00009F4E: 05 91 CE 06 D4 06 D5 03 02 00 E1 03 10 10 00 02 00 
>00009F5F: 09 07 38 07 00 00 00 
>00009F66: 09 07 FD 02 00 00 01 
>00009F6D: 09 07 F8 02 30 00 02 
>00009F74: 29 02 
>00009F76: 0A 82 
>00009F78: 12 86 D5 03 01 00 
>00009F7E: 17 02 
>00009F80: 29 02 
>00009F82: 07 94 D1 06 D7 06 D6 03 02 00 44 04 10 11 00 00 FF 03 01 00 
>00009F96: 5B 07 00 00 01 3C 00 
>00009F9D: 5B 07 01 00 01 3C 00 
>00009FA4: 29 02 
>00009FA6: 05 91 D2 06 D8 06 D7 03 02 00 F5 03 10 10 00 05 00 
>00009FB7: 09 07 51 06 00 00 00 
>00009FBE: 09 07 52 06 00 00 01 
>00009FC5: 09 07 53 06 30 00 02 
>00009FCC: 09 07 54 06 00 00 03 
>00009FD3: 09 07 55 06 00 00 04 
>00009FDA: 09 07 56 06 00 00 05 
>00009FE1: 29 02 
>00009FE3: 29 02 
>00009FE5: 29 02 
>00009FE7: 02 87 AA 00 00 00 00 
>00009FEE: 29 02 
>00009FF0: 05 91 EC 06 ED 06 D8 03 02 00 A5 03 10 10 00 01 00 
>0000A001: 09 07 38 07 30 00 00 
>0000A008: 09 07 39 07 00 00 01 
>0000A00F: 29 02 
>0000A011: 29 02 
>0000A013: 29 02 
>0000A015: 01 86 0F 01 39 03 
>0000A01B: 02 87 39 03 00 00 00 
>0000A022: 29 02 
>0000A024: 02 87 AA 00 00 00 00 
>0000A02B: 29 02 
>0000A02D: 0A 82 
>0000A02F: 12 06 1E 00 01 00 
>0000A035: 05 91 43 03 44 03 D9 03 02 00 30 00 10 10 00 01 00 
>0000A046: 09 07 FA 02 30 00 00 
>0000A04D: 09 07 F9 02 00 00 01 
>0000A054: 29 02 
>0000A056: 29 02 
>0000A058: 29 02 
>0000A05A: 01 86 0C 01 10 05 
>0000A060: 1E 82 
>0000A062: 12 06 0B 20 30 00 
>0000A068: 05 91 12 05 13 05 DA 03 02 00 3C 01 10 10 00 03 00 
>0000A079: 09 07 38 07 00 00 00 
>0000A080: 09 07 14 05 00 00 01 
>0000A087: 09 07 15 05 00 00 02 
>0000A08E: 09 07 A8 00 30 00 03 
>0000A095: 29 02 
>0000A097: 29 02 
>0000A099: 1E 82 
>0000A09B: 12 86 0B 20 30 00 
>0000A0A1: 17 02 
>0000A0A3: 29 02 
>0000A0A5: 05 91 12 05 16 05 DB 03 02 00 3C 01 10 10 00 03 00 
>0000A0B6: 09 07 38 07 00 00 00 
>0000A0BD: 09 07 14 05 00 00 01 
>0000A0C4: 09 07 15 05 00 00 02 
>0000A0CB: 09 07 A8 00 30 00 03 
>0000A0D2: 29 02 
>0000A0D4: 29 02 
>0000A0D6: 29 02 
>0000A0D8: 01 86 1D 01 1A 05 
>0000A0DE: 05 91 1C 05 1D 05 DC 03 02 00 79 04 10 10 00 02 00 
>0000A0EF: 09 07 22 05 00 00 00 
>0000A0F6: 09 07 23 05 00 00 01 
>0000A0FD: 09 07 24 05 30 00 02 
>0000A104: 29 02 
>0000A106: 05 91 1E 05 1F 05 DD 03 02 00 7A 04 10 10 00 03 00 
>0000A117: 09 07 25 05 30 00 00 
>0000A11E: 09 07 26 05 00 00 01 
>0000A125: 09 07 27 05 00 00 02 
>0000A12C: 09 07 28 05 00 00 03 
>0000A133: 29 02 
>0000A135: 05 91 20 05 21 05 DE 03 02 00 7B 04 10 10 00 03 00 
>0000A146: 09 07 25 05 30 00 00 
>0000A14D: 09 07 26 05 00 00 01 
>0000A154: 09 07 27 05 00 00 02 
>0000A15B: 09 07 28 05 00 00 03 
>0000A162: 29 02 
>0000A164: 29 02 
>0000A166: 01 86 23 01 29 05 
>0000A16C: 02 87 AA 00 00 00 00 
>0000A173: 29 02 
>0000A175: 0A 82 
>0000A177: 46 02 
>0000A179: 07 91 AA 00 AA 00 DF 03 02 00 01 00 00 20 00 FF 00 
>0000A18A: 5B 06 00 00 00 01 
>0000A190: 5B 06 01 00 00 01 
>0000A196: 29 02 
>0000A198: 29 02 
>0000A19A: 05 91 2B 05 2C 05 E0 03 02 00 02 00 10 10 00 01 00 
>0000A1AB: 09 07 FA 02 30 00 00 
>0000A1B2: 09 07 F9 02 00 00 01 
>0000A1B9: 29 02 
>0000A1BB: 02 87 AA 00 00 00 00 
>0000A1C2: 29 02 
>0000A1C4: 19 82 
>0000A1C6: 12 06 E0 03 00 00 
>0000A1CC: 05 91 2D 05 2E 05 E1 03 02 00 03 00 10 10 00 01 00 
>0000A1DD: 09 07 FA 02 30 00 00 
>0000A1E4: 09 07 F9 02 00 00 01 
>0000A1EB: 29 02 
>0000A1ED: 05 91 2F 05 30 05 E2 03 02 00 04 00 10 10 05 0B 00 
>0000A1FE: 09 07 31 05 30 00 05 
>0000A205: 09 07 32 05 00 00 0B 
>0000A20C: 29 02 
>0000A20E: 02 87 AA 00 00 00 00 
>0000A215: 29 02 
>0000A217: 02 87 33 05 00 00 00 
>0000A21E: 29 02 
>0000A220: 05 91 34 05 35 05 E3 03 02 00 05 00 10 10 00 01 00 
>0000A231: 09 07 F9 02 30 00 01 
>0000A238: 09 07 FA 02 00 00 00 
>0000A23F: 29 02 
>0000A241: 05 91 36 05 37 05 E4 03 02 00 0A 00 10 10 00 01 00 
>0000A252: 09 07 F9 02 00 00 01 
>0000A259: 09 07 FA 02 30 00 00 
>0000A260: 29 02 
>0000A262: 05 91 38 05 39 05 E5 03 02 00 12 00 10 10 00 01 00 
>0000A273: 09 07 F9 02 00 00 01 
>0000A27A: 09 07 FA 02 30 00 00 
>0000A281: 29 02 
>0000A283: 02 87 AA 00 00 00 00 
>0000A28A: 29 02 
>0000A28C: 05 91 3A 05 3B 05 E6 03 02 00 1D 00 10 10 00 01 00 
>0000A29D: 09 07 3F 05 00 00 01 
>0000A2A4: 09 07 3E 05 30 00 00 
>0000A2AB: 29 02 
>0000A2AD: 05 91 3C 05 3D 05 E7 03 02 00 1E 00 10 10 00 01 00 
>0000A2BE: 09 07 3F 05 00 00 01 
>0000A2C5: 09 07 3E 05 30 00 00 
>0000A2CC: 29 02 
>0000A2CE: 29 02 
>0000A2D0: 29 02 
>0000A2D2: 01 86 1E 01 40 05 
>0000A2D8: 02 87 AA 00 00 00 00 
>0000A2DF: 29 02 
>0000A2E1: 05 91 42 05 43 05 E8 03 02 00 7C 04 10 10 00 01 00 
>0000A2F2: 09 07 F9 02 00 00 01 
>0000A2F9: 09 07 FA 02 30 00 00 
>0000A300: 29 02 
>0000A302: 05 91 44 05 45 05 E9 03 02 00 7D 04 10 10 00 01 00 
>0000A313: 09 07 F9 02 00 00 01 
>0000A31A: 09 07 FA 02 30 00 00 
>0000A321: 29 02 
>0000A323: 05 91 46 05 47 05 EA 03 02 00 7D 03 10 10 00 01 00 
>0000A334: 09 07 FA 02 30 00 00 
>0000A33B: 09 07 4B 04 00 00 01 
>0000A342: 29 02 
>0000A344: 05 91 48 05 49 05 EB 03 02 00 80 04 10 10 00 01 00 
>0000A355: 09 07 FA 02 00 00 00 
>0000A35C: 09 07 F9 02 30 00 01 
>0000A363: 29 02 
>0000A365: 05 91 17 05 18 05 EC 03 02 00 6F 03 10 10 01 02 00 
>0000A376: 09 07 39 07 30 00 01 
>0000A37D: 09 07 38 07 00 00 02 
>0000A384: 29 02 
>0000A386: 05 91 37 03 38 03 ED 03 02 00 2C 00 10 10 00 01 00 
>0000A397: 09 07 FA 02 30 00 00 
>0000A39E: 09 07 F9 02 00 00 01 
>0000A3A5: 29 02 
>0000A3A7: 05 91 4F 07 50 07 EE 03 02 00 91 04 10 10 00 01 00 
>0000A3B8: 09 07 FA 02 00 00 00 
>0000A3BF: 09 07 F9 02 30 00 01 
>0000A3C6: 29 02 
>0000A3C8: 0A 82 
>0000A3CA: 12 06 ED 03 01 00 
>0000A3D0: 05 91 3B 03 3C 03 EF 03 02 00 37 00 10 10 00 01 00 
>0000A3E1: 09 07 FA 02 00 00 00 
>0000A3E8: 09 07 F9 02 30 00 01 
>0000A3EF: 29 02 
>0000A3F1: 29 02 
>0000A3F3: 0A 82 
>0000A3F5: 12 06 ED 03 01 00 
>0000A3FB: 05 91 3D 03 3E 03 F0 03 02 00 2A 00 10 10 00 01 00 
>0000A40C: 09 07 FA 02 00 00 00 
>0000A413: 09 07 F9 02 30 00 01 
>0000A41A: 29 02 
>0000A41C: 29 02 
>0000A41E: 0A 82 
>0000A420: 12 06 ED 03 01 00 
>0000A426: 05 91 3F 03 40 03 F1 03 02 00 2B 00 10 10 00 01 00 
>0000A437: 09 07 FA 02 00 00 00 
>0000A43E: 09 07 F9 02 30 00 01 
>0000A445: 29 02 
>0000A447: 29 02 
>0000A449: 0A 82 
>0000A44B: 12 06 ED 03 01 00 
>0000A451: 05 91 41 03 42 03 F2 03 02 00 2F 00 10 10 00 01 00 
>0000A462: 09 07 FA 02 00 00 00 
>0000A469: 09 07 F9 02 30 00 01 
>0000A470: 29 02 
>0000A472: 29 02 
>0000A474: 0A 82 
>0000A476: 12 06 ED 03 01 00 
>0000A47C: 05 91 4A 05 4B 05 F3 03 02 00 2D 00 10 10 00 01 00 
>0000A48D: 09 07 FA 02 30 00 00 
>0000A494: 09 07 F9 02 00 00 01 
>0000A49B: 29 02 
>0000A49D: 29 02 
>0000A49F: 0A 82 
>0000A4A1: 12 06 ED 03 01 00 
>0000A4A7: 05 91 54 05 55 05 F4 03 02 00 7F 04 10 10 00 02 00 
>0000A4B8: 09 07 A8 00 30 00 00 
>0000A4BF: 09 07 F9 02 00 00 01 
>0000A4C6: 09 07 FA 02 00 00 02 
>0000A4CD: 29 02 
>0000A4CF: 29 02 
>0000A4D1: 05 91 50 05 51 05 F5 03 02 00 8D 04 10 10 00 01 00 
>0000A4E2: 09 07 FA 02 00 00 00 
>0000A4E9: 09 07 F9 02 30 00 01 
>0000A4F0: 29 02 
>0000A4F2: 05 91 4E 05 4F 05 F6 03 02 00 8E 04 10 10 00 01 00 
>0000A503: 09 07 FA 02 00 00 00 
>0000A50A: 09 07 F9 02 30 00 01 
>0000A511: 29 02 
>0000A513: 05 91 52 05 53 05 F7 03 02 00 8F 04 10 10 00 01 00 
>0000A524: 09 07 F9 02 00 00 01 
>0000A52B: 09 07 FA 02 30 00 00 
>0000A532: 29 02 
>0000A534: 05 91 4F 06 50 06 F8 03 02 00 43 01 10 10 00 01 00 
>0000A545: 09 07 38 07 30 00 00 
>0000A54C: 09 07 39 07 00 00 01 
>0000A553: 29 02 
>0000A555: 05 91 58 05 59 05 F9 03 02 00 49 01 10 10 00 01 00 
>0000A566: 09 07 39 07 00 00 01 
>0000A56D: 09 07 38 07 30 00 00 
>0000A574: 29 02 
>0000A576: 0F 0F 1F 07 20 07 FA 03 00 00 FF FF 00 22 01 
>0000A585: 05 91 56 05 57 05 FB 03 02 00 81 04 10 10 00 01 00 
>0000A596: 09 07 F9 02 00 00 01 
>0000A59D: 09 07 FA 02 30 00 00 
>0000A5A4: 29 02 
>0000A5A6: 05 91 5A 05 5B 05 FC 03 02 00 82 04 10 10 00 02 00 
>0000A5B7: 09 07 50 04 30 00 00 
>0000A5BE: 09 07 39 07 00 00 01 
>0000A5C5: 09 07 FA 02 00 00 02 
>0000A5CC: 29 02 
>0000A5CE: 0A 82 
>0000A5D0: 14 08 FC 03 01 00 02 00 
>0000A5D8: 05 91 71 05 72 05 FD 03 02 00 86 04 10 10 00 01 00 
>0000A5E9: 09 07 73 05 30 00 00 
>0000A5F0: 09 07 74 05 00 00 01 
>0000A5F7: 29 02 
>0000A5F9: 05 91 75 05 76 05 FE 03 02 00 87 04 10 10 00 02 00 
>0000A60A: 09 07 50 04 30 00 00 
>0000A611: 09 07 39 07 00 00 01 
>0000A618: 09 07 FA 02 00 00 02 
>0000A61F: 29 02 
>0000A621: 05 91 5C 05 5D 05 FF 03 02 00 83 04 10 10 00 02 00 
>0000A632: 09 07 50 04 30 00 00 
>0000A639: 09 07 39 07 00 00 01 
>0000A640: 09 07 5E 05 00 00 02 
>0000A647: 29 02 
>0000A649: 0A 82 
>0000A64B: 14 08 FF 03 01 00 02 00 
>0000A653: 05 91 5F 05 60 05 00 04 02 00 84 04 10 10 00 04 00 
>0000A664: 09 07 50 04 30 00 04 
>0000A66B: 09 07 61 05 00 00 00 
>0000A672: 09 07 62 05 00 00 01 
>0000A679: 09 07 63 05 00 00 02 
>0000A680: 09 07 64 05 00 00 03 
>0000A687: 29 02 
>0000A689: 05 91 65 05 66 05 01 04 02 00 85 04 10 10 00 63 00 
>0000A69A: 09 07 50 04 30 00 63 
>0000A6A1: 09 07 67 05 00 00 00 
>0000A6A8: 09 07 68 05 00 00 01 
>0000A6AF: 09 07 69 05 00 00 02 
>0000A6B6: 09 07 6A 05 00 00 03 
>0000A6BD: 09 07 6B 05 00 00 04 
>0000A6C4: 09 07 6C 05 00 00 05 
>0000A6CB: 09 07 6D 05 00 00 06 
>0000A6D2: 09 07 6E 05 00 00 07 
>0000A6D9: 09 07 6F 05 00 00 08 
>0000A6E0: 09 07 70 05 00 00 09 
>0000A6E7: 29 02 
>0000A6E9: 29 02 
>0000A6EB: 29 02 
>0000A6ED: 29 02 
>0000A6EF: 01 86 22 01 1F 07 
>0000A6F5: 02 87 21 07 00 00 00 
>0000A6FC: 29 02 
>0000A6FE: 05 91 22 07 23 07 02 04 02 00 5B 04 10 10 00 01 00 
>0000A70F: 09 07 38 07 00 00 00 
>0000A716: 09 07 39 07 30 00 01 
>0000A71D: 29 02 
>0000A71F: 0A 82 
>0000A721: 12 06 02 04 00 00 
>0000A727: 05 91 24 07 25 07 03 04 02 00 5A 04 10 10 00 01 00 
>0000A738: 09 07 38 07 30 00 00 
>0000A73F: 09 07 39 07 00 00 01 
>0000A746: 29 02 
>0000A748: 0A 82 
>0000A74A: 12 06 03 04 00 00 
>0000A750: 07 94 26 07 27 07 04 04 02 00 5C 04 10 11 00 00 FF 03 01 00 
>0000A764: 5B 07 00 00 01 28 00 
>0000A76B: 5B 07 01 00 01 28 00 
>0000A772: 29 02 
>0000A774: 05 91 28 07 29 07 05 04 02 00 5E 04 10 10 00 05 00 
>0000A785: 09 07 51 06 00 00 00 
>0000A78C: 09 07 52 06 00 00 01 
>0000A793: 09 07 53 06 30 00 02 
>0000A79A: 09 07 54 06 00 00 03 
>0000A7A1: 09 07 55 06 00 00 04 
>0000A7A8: 09 07 56 06 00 00 05 
>0000A7AF: 29 02 
>0000A7B1: 29 02 
>0000A7B3: 29 02 
>0000A7B5: 05 91 2A 07 2B 07 06 04 02 00 5F 04 10 10 00 01 00 
>0000A7C6: 09 07 38 07 00 00 00 
>0000A7CD: 09 07 39 07 30 00 01 
>0000A7D4: 29 02 
>0000A7D6: 02 87 F7 02 00 00 00 
>0000A7DD: 29 02 
>0000A7DF: 02 87 2C 07 00 00 00 
>0000A7E6: 29 02 
>0000A7E8: 05 91 2D 07 2E 07 07 04 02 00 64 04 10 10 00 01 00 
>0000A7F9: 09 07 38 07 00 00 00 
>0000A800: 09 07 39 07 30 00 01 
>0000A807: 29 02 
>0000A809: 0A 82 
>0000A80B: 12 06 07 04 00 00 
>0000A811: 05 91 2F 07 30 07 08 04 02 00 60 04 10 10 00 01 00 
>0000A822: 09 07 38 07 30 00 00 
>0000A829: 09 07 39 07 00 00 01 
>0000A830: 29 02 
>0000A832: 0A 82 
>0000A834: 12 06 08 04 00 00 
>0000A83A: 07 94 31 07 32 07 09 04 02 00 61 04 10 11 00 00 FF 03 01 00 
>0000A84E: 5B 07 00 00 01 28 00 
>0000A855: 5B 07 01 00 01 28 00 
>0000A85C: 29 02 
>0000A85E: 05 91 33 07 34 07 0A 04 02 00 63 04 10 10 00 05 00 
>0000A86F: 09 07 51 06 00 00 00 
>0000A876: 09 07 52 06 00 00 01 
>0000A87D: 09 07 53 06 30 00 02 
>0000A884: 09 07 54 06 00 00 03 
>0000A88B: 09 07 55 06 00 00 04 
>0000A892: 09 07 56 06 00 00 05 
>0000A899: 29 02 
>0000A89B: 29 02 
>0000A89D: 29 02 
>0000A89F: 05 91 35 07 36 07 0B 04 02 00 65 04 10 10 00 01 00 
>0000A8B0: 09 07 38 07 00 00 00 
>0000A8B7: 09 07 39 07 30 00 01 
>0000A8BE: 29 02 
>0000A8C0: 02 87 F7 02 00 00 00 
>0000A8C7: 29 02 
>0000A8C9: 02 87 37 07 00 00 00 
>0000A8D0: 29 02 
>0000A8D2: 02 87 F7 02 00 00 00 
>0000A8D9: 29 02 
>0000A8DB: 05 91 58 06 6C 06 0C 04 02 00 7E 03 10 10 00 01 00 
>0000A8EC: 09 07 38 07 00 00 00 
>0000A8F3: 09 07 39 07 30 00 01 
>0000A8FA: 29 02 
>0000A8FC: 0A 82 
>0000A8FE: 12 06 0C 04 00 00 
>0000A904: 05 91 3A 07 4E 07 0D 04 02 00 46 04 10 10 00 01 00 
>0000A915: 09 07 38 07 30 00 00 
>0000A91C: 09 07 39 07 00 00 01 
>0000A923: 29 02 
>0000A925: 29 02 
>0000A927: 05 91 59 06 6C 06 0E 04 02 00 7F 03 10 10 00 01 00 
>0000A938: 09 07 38 07 00 00 00 
>0000A93F: 09 07 39 07 30 00 01 
>0000A946: 29 02 
>0000A948: 0A 82 
>0000A94A: 12 06 0E 04 00 00 
>0000A950: 05 91 3B 07 4E 07 0F 04 02 00 47 04 10 10 00 01 00 
>0000A961: 09 07 38 07 30 00 00 
>0000A968: 09 07 39 07 00 00 01 
>0000A96F: 29 02 
>0000A971: 29 02 
>0000A973: 05 91 5A 06 6C 06 10 04 02 00 80 03 10 10 00 01 00 
>0000A984: 09 07 38 07 00 00 00 
>0000A98B: 09 07 39 07 30 00 01 
>0000A992: 29 02 
>0000A994: 0A 82 
>0000A996: 12 06 10 04 00 00 
>0000A99C: 05 91 3C 07 4E 07 11 04 02 00 48 04 10 10 00 01 00 
>0000A9AD: 09 07 38 07 30 00 00 
>0000A9B4: 09 07 39 07 00 00 01 
>0000A9BB: 29 02 
>0000A9BD: 29 02 
>0000A9BF: 05 91 5B 06 6C 06 12 04 02 00 81 03 10 10 00 01 00 
>0000A9D0: 09 07 38 07 00 00 00 
>0000A9D7: 09 07 39 07 30 00 01 
>0000A9DE: 29 02 
>0000A9E0: 0A 82 
>0000A9E2: 12 06 12 04 00 00 
>0000A9E8: 05 91 3D 07 4E 07 13 04 02 00 49 04 10 10 00 01 00 
>0000A9F9: 09 07 38 07 30 00 00 
>0000AA00: 09 07 39 07 00 00 01 
>0000AA07: 29 02 
>0000AA09: 29 02 
>0000AA0B: 05 91 5C 06 6C 06 14 04 02 00 82 03 10 10 00 01 00 
>0000AA1C: 09 07 38 07 00 00 00 
>0000AA23: 09 07 39 07 30 00 01 
>0000AA2A: 29 02 
>0000AA2C: 0A 82 
>0000AA2E: 12 06 14 04 00 00 
>0000AA34: 05 91 3E 07 4E 07 15 04 02 00 4A 04 10 10 00 01 00 
>0000AA45: 09 07 38 07 30 00 00 
>0000AA4C: 09 07 39 07 00 00 01 
>0000AA53: 29 02 
>0000AA55: 29 02 
>0000AA57: 05 91 5D 06 6C 06 16 04 02 00 83 03 10 10 00 01 00 
>0000AA68: 09 07 38 07 00 00 00 
>0000AA6F: 09 07 39 07 30 00 01 
>0000AA76: 29 02 
>0000AA78: 0A 82 
>0000AA7A: 12 06 16 04 00 00 
>0000AA80: 05 91 3F 07 4E 07 17 04 02 00 4B 04 10 10 00 01 00 
>0000AA91: 09 07 38 07 30 00 00 
>0000AA98: 09 07 39 07 00 00 01 
>0000AA9F: 29 02 
>0000AAA1: 29 02 
>0000AAA3: 05 91 5E 06 6C 06 18 04 02 00 84 03 10 10 00 01 00 
>0000AAB4: 09 07 38 07 00 00 00 
>0000AABB: 09 07 39 07 30 00 01 
>0000AAC2: 29 02 
>0000AAC4: 0A 82 
>0000AAC6: 12 06 18 04 00 00 
>0000AACC: 05 91 40 07 4E 07 19 04 02 00 4C 04 10 10 00 01 00 
>0000AADD: 09 07 38 07 30 00 00 
>0000AAE4: 09 07 39 07 00 00 01 
>0000AAEB: 29 02 
>0000AAED: 29 02 
>0000AAEF: 05 91 5F 06 6C 06 1A 04 02 00 85 03 10 10 00 01 00 
>0000AB00: 09 07 38 07 00 00 00 
>0000AB07: 09 07 39 07 30 00 01 
>0000AB0E: 29 02 
>0000AB10: 0A 82 
>0000AB12: 12 06 1A 04 00 00 
>0000AB18: 05 91 41 07 4E 07 1B 04 02 00 4D 04 10 10 00 01 00 
>0000AB29: 09 07 38 07 30 00 00 
>0000AB30: 09 07 39 07 00 00 01 
>0000AB37: 29 02 
>0000AB39: 29 02 
>0000AB3B: 05 91 60 06 6C 06 1C 04 02 00 86 03 10 10 00 01 00 
>0000AB4C: 09 07 38 07 00 00 00 
>0000AB53: 09 07 39 07 30 00 01 
>0000AB5A: 29 02 
>0000AB5C: 0A 82 
>0000AB5E: 12 06 1C 04 00 00 
>0000AB64: 05 91 42 07 4E 07 1D 04 02 00 4E 04 10 10 00 01 00 
>0000AB75: 09 07 38 07 30 00 00 
>0000AB7C: 09 07 39 07 00 00 01 
>0000AB83: 29 02 
>0000AB85: 29 02 
>0000AB87: 05 91 61 06 6C 06 1E 04 02 00 87 03 10 10 00 01 00 
>0000AB98: 09 07 38 07 00 00 00 
>0000AB9F: 09 07 39 07 30 00 01 
>0000ABA6: 29 02 
>0000ABA8: 0A 82 
>0000ABAA: 12 06 1E 04 00 00 
>0000ABB0: 05 91 43 07 4E 07 1F 04 02 00 4F 04 10 10 00 01 00 
>0000ABC1: 09 07 38 07 30 00 00 
>0000ABC8: 09 07 39 07 00 00 01 
>0000ABCF: 29 02 
>0000ABD1: 29 02 
>0000ABD3: 05 91 62 06 6C 06 20 04 02 00 88 03 10 10 00 01 00 
>0000ABE4: 09 07 38 07 00 00 00 
>0000ABEB: 09 07 39 07 30 00 01 
>0000ABF2: 29 02 
>0000ABF4: 0A 82 
>0000ABF6: 12 06 20 04 00 00 
>0000ABFC: 05 91 44 07 4E 07 21 04 02 00 50 04 10 10 00 01 00 
>0000AC0D: 09 07 38 07 30 00 00 
>0000AC14: 09 07 39 07 00 00 01 
>0000AC1B: 29 02 
>0000AC1D: 29 02 
>0000AC1F: 05 91 63 06 6C 06 22 04 02 00 89 03 10 10 00 01 00 
>0000AC30: 09 07 38 07 00 00 00 
>0000AC37: 09 07 39 07 30 00 01 
>0000AC3E: 29 02 
>0000AC40: 0A 82 
>0000AC42: 12 06 22 04 00 00 
>0000AC48: 05 91 45 07 4E 07 23 04 02 00 51 04 10 10 00 01 00 
>0000AC59: 09 07 38 07 30 00 00 
>0000AC60: 09 07 39 07 00 00 01 
>0000AC67: 29 02 
>0000AC69: 29 02 
>0000AC6B: 05 91 64 06 6C 06 24 04 02 00 8A 03 10 10 00 01 00 
>0000AC7C: 09 07 38 07 00 00 00 
>0000AC83: 09 07 39 07 30 00 01 
>0000AC8A: 29 02 
>0000AC8C: 0A 82 
>0000AC8E: 12 06 24 04 00 00 
>0000AC94: 05 91 46 07 4E 07 25 04 02 00 52 04 10 10 00 01 00 
>0000ACA5: 09 07 38 07 30 00 00 
>0000ACAC: 09 07 39 07 00 00 01 
>0000ACB3: 29 02 
>0000ACB5: 29 02 
>0000ACB7: 05 91 65 06 6C 06 26 04 02 00 8B 03 10 10 00 01 00 
>0000ACC8: 09 07 38 07 00 00 00 
>0000ACCF: 09 07 39 07 30 00 01 
>0000ACD6: 29 02 
>0000ACD8: 0A 82 
>0000ACDA: 12 06 26 04 00 00 
>0000ACE0: 05 91 47 07 4E 07 27 04 02 00 53 04 10 10 00 01 00 
>0000ACF1: 09 07 38 07 30 00 00 
>0000ACF8: 09 07 39 07 00 00 01 
>0000ACFF: 29 02 
>0000AD01: 29 02 
>0000AD03: 05 91 66 06 6C 06 28 04 02 00 8C 03 10 10 00 01 00 
>0000AD14: 09 07 38 07 00 00 00 
>0000AD1B: 09 07 39 07 30 00 01 
>0000AD22: 29 02 
>0000AD24: 0A 82 
>0000AD26: 12 06 28 04 00 00 
>0000AD2C: 05 91 48 07 4E 07 29 04 02 00 54 04 10 10 00 01 00 
>0000AD3D: 09 07 38 07 30 00 00 
>0000AD44: 09 07 39 07 00 00 01 
>0000AD4B: 29 02 
>0000AD4D: 29 02 
>0000AD4F: 05 91 67 06 6C 06 2A 04 02 00 8D 03 10 10 00 01 00 
>0000AD60: 09 07 38 07 00 00 00 
>0000AD67: 09 07 39 07 30 00 01 
>0000AD6E: 29 02 
>0000AD70: 0A 82 
>0000AD72: 12 06 2A 04 00 00 
>0000AD78: 05 91 49 07 4E 07 2B 04 02 00 55 04 10 10 00 01 00 
>0000AD89: 09 07 38 07 30 00 00 
>0000AD90: 09 07 39 07 00 00 01 
>0000AD97: 29 02 
>0000AD99: 29 02 
>0000AD9B: 05 91 68 06 6C 06 2C 04 02 00 8E 03 10 10 00 01 00 
>0000ADAC: 09 07 38 07 00 00 00 
>0000ADB3: 09 07 39 07 30 00 01 
>0000ADBA: 29 02 
>0000ADBC: 0A 82 
>0000ADBE: 12 06 2C 04 00 00 
>0000ADC4: 05 91 4A 07 4E 07 2D 04 02 00 56 04 10 10 00 01 00 
>0000ADD5: 09 07 38 07 30 00 00 
>0000ADDC: 09 07 39 07 00 00 01 
>0000ADE3: 29 02 
>0000ADE5: 29 02 
>0000ADE7: 05 91 69 06 6C 06 2E 04 02 00 8F 03 10 10 00 01 00 
>0000ADF8: 09 07 38 07 00 00 00 
>0000ADFF: 09 07 39 07 30 00 01 
>0000AE06: 29 02 
>0000AE08: 0A 82 
>0000AE0A: 12 06 2E 04 00 00 
>0000AE10: 05 91 4B 07 4E 07 2F 04 02 00 57 04 10 10 00 01 00 
>0000AE21: 09 07 38 07 30 00 00 
>0000AE28: 09 07 39 07 00 00 01 
>0000AE2F: 29 02 
>0000AE31: 29 02 
>0000AE33: 05 91 6A 06 6C 06 30 04 02 00 90 03 10 10 00 01 00 
>0000AE44: 09 07 38 07 00 00 00 
>0000AE4B: 09 07 39 07 30 00 01 
>0000AE52: 29 02 
>0000AE54: 0A 82 
>0000AE56: 12 06 30 04 00 00 
>0000AE5C: 05 91 4C 07 4E 07 31 04 02 00 58 04 10 10 00 01 00 
>0000AE6D: 09 07 38 07 30 00 00 
>0000AE74: 09 07 39 07 00 00 01 
>0000AE7B: 29 02 
>0000AE7D: 29 02 
>0000AE7F: 05 91 6B 06 6C 06 32 04 02 00 91 03 10 10 00 01 00 
>0000AE90: 09 07 38 07 00 00 00 
>0000AE97: 09 07 39 07 30 00 01 
>0000AE9E: 29 02 
>0000AEA0: 0A 82 
>0000AEA2: 12 06 32 04 00 00 
>0000AEA8: 05 91 4D 07 4E 07 33 04 02 00 59 04 10 10 00 01 00 
>0000AEB9: 09 07 38 07 30 00 00 
>0000AEC0: 09 07 39 07 00 00 01 
>0000AEC7: 29 02 
>0000AEC9: 29 02 
>0000AECB: 29 02 
>0000AECD: 01 86 24 00 77 08 
>0000AED3: 02 87 77 08 00 00 00 
>0000AEDA: 29 02 
>0000AEDC: 02 87 AA 00 00 00 00 
>0000AEE3: 29 02 
>0000AEE5: 06 8E 7A 08 79 08 34 04 01 00 C3 01 10 00 
>0000AEF3: 29 02 
>0000AEF5: 06 8E 7B 08 79 08 35 04 01 00 C2 01 10 03 
>0000AF03: 29 02 
>0000AF05: 29 02 
>0000AF07: 01 86 0C 00 02 00 
>0000AF0D: 02 87 62 07 00 00 00 
>0000AF14: 29 02 
>0000AF16: 02 87 04 00 00 00 00 
>0000AF1D: 29 02 
>0000AF1F: 02 87 62 07 00 00 00 
>0000AF26: 29 02 
>0000AF28: 02 87 AA 00 00 00 00 
>0000AF2F: 29 02 
>0000AF31: 05 91 07 00 09 00 36 04 0C 00 84 00 00 10 01 02 00 
>0000AF42: 09 07 0A 00 00 00 01 
>0000AF49: 09 07 0B 00 30 00 02 
>0000AF50: 29 02 
>0000AF52: 19 82 
>0000AF54: 12 86 36 04 01 00 
>0000AF5A: 17 02 
>0000AF5C: 29 02 
>0000AF5E: 1C 90 0C 00 0E 00 01 06 0C 00 86 00 04 06 0F 00 
>0000AF6E: 29 02 
>0000AF70: 29 02 
>0000AF72: 19 82 
>0000AF74: 12 86 36 04 01 00 
>0000AF7A: 17 02 
>0000AF7C: 29 02 
>0000AF7E: 1C 90 0F 00 11 00 02 06 0C 00 A6 00 04 06 0F 00 
>0000AF8E: 29 02 
>0000AF90: 29 02 
>0000AF92: 19 82 
>0000AF94: 12 86 36 04 01 00 
>0000AF9A: 17 02 
>0000AF9C: 29 02 
>0000AF9E: 1C 90 12 00 14 00 03 06 0C 00 C6 00 04 06 0F 00 
>0000AFAE: 29 02 
>0000AFB0: 29 02 
>0000AFB2: 02 87 AA 00 00 00 00 
>0000AFB9: 29 02 
>0000AFBB: 05 91 15 00 17 00 37 04 0C 00 E6 00 00 10 00 01 00 
>0000AFCC: 09 07 A6 00 30 00 01 
>0000AFD3: 09 07 A7 00 00 00 00 
>0000AFDA: 29 02 
>0000AFDC: 0A 82 
>0000AFDE: 12 06 37 04 00 00 
>0000AFE4: 05 91 18 00 1A 00 38 04 0C 00 E7 00 00 10 01 05 00 
>0000AFF5: 09 07 0A 00 00 00 01 
>0000AFFC: 09 07 0B 00 30 00 02 
>0000B003: 09 07 1B 00 00 00 05 
>0000B00A: 29 02 
>0000B00C: 29 02 
>0000B00E: 19 82 
>0000B010: 12 86 38 04 01 00 
>0000B016: 17 02 
>0000B018: 29 02 
>0000B01A: 0A 82 
>0000B01C: 12 06 37 04 00 00 
>0000B022: 1C 90 1C 00 1E 00 04 06 0C 00 EA 00 04 02 28 00 
>0000B032: 29 02 
>0000B034: 29 02 
>0000B036: 29 02 
>0000B038: 19 82 
>0000B03A: 12 86 38 04 01 00 
>0000B040: 17 02 
>0000B042: 29 02 
>0000B044: 0A 82 
>0000B046: 12 06 37 04 00 00 
>0000B04C: 1C 90 1F 00 21 00 05 06 0C 00 3A 01 04 02 28 00 
>0000B05C: 29 02 
>0000B05E: 29 02 
>0000B060: 29 02 
>0000B062: 19 82 
>0000B064: 12 86 38 04 01 00 
>0000B06A: 17 02 
>0000B06C: 29 02 
>0000B06E: 0A 82 
>0000B070: 12 06 37 04 00 00 
>0000B076: 07 91 22 00 24 00 39 04 0C 00 E8 00 00 10 00 80 01 
>0000B087: 5B 06 00 00 00 50 
>0000B08D: 5B 06 01 00 00 50 
>0000B093: 29 02 
>0000B095: 29 02 
>0000B097: 29 02 
>0000B099: 02 87 AA 00 00 00 00 
>0000B0A0: 29 02 
>0000B0A2: 02 87 62 07 00 00 00 
>0000B0A9: 29 02 
>0000B0AB: 02 87 05 00 00 00 00 
>0000B0B2: 29 02 
>0000B0B4: 02 87 62 07 00 00 00 
>0000B0BB: 29 02 
>0000B0BD: 02 87 AA 00 00 00 00 
>0000B0C4: 29 02 
>0000B0C6: 0A 82 
>0000B0C8: 12 06 4F 05 01 00 
>0000B0CE: 03 08 25 00 26 00 28 00 
>0000B0D6: 29 02 
>0000B0D8: 0A 82 
>0000B0DA: 12 06 4F 05 00 00 
>0000B0E0: 03 08 25 00 26 00 27 00 
>0000B0E8: 29 02 
>0000B0EA: 19 82 
>0000B0EC: 12 06 50 05 00 00 
>0000B0F2: 05 91 08 00 09 00 3A 04 0C 00 8A 01 00 10 01 02 00 
>0000B103: 09 07 0A 00 00 00 01 
>0000B10A: 09 07 0B 00 30 00 02 
>0000B111: 29 02 
>0000B113: 29 02 
>0000B115: 19 82 
>0000B117: 12 86 3A 04 01 00 
>0000B11D: 17 02 
>0000B11F: 12 06 4F 05 00 00 
>0000B125: 16 02 
>0000B127: 29 02 
>0000B129: 1C 90 0D 00 0E 00 06 06 0C 00 8C 01 04 06 0F 00 
>0000B139: 29 02 
>0000B13B: 29 02 
>0000B13D: 19 82 
>0000B13F: 12 86 3A 04 01 00 
>0000B145: 17 02 
>0000B147: 12 06 4F 05 00 00 
>0000B14D: 16 02 
>0000B14F: 29 02 
>0000B151: 1C 90 10 00 11 00 07 06 0C 00 AC 01 04 06 0F 00 
>0000B161: 29 02 
>0000B163: 29 02 
>0000B165: 19 82 
>0000B167: 12 86 3A 04 01 00 
>0000B16D: 17 02 
>0000B16F: 12 06 4F 05 00 00 
>0000B175: 16 02 
>0000B177: 29 02 
>0000B179: 1C 90 13 00 14 00 08 06 0C 00 CC 01 04 06 0F 00 
>0000B189: 29 02 
>0000B18B: 29 02 
>0000B18D: 02 87 AA 00 00 00 00 
>0000B194: 29 02 
>0000B196: 19 82 
>0000B198: 12 06 4F 05 00 00 
>0000B19E: 05 91 16 00 17 00 3B 04 0C 00 EC 01 00 10 00 01 00 
>0000B1AF: 09 07 A6 00 00 00 01 
>0000B1B6: 09 07 A7 00 30 00 00 
>0000B1BD: 29 02 
>0000B1BF: 29 02 
>0000B1C1: 19 82 
>0000B1C3: 12 06 4F 05 00 00 
>0000B1C9: 0A 82 
>0000B1CB: 12 06 3B 04 00 00 
>0000B1D1: 05 91 19 00 1A 00 3C 04 0C 00 ED 01 00 10 01 05 00 
>0000B1E2: 09 07 0A 00 00 00 01 
>0000B1E9: 09 07 0B 00 30 00 02 
>0000B1F0: 09 07 1B 00 00 00 05 
>0000B1F7: 29 02 
>0000B1F9: 29 02 
>0000B1FB: 29 02 
>0000B1FD: 19 82 
>0000B1FF: 12 86 3C 04 01 00 
>0000B205: 17 02 
>0000B207: 12 06 4F 05 00 00 
>0000B20D: 16 02 
>0000B20F: 29 02 
>0000B211: 0A 82 
>0000B213: 12 06 3B 04 00 00 
>0000B219: 1C 90 1D 00 1E 00 09 06 0C 00 F0 01 04 02 28 00 
>0000B229: 29 02 
>0000B22B: 29 02 
>0000B22D: 29 02 
>0000B22F: 19 82 
>0000B231: 12 86 3C 04 01 00 
>0000B237: 17 02 
>0000B239: 12 06 4F 05 00 00 
>0000B23F: 16 02 
>0000B241: 29 02 
>0000B243: 0A 82 
>0000B245: 12 06 3B 04 00 00 
>0000B24B: 1C 90 20 00 21 00 0A 06 0C 00 40 02 04 02 28 00 
>0000B25B: 29 02 
>0000B25D: 29 02 
>0000B25F: 29 02 
>0000B261: 19 82 
>0000B263: 12 86 3C 04 01 00 
>0000B269: 17 02 
>0000B26B: 12 06 4F 05 00 00 
>0000B271: 16 02 
>0000B273: 29 02 
>0000B275: 0A 82 
>0000B277: 12 06 3B 04 00 00 
>0000B27D: 07 91 23 00 24 00 3D 04 0C 00 EE 01 00 10 00 80 01 
>0000B28E: 5B 06 00 00 00 50 
>0000B294: 5B 06 01 00 00 50 
>0000B29A: 29 02 
>0000B29C: 29 02 
>0000B29E: 29 02 
>0000B2A0: 02 87 AA 00 00 00 00 
>0000B2A7: 29 02 
>0000B2A9: 02 87 62 07 00 00 00 
>0000B2B0: 29 02 
>0000B2B2: 02 87 AA 00 00 00 00 
>0000B2B9: 29 02 
>0000B2BB: 0A 82 
>0000B2BD: 12 86 36 04 02 00 
>0000B2C3: 17 02 
>0000B2C5: 12 06 3A 04 02 00 
>0000B2CB: 17 02 
>0000B2CD: 15 02 
>0000B2CF: 29 02 
>0000B2D1: 1C 90 29 00 2A 00 0B 06 0C 00 04 00 04 02 3F 00 
>0000B2E1: 29 02 
>0000B2E3: 29 02 
>0000B2E5: 02 87 AA 00 00 00 00 
>0000B2EC: 29 02 
>0000B2EE: 02 87 62 07 00 00 00 
>0000B2F5: 29 02 
>0000B2F7: 02 87 06 00 00 00 00 
>0000B2FE: 29 02 
>0000B300: 02 87 62 07 00 00 00 
>0000B307: 29 02 
>0000B309: 02 87 AA 00 00 00 00 
>0000B310: 29 02 
>0000B312: 05 91 2B 00 2C 00 3E 04 0C 00 02 00 00 10 01 05 00 
>0000B323: 09 07 2D 00 30 00 01 
>0000B32A: 09 07 2E 00 00 00 02 
>0000B331: 09 07 2F 00 00 00 03 
>0000B338: 09 07 30 00 00 00 04 
>0000B33F: 09 07 31 00 00 00 05 
>0000B346: 29 02 
>0000B348: 0A 82 
>0000B34A: 12 86 3E 04 01 00 
>0000B350: 17 02 
>0000B352: 29 02 
>0000B354: 05 91 32 00 37 00 3F 04 0C 00 E1 02 00 10 01 04 00 
>0000B365: 09 07 38 00 30 00 01 
>0000B36C: 09 07 39 00 00 00 02 
>0000B373: 09 07 3A 00 00 00 03 
>0000B37A: 09 07 3B 00 00 00 04 
>0000B381: 29 02 
>0000B383: 29 02 
>0000B385: 0A 82 
>0000B387: 12 86 3E 04 01 00 
>0000B38D: 17 02 
>0000B38F: 29 02 
>0000B391: 05 91 3C 00 41 00 40 04 0C 00 E0 02 00 10 00 01 00 
>0000B3A2: 09 07 38 07 30 00 00 
>0000B3A9: 09 07 39 07 00 00 01 
>0000B3B0: 29 02 
>0000B3B2: 29 02 
>0000B3B4: 0A 82 
>0000B3B6: 12 86 3E 04 01 00 
>0000B3BC: 17 02 
>0000B3BE: 29 02 
>0000B3C0: 19 82 
>0000B3C2: 46 02 
>0000B3C4: 03 08 42 00 47 00 2D 00 
>0000B3CC: 29 02 
>0000B3CE: 29 02 
>0000B3D0: 0A 82 
>0000B3D2: 12 86 3E 04 01 00 
>0000B3D8: 17 02 
>0000B3DA: 29 02 
>0000B3DC: 08 91 48 00 49 00 10 06 0C 00 B8 02 04 04 00 0F 00 
>0000B3ED: 29 02 
>0000B3EF: 29 02 
>0000B3F1: 0A 82 
>0000B3F3: 12 86 3E 04 02 00 
>0000B3F9: 17 02 
>0000B3FB: 29 02 
>0000B3FD: 19 82 
>0000B3FF: 46 02 
>0000B401: 05 91 33 00 37 00 41 04 0C 00 33 03 00 10 01 04 00 
>0000B412: 09 07 38 00 00 00 01 
>0000B419: 09 07 39 00 00 00 02 
>0000B420: 09 07 3A 00 00 00 03 
>0000B427: 09 07 3B 00 30 00 04 
>0000B42E: 29 02 
>0000B430: 29 02 
>0000B432: 29 02 
>0000B434: 0A 82 
>0000B436: 12 86 3E 04 02 00 
>0000B43C: 17 02 
>0000B43E: 29 02 
>0000B440: 05 91 3D 00 41 00 42 04 0C 00 32 03 00 10 00 01 00 
>0000B451: 09 07 38 07 30 00 00 
>0000B458: 09 07 39 07 00 00 01 
>0000B45F: 29 02 
>0000B461: 29 02 
>0000B463: 0A 82 
>0000B465: 12 86 3E 04 02 00 
>0000B46B: 17 02 
>0000B46D: 29 02 
>0000B46F: 19 82 
>0000B471: 46 02 
>0000B473: 1C 90 43 00 47 00 43 04 0C 00 E2 02 10 04 0F 00 
>0000B483: 29 02 
>0000B485: 29 02 
>0000B487: 29 02 
>0000B489: 0A 82 
>0000B48B: 12 86 3E 04 02 00 
>0000B491: 17 02 
>0000B493: 29 02 
>0000B495: 08 91 48 00 49 00 11 06 0C 00 0A 03 04 04 00 0F 00 
>0000B4A6: 29 02 
>0000B4A8: 29 02 
>0000B4AA: 0A 82 
>0000B4AC: 12 86 3E 04 03 00 
>0000B4B2: 17 02 
>0000B4B4: 29 02 
>0000B4B6: 05 91 34 00 37 00 44 04 0C 00 85 03 00 10 01 04 00 
>0000B4C7: 09 07 38 00 30 00 01 
>0000B4CE: 09 07 39 00 00 00 02 
>0000B4D5: 09 07 3A 00 00 00 03 
>0000B4DC: 09 07 3B 00 00 00 04 
>0000B4E3: 29 02 
>0000B4E5: 29 02 
>0000B4E7: 0A 82 
>0000B4E9: 12 86 3E 04 03 00 
>0000B4EF: 17 02 
>0000B4F1: 29 02 
>0000B4F3: 05 91 3E 00 41 00 45 04 0C 00 84 03 00 10 00 01 00 
>0000B504: 09 07 38 07 30 00 00 
>0000B50B: 09 07 39 07 00 00 01 
>0000B512: 29 02 
>0000B514: 29 02 
>0000B516: 0A 82 
>0000B518: 12 86 3E 04 03 00 
>0000B51E: 17 02 
>0000B520: 29 02 
>0000B522: 1C 90 44 00 47 00 46 04 0C 00 34 03 10 04 0F 00 
>0000B532: 29 02 
>0000B534: 29 02 
>0000B536: 0A 82 
>0000B538: 12 86 3E 04 03 00 
>0000B53E: 17 02 
>0000B540: 29 02 
>0000B542: 08 91 48 00 49 00 12 06 0C 00 5C 03 04 04 00 0F 00 
>0000B553: 29 02 
>0000B555: 29 02 
>0000B557: 0A 82 
>0000B559: 12 86 3E 04 04 00 
>0000B55F: 17 02 
>0000B561: 29 02 
>0000B563: 05 91 35 00 37 00 47 04 0C 00 D7 03 00 10 01 04 00 
>0000B574: 09 07 38 00 30 00 01 
>0000B57B: 09 07 39 00 00 00 02 
>0000B582: 09 07 3A 00 00 00 03 
>0000B589: 09 07 3B 00 00 00 04 
>0000B590: 29 02 
>0000B592: 29 02 
>0000B594: 0A 82 
>0000B596: 12 86 3E 04 04 00 
>0000B59C: 17 02 
>0000B59E: 29 02 
>0000B5A0: 05 91 3F 00 41 00 48 04 0C 00 D6 03 00 10 00 01 00 
>0000B5B1: 09 07 38 07 30 00 00 
>0000B5B8: 09 07 39 07 00 00 01 
>0000B5BF: 29 02 
>0000B5C1: 29 02 
>0000B5C3: 0A 82 
>0000B5C5: 12 86 3E 04 04 00 
>0000B5CB: 17 02 
>0000B5CD: 29 02 
>0000B5CF: 1C 90 45 00 47 00 49 04 0C 00 86 03 10 04 0F 00 
>0000B5DF: 29 02 
>0000B5E1: 29 02 
>0000B5E3: 0A 82 
>0000B5E5: 12 86 3E 04 04 00 
>0000B5EB: 17 02 
>0000B5ED: 29 02 
>0000B5EF: 08 91 48 00 49 00 13 06 0C 00 AE 03 04 04 00 0F 00 
>0000B600: 29 02 
>0000B602: 29 02 
>0000B604: 0A 82 
>0000B606: 12 86 3E 04 05 00 
>0000B60C: 17 02 
>0000B60E: 29 02 
>0000B610: 05 91 36 00 37 00 4A 04 0C 00 29 04 00 10 01 04 00 
>0000B621: 09 07 38 00 30 00 01 
>0000B628: 09 07 39 00 00 00 02 
>0000B62F: 09 07 3A 00 00 00 03 
>0000B636: 09 07 3B 00 00 00 04 
>0000B63D: 29 02 
>0000B63F: 29 02 
>0000B641: 0A 82 
>0000B643: 12 86 3E 04 05 00 
>0000B649: 17 02 
>0000B64B: 29 02 
>0000B64D: 05 91 40 00 41 00 4B 04 0C 00 28 04 00 10 00 01 00 
>0000B65E: 09 07 38 07 30 00 00 
>0000B665: 09 07 39 07 00 00 01 
>0000B66C: 29 02 
>0000B66E: 29 02 
>0000B670: 0A 82 
>0000B672: 12 86 3E 04 05 00 
>0000B678: 17 02 
>0000B67A: 29 02 
>0000B67C: 1C 90 46 00 47 00 4C 04 0C 00 D8 03 10 04 0F 00 
>0000B68C: 29 02 
>0000B68E: 29 02 
>0000B690: 0A 82 
>0000B692: 12 86 3E 04 05 00 
>0000B698: 17 02 
>0000B69A: 29 02 
>0000B69C: 08 91 48 00 49 00 14 06 0C 00 00 04 04 04 00 0F 00 
>0000B6AD: 29 02 
>0000B6AF: 29 02 
>0000B6B1: 29 02 
>0000B6B3: 01 86 00 05 80 08 
>0000B6B9: 02 87 80 08 00 00 00 
>0000B6C0: 29 02 
>0000B6C2: 02 87 62 07 00 00 00 
>0000B6C9: 29 02 
>0000B6CB: 02 87 AA 00 00 00 00 
>0000B6D2: 29 02 
>0000B6D4: 05 91 82 08 83 08 4D 04 01 00 64 00 10 10 00 02 00 
>0000B6E5: 09 07 A7 00 00 00 00 
>0000B6EC: 09 07 A6 00 30 00 01 
>0000B6F3: 09 07 A8 00 00 00 02 
>0000B6FA: 29 02 
>0000B6FC: 0A 82 
>0000B6FE: 12 86 4D 04 00 00 
>0000B704: 12 06 4D 04 02 00 
>0000B70A: 16 02 
>0000B70C: 29 02 
>0000B70E: 05 91 84 08 85 08 4E 04 01 00 65 00 10 10 00 01 00 
>0000B71F: 09 07 A7 00 00 00 00 
>0000B726: 09 07 A6 00 30 00 01 
>0000B72D: 29 02 
>0000B72F: 29 02 
>0000B731: 19 82 
>0000B733: 12 86 4D 04 00 00 
>0000B739: 12 06 4D 04 02 00 
>0000B73F: 16 02 
>0000B741: 14 0C 4E 05 03 00 00 00 04 00 03 00 
>0000B74D: 16 02 
>0000B74F: 12 06 4E 04 00 00 
>0000B755: 16 02 
>0000B757: 29 02 
>0000B759: 05 91 86 08 87 08 4F 04 01 00 66 00 10 10 00 01 00 
>0000B76A: 09 07 A7 00 00 00 00 
>0000B771: 09 07 A6 00 30 00 01 
>0000B778: 29 02 
>0000B77A: 29 02 
>0000B77C: 0A 82 
>0000B77E: 12 06 4D 04 00 00 
>0000B784: 0A 82 
>0000B786: 12 06 4F 04 00 00 
>0000B78C: 05 91 88 08 89 08 50 04 01 00 67 00 10 10 00 01 00 
>0000B79D: 09 07 A7 00 30 00 00 
>0000B7A4: 09 07 A6 00 00 00 01 
>0000B7AB: 29 02 
>0000B7AD: 29 02 
>0000B7AF: 29 02 
>0000B7B1: 0A 82 
>0000B7B3: 12 06 4D 04 00 00 
>0000B7B9: 05 91 8A 08 8B 08 51 04 01 00 68 00 10 10 00 01 00 
>0000B7CA: 09 07 A7 00 10 00 00 
>0000B7D1: 09 07 A6 00 00 00 01 
>0000B7D8: 29 02 
>0000B7DA: 29 02 
>0000B7DC: 0A 82 
>0000B7DE: 12 06 4D 04 00 00 
>0000B7E4: 05 91 8C 08 8D 08 52 04 01 00 69 00 10 10 00 01 00 
>0000B7F5: 09 07 A7 00 00 00 00 
>0000B7FC: 09 07 A6 00 30 00 01 
>0000B803: 29 02 
>0000B805: 29 02 
>0000B807: 0A 82 
>0000B809: 12 06 4D 04 00 00 
>0000B80F: 05 91 8E 08 8F 08 53 04 01 00 AC 00 10 10 00 01 00 
>0000B820: 09 07 A7 00 30 00 00 
>0000B827: 09 07 A6 00 00 00 01 
>0000B82E: 29 02 
>0000B830: 29 02 
>0000B832: 0A 82 
>0000B834: 12 06 4D 04 00 00 
>0000B83A: 05 91 90 08 91 08 54 04 01 00 6A 00 10 10 00 01 00 
>0000B84B: 09 07 A7 00 30 00 00 
>0000B852: 09 07 A6 00 00 00 01 
>0000B859: 29 02 
>0000B85B: 29 02 
>0000B85D: 05 91 C8 08 C9 08 55 04 01 00 AD 00 10 10 00 01 00 
>0000B86E: 09 07 A7 00 30 00 00 
>0000B875: 09 07 A6 00 00 00 01 
>0000B87C: 29 02 
>0000B87E: 19 82 
>0000B880: 12 06 4D 04 00 00 
>0000B886: 0F 0F 92 08 93 08 56 04 00 00 FF FF 00 01 05 
>0000B895: 29 02 
>0000B897: 19 82 
>0000B899: 12 06 4D 04 00 00 
>0000B89F: 0F 0F 94 08 95 08 57 04 00 00 FF FF 00 02 05 
>0000B8AE: 29 02 
>0000B8B0: 19 82 
>0000B8B2: 12 06 4D 04 00 00 
>0000B8B8: 0F 0F 98 08 99 08 58 04 00 00 FF FF 00 03 05 
>0000B8C7: 29 02 
>0000B8C9: 0A 82 
>0000B8CB: 12 86 4D 04 00 00 
>0000B8D1: 12 06 4D 04 02 00 
>0000B8D7: 16 02 
>0000B8D9: 14 0C 4E 05 03 00 00 00 04 00 03 00 
>0000B8E5: 16 02 
>0000B8E7: 29 02 
>0000B8E9: 0F 0F 96 08 97 08 59 04 00 00 FF FF 00 1E 00 
>0000B8F8: 29 02 
>0000B8FA: 19 82 
>0000B8FC: 12 86 4D 04 00 00 
>0000B902: 12 06 4D 04 02 00 
>0000B908: 16 02 
>0000B90A: 29 02 
>0000B90C: 0F 0F 9A 08 9B 08 5A 04 00 00 FF FF 00 05 05 
>0000B91B: 29 02 
>0000B91D: 19 82 
>0000B91F: 12 86 4D 04 00 00 
>0000B925: 12 06 4D 04 02 00 
>0000B92B: 16 02 
>0000B92D: 29 02 
>0000B92F: 0F 0F 9E 08 9F 08 5B 04 00 00 FF FF 00 06 05 
>0000B93E: 29 02 
>0000B940: 19 82 
>0000B942: 12 86 4D 04 00 00 
>0000B948: 12 06 4D 04 02 00 
>0000B94E: 16 02 
>0000B950: 29 02 
>0000B952: 0F 0F 9C 08 9D 08 5C 04 00 00 FF FF 00 07 05 
>0000B961: 29 02 
>0000B963: 29 02 
>0000B965: 01 86 01 05 92 08 
>0000B96B: 02 87 92 08 00 00 00 
>0000B972: 29 02 
>0000B974: 02 87 62 07 00 00 00 
>0000B97B: 29 02 
>0000B97D: 02 87 AA 00 00 00 00 
>0000B984: 29 02 
>0000B986: 05 91 A0 08 A1 08 5D 04 01 00 6B 00 10 10 00 01 00 
>0000B997: 09 07 A7 00 00 00 00 
>0000B99E: 09 07 A6 00 30 00 01 
>0000B9A5: 29 02 
>0000B9A7: 05 91 B6 08 B7 08 5E 04 01 00 74 00 10 10 00 01 00 
>0000B9B8: 09 07 A7 00 00 00 00 
>0000B9BF: 09 07 A6 00 30 00 01 
>0000B9C6: 29 02 
>0000B9C8: 0A 82 
>0000B9CA: 12 06 5D 04 00 00 
>0000B9D0: 05 91 A2 08 A3 08 5F 04 01 00 6C 00 10 10 00 01 00 
>0000B9E1: 09 07 A7 00 30 00 00 
>0000B9E8: 09 07 A6 00 00 00 01 
>0000B9EF: 29 02 
>0000B9F1: 29 02 
>0000B9F3: 0A 82 
>0000B9F5: 12 06 5D 04 00 00 
>0000B9FB: 05 91 A4 08 A5 08 60 04 01 00 6D 00 10 10 00 02 00 
>0000BA0C: 09 07 A7 00 00 00 00 
>0000BA13: 09 07 AA 08 00 00 01 
>0000BA1A: 09 07 AB 08 30 00 02 
>0000BA21: 29 02 
>0000BA23: 0A 82 
>0000BA25: 12 86 60 04 02 00 
>0000BA2B: 17 02 
>0000BA2D: 29 02 
>0000BA2F: 05 91 AC 08 AD 08 61 04 01 00 6E 00 10 10 00 01 00 
>0000BA40: 09 07 A7 00 00 00 00 
>0000BA47: 09 07 A6 00 30 00 01 
>0000BA4E: 29 02 
>0000BA50: 29 02 
>0000BA52: 29 02 
>0000BA54: 0A 82 
>0000BA56: 12 06 5D 04 00 00 
>0000BA5C: 05 91 A6 08 A7 08 62 04 01 00 6F 00 10 10 00 02 00 
>0000BA6D: 09 07 A7 00 00 00 00 
>0000BA74: 09 07 A8 08 00 00 01 
>0000BA7B: 09 07 A9 08 30 00 02 
>0000BA82: 29 02 
>0000BA84: 29 02 
>0000BA86: 0A 82 
>0000BA88: 12 06 5D 04 00 00 
>0000BA8E: 05 91 AE 08 AF 08 63 04 01 00 70 00 10 10 00 01 00 
>0000BA9F: 09 07 A7 00 00 00 00 
>0000BAA6: 09 07 A6 00 30 00 01 
>0000BAAD: 29 02 
>0000BAAF: 29 02 
>0000BAB1: 0A 82 
>0000BAB3: 12 06 5D 04 00 00 
>0000BAB9: 05 91 B0 08 B1 08 64 04 01 00 71 00 10 10 00 01 00 
>0000BACA: 09 07 A7 00 00 00 00 
>0000BAD1: 09 07 A6 00 30 00 01 
>0000BAD8: 29 02 
>0000BADA: 29 02 
>0000BADC: 0A 82 
>0000BADE: 12 06 5D 04 00 00 
>0000BAE4: 05 91 B2 08 B3 08 65 04 01 00 72 00 10 10 00 01 00 
>0000BAF5: 09 07 A7 00 00 00 00 
>0000BAFC: 09 07 A6 00 30 00 01 
>0000BB03: 29 02 
>0000BB05: 29 02 
>0000BB07: 0A 82 
>0000BB09: 12 06 5D 04 00 00 
>0000BB0F: 05 91 B4 08 B5 08 66 04 01 00 73 00 10 10 00 01 00 
>0000BB20: 09 07 A7 00 30 00 00 
>0000BB27: 09 07 A6 00 00 00 01 
>0000BB2E: 29 02 
>0000BB30: 29 02 
>0000BB32: 29 02 
>0000BB34: 01 86 02 05 94 08 
>0000BB3A: 02 87 94 08 00 00 00 
>0000BB41: 29 02 
>0000BB43: 02 87 62 07 00 00 00 
>0000BB4A: 29 02 
>0000BB4C: 02 87 AA 00 00 00 00 
>0000BB53: 29 02 
>0000BB55: 05 91 B8 08 B9 08 67 04 01 00 75 00 10 10 00 01 00 
>0000BB66: 09 07 A7 00 00 00 00 
>0000BB6D: 09 07 A6 00 30 00 01 
>0000BB74: 29 02 
>0000BB76: 0A 82 
>0000BB78: 12 06 67 04 00 00 
>0000BB7E: 05 91 C0 08 C1 08 68 04 01 00 76 00 10 10 00 01 00 
>0000BB8F: 09 07 A7 00 00 00 00 
>0000BB96: 09 07 A6 00 30 00 01 
>0000BB9D: 29 02 
>0000BB9F: 29 02 
>0000BBA1: 0A 82 
>0000BBA3: 12 06 67 04 00 00 
>0000BBA9: 05 91 C2 08 C3 08 69 04 01 00 77 00 10 10 00 01 00 
>0000BBBA: 09 07 A7 00 00 00 00 
>0000BBC1: 09 07 A6 00 30 00 01 
>0000BBC8: 29 02 
>0000BBCA: 29 02 
>0000BBCC: 0A 82 
>0000BBCE: 12 06 67 04 00 00 
>0000BBD4: 05 91 C4 08 C5 08 6A 04 01 00 78 00 10 10 00 01 00 
>0000BBE5: 09 07 A7 00 00 00 00 
>0000BBEC: 09 07 A6 00 30 00 01 
>0000BBF3: 29 02 
>0000BBF5: 29 02 
>0000BBF7: 29 02 
>0000BBF9: 01 86 03 05 98 08 
>0000BBFF: 02 87 98 08 00 00 00 
>0000BC06: 29 02 
>0000BC08: 02 87 62 07 00 00 00 
>0000BC0F: 29 02 
>0000BC11: 02 87 AA 00 00 00 00 
>0000BC18: 29 02 
>0000BC1A: 05 91 C6 08 C7 08 6B 04 01 00 7B 00 10 10 00 01 00 
>0000BC2B: 09 07 A7 00 30 00 00 
>0000BC32: 09 07 A6 00 00 00 01 
>0000BC39: 29 02 
>0000BC3B: 05 91 BA 08 BB 08 6C 04 01 00 79 00 10 10 00 01 00 
>0000BC4C: 09 07 A7 00 30 00 00 
>0000BC53: 09 07 A6 00 00 00 01 
>0000BC5A: 29 02 
>0000BC5C: 05 91 BC 08 BD 08 6D 04 01 00 7A 00 10 10 00 01 00 
>0000BC6D: 09 07 A7 00 30 00 00 
>0000BC74: 09 07 A6 00 00 00 01 
>0000BC7B: 29 02 
>0000BC7D: 0A 82 
>0000BC7F: 12 06 6D 04 00 00 
>0000BC85: 05 91 BE 08 BF 08 6E 04 01 00 7C 00 10 10 00 01 00 
>0000BC96: 09 07 A7 00 00 00 00 
>0000BC9D: 09 07 A6 00 30 00 01 
>0000BCA4: 29 02 
>0000BCA6: 29 02 
>0000BCA8: 0A 82 
>0000BCAA: 12 06 6D 04 00 00 
>0000BCB0: 05 91 CA 08 CB 08 6F 04 01 00 7D 00 10 10 00 01 00 
>0000BCC1: 09 07 A7 00 30 00 00 
>0000BCC8: 09 07 A6 00 00 00 01 
>0000BCCF: 29 02 
>0000BCD1: 29 02 
>0000BCD3: 0A 82 
>0000BCD5: 12 06 6D 04 00 00 
>0000BCDB: 05 91 CC 08 CD 08 70 04 01 00 7F 00 10 10 00 01 00 
>0000BCEC: 09 07 A7 00 30 00 00 
>0000BCF3: 09 07 A6 00 00 00 01 
>0000BCFA: 29 02 
>0000BCFC: 29 02 
>0000BCFE: 0A 82 
>0000BD00: 12 06 6D 04 00 00 
>0000BD06: 05 91 CE 08 CF 08 71 04 01 00 7E 00 10 10 00 01 00 
>0000BD17: 09 07 A7 00 10 00 00 
>0000BD1E: 09 07 A6 00 00 00 01 
>0000BD25: 29 02 
>0000BD27: 29 02 
>0000BD29: 29 02 
>0000BD2B: 01 86 1E 00 96 08 
>0000BD31: 02 87 96 08 00 00 00 
>0000BD38: 29 02 
>0000BD3A: 02 87 62 07 00 00 00 
>0000BD41: 29 02 
>0000BD43: 02 87 AA 00 00 00 00 
>0000BD4A: 29 02 
>0000BD4C: 0A 82 
>0000BD4E: 14 0C 4E 05 03 00 00 00 04 00 03 00 
>0000BD5A: 05 91 D0 08 D1 08 72 04 01 00 AE 00 10 10 00 01 00 
>0000BD6B: 09 07 A7 00 30 00 00 
>0000BD72: 09 07 A6 00 00 00 01 
>0000BD79: 29 02 
>0000BD7B: 29 02 
>0000BD7D: 29 02 
>0000BD7F: 01 86 05 05 9A 08 
>0000BD85: 02 87 9A 08 00 00 00 
>0000BD8C: 29 02 
>0000BD8E: 02 87 62 07 00 00 00 
>0000BD95: 29 02 
>0000BD97: 02 87 AA 00 00 00 00 
>0000BD9E: 29 02 
>0000BDA0: 05 91 D2 08 D3 08 73 04 01 00 80 00 10 10 00 01 00 
>0000BDB1: 09 07 A7 00 00 00 00 
>0000BDB8: 09 07 A6 00 30 00 01 
>0000BDBF: 29 02 
>0000BDC1: 0A 82 
>0000BDC3: 12 06 73 04 00 00 
>0000BDC9: 05 91 DA 08 DB 08 74 04 01 00 81 00 10 10 00 01 00 
>0000BDDA: 09 07 A7 00 00 00 00 
>0000BDE1: 09 07 A6 00 30 00 01 
>0000BDE8: 29 02 
>0000BDEA: 29 02 
>0000BDEC: 0A 82 
>0000BDEE: 12 06 73 04 00 00 
>0000BDF4: 07 9A DC 08 DD 08 75 04 01 00 82 00 10 22 00 00 00 00 FF FF 00 00 00 00 00 00 
>0000BE0E: 5B 09 00 00 02 00 00 00 00 
>0000BE17: 5B 09 01 00 02 00 00 00 00 
>0000BE20: 29 02 
>0000BE22: 29 02 
>0000BE24: 0A 82 
>0000BE26: 12 06 73 04 00 00 
>0000BE2C: 0A 82 
>0000BE2E: 12 06 74 04 00 00 
>0000BE34: 05 91 F1 08 F2 08 76 04 01 00 86 00 10 10 00 04 00 
>0000BE45: 09 07 A7 00 30 00 00 
>0000BE4C: 09 07 E3 08 00 00 01 
>0000BE53: 09 07 E5 08 00 00 02 
>0000BE5A: 09 07 E6 08 00 00 04 
>0000BE61: 29 02 
>0000BE63: 29 02 
>0000BE65: 29 02 
>0000BE67: 0A 82 
>0000BE69: 12 06 73 04 00 00 
>0000BE6F: 05 91 DE 08 DF 08 77 04 01 00 87 00 10 10 00 01 00 
>0000BE80: 09 07 A7 00 00 00 00 
>0000BE87: 09 07 A6 00 30 00 01 
>0000BE8E: 29 02 
>0000BE90: 05 91 E0 08 E1 08 78 04 01 00 88 00 10 10 00 02 00 
>0000BEA1: 09 07 A7 00 00 00 00 
>0000BEA8: 09 07 E3 08 30 00 01 
>0000BEAF: 09 07 E4 08 00 00 02 
>0000BEB6: 29 02 
>0000BEB8: 05 91 E2 08 E2 08 79 04 01 00 89 00 10 10 00 02 00 
>0000BEC9: 09 07 A7 00 00 00 00 
>0000BED0: 09 07 E3 08 30 00 01 
>0000BED7: 09 07 E4 08 00 00 02 
>0000BEDE: 29 02 
>0000BEE0: 05 91 E7 08 E8 08 7A 04 01 00 8A 00 10 10 00 01 00 
>0000BEF1: 09 07 A7 00 30 00 00 
>0000BEF8: 09 07 A6 00 00 00 01 
>0000BEFF: 29 02 
>0000BF01: 05 91 ED 08 EE 08 7B 04 01 00 8D 00 10 10 00 01 00 
>0000BF12: 09 07 A7 00 00 00 00 
>0000BF19: 09 07 A6 00 30 00 01 
>0000BF20: 29 02 
>0000BF22: 19 82 
>0000BF24: 14 0C 4E 05 03 00 00 00 04 00 03 00 
>0000BF30: 05 91 E9 08 EA 08 7C 04 01 00 8B 00 10 10 00 01 00 
>0000BF41: 09 07 EF 08 30 00 00 
>0000BF48: 09 07 F0 08 00 00 01 
>0000BF4F: 29 02 
>0000BF51: 05 91 EB 08 EC 08 7D 04 01 00 8C 00 10 10 00 01 00 
>0000BF62: 09 07 EF 08 30 00 00 
>0000BF69: 09 07 F0 08 00 00 01 
>0000BF70: 29 02 
>0000BF72: 29 02 
>0000BF74: 29 02 
>0000BF76: 29 02 
>0000BF78: 01 86 06 05 9E 08 
>0000BF7E: 02 87 9E 08 00 00 00 
>0000BF85: 29 02 
>0000BF87: 02 87 62 07 00 00 00 
>0000BF8E: 29 02 
>0000BF90: 02 87 AA 00 00 00 00 
>0000BF97: 29 02 
>0000BF99: 0A 82 
>0000BF9B: 12 86 4D 04 00 00 
>0000BFA1: 12 06 4D 04 02 00 
>0000BFA7: 16 02 
>0000BFA9: 29 02 
>0000BFAB: 05 91 F3 08 F4 08 7E 04 01 00 8E 00 10 10 00 01 00 
>0000BFBC: 09 07 A7 00 00 00 00 
>0000BFC3: 09 07 A6 00 30 00 01 
>0000BFCA: 29 02 
>0000BFCC: 29 02 
>0000BFCE: 0A 82 
>0000BFD0: 12 06 7E 04 00 00 
>0000BFD6: 19 82 
>0000BFD8: 14 0A 4E 05 02 00 00 00 0C 00 
>0000BFE2: 05 91 F5 08 F6 08 7F 04 01 00 8F 00 10 10 00 01 00 
>0000BFF3: 09 07 A7 00 00 00 00 
>0000BFFA: 09 07 A6 00 30 00 01 
>0000C001: 29 02 
>0000C003: 29 02 
>0000C005: 29 02 
>0000C007: 0A 82 
>0000C009: 12 06 7E 04 00 00 
>0000C00F: 0A 82 
>0000C011: 12 06 7F 04 01 00 
>0000C017: 05 91 F9 08 FA 08 80 04 01 00 91 00 10 10 00 01 00 
>0000C028: 09 07 A7 00 30 00 00 
>0000C02F: 09 07 A6 00 00 00 01 
>0000C036: 29 02 
>0000C038: 29 02 
>0000C03A: 29 02 
>0000C03C: 0A 82 
>0000C03E: 12 06 7E 04 00 00 
>0000C044: 05 91 F7 08 F8 08 81 04 01 00 90 00 10 10 00 01 00 
>0000C055: 09 07 A7 00 00 00 00 
>0000C05C: 09 07 A6 00 30 00 01 
>0000C063: 29 02 
>0000C065: 29 02 
>0000C067: 0A 82 
>0000C069: 12 06 7E 04 00 00 
>0000C06F: 19 82 
>0000C071: 12 86 4D 04 00 00 
>0000C077: 12 06 4D 04 02 00 
>0000C07D: 16 02 
>0000C07F: 14 0C 4E 05 03 00 00 00 04 00 03 00 
>0000C08B: 16 02 
>0000C08D: 29 02 
>0000C08F: 05 91 FB 08 FC 08 82 04 01 00 92 00 10 10 00 01 00 
>0000C0A0: 09 07 A7 00 30 00 00 
>0000C0A7: 09 07 A6 00 00 00 01 
>0000C0AE: 29 02 
>0000C0B0: 29 02 
>0000C0B2: 29 02 
>0000C0B4: 0A 82 
>0000C0B6: 12 06 7E 04 00 00 
>0000C0BC: 0A 82 
>0000C0BE: 12 06 82 04 00 00 
>0000C0C4: 05 91 FD 08 FE 08 83 04 01 00 93 00 10 10 00 01 00 
>0000C0D5: 09 07 A7 00 00 00 00 
>0000C0DC: 09 07 A6 00 30 00 01 
>0000C0E3: 29 02 
>0000C0E5: 29 02 
>0000C0E7: 29 02 
>0000C0E9: 0A 82 
>0000C0EB: 12 06 7E 04 00 00 
>0000C0F1: 05 91 FF 08 00 09 84 04 01 00 94 00 10 10 00 01 00 
>0000C102: 09 07 A7 00 00 00 00 
>0000C109: 09 07 A6 00 30 00 01 
>0000C110: 29 02 
>0000C112: 29 02 
>0000C114: 0A 82 
>0000C116: 12 06 7E 04 00 00 
>0000C11C: 19 82 
>0000C11E: 12 06 84 04 00 00 
>0000C124: 05 91 01 09 02 09 85 04 01 00 AF 00 10 10 00 01 00 
>0000C135: 09 07 A7 00 00 00 00 
>0000C13C: 09 07 A6 00 30 00 01 
>0000C143: 29 02 
>0000C145: 05 91 03 09 04 09 86 04 01 00 B0 00 10 10 00 01 00 
>0000C156: 09 07 A7 00 00 00 00 
>0000C15D: 09 07 A6 00 30 00 01 
>0000C164: 29 02 
>0000C166: 05 91 05 09 06 09 87 04 01 00 B1 00 10 10 00 01 00 
>0000C177: 09 07 A7 00 00 00 00 
>0000C17E: 09 07 A6 00 30 00 01 
>0000C185: 29 02 
>0000C187: 05 91 07 09 08 09 88 04 01 00 B2 00 10 10 00 01 00 
>0000C198: 09 07 A7 00 00 00 00 
>0000C19F: 09 07 A6 00 30 00 01 
>0000C1A6: 29 02 
>0000C1A8: 05 91 09 09 0B 09 89 04 01 00 B4 00 10 10 00 01 00 
>0000C1B9: 09 07 A7 00 00 00 00 
>0000C1C0: 09 07 A6 00 30 00 01 
>0000C1C7: 29 02 
>0000C1C9: 05 91 0A 09 0B 09 8A 04 01 00 B3 00 10 10 00 01 00 
>0000C1DA: 09 07 A7 00 00 00 00 
>0000C1E1: 09 07 A6 00 30 00 01 
>0000C1E8: 29 02 
>0000C1EA: 05 91 0C 09 0D 09 8B 04 01 00 B5 00 10 10 00 01 00 
>0000C1FB: 09 07 A7 00 00 00 00 
>0000C202: 09 07 A6 00 30 00 01 
>0000C209: 29 02 
>0000C20B: 05 91 0E 09 10 09 8C 04 01 00 B7 00 10 10 00 01 00 
>0000C21C: 09 07 A7 00 00 00 00 
>0000C223: 09 07 A6 00 30 00 01 
>0000C22A: 29 02 
>0000C22C: 05 91 0F 09 10 09 8D 04 01 00 B6 00 10 10 00 01 00 
>0000C23D: 09 07 A7 00 00 00 00 
>0000C244: 09 07 A6 00 30 00 01 
>0000C24B: 29 02 
>0000C24D: 29 02 
>0000C24F: 29 02 
>0000C251: 0A 82 
>0000C253: 12 06 7E 04 00 00 
>0000C259: 05 91 11 09 12 09 8E 04 01 00 95 00 10 10 00 01 00 
>0000C26A: 09 07 A7 00 00 00 00 
>0000C271: 09 07 A6 00 30 00 01 
>0000C278: 29 02 
>0000C27A: 29 02 
>0000C27C: 0A 82 
>0000C27E: 12 06 7E 04 00 00 
>0000C284: 05 91 13 09 14 09 8F 04 01 00 96 00 10 10 00 01 00 
>0000C295: 09 07 A7 00 00 00 00 
>0000C29C: 09 07 A6 00 30 00 01 
>0000C2A3: 29 02 
>0000C2A5: 29 02 
>0000C2A7: 0A 82 
>0000C2A9: 12 06 7E 04 00 00 
>0000C2AF: 05 91 15 09 16 09 90 04 01 00 97 00 10 10 00 01 00 
>0000C2C0: 09 07 A7 00 00 00 00 
>0000C2C7: 09 07 A6 00 30 00 01 
>0000C2CE: 29 02 
>0000C2D0: 05 91 17 09 18 09 91 04 01 00 98 00 10 10 00 01 00 
>0000C2E1: 09 07 A7 00 30 00 00 
>0000C2E8: 09 07 A6 00 00 00 01 
>0000C2EF: 29 02 
>0000C2F1: 29 02 
>0000C2F3: 0A 82 
>0000C2F5: 12 06 7E 04 00 00 
>0000C2FB: 05 91 19 09 1A 09 92 04 01 00 9C 00 10 10 00 01 00 
>0000C30C: 09 07 A7 00 00 00 00 
>0000C313: 09 07 A6 00 30 00 01 
>0000C31A: 29 02 
>0000C31C: 29 02 
>0000C31E: 0A 82 
>0000C320: 12 06 7E 04 00 00 
>0000C326: 05 91 1B 09 1C 09 93 04 01 00 99 00 10 10 00 01 00 
>0000C337: 09 07 A7 00 00 00 00 
>0000C33E: 09 07 A6 00 30 00 01 
>0000C345: 29 02 
>0000C347: 29 02 
>0000C349: 0A 82 
>0000C34B: 12 06 7E 04 00 00 
>0000C351: 05 91 1D 09 1E 09 94 04 01 00 9A 00 10 10 00 01 00 
>0000C362: 09 07 A7 00 00 00 00 
>0000C369: 09 07 A6 00 30 00 01 
>0000C370: 29 02 
>0000C372: 29 02 
>0000C374: 0A 82 
>0000C376: 12 06 7E 04 00 00 
>0000C37C: 05 91 1F 09 20 09 95 04 01 00 9B 00 10 10 00 01 00 
>0000C38D: 09 07 A7 00 30 00 00 
>0000C394: 09 07 A6 00 00 00 01 
>0000C39B: 29 02 
>0000C39D: 29 02 
>0000C39F: 29 02 
>0000C3A1: 01 86 07 05 9C 08 
>0000C3A7: 02 87 9C 08 00 00 00 
>0000C3AE: 29 02 
>0000C3B0: 02 87 62 07 00 00 00 
>0000C3B7: 29 02 
>0000C3B9: 02 87 AA 00 00 00 00 
>0000C3C0: 29 02 
>0000C3C2: 05 91 21 09 22 09 96 04 01 00 9D 00 10 10 00 01 00 
>0000C3D3: 09 07 A7 00 00 00 00 
>0000C3DA: 09 07 A6 00 30 00 01 
>0000C3E1: 29 02 
>0000C3E3: 05 91 23 09 24 09 97 04 01 00 9E 00 10 10 00 01 00 
>0000C3F4: 09 07 A7 00 00 00 00 
>0000C3FB: 09 07 A6 00 30 00 01 
>0000C402: 29 02 
>0000C404: 05 91 25 09 26 09 98 04 01 00 9F 00 10 10 00 01 00 
>0000C415: 09 07 A7 00 00 00 00 
>0000C41C: 09 07 A6 00 30 00 01 
>0000C423: 29 02 
>0000C425: 0A 82 
>0000C427: 12 06 96 04 00 00 
>0000C42D: 05 91 D4 08 D5 08 99 04 01 00 A0 00 10 10 00 01 00 
>0000C43E: 09 07 A7 00 30 00 00 
>0000C445: 09 07 A6 00 00 00 01 
>0000C44C: 29 02 
>0000C44E: 29 02 
>0000C450: 0A 82 
>0000C452: 12 06 99 04 00 00 
>0000C458: 07 91 D8 08 D9 08 9A 04 01 00 A1 00 10 20 00 3F 00 
>0000C469: 5B 06 00 00 00 3F 
>0000C46F: 5B 06 01 00 00 3F 
>0000C475: 29 02 
>0000C477: 29 02 
>0000C479: 0A 82 
>0000C47B: 12 06 96 04 00 00 
>0000C481: 07 94 D6 08 D7 08 9B 04 01 00 A2 00 10 21 00 00 FF 7F 00 00 
>0000C495: 5B 07 00 00 01 01 00 
>0000C49C: 5B 07 01 00 01 01 00 
>0000C4A3: 29 02 
>0000C4A5: 29 02 
>0000C4A7: 05 91 27 09 28 09 9C 04 01 00 A4 00 10 10 00 01 00 
>0000C4B8: 09 07 A7 00 00 00 00 
>0000C4BF: 09 07 A6 00 30 00 01 
>0000C4C6: 29 02 
>0000C4C8: 05 91 29 09 2A 09 9D 04 01 00 A5 00 10 10 00 01 00 
>0000C4D9: 09 07 A7 00 00 00 00 
>0000C4E0: 09 07 A6 00 30 00 01 
>0000C4E7: 29 02 
>0000C4E9: 05 91 2B 09 2C 09 9E 04 01 00 A6 00 10 10 00 01 00 
>0000C4FA: 09 07 A7 00 00 00 00 
>0000C501: 09 07 A6 00 30 00 01 
>0000C508: 29 02 
>0000C50A: 05 91 2D 09 2E 09 9F 04 01 00 A7 00 10 10 00 01 00 
>0000C51B: 09 07 A7 00 00 00 00 
>0000C522: 09 07 A6 00 30 00 01 
>0000C529: 29 02 
>0000C52B: 05 91 2F 09 30 09 A0 04 01 00 A8 00 10 10 00 01 00 
>0000C53C: 09 07 A7 00 00 00 00 
>0000C543: 09 07 A6 00 30 00 01 
>0000C54A: 29 02 
>0000C54C: 05 91 31 09 32 09 A1 04 01 00 A9 00 10 10 00 01 00 
>0000C55D: 09 07 A7 00 00 00 00 
>0000C564: 09 07 A6 00 30 00 01 
>0000C56B: 29 02 
>0000C56D: 05 91 33 09 34 09 A2 04 01 00 AA 00 10 10 00 01 00 
>0000C57E: 09 07 A7 00 00 00 00 
>0000C585: 09 07 A6 00 30 00 01 
>0000C58C: 29 02 
>0000C58E: 05 91 35 09 36 09 A3 04 01 00 AB 00 10 10 00 01 00 
>0000C59F: 09 07 A7 00 00 00 00 
>0000C5A6: 09 07 A6 00 30 00 01 
>0000C5AD: 29 02 
>0000C5AF: 29 02 
>0000C5B1: 01 86 88 00 4F 00 
>0000C5B7: 02 87 4F 00 00 00 00 
>0000C5BE: 29 02 
>0000C5C0: 02 87 62 07 00 00 00 
>0000C5C7: 29 02 
>0000C5C9: 05 91 51 00 52 00 A4 04 01 00 E6 00 10 10 00 01 00 
>0000C5DA: 09 07 A6 00 30 00 01 
>0000C5E1: 09 07 A7 00 00 00 00 
>0000C5E8: 29 02 
>0000C5EA: 19 82 
>0000C5EC: 12 06 A4 04 00 00 
>0000C5F2: 05 91 53 00 54 00 A5 04 01 00 E7 00 10 10 00 01 00 
>0000C603: 09 07 6F 00 30 00 00 
>0000C60A: 09 07 55 00 00 00 01 
>0000C611: 29 02 
>0000C613: 29 02 
>0000C615: 19 82 
>0000C617: 12 06 A4 04 00 00 
>0000C61D: 05 A6 56 00 57 00 A6 04 01 00 E8 00 10 13 01 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
>0000C643: 09 0E 58 00 03 03 01 00 00 00 00 00 00 00 
>0000C651: 09 0E 59 00 03 03 02 00 00 00 00 00 00 00 
>0000C65F: 09 0E 5A 00 03 03 03 00 00 00 00 00 00 00 
>0000C66D: 09 0E 5B 00 03 03 04 00 00 00 00 00 00 00 
>0000C67B: 09 0E 5C 00 33 03 05 00 00 00 00 00 00 00 
>0000C689: 29 02 
>0000C68B: 29 02 
>0000C68D: 19 82 
>0000C68F: 12 06 A4 04 00 00 
>0000C695: 05 91 5D 00 5E 00 A7 04 01 00 F0 00 10 10 00 03 00 
>0000C6A6: 09 07 5F 00 30 00 00 
>0000C6AD: 09 07 60 00 00 00 01 
>0000C6B4: 09 07 61 00 00 00 02 
>0000C6BB: 09 07 62 00 00 00 03 
>0000C6C2: 29 02 
>0000C6C4: 29 02 
>0000C6C6: 19 82 
>0000C6C8: 12 06 A4 04 00 00 
>0000C6CE: 05 91 6D 00 6E 00 A8 04 01 00 F4 00 10 10 01 05 00 
>0000C6DF: 09 07 6F 00 30 00 01 
>0000C6E6: 09 07 71 00 00 00 02 
>0000C6ED: 09 07 70 00 00 00 03 
>0000C6F4: 09 07 72 00 00 00 04 
>0000C6FB: 09 07 73 00 00 00 05 
>0000C702: 29 02 
>0000C704: 29 02 
>0000C706: 19 82 
>0000C708: 12 06 A4 04 00 00 
>0000C70E: 05 91 69 00 6A 00 A9 04 01 00 F3 00 10 10 07 08 00 
>0000C71F: 09 07 6B 00 00 00 07 
>0000C726: 09 07 6C 00 30 00 08 
>0000C72D: 29 02 
>0000C72F: 29 02 
>0000C731: 19 82 
>0000C733: 12 06 A4 04 00 00 
>0000C739: 05 91 74 00 75 00 AA 04 01 00 F5 00 10 10 01 03 00 
>0000C74A: 09 07 76 00 30 00 01 
>0000C751: 09 07 77 00 00 00 03 
>0000C758: 29 02 
>0000C75A: 29 02 
>0000C75C: 19 82 
>0000C75E: 12 06 A4 04 00 00 
>0000C764: 05 91 65 00 66 00 AB 04 01 00 F2 00 10 10 00 01 00 
>0000C775: 09 07 67 00 30 00 00 
>0000C77C: 09 07 68 00 00 00 01 
>0000C783: 29 02 
>0000C785: 29 02 
>0000C787: 02 87 AA 00 00 00 00 
>0000C78E: 29 02 
>0000C790: 05 91 63 00 64 00 AC 04 01 00 F1 00 10 10 00 01 00 
>0000C7A1: 09 07 A6 00 30 00 01 
>0000C7A8: 09 07 A7 00 00 00 00 
>0000C7AF: 29 02 
>0000C7B1: 29 02 
>0000C7B3: 0A 82 
>0000C7B5: 12 86 E9 04 FF 00 
>0000C7BB: 17 02 
>0000C7BD: 29 02 
>0000C7BF: 01 86 5C 00 EC 00 
>0000C7C5: 02 87 ED 00 00 00 00 
>0000C7CC: 29 02 
>0000C7CE: 05 91 44 01 45 01 AD 04 03 00 4D 00 10 10 00 01 00 
>0000C7DF: 09 07 38 07 30 00 00 
>0000C7E6: 09 07 39 07 00 00 01 
>0000C7ED: 29 02 
>0000C7EF: 29 02 
>0000C7F1: 29 02 
>0000C7F3: 0A 82 
>0000C7F5: 12 86 E9 04 03 00 
>0000C7FB: 17 02 
>0000C7FD: 29 02 
>0000C7FF: 01 86 50 00 EC 00 
>0000C805: 02 87 ED 00 00 00 00 
>0000C80C: 29 02 
>0000C80E: 03 08 EE 00 EF 00 F0 00 
>0000C816: 0A 82 
>0000C818: 12 86 B2 04 FF 00 
>0000C81E: 17 02 
>0000C820: 29 02 
>0000C822: 03 08 03 01 F7 02 07 01 
>0000C82A: 03 08 03 01 F7 02 08 01 
>0000C832: 29 02 
>0000C834: 03 08 03 01 04 01 05 01 
>0000C83C: 0A 82 
>0000C83E: 46 02 
>0000C840: 07 91 03 01 AA 00 AE 04 03 00 3A 00 10 20 00 FF 00 
>0000C851: 5B 06 00 00 00 03 
>0000C857: 5B 06 01 00 00 03 
>0000C85D: 29 02 
>0000C85F: 29 02 
>0000C861: 0A 82 
>0000C863: 12 86 B2 04 FF 00 
>0000C869: 17 02 
>0000C86B: 29 02 
>0000C86D: 03 08 10 01 F7 02 12 01 
>0000C875: 03 08 10 01 F7 02 16 01 
>0000C87D: 03 08 10 01 F7 02 14 01 
>0000C885: 03 08 10 01 F7 02 15 01 
>0000C88D: 03 08 10 01 F7 02 13 01 
>0000C895: 29 02 
>0000C897: 03 08 10 01 0F 01 11 01 
>0000C89F: 03 08 0A 01 09 01 0B 01 
>0000C8A7: 03 08 0D 01 0C 01 0E 01 
>0000C8AF: 03 08 F1 00 F2 00 F3 00 
>0000C8B7: 03 08 F4 00 F5 00 F6 00 
>0000C8BF: 03 08 F8 00 F7 00 F9 00 
>0000C8C7: 03 08 FB 00 FA 00 FC 00 
>0000C8CF: 03 08 FE 00 FD 00 FF 00 
>0000C8D7: 03 08 01 01 00 01 02 01 
>0000C8DF: 02 87 AA 00 00 00 00 
>0000C8E6: 29 02 
>0000C8E8: 05 91 17 01 18 01 AF 04 03 00 07 00 10 10 00 01 00 
>0000C8F9: 09 07 38 07 00 00 00 
>0000C900: 09 07 39 07 30 00 01 
>0000C907: 29 02 
>0000C909: 0F 0F 19 01 1A 01 B0 04 00 00 FF FF 00 A8 01 
>0000C918: 02 87 AA 00 00 00 00 
>0000C91F: 29 02 
>0000C921: 19 82 
>0000C923: 12 06 4C 05 00 00 
>0000C929: 05 91 ED 01 EE 01 B1 04 03 00 14 00 10 10 00 01 00 
>0000C93A: 09 07 38 07 30 00 00 
>0000C941: 09 07 39 07 00 00 01 
>0000C948: 29 02 
>0000C94A: 29 02 
>0000C94C: 02 87 AA 00 00 00 00 
>0000C953: 29 02 
>0000C955: 29 02 
>0000C957: 01 86 A8 01 1B 01 
>0000C95D: 19 82 
>0000C95F: 12 06 AF 04 00 00 
>0000C965: 02 87 AA 00 00 00 00 
>0000C96C: 29 02 
>0000C96E: 02 87 1D 01 00 00 00 
>0000C975: 29 02 
>0000C977: 0A 82 
>0000C979: 46 02 
>0000C97B: 07 91 D5 07 D6 07 B2 04 03 00 3B 00 00 10 00 FF 01 
>0000C98C: 5B 06 00 00 00 00 
>0000C992: 5B 06 01 00 00 00 
>0000C998: 29 02 
>0000C99A: 29 02 
>0000C99C: 0A 82 
>0000C99E: 46 02 
>0000C9A0: 07 91 D5 07 D6 07 B3 04 03 00 3C 00 00 10 00 FF 01 
>0000C9B1: 5B 06 00 00 00 00 
>0000C9B7: 5B 06 01 00 00 00 
>0000C9BD: 29 02 
>0000C9BF: 29 02 
>0000C9C1: 0A 82 
>0000C9C3: 46 02 
>0000C9C5: 06 8E D7 07 D8 07 B4 04 03 00 41 00 00 00 
>0000C9D3: 5B 06 00 00 00 00 
>0000C9D9: 5B 06 01 00 00 00 
>0000C9DF: 29 02 
>0000C9E1: 29 02 
>0000C9E3: 05 91 1E 01 1F 01 B5 04 03 00 16 00 10 10 00 01 00 
>0000C9F4: 09 07 38 07 30 00 00 
>0000C9FB: 09 07 39 07 00 00 01 
>0000CA02: 29 02 
>0000CA04: 0A 82 
>0000CA06: 40 84 B3 04 
>0000CA0A: 42 03 03 
>0000CA0D: 34 02 
>0000CA0F: 17 02 
>0000CA11: 29 02 
>0000CA13: 05 91 20 01 21 01 00 30 03 00 17 00 04 10 00 01 00 
>0000CA24: 09 07 38 07 30 00 00 
>0000CA2B: 09 07 39 07 00 00 01 
>0000CA32: 29 02 
>0000CA34: 29 02 
>0000CA36: 02 87 AA 00 00 00 00 
>0000CA3D: 29 02 
>0000CA3F: 02 87 1C 01 00 00 00 
>0000CA46: 29 02 
>0000CA48: 0A 82 
>0000CA4A: 40 84 B3 04 
>0000CA4E: 42 03 03 
>0000CA51: 34 02 
>0000CA53: 12 06 AD 04 00 00 
>0000CA59: 16 02 
>0000CA5B: 12 06 B2 04 00 00 
>0000CA61: 17 02 
>0000CA63: 16 02 
>0000CA65: 29 02 
>0000CA67: 05 91 22 01 23 01 02 30 03 00 3D 00 14 10 00 01 00 
>0000CA78: 09 07 38 07 00 00 00 
>0000CA7F: 09 07 39 07 10 00 01 
>0000CA86: 29 02 
>0000CA88: 29 02 
>0000CA8A: 05 91 24 01 25 01 B6 04 03 00 3E 00 10 10 00 01 00 
>0000CA9B: 09 07 38 07 30 00 00 
>0000CAA2: 09 07 39 07 00 00 01 
>0000CAA9: 29 02 
>0000CAAB: 06 8E 26 01 27 01 B7 04 03 00 49 00 10 00 
>0000CAB9: 29 02 
>0000CABB: 06 8E 2A 01 2B 01 B8 04 03 00 45 00 10 00 
>0000CAC9: 29 02 
>0000CACB: 06 8E 2E 01 2F 01 B9 04 03 00 44 00 10 00 
>0000CAD9: 29 02 
>0000CADB: 05 91 32 01 33 01 BA 04 03 00 47 00 10 10 00 01 00 
>0000CAEC: 09 07 38 07 00 00 00 
>0000CAF3: 09 07 39 07 30 00 01 
>0000CAFA: 29 02 
>0000CAFC: 05 91 34 01 35 01 BB 04 03 00 40 00 10 10 00 01 00 
>0000CB0D: 09 07 38 07 00 00 00 
>0000CB14: 09 07 39 07 30 00 01 
>0000CB1B: 29 02 
>0000CB1D: 06 8E 30 01 31 01 BC 04 03 00 42 00 10 00 
>0000CB2B: 29 02 
>0000CB2D: 19 82 
>0000CB2F: 12 86 BC 04 00 00 
>0000CB35: 12 06 AF 04 00 00 
>0000CB3B: 16 02 
>0000CB3D: 29 02 
>0000CB3F: 07 91 36 01 37 01 BD 04 03 00 43 00 10 10 00 FF 01 
>0000CB50: 5B 06 00 00 00 00 
>0000CB56: 5B 06 01 00 00 00 
>0000CB5C: 29 02 
>0000CB5E: 29 02 
>0000CB60: 05 91 46 01 47 01 BE 04 03 00 00 00 10 10 00 01 00 
>0000CB71: 09 07 38 07 00 00 00 
>0000CB78: 09 07 39 07 30 00 01 
>0000CB7F: 29 02 
>0000CB81: 19 82 
>0000CB83: 12 06 BE 04 00 00 
>0000CB89: 05 91 48 01 49 01 BF 04 03 00 01 00 10 10 00 01 00 
>0000CB9A: 09 07 38 07 30 00 00 
>0000CBA1: 09 07 39 07 00 00 01 
>0000CBA8: 29 02 
>0000CBAA: 29 02 
>0000CBAC: 19 82 
>0000CBAE: 12 86 BE 04 00 00 
>0000CBB4: 12 06 BF 04 00 00 
>0000CBBA: 16 02 
>0000CBBC: 29 02 
>0000CBBE: 07 94 4E 01 4F 01 C0 04 03 00 02 00 00 11 00 00 FF FF 01 00 
>0000CBD2: 5B 07 00 00 01 00 00 
>0000CBD9: 5B 07 01 00 01 00 00 
>0000CBE0: 29 02 
>0000CBE2: 05 91 4A 01 4B 01 C1 04 03 00 04 00 10 10 00 01 00 
>0000CBF3: 09 07 38 07 30 00 00 
>0000CBFA: 09 07 39 07 00 00 01 
>0000CC01: 29 02 
>0000CC03: 19 82 
>0000CC05: 12 06 C1 04 00 00 
>0000CC0B: 07 94 4C 01 4D 01 C2 04 03 00 05 00 00 11 00 00 FF FF 01 00 
>0000CC1F: 5B 07 00 00 01 00 00 
>0000CC26: 5B 07 01 00 01 00 00 
>0000CC2D: 29 02 
>0000CC2F: 29 02 
>0000CC31: 29 02 
>0000CC33: 05 91 42 01 43 01 C3 04 03 00 15 00 10 10 00 01 00 
>0000CC44: 09 07 38 07 00 00 00 
>0000CC4B: 09 07 39 07 30 00 01 
>0000CC52: 29 02 
>0000CC54: 02 87 AA 00 00 00 00 
>0000CC5B: 29 02 
>0000CC5D: 06 8E 2C 01 2D 01 C4 04 03 00 46 00 10 00 
>0000CC6B: 29 02 
>0000CC6D: 06 8E 28 01 29 01 C5 04 03 00 48 00 10 00 
>0000CC7B: 29 02 
>0000CC7D: 0F 0F 50 01 51 01 C6 04 00 00 FF FF 00 A9 01 
>0000CC8C: 29 02 
>0000CC8E: 29 02 
>0000CC90: 01 86 A9 01 50 01 
>0000CC96: 05 91 52 01 53 01 C7 04 03 00 4A 00 00 10 00 02 00 
>0000CCA7: 09 07 58 01 30 00 00 
>0000CCAE: 09 07 59 01 00 00 01 
>0000CCB5: 09 07 5A 01 00 00 02 
>0000CCBC: 29 02 
>0000CCBE: 05 91 54 01 55 01 C8 04 03 00 4B 00 00 10 00 02 00 
>0000CCCF: 09 07 58 01 30 00 00 
>0000CCD6: 09 07 59 01 00 00 01 
>0000CCDD: 09 07 5A 01 00 00 02 
>0000CCE4: 29 02 
>0000CCE6: 05 91 56 01 57 01 C9 04 03 00 4C 00 00 10 00 03 00 
>0000CCF7: 09 07 58 01 30 00 00 
>0000CCFE: 09 07 5B 01 00 00 01 
>0000CD05: 09 07 5C 01 00 00 02 
>0000CD0C: 09 07 5D 01 00 00 03 
>0000CD13: 29 02 
>0000CD15: 29 02 
>0000CD17: 01 86 51 00 60 01 
>0000CD1D: 0F 0F 61 01 62 01 CA 04 00 00 FF FF 00 52 00 
>0000CD2C: 02 87 F7 02 00 00 00 
>0000CD33: 29 02 
>0000CD35: 0F 0F 38 01 39 01 CB 04 00 00 FF FF 00 21 00 
>0000CD44: 02 87 F7 02 00 00 00 
>0000CD4B: 29 02 
>0000CD4D: 05 91 64 01 65 01 CC 04 03 00 4E 00 10 10 00 0A 00 
>0000CD5E: 09 07 66 01 30 00 0A 
>0000CD65: 09 07 67 01 00 00 00 
>0000CD6C: 09 07 68 01 00 00 01 
>0000CD73: 09 07 69 01 00 00 02 
>0000CD7A: 09 07 6A 01 00 00 03 
>0000CD81: 09 07 6B 01 00 00 04 
>0000CD88: 09 07 6C 01 00 00 05 
>0000CD8F: 29 02 
>0000CD91: 05 91 6F 01 70 01 CD 04 03 00 4F 00 10 10 00 01 00 
>0000CDA2: 09 07 6E 01 30 00 00 
>0000CDA9: 09 07 6D 01 00 00 01 
>0000CDB0: 29 02 
>0000CDB2: 05 91 71 01 72 01 CE 04 03 00 50 00 10 10 00 01 00 
>0000CDC3: 09 07 38 07 00 00 00 
>0000CDCA: 09 07 39 07 30 00 01 
>0000CDD1: 29 02 
>0000CDD3: 29 02 
>0000CDD5: 01 86 21 00 38 01 
>0000CDDB: 06 8E 3A 01 3B 01 CF 04 03 00 51 00 10 03 
>0000CDE9: 29 02 
>0000CDEB: 06 8E 3C 01 3D 01 D0 04 03 00 52 00 10 03 
>0000CDF9: 29 02 
>0000CDFB: 06 8E 3E 01 3F 01 D1 04 03 00 53 00 10 03 
>0000CE09: 29 02 
>0000CE0B: 06 8E 40 01 41 01 D2 04 03 00 54 00 10 03 
>0000CE19: 29 02 
>0000CE1B: 29 02 
>0000CE1D: 01 86 52 00 63 01 
>0000CE23: 05 91 7A 01 7B 01 D3 04 03 00 0A 00 00 10 00 01 00 
>0000CE34: 09 07 38 07 00 00 00 
>0000CE3B: 09 07 39 07 30 00 01 
>0000CE42: 29 02 
>0000CE44: 06 8E 7C 01 7D 01 D4 04 03 00 08 00 10 03 
>0000CE52: 29 02 
>0000CE54: 19 82 
>0000CE56: 12 06 D4 04 00 00 
>0000CE5C: 05 91 7E 01 7F 01 D5 04 03 00 09 00 10 10 00 03 00 
>0000CE6D: 09 07 80 01 30 00 00 
>0000CE74: 09 07 81 01 00 00 01 
>0000CE7B: 09 07 82 01 00 00 02 
>0000CE82: 09 07 83 01 00 00 03 
>0000CE89: 29 02 
>0000CE8B: 29 02 
>0000CE8D: 06 8E 8E 01 8F 01 D6 04 03 00 12 00 10 03 
>0000CE9B: 29 02 
>0000CE9D: 0F 0F 73 01 74 01 C8 10 00 00 FF FF 04 53 00 
>0000CEAC: 05 91 8C 01 8D 01 D7 04 03 00 0B 00 00 10 00 02 00 
>0000CEBD: 09 07 38 07 00 00 00 
>0000CEC4: 09 07 39 07 30 00 02 
>0000CECB: 29 02 
>0000CECD: 19 82 
>0000CECF: 12 86 B4 04 01 00 
>0000CED5: 12 06 1B 05 01 00 
>0000CEDB: 17 02 
>0000CEDD: 16 02 
>0000CEDF: 29 02 
>0000CEE1: 05 91 44 01 45 01 D8 04 03 00 4D 00 10 10 00 01 00 
>0000CEF2: 09 07 38 07 00 00 00 
>0000CEF9: 09 07 39 07 30 00 01 
>0000CF00: 29 02 
>0000CF02: 29 02 
>0000CF04: 05 91 90 01 91 01 D9 04 03 00 0C 00 10 10 00 02 00 
>0000CF15: 09 07 38 07 00 00 00 
>0000CF1C: 09 07 39 07 00 00 01 
>0000CF23: 09 07 A8 00 30 00 02 
>0000CF2A: 29 02 
>0000CF2C: 05 91 92 01 93 01 DA 04 03 00 0D 00 10 10 00 02 00 
>0000CF3D: 09 07 38 07 00 00 00 
>0000CF44: 09 07 39 07 00 00 01 
>0000CF4B: 09 07 A8 00 30 00 02 
>0000CF52: 29 02 
>0000CF54: 05 91 94 01 95 01 DB 04 03 00 0E 00 10 10 00 02 00 
>0000CF65: 09 07 38 07 00 00 00 
>0000CF6C: 09 07 39 07 00 00 01 
>0000CF73: 09 07 A8 00 30 00 02 
>0000CF7A: 29 02 
>0000CF7C: 05 91 96 01 97 01 DC 04 03 00 0F 00 10 10 00 02 00 
>0000CF8D: 09 07 38 07 00 00 00 
>0000CF94: 09 07 39 07 00 00 01 
>0000CF9B: 09 07 A8 00 30 00 02 
>0000CFA2: 29 02 
>0000CFA4: 05 91 98 01 99 01 DD 04 03 00 10 00 10 10 00 02 00 
>0000CFB5: 09 07 38 07 00 00 00 
>0000CFBC: 09 07 39 07 00 00 01 
>0000CFC3: 09 07 A8 00 30 00 02 
>0000CFCA: 29 02 
>0000CFCC: 05 91 A0 01 A1 01 DE 04 03 00 11 00 00 10 00 01 00 
>0000CFDD: 09 07 38 07 30 00 00 
>0000CFE4: 09 07 39 07 00 00 01 
>0000CFEB: 29 02 
>0000CFED: 29 02 
>0000CFEF: 01 86 53 00 75 01 
>0000CFF5: 06 8E 76 01 77 01 DF 04 03 00 56 00 10 00 
>0000D003: 29 02 
>0000D005: 02 87 F7 02 00 00 00 
>0000D00C: 29 02 
>0000D00E: 19 82 
>0000D010: 12 06 DF 04 00 00 
>0000D016: 19 82 
>0000D018: 12 06 E8 04 00 00 
>0000D01E: 05 91 7C 00 7D 00 E0 04 03 00 6D 00 10 10 00 02 00 
>0000D02F: 09 07 7E 00 30 00 00 
>0000D036: 09 07 7F 00 00 00 01 
>0000D03D: 09 07 80 00 00 00 02 
>0000D044: 29 02 
>0000D046: 29 02 
>0000D048: 19 82 
>0000D04A: 12 06 E7 04 00 00 
>0000D050: 07 91 81 00 82 00 B0 10 03 00 57 00 14 10 00 0F 01 
>0000D061: 5B 06 00 00 00 00 
>0000D067: 5B 06 01 00 00 00 
>0000D06D: 29 02 
>0000D06F: 29 02 
>0000D071: 02 87 F7 02 00 00 00 
>0000D078: 29 02 
>0000D07A: 02 87 F7 02 00 00 00 
>0000D081: 29 02 
>0000D083: 0A 82 
>0000D085: 12 86 E8 04 00 00 
>0000D08B: 12 06 E1 04 00 00 
>0000D091: 16 02 
>0000D093: 29 02 
>0000D095: 02 87 85 00 00 00 00 
>0000D09C: 29 02 
>0000D09E: 03 08 87 00 F7 02 88 00 
>0000D0A6: 03 08 8A 00 F7 02 8B 00 
>0000D0AE: 03 08 8D 00 F7 02 8E 00 
>0000D0B6: 03 08 90 00 F7 02 91 00 
>0000D0BE: 29 02 
>0000D0C0: 0A 82 
>0000D0C2: 12 86 E8 04 00 00 
>0000D0C8: 12 06 E1 04 00 00 
>0000D0CE: 16 02 
>0000D0D0: 12 06 E3 04 00 00 
>0000D0D6: 16 02 
>0000D0D8: 29 02 
>0000D0DA: 07 94 93 00 95 00 B1 10 03 00 63 00 04 11 00 00 FF FF 01 00 
>0000D0EE: 5B 07 00 00 01 00 00 
>0000D0F5: 29 02 
>0000D0F7: 29 02 
>0000D0F9: 0A 82 
>0000D0FB: 12 86 E8 04 00 00 
>0000D101: 12 06 E5 04 00 00 
>0000D107: 16 02 
>0000D109: 12 06 E1 04 00 00 
>0000D10F: 16 02 
>0000D111: 29 02 
>0000D113: 07 91 96 00 98 00 B3 10 03 00 66 00 04 10 00 FF 01 
>0000D124: 5B 06 00 00 00 00 
>0000D12A: 29 02 
>0000D12C: 29 02 
>0000D12E: 02 87 F7 02 00 00 00 
>0000D135: 29 02 
>0000D137: 0A 82 
>0000D139: 12 86 E8 04 00 00 
>0000D13F: 12 06 E2 04 00 00 
>0000D145: 16 02 
>0000D147: 29 02 
>0000D149: 02 87 86 00 00 00 00 
>0000D150: 29 02 
>0000D152: 03 08 87 00 F7 02 89 00 
>0000D15A: 03 08 8A 00 F7 02 8C 00 
>0000D162: 03 08 8D 00 F7 02 8F 00 
>0000D16A: 03 08 90 00 F7 02 92 00 
>0000D172: 29 02 
>0000D174: 0A 82 
>0000D176: 12 86 E8 04 00 00 
>0000D17C: 12 06 E2 04 00 00 
>0000D182: 16 02 
>0000D184: 12 06 E4 04 00 00 
>0000D18A: 16 02 
>0000D18C: 29 02 
>0000D18E: 07 94 94 00 95 00 B2 10 03 00 61 00 04 11 00 00 FF FF 01 00 
>0000D1A2: 5B 07 00 00 01 00 00 
>0000D1A9: 29 02 
>0000D1AB: 29 02 
>0000D1AD: 0A 82 
>0000D1AF: 12 86 E8 04 00 00 
>0000D1B5: 12 06 E6 04 00 00 
>0000D1BB: 16 02 
>0000D1BD: 12 06 E2 04 00 00 
>0000D1C3: 16 02 
>0000D1C5: 29 02 
>0000D1C7: 07 91 97 00 98 00 B4 10 03 00 65 00 04 10 00 FF 01 
>0000D1D8: 5B 06 00 00 00 00 
>0000D1DE: 29 02 
>0000D1E0: 29 02 
>0000D1E2: 0A 82 
>0000D1E4: 46 02 
>0000D1E6: 07 91 00 00 00 00 E1 04 03 00 68 00 00 10 00 01 00 
>0000D1F7: 29 02 
>0000D1F9: 07 91 00 00 00 00 E2 04 03 00 67 00 00 10 00 01 00 
>0000D20A: 29 02 
>0000D20C: 07 91 00 00 00 00 E3 04 03 00 6A 00 00 10 00 01 00 
>0000D21D: 29 02 
>0000D21F: 07 91 00 00 00 00 E4 04 03 00 69 00 00 10 00 01 00 
>0000D230: 29 02 
>0000D232: 07 91 00 00 00 00 E5 04 03 00 6C 00 00 10 00 01 00 
>0000D243: 29 02 
>0000D245: 07 91 00 00 00 00 E6 04 03 00 6B 00 00 10 00 01 00 
>0000D256: 29 02 
>0000D258: 07 91 00 00 00 00 E7 04 03 00 58 00 00 10 00 01 00 
>0000D269: 29 02 
>0000D26B: 07 91 00 00 00 00 E8 04 03 00 6E 00 00 10 00 01 00 
>0000D27C: 29 02 
>0000D27E: 29 02 
>0000D280: 29 02 
>0000D282: 29 02 
>0000D284: 29 02 
>0000D286: 0A 82 
>0000D288: 12 86 AE 04 01 00 
>0000D28E: 17 02 
>0000D290: 29 02 
>0000D292: 01 86 54 00 A4 01 
>0000D298: 02 87 A5 01 00 00 00 
>0000D29F: 29 02 
>0000D2A1: 0A 82 
>0000D2A3: 12 86 B2 04 FF 00 
>0000D2A9: 17 02 
>0000D2AB: 29 02 
>0000D2AD: 03 08 03 01 F7 02 06 01 
>0000D2B5: 03 08 03 01 F7 02 08 01 
>0000D2BD: 29 02 
>0000D2BF: 0A 82 
>0000D2C1: 46 02 
>0000D2C3: 07 91 03 01 AA 00 E9 04 03 00 3A 00 10 20 00 FF 00 
>0000D2D4: 5B 06 00 00 00 01 
>0000D2DA: 5B 06 01 00 00 01 
>0000D2E0: 29 02 
>0000D2E2: 29 02 
>0000D2E4: 0A 82 
>0000D2E6: 46 02 
>0000D2E8: 06 8E D9 07 DA 07 EA 04 03 00 27 00 00 00 
>0000D2F6: 5B 06 00 00 00 00 
>0000D2FC: 5B 06 01 00 00 00 
>0000D302: 29 02 
>0000D304: 29 02 
>0000D306: 03 08 EE 00 EF 00 F0 00 
>0000D30E: 03 08 F1 00 F2 00 F3 00 
>0000D316: 03 08 F4 00 F5 00 F6 00 
>0000D31E: 03 08 F8 00 F7 00 F9 00 
>0000D326: 03 08 FB 00 FA 00 FC 00 
>0000D32E: 03 08 FE 00 FD 00 FF 00 
>0000D336: 03 08 01 01 00 01 02 01 
>0000D33E: 03 08 A7 01 A6 01 A8 01 
>0000D346: 19 82 
>0000D348: 12 06 EA 04 00 00 
>0000D34E: 05 91 AD 01 AC 01 EB 04 03 00 19 00 10 10 00 01 00 
>0000D35F: 09 07 FA 02 30 00 00 
>0000D366: 09 07 F9 02 00 00 01 
>0000D36D: 29 02 
>0000D36F: 29 02 
>0000D371: 07 94 AF 01 AE 01 EC 04 03 00 1A 00 10 21 00 00 FF FF 00 00 
>0000D385: 5B 07 00 00 01 00 80 
>0000D38C: 5B 07 01 00 01 00 80 
>0000D393: 29 02 
>0000D395: 07 94 B1 01 B0 01 ED 04 03 00 1C 00 10 21 00 00 FF FF 00 00 
>0000D3A9: 5B 07 00 00 01 00 00 
>0000D3B0: 5B 07 01 00 01 00 00 
>0000D3B7: 29 02 
>0000D3B9: 03 08 AA 01 A9 01 AB 01 
>0000D3C1: 0A 82 
>0000D3C3: 12 86 4D 05 01 00 
>0000D3C9: 17 02 
>0000D3CB: 29 02 
>0000D3CD: 02 87 B2 01 00 00 00 
>0000D3D4: 29 02 
>0000D3D6: 03 08 B5 01 B4 01 B6 01 
>0000D3DE: 03 08 BA 01 B9 01 BB 01 
>0000D3E6: 03 08 BF 01 BE 01 C0 01 
>0000D3EE: 03 08 C4 01 C3 01 C5 01 
>0000D3F6: 02 87 B3 01 00 00 00 
>0000D3FD: 29 02 
>0000D3FF: 07 91 B8 01 B7 01 EE 04 03 00 1F 00 10 20 00 FF 00 
>0000D410: 5B 06 00 00 00 B0 
>0000D416: 5B 06 01 00 00 B0 
>0000D41C: 29 02 
>0000D41E: 07 91 BD 01 BC 01 EF 04 03 00 20 00 10 20 00 FF 00 
>0000D42F: 5B 06 00 00 00 B2 
>0000D435: 5B 06 01 00 00 B2 
>0000D43B: 29 02 
>0000D43D: 07 91 C2 01 C1 01 F0 04 03 00 21 00 10 20 00 FF 00 
>0000D44E: 5B 06 00 00 00 00 
>0000D454: 5B 06 01 00 00 00 
>0000D45A: 29 02 
>0000D45C: 07 91 C7 01 C6 01 F1 04 03 00 22 00 10 20 00 FF 00 
>0000D46D: 5B 06 00 00 00 00 
>0000D473: 5B 06 01 00 00 00 
>0000D479: 29 02 
>0000D47B: 29 02 
>0000D47D: 29 02 
>0000D47F: 01 86 55 00 CA 01 
>0000D485: 0F 0F CB 01 CC 01 F2 04 00 00 FF FF 00 56 00 
>0000D494: 02 87 F7 02 00 00 00 
>0000D49B: 29 02 
>0000D49D: 0F 0F CE 01 CF 01 F3 04 00 00 FF FF 00 57 00 
>0000D4AC: 29 02 
>0000D4AE: 01 86 56 00 CD 01 
>0000D4B4: 07 91 78 01 79 01 F4 04 03 00 2A 00 10 10 00 0C 01 
>0000D4C5: 5B 06 00 00 00 02 
>0000D4CB: 5B 06 01 00 00 02 
>0000D4D1: 29 02 
>0000D4D3: 05 91 7A 01 7B 01 F5 04 03 00 0A 00 00 10 00 01 00 
>0000D4E4: 09 07 38 07 30 00 00 
>0000D4EB: 09 07 39 07 00 00 01 
>0000D4F2: 29 02 
>0000D4F4: 06 8E 7C 01 7D 01 F6 04 03 00 08 00 10 03 
>0000D502: 29 02 
>0000D504: 19 82 
>0000D506: 12 06 F6 04 00 00 
>0000D50C: 05 91 7E 01 7F 01 F7 04 03 00 09 00 10 10 00 03 00 
>0000D51D: 09 07 80 01 30 00 00 
>0000D524: 09 07 81 01 00 00 01 
>0000D52B: 09 07 82 01 00 00 02 
>0000D532: 09 07 83 01 00 00 03 
>0000D539: 29 02 
>0000D53B: 29 02 
>0000D53D: 06 8E 8E 01 8F 01 F8 04 03 00 12 00 10 03 
>0000D54B: 29 02 
>0000D54D: 06 8E E9 01 EA 01 F9 04 03 00 23 00 10 00 
>0000D55B: 29 02 
>0000D55D: 0F 0F 73 01 74 01 C9 10 00 00 FF FF 04 5A 00 
>0000D56C: 06 8E EB 01 EC 01 FA 04 03 00 2D 00 10 00 
>0000D57A: 5B 06 00 00 00 00 
>0000D580: 29 02 
>0000D582: 05 91 88 01 89 01 FB 04 03 00 2B 00 00 10 00 01 00 
>0000D593: 09 07 38 07 00 00 00 
>0000D59A: 09 07 39 07 30 00 01 
>0000D5A1: 29 02 
>0000D5A3: 19 82 
>0000D5A5: 12 06 FB 04 00 00 
>0000D5AB: 05 91 8A 01 8B 01 FC 04 03 00 2C 00 00 10 00 01 00 
>0000D5BC: 09 07 38 07 30 00 00 
>0000D5C3: 09 07 39 07 00 00 01 
>0000D5CA: 29 02 
>0000D5CC: 29 02 
>0000D5CE: 05 91 8C 01 8D 01 FD 04 03 00 0B 00 00 10 00 02 00 
>0000D5DF: 09 07 38 07 00 00 00 
>0000D5E6: 09 07 39 07 30 00 02 
>0000D5ED: 29 02 
>0000D5EF: 05 91 86 01 87 01 FE 04 03 00 2F 00 00 10 00 01 00 
>0000D600: 09 07 38 07 30 00 00 
>0000D607: 09 07 39 07 00 00 01 
>0000D60E: 29 02 
>0000D610: 05 91 84 01 85 01 FF 04 03 00 2E 00 00 10 00 01 00 
>0000D621: 09 07 39 07 30 00 01 
>0000D628: 09 07 38 07 00 00 00 
>0000D62F: 29 02 
>0000D631: 05 91 90 01 91 01 00 05 03 00 0C 00 10 10 00 02 00 
>0000D642: 09 07 38 07 00 00 00 
>0000D649: 09 07 39 07 00 00 01 
>0000D650: 09 07 A8 00 30 00 02 
>0000D657: 29 02 
>0000D659: 05 91 92 01 93 01 01 05 03 00 0D 00 10 10 00 02 00 
>0000D66A: 09 07 38 07 00 00 00 
>0000D671: 09 07 39 07 00 00 01 
>0000D678: 09 07 A8 00 30 00 02 
>0000D67F: 29 02 
>0000D681: 05 91 94 01 95 01 02 05 03 00 0E 00 10 10 00 02 00 
>0000D692: 09 07 38 07 00 00 00 
>0000D699: 09 07 39 07 00 00 01 
>0000D6A0: 09 07 A8 00 30 00 02 
>0000D6A7: 29 02 
>0000D6A9: 05 91 96 01 97 01 03 05 03 00 0F 00 10 10 00 02 00 
>0000D6BA: 09 07 38 07 00 00 00 
>0000D6C1: 09 07 39 07 00 00 01 
>0000D6C8: 09 07 A8 00 30 00 02 
>0000D6CF: 29 02 
>0000D6D1: 05 91 98 01 99 01 04 05 03 00 10 00 10 10 00 02 00 
>0000D6E2: 09 07 38 07 00 00 00 
>0000D6E9: 09 07 39 07 00 00 01 
>0000D6F0: 09 07 A8 00 30 00 02 
>0000D6F7: 29 02 
>0000D6F9: 19 82 
>0000D6FB: 12 06 FB 04 00 00 
>0000D701: 19 82 
>0000D703: 12 06 00 05 00 00 
>0000D709: 05 91 9A 01 9B 01 05 05 03 00 24 00 10 10 00 02 00 
>0000D71A: 09 07 45 08 30 00 00 
>0000D721: 09 07 68 08 00 00 01 
>0000D728: 09 07 A7 00 00 00 02 
>0000D72F: 29 02 
>0000D731: 29 02 
>0000D733: 19 82 
>0000D735: 12 06 01 05 00 00 
>0000D73B: 05 91 9C 01 9D 01 06 05 03 00 25 00 10 10 00 02 00 
>0000D74C: 09 07 45 08 30 00 00 
>0000D753: 09 07 68 08 00 00 01 
>0000D75A: 09 07 A7 00 00 00 02 
>0000D761: 29 02 
>0000D763: 29 02 
>0000D765: 19 82 
>0000D767: 12 06 02 05 00 00 
>0000D76D: 05 91 9E 01 9F 01 07 05 03 00 26 00 10 10 00 02 00 
>0000D77E: 09 07 45 08 30 00 00 
>0000D785: 09 07 68 08 00 00 01 
>0000D78C: 09 07 A7 00 00 00 02 
>0000D793: 29 02 
>0000D795: 29 02 
>0000D797: 29 02 
>0000D799: 05 91 A0 01 A1 01 08 05 03 00 11 00 00 10 00 01 00 
>0000D7AA: 09 07 38 07 30 00 00 
>0000D7B1: 09 07 39 07 00 00 01 
>0000D7B8: 29 02 
>0000D7BA: 06 8E E7 01 E8 01 09 05 03 00 30 00 10 00 
>0000D7C8: 29 02 
>0000D7CA: 05 91 42 01 43 01 0A 05 03 00 15 00 10 10 00 01 00 
>0000D7DB: 09 07 38 07 00 00 00 
>0000D7E2: 09 07 39 07 30 00 01 
>0000D7E9: 29 02 
>0000D7EB: 19 82 
>0000D7ED: 12 06 4C 05 00 00 
>0000D7F3: 05 91 ED 01 EE 01 0B 05 03 00 14 00 10 10 00 01 00 
>0000D804: 09 07 38 07 30 00 00 
>0000D80B: 09 07 39 07 00 00 01 
>0000D812: 29 02 
>0000D814: 29 02 
>0000D816: 02 87 AA 00 00 00 00 
>0000D81D: 29 02 
>0000D81F: 29 02 
>0000D821: 01 86 5A 00 75 01 
>0000D827: 0A 82 
>0000D829: 12 86 E9 04 01 00 
>0000D82F: 17 02 
>0000D831: 29 02 
>0000D833: 06 8E 76 01 77 01 0C 05 03 00 31 00 10 00 
>0000D841: 29 02 
>0000D843: 19 82 
>0000D845: 12 06 0C 05 00 00 
>0000D84B: 06 8E E5 01 E6 01 0D 05 03 00 32 00 10 00 
>0000D859: 5B 06 00 00 00 00 
>0000D85F: 29 02 
>0000D861: 29 02 
>0000D863: 29 02 
>0000D865: 29 02 
>0000D867: 01 86 57 00 D0 01 
>0000D86D: 06 8E D1 01 D2 01 0E 05 03 00 33 00 10 00 
>0000D87B: 29 02 
>0000D87D: 19 82 
>0000D87F: 12 06 0E 05 00 00 
>0000D885: 05 91 D3 01 D4 01 0F 05 03 00 28 00 10 10 00 01 00 
>0000D896: 09 07 D6 01 30 00 00 
>0000D89D: 09 07 D5 01 00 00 01 
>0000D8A4: 29 02 
>0000D8A6: 29 02 
>0000D8A8: 06 8E D7 01 D8 01 10 05 03 00 34 00 10 00 
>0000D8B6: 29 02 
>0000D8B8: 19 82 
>0000D8BA: 12 06 10 05 00 00 
>0000D8C0: 07 91 D9 01 DA 01 11 05 03 00 29 00 10 20 00 7F 01 
>0000D8D1: 5B 06 00 00 00 00 
>0000D8D7: 5B 06 01 00 00 00 
>0000D8DD: 29 02 
>0000D8DF: 29 02 
>0000D8E1: 06 8E DB 01 DC 01 12 05 03 00 35 00 10 00 
>0000D8EF: 29 02 
>0000D8F1: 19 82 
>0000D8F3: 12 06 12 05 00 00 
>0000D8F9: 05 91 DD 01 DE 01 13 05 03 00 36 00 10 10 00 01 00 
>0000D90A: 09 07 38 07 10 00 00 
>0000D911: 09 07 39 07 00 00 01 
>0000D918: 29 02 
>0000D91A: 29 02 
>0000D91C: 06 8E E1 01 E2 01 14 05 03 00 37 00 10 00 
>0000D92A: 29 02 
>0000D92C: 19 82 
>0000D92E: 12 06 14 05 00 00 
>0000D934: 05 91 E3 01 E4 01 15 05 03 00 38 00 10 10 00 01 00 
>0000D945: 09 07 A1 00 10 00 00 
>0000D94C: 09 07 A0 00 00 00 01 
>0000D953: 29 02 
>0000D955: 29 02 
>0000D957: 06 8E DF 01 E0 01 16 05 03 00 39 00 10 00 
>0000D965: 29 02 
>0000D967: 29 02 
>0000D969: 29 02 
>0000D96B: 0A 82 
>0000D96D: 12 86 E9 04 0F 00 
>0000D973: 17 02 
>0000D975: 29 02 
>0000D977: 01 86 58 00 E6 00 
>0000D97D: 0F 0F E7 00 E8 00 17 05 00 00 FF FF 00 59 00 
>0000D98C: 29 02 
>0000D98E: 01 86 59 00 E9 00 
>0000D994: 05 91 7A 01 7B 01 18 05 03 00 0A 00 00 10 00 01 00 
>0000D9A5: 09 07 38 07 30 00 00 
>0000D9AC: 09 07 39 07 00 00 01 
>0000D9B3: 29 02 
>0000D9B5: 06 8E 7C 01 7D 01 19 05 03 00 08 00 10 03 
>0000D9C3: 29 02 
>0000D9C5: 19 82 
>0000D9C7: 12 06 19 05 00 00 
>0000D9CD: 05 91 7E 01 7F 01 1A 05 03 00 09 00 10 10 00 03 00 
>0000D9DE: 09 07 80 01 30 00 00 
>0000D9E5: 09 07 81 01 00 00 01 
>0000D9EC: 09 07 82 01 00 00 02 
>0000D9F3: 09 07 83 01 00 00 03 
>0000D9FA: 29 02 
>0000D9FC: 29 02 
>0000D9FE: 05 91 90 01 91 01 1B 05 03 00 0C 00 10 10 00 02 00 
>0000DA0F: 09 07 38 07 00 00 00 
>0000DA16: 09 07 39 07 00 00 01 
>0000DA1D: 09 07 A8 00 30 00 02 
>0000DA24: 29 02 
>0000DA26: 05 91 92 01 93 01 1C 05 03 00 0D 00 10 10 00 02 00 
>0000DA37: 09 07 38 07 00 00 00 
>0000DA3E: 09 07 39 07 00 00 01 
>0000DA45: 09 07 A8 00 30 00 02 
>0000DA4C: 29 02 
>0000DA4E: 05 91 94 01 95 01 1D 05 03 00 0E 00 10 10 00 02 00 
>0000DA5F: 09 07 38 07 00 00 00 
>0000DA66: 09 07 39 07 00 00 01 
>0000DA6D: 09 07 A8 00 30 00 02 
>0000DA74: 29 02 
>0000DA76: 05 91 96 01 97 01 1E 05 03 00 0F 00 10 10 00 02 00 
>0000DA87: 09 07 38 07 00 00 00 
>0000DA8E: 09 07 39 07 00 00 01 
>0000DA95: 09 07 A8 00 30 00 02 
>0000DA9C: 29 02 
>0000DA9E: 05 91 98 01 99 01 1F 05 03 00 10 00 10 10 00 02 00 
>0000DAAF: 09 07 38 07 00 00 00 
>0000DAB6: 09 07 39 07 00 00 01 
>0000DABD: 09 07 A8 00 30 00 02 
>0000DAC4: 29 02 
>0000DAC6: 29 02 
>0000DAC8: 29 02 
>0000DACA: 01 86 22 00 C6 00 
>0000DAD0: 02 87 C7 00 00 00 00 
>0000DAD7: 29 02 
>0000DAD9: 0A 82 
>0000DADB: 46 02 
>0000DADD: 06 8E F7 02 F7 02 20 05 04 00 09 00 10 03 
>0000DAEB: 29 02 
>0000DAED: 06 8E F7 02 F7 02 21 05 04 00 0A 00 10 00 
>0000DAFB: 29 02 
>0000DAFD: 29 02 
>0000DAFF: 0A 82 
>0000DB01: 12 86 20 05 00 00 
>0000DB07: 17 02 
>0000DB09: 29 02 
>0000DB0B: 02 87 AA 00 00 00 00 
>0000DB12: 29 02 
>0000DB14: 02 87 AA 00 00 00 00 
>0000DB1B: 29 02 
>0000DB1D: 02 87 D9 00 00 00 00 
>0000DB24: 29 02 
>0000DB26: 29 02 
>0000DB28: 0A 82 
>0000DB2A: 12 06 20 05 00 00 
>0000DB30: 03 08 C9 00 C8 00 CA 00 
>0000DB38: 0A 82 
>0000DB3A: 12 06 21 05 00 00 
>0000DB40: 02 87 AA 00 00 00 00 
>0000DB47: 29 02 
>0000DB49: 02 87 AA 00 00 00 00 
>0000DB50: 29 02 
>0000DB52: 02 87 DA 00 00 00 00 
>0000DB59: 29 02 
>0000DB5B: 29 02 
>0000DB5D: 19 82 
>0000DB5F: 12 06 21 05 01 00 
>0000DB65: 05 91 CB 00 CC 00 22 05 04 00 04 00 00 10 00 01 00 
>0000DB76: 09 07 38 07 10 00 00 
>0000DB7D: 09 07 39 07 00 00 01 
>0000DB84: 29 02 
>0000DB86: 05 91 CD 00 CE 00 23 05 04 00 05 00 00 10 00 01 00 
>0000DB97: 09 07 38 07 10 00 00 
>0000DB9E: 09 07 39 07 00 00 01 
>0000DBA5: 29 02 
>0000DBA7: 05 91 CF 00 D0 00 24 05 04 00 06 00 00 10 00 01 00 
>0000DBB8: 09 07 38 07 10 00 00 
>0000DBBF: 09 07 39 07 00 00 01 
>0000DBC6: 29 02 
>0000DBC8: 05 91 D1 00 D2 00 25 05 04 00 07 00 00 10 00 01 00 
>0000DBD9: 09 07 38 07 10 00 00 
>0000DBE0: 09 07 39 07 00 00 01 
>0000DBE7: 29 02 
>0000DBE9: 05 91 D3 00 D4 00 26 05 04 00 08 00 00 10 00 01 00 
>0000DBFA: 09 07 38 07 10 00 00 
>0000DC01: 09 07 39 07 00 00 01 
>0000DC08: 29 02 
>0000DC0A: 29 02 
>0000DC0C: 0A 82 
>0000DC0E: 12 06 4B 05 00 00 
>0000DC14: 05 91 DB 00 DC 00 27 05 04 00 0C 00 00 10 00 01 00 
>0000DC25: 09 07 38 07 00 00 00 
>0000DC2C: 09 07 39 07 10 00 01 
>0000DC33: 29 02 
>0000DC35: 19 82 
>0000DC37: 12 06 27 05 00 00 
>0000DC3D: 05 91 DD 00 DE 00 28 05 04 00 0D 00 00 10 00 20 00 
>0000DC4E: 09 07 DF 00 10 00 00 
>0000DC55: 09 07 E0 00 00 00 10 
>0000DC5C: 09 07 E1 00 00 00 20 
>0000DC63: 29 02 
>0000DC65: 05 91 E2 00 E3 00 29 05 04 00 0E 00 00 10 00 01 00 
>0000DC76: 09 07 38 07 10 00 00 
>0000DC7D: 09 07 39 07 00 00 01 
>0000DC84: 29 02 
>0000DC86: 29 02 
>0000DC88: 29 02 
>0000DC8A: 07 94 D5 00 D6 00 2A 05 04 00 00 00 10 21 00 00 FF FF 01 00 
>0000DC9E: 5B 07 00 00 01 86 80 
>0000DCA5: 5B 07 01 00 01 86 80 
>0000DCAC: 29 02 
>0000DCAE: 07 94 D7 00 D8 00 2B 05 04 00 02 00 10 21 00 00 FF FF 01 00 
>0000DCC2: 5B 07 00 00 01 70 72 
>0000DCC9: 5B 07 01 00 01 70 72 
>0000DCD0: 29 02 
>0000DCD2: 29 02 
>0000DCD4: 29 02 
>0000DCD6: 01 86 D1 03 69 08 
>0000DCDC: 02 87 69 08 00 00 00 
>0000DCE3: 29 02 
>0000DCE5: 02 87 62 07 00 00 00 
>0000DCEC: 29 02 
>0000DCEE: 05 91 69 08 6A 08 2C 05 01 00 01 01 10 10 00 01 00 
>0000DCFF: 09 07 38 07 30 00 00 
>0000DD06: 09 07 39 07 00 00 01 
>0000DD0D: 29 02 
>0000DD0F: 29 02 
>0000DD11: 01 86 F0 03 EF 01 
>0000DD17: 02 87 EF 01 00 00 00 
>0000DD1E: 29 02 
>0000DD20: 02 87 62 07 00 00 00 
>0000DD27: 29 02 
>0000DD29: 05 91 F0 01 F1 01 2D 05 01 00 05 01 10 10 00 01 00 
>0000DD3A: 09 07 38 07 30 00 00 
>0000DD41: 09 07 39 07 00 00 01 
>0000DD48: 29 02 
>0000DD4A: 0A 82 
>0000DD4C: 12 06 2D 05 00 00 
>0000DD52: 05 91 F2 01 F3 01 2E 05 01 00 04 01 10 10 00 01 00 
>0000DD63: 09 07 A7 00 30 00 00 
>0000DD6A: 09 07 A6 00 00 00 01 
>0000DD71: 29 02 
>0000DD73: 0F 0F 5F 02 60 02 2F 05 00 00 FF FF 00 F6 03 
>0000DD82: 0F 0F 61 02 62 02 30 05 00 00 FF FF 00 F3 03 
>0000DD91: 0F 0F 6D 02 6E 02 31 05 00 00 FF FF 00 F4 03 
>0000DDA0: 0F 0F 75 02 76 02 32 05 00 00 FF FF 00 F5 03 
>0000DDAF: 29 02 
>0000DDB1: 29 02 
>0000DDB3: 01 86 F6 03 5F 02 
>0000DDB9: 07 91 F6 01 F7 01 33 05 01 00 06 01 10 10 00 50 01 
>0000DDCA: 5B 06 00 00 00 00 
>0000DDD0: 5B 06 01 00 00 00 
>0000DDD6: 29 02 
>0000DDD8: 05 91 F8 01 F9 01 34 05 01 00 07 01 10 10 00 01 00 
>0000DDE9: 09 07 00 02 30 00 00 
>0000DDF0: 09 07 01 02 00 00 01 
>0000DDF7: 29 02 
>0000DDF9: 0A 82 
>0000DDFB: 12 06 34 05 00 00 
>0000DE01: 07 94 FA 01 FB 01 35 05 01 00 08 01 10 11 00 00 D0 07 01 00 
>0000DE15: 5B 07 00 00 01 00 00 
>0000DE1C: 5B 07 01 00 01 00 00 
>0000DE23: 29 02 
>0000DE25: 29 02 
>0000DE27: 0A 82 
>0000DE29: 12 06 34 05 01 00 
>0000DE2F: 07 94 FE 01 FF 01 36 05 01 00 0D 01 10 11 00 00 D0 07 01 00 
>0000DE43: 5B 07 00 00 01 00 00 
>0000DE4A: 5B 07 01 00 01 00 00 
>0000DE51: 29 02 
>0000DE53: 29 02 
>0000DE55: 07 94 FC 01 FD 01 37 05 01 00 0A 01 10 11 00 00 E8 03 01 00 
>0000DE69: 5B 07 00 00 01 00 00 
>0000DE70: 5B 07 01 00 01 00 00 
>0000DE77: 29 02 
>0000DE79: 05 91 06 02 07 02 38 05 01 00 0C 01 10 10 00 01 00 
>0000DE8A: 09 07 02 02 30 00 00 
>0000DE91: 09 07 03 02 00 00 01 
>0000DE98: 29 02 
>0000DE9A: 29 02 
>0000DE9C: 01 86 F3 03 61 02 
>0000DEA2: 07 91 63 02 64 02 39 05 01 00 12 01 10 10 00 50 01 
>0000DEB3: 5B 06 00 00 00 00 
>0000DEB9: 5B 06 01 00 00 00 
>0000DEBF: 29 02 
>0000DEC1: 05 91 65 02 66 02 3A 05 01 00 13 01 10 10 00 01 00 
>0000DED2: 09 07 00 02 30 00 00 
>0000DED9: 09 07 01 02 00 00 01 
>0000DEE0: 29 02 
>0000DEE2: 0A 82 
>0000DEE4: 12 06 3A 05 00 00 
>0000DEEA: 07 94 67 02 68 02 3B 05 01 00 14 01 10 11 00 00 D0 07 01 00 
>0000DEFE: 5B 07 00 00 01 00 00 
>0000DF05: 5B 07 01 00 01 00 00 
>0000DF0C: 29 02 
>0000DF0E: 29 02 
>0000DF10: 0A 82 
>0000DF12: 12 06 3A 05 01 00 
>0000DF18: 07 94 6B 02 6C 02 3C 05 01 00 19 01 10 11 00 00 D0 07 01 00 
>0000DF2C: 5B 07 00 00 01 00 00 
>0000DF33: 5B 07 01 00 01 00 00 
>0000DF3A: 29 02 
>0000DF3C: 29 02 
>0000DF3E: 07 94 69 02 6A 02 3D 05 01 00 16 01 10 11 00 00 E8 03 01 00 
>0000DF52: 5B 07 00 00 01 00 00 
>0000DF59: 5B 07 01 00 01 00 00 
>0000DF60: 29 02 
>0000DF62: 05 91 04 02 05 02 3E 05 01 00 18 01 10 10 00 01 00 
>0000DF73: 09 07 02 02 30 00 00 
>0000DF7A: 09 07 03 02 00 00 01 
>0000DF81: 29 02 
>0000DF83: 29 02 
>0000DF85: 01 86 F4 03 6D 02 
>0000DF8B: 07 94 6F 02 70 02 3F 05 01 00 1B 01 10 11 00 00 E8 03 01 00 
>0000DF9F: 5B 07 00 00 01 00 00 
>0000DFA6: 5B 07 01 00 01 00 00 
>0000DFAD: 29 02 
>0000DFAF: 05 91 08 02 09 02 40 05 01 00 1D 01 10 10 00 01 00 
>0000DFC0: 09 07 02 02 30 00 00 
>0000DFC7: 09 07 03 02 00 00 01 
>0000DFCE: 29 02 
>0000DFD0: 07 94 71 02 72 02 41 05 01 00 1E 01 10 11 00 00 E8 03 01 00 
>0000DFE4: 5B 07 00 00 01 00 00 
>0000DFEB: 5B 07 01 00 01 00 00 
>0000DFF2: 29 02 
>0000DFF4: 05 91 0A 02 0B 02 42 05 01 00 20 01 10 10 00 01 00 
>0000E005: 09 07 02 02 30 00 00 
>0000E00C: 09 07 03 02 00 00 01 
>0000E013: 29 02 
>0000E015: 07 94 73 02 74 02 43 05 01 00 21 01 10 11 00 00 E8 03 01 00 
>0000E029: 5B 07 00 00 01 00 00 
>0000E030: 5B 07 01 00 01 00 00 
>0000E037: 29 02 
>0000E039: 05 91 0C 02 0D 02 44 05 01 00 23 01 10 10 00 01 00 
>0000E04A: 09 07 02 02 30 00 00 
>0000E051: 09 07 03 02 00 00 01 
>0000E058: 29 02 
>0000E05A: 05 91 B5 02 B6 02 45 05 01 00 31 01 10 10 00 3F 00 
>0000E06B: 09 07 B7 02 30 00 00 
>0000E072: 09 07 B8 02 00 00 01 
>0000E079: 09 07 B9 02 00 00 02 
>0000E080: 09 07 BA 02 00 00 03 
>0000E087: 09 07 BB 02 00 00 04 
>0000E08E: 09 07 BC 02 00 00 05 
>0000E095: 09 07 BD 02 00 00 06 
>0000E09C: 09 07 BE 02 00 00 07 
>0000E0A3: 09 07 BF 02 00 00 08 
>0000E0AA: 09 07 C0 02 00 00 09 
>0000E0B1: 09 07 C1 02 00 00 0A 
>0000E0B8: 09 07 C2 02 00 00 0B 
>0000E0BF: 09 07 C3 02 00 00 0C 
>0000E0C6: 09 07 C4 02 00 00 0D 
>0000E0CD: 09 07 C5 02 00 00 0E 
>0000E0D4: 09 07 C6 02 00 00 0F 
>0000E0DB: 09 07 C7 02 00 00 10 
>0000E0E2: 09 07 C8 02 00 00 11 
>0000E0E9: 09 07 C9 02 00 00 12 
>0000E0F0: 09 07 CA 02 00 00 13 
>0000E0F7: 09 07 CB 02 00 00 14 
>0000E0FE: 09 07 CC 02 00 00 15 
>0000E105: 09 07 CD 02 00 00 16 
>0000E10C: 09 07 CE 02 00 00 17 
>0000E113: 09 07 CF 02 00 00 18 
>0000E11A: 09 07 D0 02 00 00 19 
>0000E121: 09 07 D1 02 00 00 1A 
>0000E128: 09 07 D2 02 00 00 1B 
>0000E12F: 09 07 D3 02 00 00 1C 
>0000E136: 09 07 D4 02 00 00 1D 
>0000E13D: 09 07 D5 02 00 00 1E 
>0000E144: 09 07 D6 02 00 00 1F 
>0000E14B: 09 07 D7 02 00 00 20 
>0000E152: 09 07 D8 02 00 00 21 
>0000E159: 09 07 D9 02 00 00 22 
>0000E160: 09 07 DA 02 00 00 23 
>0000E167: 09 07 DB 02 00 00 24 
>0000E16E: 09 07 DC 02 00 00 25 
>0000E175: 09 07 DD 02 00 00 26 
>0000E17C: 09 07 DE 02 00 00 27 
>0000E183: 09 07 DF 02 00 00 28 
>0000E18A: 09 07 E0 02 00 00 29 
>0000E191: 09 07 E1 02 00 00 2A 
>0000E198: 09 07 E2 02 00 00 2B 
>0000E19F: 09 07 E3 02 00 00 2C 
>0000E1A6: 09 07 E4 02 00 00 2D 
>0000E1AD: 09 07 E5 02 00 00 2E 
>0000E1B4: 09 07 E6 02 00 00 2F 
>0000E1BB: 09 07 E7 02 00 00 30 
>0000E1C2: 09 07 E8 02 00 00 31 
>0000E1C9: 09 07 E9 02 00 00 32 
>0000E1D0: 09 07 EA 02 00 00 33 
>0000E1D7: 09 07 EB 02 00 00 34 
>0000E1DE: 09 07 EC 02 00 00 35 
>0000E1E5: 09 07 ED 02 00 00 36 
>0000E1EC: 09 07 EE 02 00 00 37 
>0000E1F3: 09 07 EF 02 00 00 38 
>0000E1FA: 09 07 F0 02 00 00 39 
>0000E201: 09 07 F1 02 00 00 3A 
>0000E208: 09 07 F2 02 00 00 3B 
>0000E20F: 09 07 F3 02 00 00 3C 
>0000E216: 09 07 F4 02 00 00 3D 
>0000E21D: 09 07 F5 02 00 00 3E 
>0000E224: 09 07 F6 02 00 00 3F 
>0000E22B: 29 02 
>0000E22D: 29 02 
>0000E22F: 01 86 F5 03 75 02 
>0000E235: 05 91 77 02 78 02 46 05 01 00 24 01 10 10 00 01 00 
>0000E246: 09 07 38 07 00 00 00 
>0000E24D: 09 07 39 07 30 00 01 
>0000E254: 29 02 
>0000E256: 0A 82 
>0000E258: 12 06 46 05 00 00 
>0000E25E: 07 94 79 02 7A 02 47 05 01 00 25 01 10 11 00 00 C4 09 01 00 
>0000E272: 5B 07 00 00 01 00 00 
>0000E279: 5B 07 01 00 01 00 00 
>0000E280: 29 02 
>0000E282: 29 02 
>0000E284: 07 94 F4 01 F5 01 48 05 01 00 2F 01 10 11 66 01 CB 01 01 00 
>0000E298: 5B 07 00 00 01 67 01 
>0000E29F: 5B 07 01 00 01 67 01 
>0000E2A6: 29 02 
>0000E2A8: 05 91 7B 02 7C 02 49 05 01 00 27 01 10 10 00 01 00 
>0000E2B9: 09 07 38 07 00 00 00 
>0000E2C0: 09 07 39 07 30 00 01 
>0000E2C7: 29 02 
>0000E2C9: 05 91 7D 02 7E 02 4A 05 01 00 28 01 10 10 00 01 00 
>0000E2DA: 09 07 38 07 00 00 00 
>0000E2E1: 09 07 39 07 30 00 01 
>0000E2E8: 29 02 
>0000E2EA: 1E 82 
>0000E2EC: 46 02 
>0000E2EE: 07 91 00 00 00 00 4B 05 04 00 0B 00 00 10 00 FF 00 
>0000E2FF: 29 02 
>0000E301: 07 91 00 00 00 00 4C 05 03 00 13 00 00 10 00 FF 00 
>0000E312: 29 02 
>0000E314: 07 91 00 00 00 00 4D 05 03 00 1E 00 00 10 00 FF 00 
>0000E325: 29 02 
>0000E327: 07 91 00 00 00 00 4E 05 07 00 0F 00 00 10 00 FF 00 
>0000E338: 29 02 
>0000E33A: 07 91 00 00 00 00 4F 05 0C 00 01 00 00 10 00 FF 00 
>0000E34B: 29 02 
>0000E34D: 07 91 00 00 00 00 50 05 0C 00 00 00 00 10 00 FF 00 
>0000E35E: 29 02 
>0000E360: 29 02 
>0000E362: 29 02 
>0000E364: 29 02 

Total Size of all record is 0x0000E366


***************************************************************
		mPackAlign = 2
		struct BMC_LAN_CFG_DATA : mAlign [2] mTotalSize [0x42a]

		struct BMC_LAN_CFG_DATA {
			+00000000[00000000] NicPresent <UINT8>
			+00000001[00000001] RmmPresent <UINT8>
			+00000002[00000002] UserSelect <UINT8>
			+00000004[00000004] DhcpName[64] <UINT16>
			+00000132[00000084] NicIpv4 <BMC_LAN_IPV4_INFO>
			+00000230[000000e6] NicIpv6 <BMC_LAN_IPV6_INFO>
			+00000394[0000018a] RmmIpv4 <BMC_LAN_IPV4_INFO>
			+00000492[000001ec] RmmIpv6 <BMC_LAN_IPV6_INFO>
			+00000656[00000290] User1 <BMC_LAN_USER_INFO>
			+00000738[000002e2] User2 <BMC_LAN_USER_INFO>
			+00000820[00000334] User3 <BMC_LAN_USER_INFO>
			+00000902[00000386] User4 <BMC_LAN_USER_INFO>
			+00000984[000003d8] User5 <BMC_LAN_USER_INFO>
		};
---------------------------------------------------------------
		struct BMC_LAN_USER_INFO : mAlign [2] mTotalSize [0x52]

		struct BMC_LAN_USER_INFO {
			+00000000[00000000] Name[20] <UINT16>
			+00000040[00000028] Password[20] <UINT16>
			+00000080[00000050] Status <UINT8>
			+00000081[00000051] Privilege <UINT8>
		};
---------------------------------------------------------------
		struct BMC_LAN_IPV6_INFO : mAlign [2] mTotalSize [0xa4]

		struct BMC_LAN_IPV6_INFO {
			+00000000[00000000] Enable <UINT8>
			+00000001[00000001] Source <UINT8>
			+00000002[00000002] PrefixLength <UINT8>
			+00000004[00000004] Address[40] <UINT16>
			+00000084[00000054] Gateway[40] <UINT16>
		};
---------------------------------------------------------------
		struct BMC_LAN_IPV4_INFO : mAlign [2] mTotalSize [0x62]

		struct BMC_LAN_IPV4_INFO {
			+00000000[00000000] Source <UINT8>
			+00000002[00000002] Address[16] <UINT16>
			+00000034[00000022] SubnetMask[16] <UINT16>
			+00000066[00000042] Gateway[16] <UINT16>
		};
---------------------------------------------------------------
		struct SV_OTHER_CONFIGURATION : mAlign [1] mTotalSize [0x14]

		struct SV_OTHER_CONFIGURATION {
			+00000000[00000000] SvBootMode <UINT8>
			+00000001[00000001] CpuSvBootFlag <UINT8>
			+00000002[00000002] FinalSVLoop <UINT8>
			+00000003[00000003] SvDrng <UINT8>
			+00000004[00000004] SvRtitResvMem <UINT8>
			+00000005[00000005] SvRtitOutMemSize <UINT32>
			+00000009[00000009] USB_Stop <UINT8>
			+00000010[0000000a] InitStartUpCodeSegment <UINT16>
			+00000012[0000000c] InitStartUpCodeOffset <UINT16>
			+00000014[0000000e] Reserve_Lower_4K <UINT8>
			+00000015[0000000f] SvITPasCpuSvHIF <UINT8>
			+00000016[00000010] EnableCloaking <UINT8>
			+00000017[00000011] EnableErrCtrlLockUnlock <UINT8>
			+00000018[00000012] XmlKnobsFormat <UINT8>
			+00000019[00000013] CpuSvPublishSmmMcaCap <UINT8>
		};
---------------------------------------------------------------
		struct IE_RC_CONFIGURATION : mAlign [1] mTotalSize [0xf]

		struct IE_RC_CONFIGURATION {
			+00000000[00000000] SubsystemVendorId <UINT16>
			+00000002[00000002] SubsystemId <UINT16>
			+00000004[00000004] IeHeci1Enabled <UINT8>
			+00000005[00000005] IeHeci2Enabled <UINT8>
			+00000006[00000006] IeHeci3Enabled <UINT8>
			+00000007[00000007] IeIderEnabled <UINT8>
			+00000008[00000008] IeKtEnabled <UINT8>
			+00000009[00000009] IeDisabledInSoftStraps <UINT8>
			+00000010[0000000a] DfxIe <UINT8>
			+00000011[0000000b] IeUmaSupported <UINT8>
			+00000012[0000000c] IeDidEnabled <UINT8>
			+00000013[0000000d] IeUmaRequested <UINT8>
			+00000014[0000000e] IePassUmaBaseAddress <UINT8>
		};
---------------------------------------------------------------
		struct ME_RC_CONFIGURATION : mAlign [1] mTotalSize [0x70]

		struct ME_RC_CONFIGURATION {
			+00000000[00000000] Asf <UINT8>
			+00000001[00000001] WatchDog <UINT8>
			+00000002[00000002] WatchDogTimerBios <UINT16>
			+00000004[00000004] WatchDogOs <UINT8>
			+00000005[00000005] WatchDogTimerOs <UINT16>
			+00000007[00000007] Amt <UINT8>
			+00000008[00000008] MeDidEnabled <UINT8>
			+00000009[00000009] MeDidInitStat <UINT8>
			+00000010[0000000a] HsioMessagingEnabled <UINT8>
			+00000011[0000000b] MeEndOfPostEnabled <UINT8>
			+00000012[0000000c] MeHeci1Enabled <UINT8>
			+00000013[0000000d] MeHeci2Enabled <UINT8>
			+00000014[0000000e] MeHeci3Enabled <UINT8>
			+00000015[0000000f] MeIderEnabled <UINT8>
			+00000016[00000010] MeKtEnabled <UINT8>
			+00000017[00000011] DisableD0I3SettingForHeci <UINT8>
			+00000018[00000012] HostResetNotification <UINT8>
			+00000019[00000013] DelayedAuthenticationModeEnabled <UINT8>
			+00000020[00000014] DelayedAuthenticationMode <UINT8>
			+00000021[00000015] CoreBiosDoneEnabled <UINT8>
			+00000022[00000016] MeFwDowngrade <UINT8>
			+00000023[00000017] LocalFwUpdEnabled <UINT8>
			+00000024[00000018] OsPtpAware <UINT8>
			+00000025[00000019] MePttEnabled <UINT8>
			+00000026[0000001a] SpsAltitude <UINT16>
			+00000028[0000001c] SpsMctpBusOwner <UINT16>
			+00000030[0000001e] SpsPmbusProxySupported <UINT8>
			+00000031[0000001f] SpsPsuAddress[4] <UINT8>
			+00000035[00000023] PreDidMeResetEnabled <UINT8>
			+00000036[00000024] MeHeci1HideInMe <UINT8>
			+00000037[00000025] MeHeci2HideInMe <UINT8>
			+00000038[00000026] MeHeci3HideInMe <UINT8>
			+00000039[00000027] MePttSupported <UINT8>
			+00000040[00000028] NmPwrOptBoot <UINT8>
			+00000041[00000029] NmCores2Disable <UINT8>
			+00000042[0000002a] MeTimeout <UINT8>
			+00000043[0000002b] MeHmrfpoLockEnabled <UINT8>
			+00000044[0000002c] MeHmrfpoEnableEnabled <UINT8>
			+00000045[0000002d] MeHmrfpoViaHeci3 <UINT8>
			+00000046[0000002e] MeGrLockEnabled <UINT8>
			+00000047[0000002f] MeGrPromotionEnabled <UINT8>
			+00000048[00000030] BreakRtcEnabled <UINT8>
			+00000049[00000031] SpsIccClkOverride <UINT8>
			+00000050[00000032] SpsIccClkSscSetting <UINT8>
			+00000051[00000033] NmPwrOptBootOverride <UINT8>
			+00000052[00000034] NmCores2DisableOverride <UINT8>
			+00000053[00000035] NmPowerMsmtOverride <UINT8>
			+00000054[00000036] NmPowerMsmtSupport <UINT8>
			+00000055[00000037] NmHwChangeOverride <UINT8>
			+00000056[00000038] NmHwChangeStatus <UINT8>
			+00000057[00000039] NmPtuLoadOverride <UINT8>
			+00000058[0000003a] MeType <UINT8>
			+00000059[0000003b] MeFirmwareMode <UINT8>
			+00000060[0000003c] MeImageType <UINT8>
			+00000061[0000003d] MngState <UINT8>
			+00000062[0000003e] MdesCapability <UINT8>
			+00000063[0000003f] MeIsCorporateWs <UINT8>
			+00000064[00000040] FWProgress <UINT8>
			+00000065[00000041] RemoteSessionActive <UINT8>
			+00000066[00000042] AmtCiraRequest <UINT8>
			+00000067[00000043] AmtCiraTimeout <UINT8>
			+00000068[00000044] UnConfigureMe <UINT8>
			+00000069[00000045] HideUnConfigureMeConfirm <UINT8>
			+00000070[00000046] MebxDebugMsg <UINT8>
			+00000071[00000047] USBProvision <UINT8>
			+00000072[00000048] AmtbxSelectionScreen <UINT8>
			+00000073[00000049] AmtbxHotKeyPressed <UINT8>
			+00000074[0000004a] MebxNonUiTextMode <UINT8>
			+00000075[0000004b] MebxUiTextMode <UINT8>
			+00000076[0000004c] MebxGraphicsMode <UINT8>
			+00000077[0000004d] MeStateControl <UINT8>
			+00000078[0000004e] CpuTypeEmulation <UINT8>
			+00000079[0000004f] CLINKDisableOverride <UINT8>
			+00000080[00000050] VproAllowed <UINT8>
			+00000081[00000051] BiosReflash <UINT8>
			+00000082[00000052] BiosSetup <UINT8>
			+00000083[00000053] BiosPause <UINT8>
			+00000084[00000054] SecureBootExposureToFw <UINT8>
			+00000085[00000055] MeFirmwareInfo <UINT8>
			+00000086[00000056] IccClkOverride <UINT8>
			+00000087[00000057] IccProfile <UINT8>
			+00000088[00000058] ShowProfile <UINT8>
			+00000089[00000059] BClkFrequency <UINT32>
			+00000093[0000005d] BClkOverride <UINT32>
			+00000097[00000061] Frequency[2] <UINT16>
			+00000101[00000065] Spread[2] <UINT8>
			+00000103[00000067] ShowClock[2] <UINT8>
			+00000105[00000069] ShowFrequency[2] <UINT8>
			+00000107[0000006b] ShowSpread[2] <UINT8>
			+00000109[0000006d] RegLock <UINT8>
			+00000110[0000006e] AllowAdvancedOptions <UINT8>
			+00000111[0000006f] PlatformType <UINT8>
		};
---------------------------------------------------------------
		struct PCH_SETUP : mAlign [1] mTotalSize [0x492]

		struct PCH_SETUP {
			+00000000[00000000] BiosGuard <UINT8>
			+00000001[00000001] MeType <UINT8>
			+00000002[00000002] Dwr_Enable <UINT8>
			+00000003[00000003] Dwr_Stall <UINT8>
			+00000004[00000004] Dwr_BmcRootPort <UINT8>
			+00000005[00000005] DwrEn_PMCGBL <UINT8>
			+00000006[00000006] DwrEn_CPUTHRM <UINT8>
			+00000007[00000007] DwrEn_PCHTHRM <UINT8>
			+00000008[00000008] DwrEn_PBO <UINT8>
			+00000009[00000009] DwrEn_MEPBO <UINT8>
			+00000010[0000000a] DwrEn_MEWDT <UINT8>
			+00000011[0000000b] DwrEn_MEGBL <UINT8>
			+00000012[0000000c] DwrEn_CTWDT <UINT8>
			+00000013[0000000d] DwrEn_PMCWDT <UINT8>
			+00000014[0000000e] DwrEn_ME_UERR <UINT8>
			+00000015[0000000f] DwrEn_SYSPWR <UINT8>
			+00000016[00000010] DwrEn_OCWDT <UINT8>
			+00000017[00000011] DwrEn_IEPBO <UINT8>
			+00000018[00000012] DwrEn_IEWDT <UINT8>
			+00000019[00000013] DwrEn_IEGBLN <UINT8>
			+00000020[00000014] DwrEn_IE_UERRN <UINT8>
			+00000021[00000015] DwrEn_ACRU_ERR_2H_EN <UINT8>
			+00000022[00000016] DwrPmcEn_HOST_RESET_TIMEOUT <UINT8>
			+00000023[00000017] DwrPmcEn_SX_ENTRY_TIMEOUT <UINT8>
			+00000024[00000018] DwrPmcEn_HOST_RST_PROM <UINT8>
			+00000025[00000019] DwrPmcEn_HSMB_MSG <UINT8>
			+00000026[0000001a] DwrPmcEn_IE_MTP_TIMEOUT <UINT8>
			+00000027[0000001b] DwrPmcEn_MTP_TIMEOUT <UINT8>
			+00000028[0000001c] DwrPmcEn_ESPI_ERROR_DETECT <UINT8>
			+00000029[0000001d] Dwr_MeResetPrepDone <UINT8>
			+00000030[0000001e] Dwr_IeResetPrepDone <UINT8>
			+00000031[0000001f] BoardCapability <UINT8>
			+00000032[00000020] DeepSxMode <UINT8>
			+00000033[00000021] Gp27WakeFromDeepSx <UINT8>
			+00000034[00000022] GbeRegionInvalid <UINT8>
			+00000035[00000023] LomLanSupported <UINT8>
			+00000036[00000024] PchWakeOnLan <UINT8>
			+00000037[00000025] PchSlpLanLowDc <UINT8>
			+00000038[00000026] PchSmbus <UINT8>
			+00000039[00000027] PchPciClockRun <UINT8>
			+00000040[00000028] PchDisplay <UINT8>
			+00000041[00000029] PchCrid <UINT8>
			+00000042[0000002a] PchRtcLock <UINT8>
			+00000043[0000002b] PchBiosLock <UINT8>
			+00000044[0000002c] PchAllUnLock <UINT8>
			+00000045[0000002d] PchThermalUnlock <UINT8>
			+00000046[0000002e] PchSerm <UINT8>
			+00000047[0000002f] PchGbeFlashLockDown <UINT8>
			+00000048[00000030] PchSmmBwp <UINT8>
			+00000049[00000031] Hpet <UINT8>
			+00000050[00000032] PchPort80Route <UINT8>
			+00000051[00000033] EnableClockSpreadSpec <UINT8>
			+00000052[00000034] IchPort80Route <UINT8>
			+00000053[00000035] PchSirqMode <UINT8>
			+00000054[00000036] PchUsbManualMode <UINT8>
			+00000055[00000037] PchGpioLockDown <UINT8>
			+00000056[00000038] RouteUsb2PinsToWhichHc <UINT8>
			+00000057[00000039] RouteUsb2Pin0 <UINT8>
			+00000058[0000003a] RouteUsb2Pin1 <UINT8>
			+00000059[0000003b] RouteUsb2Pin2 <UINT8>
			+00000060[0000003c] RouteUsb2Pin3 <UINT8>
			+00000061[0000003d] RouteUsb2Pin4 <UINT8>
			+00000062[0000003e] RouteUsb2Pin5 <UINT8>
			+00000063[0000003f] RouteUsb2Pin6 <UINT8>
			+00000064[00000040] RouteUsb2Pin7 <UINT8>
			+00000065[00000041] RouteUsb2Pin8 <UINT8>
			+00000066[00000042] RouteUsb2Pin9 <UINT8>
			+00000067[00000043] RouteUsb2Pin10 <UINT8>
			+00000068[00000044] RouteUsb2Pin11 <UINT8>
			+00000069[00000045] RouteUsb2Pin12 <UINT8>
			+00000070[00000046] RouteUsb2Pin13 <UINT8>
			+00000071[00000047] Usb3PinsTermination <UINT8>
			+00000072[00000048] EnableUsb3Pin[10] <UINT8>
			+00000082[00000052] PchUsbHsPort[16] <UINT8>
			+00000098[00000062] PchUsbSsPort[10] <UINT8>
			+00000108[0000006c] PchUsbPortDisable <UINT8>
			+00000109[0000006d] UsbSensorHub <UINT8>
			+00000110[0000006e] UsbSsicSupport[2] <UINT8>
			+00000112[00000070] XhciDisMSICapability <UINT8>
			+00000113[00000071] PchUsbPerPortCtl <UINT8>
			+00000114[00000072] PchUsb30Port[6] <UINT8>
			+00000120[00000078] UsbPrecondition <UINT8>
			+00000121[00000079] XhciIdleL1 <UINT8>
			+00000122[0000007a] Btcg <UINT8>
			+00000123[0000007b] PchUsbDegradeBar <UINT8>
			+00000124[0000007c] XhciOcMapEnabled <UINT8>
			+00000125[0000007d] PchXdciSupport <UINT8>
			+00000126[0000007e] PchSata <UINT8>
			+00000127[0000007f] SataInterfaceMode <UINT8>
			+00000128[00000080] SataPort[8] <UINT8>
			+00000136[00000088] SataHotPlug[8] <UINT8>
			+00000144[00000090] SataMechanicalSw[8] <UINT8>
			+00000152[00000098] SataSpinUp[8] <UINT8>
			+00000160[000000a0] SataExternal[8] <UINT8>
			+00000168[000000a8] SataType[8] <UINT8>
			+00000176[000000b0] SataRaidR0 <UINT8>
			+00000177[000000b1] SataRaidR1 <UINT8>
			+00000178[000000b2] SataRaidR10 <UINT8>
			+00000179[000000b3] SataRaidR5 <UINT8>
			+00000180[000000b4] SataRaidIrrt <UINT8>
			+00000181[000000b5] SataRaidOub <UINT8>
			+00000182[000000b6] SataHddlk <UINT8>
			+00000183[000000b7] SataLedl <UINT8>
			+00000184[000000b8] SataRaidIooe <UINT8>
			+00000185[000000b9] SataRaidSrt <UINT8>
			+00000186[000000ba] SataRaidLoadEfiDriver[2] <UINT8>
			+00000188[000000bc] SataRaidOromDelay <UINT8>
			+00000189[000000bd] SataAlternateId <UINT8>
			+00000190[000000be] SataSalp <UINT8>
			+00000191[000000bf] SataTestMode <UINT8>
			+00000192[000000c0] PxDevSlp[8] <UINT8>
			+00000200[000000c8] EnableDitoConfig[8] <UINT8>
			+00000208[000000d0] DitoVal[8] <UINT16>
			+00000224[000000e0] DmVal[8] <UINT8>
			+00000232[000000e8] SataTopology[8] <UINT8>
			+00000240[000000f0] PchsSata <UINT8>
			+00000241[000000f1] sSataInterfaceMode <UINT8>
			+00000242[000000f2] sSataPort[6] <UINT8>
			+00000248[000000f8] sSataHotPlug[6] <UINT8>
			+00000254[000000fe] sSataSpinUp[6] <UINT8>
			+00000260[00000104] sSataExternal[6] <UINT8>
			+00000266[0000010a] sPxDevSlp[6] <UINT8>
			+00000272[00000110] sSataType[6] <UINT8>
			+00000278[00000116] sSataRaidR0 <UINT8>
			+00000279[00000117] sSataRaidR1 <UINT8>
			+00000280[00000118] sSataRaidR10 <UINT8>
			+00000281[00000119] sSataRaidR5 <UINT8>
			+00000282[0000011a] sSataRaidIrrt <UINT8>
			+00000283[0000011b] sSataRaidOub <UINT8>
			+00000284[0000011c] sSataHddlk <UINT8>
			+00000285[0000011d] sSataLedl <UINT8>
			+00000286[0000011e] sSataRaidIooe <UINT8>
			+00000287[0000011f] sSataRaidSrt <UINT8>
			+00000288[00000120] sSataRaidOromDelay <UINT8>
			+00000289[00000121] sSataAlternateId <UINT8>
			+00000290[00000122] sSataSalp <UINT8>
			+00000291[00000123] sSataTestMode <UINT8>
			+00000292[00000124] sEnableDitoConfig[6] <UINT8>
			+00000298[0000012a] sDmVal[6] <UINT8>
			+00000304[00000130] sDitoVal[6] <UINT8>
			+00000310[00000136] sSataTopology[6] <UINT8>
			+00000316[0000013c] ThermalDeviceEnable <UINT8>
			+00000317[0000013d] PchCrossThrottling <UINT8>
			+00000318[0000013e] PchDmiExtSync <UINT8>
			+00000319[0000013f] PcieDmiExtSync <UINT8>
			+00000320[00000140] PciDelayOptimizationEcr <UINT8>
			+00000321[00000141] PchPcieGlobalAspm <UINT8>
			+00000322[00000142] PcieDmiStopAndScreamEnable <UINT8>
			+00000323[00000143] DmiLinkDownHangBypass <UINT8>
			+00000324[00000144] XTpmLen <UINT8>
			+00000325[00000145] PcieRootPort8xhDecode <UINT8>
			+00000326[00000146] Pcie8xhDecodePortIndex <UINT8>
			+00000327[00000147] PcieRootPortPeerMemoryWriteEnable <UINT8>
			+00000328[00000148] PcieComplianceTestMode <UINT8>
			+00000329[00000149] ForceEnableAllPCIePorts <UINT8>
			+00000330[0000014a] PcieRootPortSBDE <UINT8>
			+00000331[0000014b] PcieSBDEPort <UINT8>
			+00000332[0000014c] RstPcieStorageRemap[3] <UINT8>
			+00000335[0000014f] RstPcieStorageRemapPort[3] <UINT8>
			+00000338[00000152] PcieRootPortFunctionSwapping <UINT8>
			+00000339[00000153] PcieRootPortEn[20] <UINT8>
			+00000359[00000167] PcieRootPortAspm[20] <UINT8>
			+00000379[0000017b] PcieRootPortURE[20] <UINT8>
			+00000399[0000018f] PcieRootPortFEE[20] <UINT8>
			+00000419[000001a3] PcieRootPortNFE[20] <UINT8>
			+00000439[000001b7] PcieRootPortCEE[20] <UINT8>
			+00000459[000001cb] PcieRootPortMSIE[20] <UINT8>
			+00000479[000001df] PcieRootPortMaxPayLoadSize[20] <UINT8>
			+00000499[000001f3] PcieRootPortAER[20] <UINT8>
			+00000519[00000207] PcieTopology[20] <UINT8>
			+00000539[0000021b] PcieLaneCm[20] <UINT8>
			+00000559[0000022f] PcieLaneCp[20] <UINT8>
			+00000579[00000243] PcieSwEqOverride <UINT8>
			+00000580[00000244] PcieSwEqCoeffCm[5] <UINT8>
			+00000585[00000249] PcieSwEqCoeffCp[5] <UINT8>
			+00000590[0000024e] TestPchPcieEqPh2Override[20] <UINT8>
			+00000610[00000262] TestPchPcieEqPh2Preset[20] <UINT8>
			+00000630[00000276] PchPcieUX8MaxPayloadSize <UINT8>
			+00000631[00000277] PchPcieUX16MaxPayloadSize <UINT8>
			+00000632[00000278] PcieRootPortCompletionTimeout[20] <UINT8>
			+00000652[0000028c] PcieClockGatingDisabled <UINT8>
			+00000653[0000028d] PcieUsbGlitchWa <UINT8>
			+00000654[0000028e] PcieRootPortPIE[20] <UINT8>
			+00000674[000002a2] PcieRootPortACS[20] <UINT8>
			+00000694[000002b6] PcieRootPortEqPh3Method[20] <UINT8>
			+00000714[000002ca] PcieRootPortMaxReadRequestSize <UINT8>
			+00000715[000002cb] PcieRootPortSFE[20] <UINT8>
			+00000735[000002df] PcieRootPortSNE[20] <UINT8>
			+00000755[000002f3] PcieRootPortSCE[20] <UINT8>
			+00000775[00000307] PcieRootPortPMCE[20] <UINT8>
			+00000795[0000031b] PcieRootPortHPE[20] <UINT8>
			+00000815[0000032f] PcieRootPortSpeed[20] <UINT8>
			+00000835[00000343] PcieRootPortTHS[20] <UINT8>
			+00000855[00000357] PcieRootPortL1SubStates[20] <UINT8>
			+00000875[0000036b] MemoryThermalManagement <UINT8>
			+00000876[0000036c] ExttsViaTsOnBoard <UINT8>
			+00000877[0000036d] ExttsViaTsOnDimm <UINT8>
			+00000878[0000036e] FixupPlatformSpecificSoftstraps <UINT8>
			+00000879[0000036f] TestSmbusSpdWriteDisable <UINT8>
			+00000880[00000370] PchHdAudio <UINT8>
			+00000881[00000371] PchHdAudioDsp <UINT8>
			+00000882[00000372] PchHdAudioPme <UINT8>
			+00000883[00000373] PchHdAudioIoBufferOwnership <UINT8>
			+00000884[00000374] PchHdAudioIoBufferVoltage <UINT8>
			+00000885[00000375] PchHdAudioCodecSelect <UINT8>
			+00000886[00000376] PchHdAudioFeature[3] <UINT8>
			+00000889[00000379] PchHdAudioPostProcessingMod[2] <UINT8>
			+00000891[0000037b] DfxHdaVcType <UINT8>
			+00000892[0000037c] PchDelayEnDmiAspm <UINT8>
			+00000893[0000037d] TestDmiAspmCtrl <UINT8>
			+00000894[0000037e] PchPcieLtrEnable[20] <UINT8>
			+00000914[00000392] PchPcieLtrConfigLock[20] <UINT8>
			+00000934[000003a6] PchPcieSnoopLatencyOverrideMode[20] <UINT8>
			+00000954[000003ba] PchPcieSnoopLatencyOverrideMultiplier[20] <UINT8>
			+00000974[000003ce] PchPcieNonSnoopLatencyOverrideMode[20] <UINT8>
			+00000994[000003e2] PchPcieNonSnoopLatencyOverrideMultiplier[20] <UINT8>
			+00001014[000003f6] PchPcieSnoopLatencyOverrideValue[20] <UINT16>
			+00001054[0000041e] PchPcieNonSnoopLatencyOverrideValue[20] <UINT16>
			+00001094[00000446] PchPcieForceLtrOverride[20] <UINT8>
			+00001114[0000045a] PchSataLtrOverride <UINT8>
			+00001115[0000045b] PchSataLtrEnable <UINT8>
			+00001116[0000045c] PchSataSnoopLatencyOverrideValue <UINT16>
			+00001118[0000045e] PchSataSnoopLatencyOverrideMultiplier <UINT8>
			+00001119[0000045f] PchSataLtrConfigLock <UINT8>
			+00001120[00000460] PchSSataLtrOverride <UINT8>
			+00001121[00000461] PchSSataSnoopLatencyOverrideValue <UINT16>
			+00001123[00000463] PchSSataSnoopLatencyOverrideMultiplier <UINT8>
			+00001124[00000464] PchSSataLtrEnable <UINT8>
			+00001125[00000465] PchSSataLtrConfigLock <UINT8>
			+00001126[00000466] PchPcieUX16CompletionTimeout <UINT8>
			+00001127[00000467] PchPcieUX8CompletionTimeout <UINT8>
			+00001128[00000468] PchIoApic24119Entries <UINT8>
			+00001129[00000469] EnableDptf <UINT8>
			+00001130[0000046a] EnablePchDevice <UINT8>
			+00001131[0000046b] DebugDciEnable <UINT8>
			+00001132[0000046c] DebugInterfaceEnable <UINT8>
			+00001133[0000046d] OsDebugPort <UINT8>
			+00001134[0000046e] SlpLanLowDc <UINT8>
			+00001135[0000046f] PchLanK1Off <UINT8>
			+00001136[00000470] PchWakeOnWlan <UINT8>
			+00001137[00000471] PchWakeOnWlanDeepSx <UINT8>
			+00001138[00000472] StateAfterG3 <UINT8>
			+00001139[00000473] PciePllSsc <UINT8>
			+00001140[00000474] FirmwareConfiguration <UINT8>
			+00001141[00000475] PchDciEn <UINT8>
			+00001142[00000476] PchDciAutoDetect <UINT8>
			+00001143[00000477] CSNotifyEC <UINT8>
			+00001144[00000478] EcLowPowerMode <UINT8>
			+00001145[00000479] TraceHubEnableMode <UINT8>
			+00001146[0000047a] MemRegion0BufferSize <UINT8>
			+00001147[0000047b] MemRegion1BufferSize <UINT8>
			+00001148[0000047c] PchP2sbDevReveal <UINT8>
			+00001149[0000047d] PchP2sbUnlock <UINT8>
			+00001150[0000047e] ShowSpiController <UINT8>
			+00001151[0000047f] FlashLockDown <UINT8>
			+00001152[00000480] PmcReadDisable <UINT8>
			+00001153[00000481] TestESPIIOMemoryProg <UINT8>
			+00001154[00000482] PchAdrEn <UINT8>
			+00001155[00000483] AdrTimerEn <UINT8>
			+00001156[00000484] AdrTimerVal <UINT8>
			+00001157[00000485] AdrMultiplierVal <UINT8>
			+00001158[00000486] AdrGpioSel <UINT8>
			+00001159[00000487] AdrHostPartitionReset <UINT8>
			+00001160[00000488] PchAudioDsp <UINT8>
			+00001161[00000489] PchAudioDspD3PowerGating <UINT8>
			+00001162[0000048a] PchAudioDspAcpiMode <UINT8>
			+00001163[0000048b] PchAudioDspBluetooth <UINT8>
			+00001164[0000048c] PchAudioDspAcpiInterruptMode <UINT8>
			+00001165[0000048d] PchEvaMrom0HookEnable <UINT8>
			+00001166[0000048e] PchEvaMrom1HookEnable <UINT8>
			+00001167[0000048f] TestMctpBroadcastCycle <UINT8>
			+00001168[00000490] PchEvaLockDown <UINT8>
			+00001169[00000491] PchTraceHubHide <UINT8>
		};
---------------------------------------------------------------
		struct SOCKET_CONFIGURATION : mAlign [1] mTotalSize [0x2c11]

		struct SOCKET_CONFIGURATION {
			+00000000[00000000] IioConfig <SOCKET_IIO_CONFIGURATION>
			+00010116[00002784] CommonRcConfig <SOCKET_COMMONRC_CONFIGURATION>
			+00010167[000027b7] CsiConfig <SOCKET_MP_LINK_CONFIGURATION>
			+00010326[00002856] MemoryConfig <SOCKET_MEMORY_CONFIGURATION>
			+00010690[000029c2] PowerManagementConfig <SOCKET_POWERMANAGEMENT_CONFIGURATION>
			+00011092[00002b54] SocketProcessorCoreConfiguration <SOCKET_PROCESSORCORE_CONFIGURATION>
		};
---------------------------------------------------------------
		struct SOCKET_MEMORY_CONFIGURATION : mAlign [1] mTotalSize [0x16c]

		struct SOCKET_MEMORY_CONFIGURATION {
			+00000000[00000000] dfxMaxNodeInterleave <UINT8>
			+00000001[00000001] MemoryHotPlugBase <UINT8>
			+00000002[00000002] MemoryHotPlugLen <UINT8>
			+00000003[00000003] Srat <UINT8>
			+00000004[00000004] SratMemoryHotPlug <UINT8>
			+00000005[00000005] SratCpuHotPlug <UINT8>
			+00000006[00000006] PagePolicy <UINT8>
			+00000007[00000007] PatrolScrub <UINT8>
			+00000008[00000008] PatrolScrubDuration <UINT8>
			+00000009[00000009] PatrolScrubAddrMode <UINT8>
			+00000010[0000000a] partialmirrorsad0 <UINT8>
			+00000011[0000000b] PartialMirrorUefi <UINT8>
			+00000012[0000000c] PartialMirrorUefiPercent <UINT16>
			+00000014[0000000e] partialmirrorsize[4] <UINT16>
			+00000022[00000016] ImmediateFailoverAction <UINT8>
			+00000023[00000017] DemandScrubMode <UINT8>
			+00000024[00000018] SddcPlusOneEn <UINT8>
			+00000025[00000019] MemCeFloodPolicy <UINT8>
			+00000026[0000001a] spareErrTh <UINT16>
			+00000028[0000001c] DieSparing <UINT8>
			+00000029[0000001d] DieSparingAggressivenessLevel <UINT8>
			+00000030[0000001e] PclsEn <UINT8>
			+00000031[0000001f] ADDDCEn <UINT8>
			+00000032[00000020] AdddcErrInjEn <UINT8>
			+00000033[00000021] ManualDeviceSpareEn <UINT8>
			+00000034[00000022] leakyBktLo <UINT8>
			+00000035[00000023] leakyBktHi <UINT8>
			+00000036[00000024] txEqCalibration <UINT8>
			+00000037[00000025] CmdTxEqCalibration <UINT8>
			+00000038[00000026] RxDfe <UINT8>
			+00000039[00000027] TxRiseFallSlewRate <UINT8>
			+00000040[00000028] iModeTraining <UINT8>
			+00000041[00000029] RoundTripLatency <UINT8>
			+00000042[0000002a] DutyCycleTraining <UINT8>
			+00000043[0000002b] refreshMode <UINT8>
			+00000044[0000002c] dllResetTestLoops <UINT8>
			+00000045[0000002d] DdrMemoryType <UINT8>
			+00000046[0000002e] HwMemTest <UINT8>
			+00000047[0000002f] MemTestLoops <UINT16>
			+00000049[00000031] EccSupport <UINT8>
			+00000050[00000032] SocketInterleaveBelow4GB <UINT8>
			+00000051[00000033] ExtendedADDDCEn <UINT8>
			+00000052[00000034] DfxInputRt <UINT8>
			+00000053[00000035] DfxInputIoLatency <UINT8>
			+00000054[00000036] DfxInputIoLatencyIoComp <UINT8>
			+00000055[00000037] DfxInputTxDqDelay <UINT16>
			+00000057[00000039] DfxInputTxDqsDelay <UINT16>
			+00000059[0000003b] DfxInputTxDqBitDelay <UINT16>
			+00000061[0000003d] DfxInputRxDqDelay <UINT8>
			+00000062[0000003e] DfxInputRxDqsDelay <UINT16>
			+00000064[00000040] DfxInputRxDqBitDelay <UINT8>
			+00000065[00000041] DfxInputGnt2Erid <UINT16>
			+00000067[00000043] DfxCwlAdjPos <UINT8>
			+00000068[00000044] DfxCwlAdjNeg <UINT8>
			+00000069[00000045] DfxRcvEnDelay <UINT16>
			+00000071[00000047] DfxDdrtRt <UINT8>
			+00000072[00000048] dfxDimmManagement <UINT8>
			+00000073[00000049] dfxPartitionDDRTDimm <UINT8>
			+00000074[0000004a] dfxPartitionRatio[16] <UINT8>
			+00000090[0000005a] volMemMode <UINT8>
			+00000091[0000005b] PmemCaching <UINT8>
			+00000092[0000005c] dfxPerMemMode <UINT8>
			+00000093[0000005d] memInterleaveGran1LM <UINT8>
			+00000094[0000005e] dfxMemInterleaveGranPMemUMA <UINT8>
			+00000095[0000005f] dfxCfgMask2LM <UINT8>
			+00000096[00000060] ImcInterleaving <UINT8>
			+00000097[00000061] ChannelInterleaving <UINT8>
			+00000098[00000062] RankInterleaving <UINT8>
			+00000099[00000063] CkeProgramming <UINT8>
			+00000100[00000064] SrefProgramming <UINT8>
			+00000101[00000065] PkgcSrefEn <UINT8>
			+00000102[00000066] CkeIdleTimer <UINT8>
			+00000103[00000067] ApdEn <UINT8>
			+00000104[00000068] PpdEn <UINT8>
			+00000105[00000069] DdrtCkeEn <UINT8>
			+00000106[0000006a] OppSrefEn <UINT8>
			+00000107[0000006b] DdrtSrefEn <UINT8>
			+00000108[0000006c] MdllOffEn <UINT8>
			+00000109[0000006d] CkMode <UINT8>
			+00000110[0000006e] MemTestOnFastBoot <UINT8>
			+00000111[0000006f] AttemptFastBoot <UINT8>
			+00000112[00000070] AttemptFastBootCold <UINT8>
			+00000113[00000071] bdatEn <UINT8>
			+00000114[00000072] ScrambleEnDDRT <UINT8>
			+00000115[00000073] ScrambleEn <UINT8>
			+00000116[00000074] allowCorrectableError <UINT8>
			+00000117[00000075] allowCorrectableMemTestError <UINT8>
			+00000118[00000076] ScrambleSeedLow <UINT16>
			+00000120[00000078] ScrambleSeedHigh <UINT16>
			+00000122[0000007a] CustomRefreshRateEn <UINT8>
			+00000123[0000007b] CustomRefreshRate <UINT8>
			+00000124[0000007c] mcBgfThreshold <UINT8>
			+00000125[0000007d] readVrefCenter <UINT8>
			+00000126[0000007e] wrVrefCenter <UINT8>
			+00000127[0000007f] haltOnMemErr <UINT8>
			+00000128[00000080] thermalthrottlingsupport <UINT8>
			+00000129[00000081] OffPkgMemToThermTrip <UINT8>
			+00000130[00000082] OffPkgMemToMemTrip <UINT8>
			+00000131[00000083] InPkgMemToThermTrip <UINT8>
			+00000132[00000084] InPkgMemToMemTrip <UINT8>
			+00000133[00000085] DimmTempStatValue <UINT8>
			+00000134[00000086] XMPProfilesSup <UINT8>
			+00000135[00000087] XMPMode <UINT8>
			+00000136[00000088] tCAS <UINT8>
			+00000137[00000089] tRP <UINT8>
			+00000138[0000008a] tRCD <UINT8>
			+00000139[0000008b] tRAS <UINT8>
			+00000140[0000008c] tWR <UINT8>
			+00000141[0000008d] tRFC <UINT16>
			+00000143[0000008f] tRRD <UINT8>
			+00000144[00000090] tRTP <UINT8>
			+00000145[00000091] tWTR <UINT8>
			+00000146[00000092] tFAW <UINT8>
			+00000147[00000093] tCWL <UINT8>
			+00000148[00000094] tRC <UINT8>
			+00000149[00000095] commandTiming <UINT8>
			+00000150[00000096] tREFI <UINT16>
			+00000152[00000098] DdrFreqLimit <UINT8>
			+00000153[00000099] Vdd <UINT16>
			+00000155[0000009b] lrdimmModuleDelay <UINT8>
			+00000156[0000009c] rmtPatternLength <UINT32>
			+00000160[000000a0] rmtPatternLengthExt <UINT32>
			+00000164[000000a4] check_pm_sts <UINT8>
			+00000165[000000a5] check_platform_detect <UINT8>
			+00000166[000000a6] MemPwrSave <UINT8>
			+00000167[000000a7] ElectricalThrottlingMode <UINT8>
			+00000168[000000a8] MultiThreaded <UINT8>
			+00000169[000000a9] promoteMrcWarnings <UINT8>
			+00000170[000000aa] promoteWarnings <UINT8>
			+00000171[000000ab] oppReadInWmm <UINT8>
			+00000172[000000ac] normOppInterval <UINT16>
			+00000174[000000ae] sck0ch0 <UINT8>
			+00000175[000000af] sck0ch1 <UINT8>
			+00000176[000000b0] sck0ch2 <UINT8>
			+00000177[000000b1] sck0ch3 <UINT8>
			+00000178[000000b2] sck0ch4 <UINT8>
			+00000179[000000b3] sck0ch5 <UINT8>
			+00000180[000000b4] sck0ch6 <UINT8>
			+00000181[000000b5] sck0ch7 <UINT8>
			+00000182[000000b6] sck1ch0 <UINT8>
			+00000183[000000b7] sck1ch1 <UINT8>
			+00000184[000000b8] sck1ch2 <UINT8>
			+00000185[000000b9] sck1ch3 <UINT8>
			+00000186[000000ba] sck1ch4 <UINT8>
			+00000187[000000bb] sck1ch5 <UINT8>
			+00000188[000000bc] sck1ch6 <UINT8>
			+00000189[000000bd] sck1ch7 <UINT8>
			+00000190[000000be] sck2ch0 <UINT8>
			+00000191[000000bf] sck2ch1 <UINT8>
			+00000192[000000c0] sck2ch2 <UINT8>
			+00000193[000000c1] sck2ch3 <UINT8>
			+00000194[000000c2] sck2ch4 <UINT8>
			+00000195[000000c3] sck2ch5 <UINT8>
			+00000196[000000c4] sck2ch6 <UINT8>
			+00000197[000000c5] sck2ch7 <UINT8>
			+00000198[000000c6] sck3ch0 <UINT8>
			+00000199[000000c7] sck3ch1 <UINT8>
			+00000200[000000c8] sck3ch2 <UINT8>
			+00000201[000000c9] sck3ch3 <UINT8>
			+00000202[000000ca] sck3ch4 <UINT8>
			+00000203[000000cb] sck3ch5 <UINT8>
			+00000204[000000cc] sck3ch6 <UINT8>
			+00000205[000000cd] sck3ch7 <UINT8>
			+00000206[000000ce] mdllSden <UINT8>
			+00000207[000000cf] memhotSupport <UINT8>
			+00000208[000000d0] MemHotIn <UINT8>
			+00000209[000000d1] MemHotOut <UINT8>
			+00000210[000000d2] MemhotOutputOnlyOpt <UINT8>
			+00000211[000000d3] ADREn <UINT8>
			+00000212[000000d4] RankMargin <UINT8>
			+00000213[000000d5] EnableBacksideRMT <UINT8>
			+00000214[000000d6] EnableBacksideCMDRMT <UINT8>
			+00000215[000000d7] EnableNgnBcomMargining <UINT8>
			+00000216[000000d8] rankMaskEn <UINT8>
			+00000217[000000d9] RankSparing <UINT8>
			+00000218[000000da] multiSparingRanks <UINT8>
			+00000219[000000db] caParity <UINT8>
			+00000220[000000dc] dimmIsolation <UINT8>
			+00000221[000000dd] smbSpeed <UINT8>
			+00000222[000000de] EnforcePOR <UINT8>
			+00000223[000000df] pda <UINT8>
			+00000224[000000e0] turnaroundOpt <UINT8>
			+00000225[000000e1] turnaroundOptDdrt <UINT8>
			+00000226[000000e2] oneRankTimingMode <UINT8>
			+00000227[000000e3] eyeDiagram <UINT8>
			+00000228[000000e4] EnableBiosSsaLoader <UINT8>
			+00000229[000000e5] EnableBiosSsaRMT <UINT8>
			+00000230[000000e6] EnableBiosSsaHbmRmt <UINT8>
			+00000231[000000e7] EnableBiosSsaRMTonFCB <UINT8>
			+00000232[000000e8] BiosSsaPerBitMargining <UINT8>
			+00000233[000000e9] BiosSsaDisplayTables <UINT8>
			+00000234[000000ea] BiosSsaPerDisplayPlots <UINT8>
			+00000235[000000eb] BiosSsaLoopCount <UINT8>
			+00000236[000000ec] BiosSsaBacksideMargining <UINT8>
			+00000237[000000ed] BiosSsaEarlyReadIdMargining <UINT8>
			+00000238[000000ee] BiosSsaStepSizeOverride <UINT8>
			+00000239[000000ef] BiosSsaRxDqs <UINT8>
			+00000240[000000f0] BiosSsaRxVref <UINT8>
			+00000241[000000f1] BiosSsaTxDq <UINT8>
			+00000242[000000f2] BiosSsaTxVref <UINT8>
			+00000243[000000f3] BiosSsaCmdAll <UINT8>
			+00000244[000000f4] BiosSsaCmdVref <UINT8>
			+00000245[000000f5] BiosSsaCtlAll <UINT8>
			+00000246[000000f6] BiosSsaEridDelay <UINT8>
			+00000247[000000f7] BiosSsaEridVref <UINT8>
			+00000248[000000f8] BiosSsaDebugMessages <UINT8>
			+00000249[000000f9] DramRaplInit <UINT8>
			+00000250[000000fa] BwLimitTfOvrd <UINT8>
			+00000251[000000fb] perbitmargin <UINT8>
			+00000252[000000fc] DramRaplExtendedRange <UINT8>
			+00000253[000000fd] CmsEnableDramPm <UINT8>
			+00000254[000000fe] logParsing <UINT8>
			+00000255[000000ff] WritePreamble <UINT8>
			+00000256[00000100] ReadPreamble <UINT8>
			+00000257[00000101] WrCRC <UINT8>
			+00000258[00000102] LockNgnCsr <UINT8>
			+00000259[00000103] NgnCmdTime <UINT8>
			+00000260[00000104] NgnEccCorr <UINT8>
			+00000261[00000105] NgnEccWrChk <UINT8>
			+00000262[00000106] NgnEccRdChk <UINT8>
			+00000263[00000107] CrMonetization <UINT8>
			+00000264[00000108] NgnDebugLock <UINT8>
			+00000265[00000109] NgnArsPublish <UINT8>
			+00000266[0000010a] NgnArsOnBoot <UINT8>
			+00000267[0000010b] NgnPowerMgmt <UINT8>
			+00000268[0000010c] RmtOnColdFastBoot <UINT8>
			+00000269[0000010d] mrcRepeatTest <UINT8>
			+00000270[0000010e] dfxLowMemChannel <UINT8>
			+00000271[0000010f] dfxHighAddressStartBitPosition <UINT8>
			+00000272[00000110] staggerref <UINT8>
			+00000273[00000111] memFlows <UINT32>
			+00000277[00000115] memFlowsExt <UINT32>
			+00000281[00000119] Blockgnt2cmd1cyc <UINT8>
			+00000282[0000011a] Disddrtopprd <UINT8>
			+00000283[0000011b] NgnPeakPower <UINT16>
			+00000285[0000011d] NgnAveragePower <UINT16>
			+00000287[0000011f] setSecureEraseAllDIMMs <UINT8>
			+00000288[00000120] setSecureEraseSktCh[48] <UINT8>
			+00000336[00000150] pprType <UINT8>
			+00000337[00000151] pprErrInjTest <UINT8>
			+00000338[00000152] crQosConfig <UINT8>
			+00000339[00000153] dfxLoadDimmMgmtDriver <UINT8>
			+00000340[00000154] DfxLoadDimmDebugFw <UINT8>
			+00000341[00000155] LegacyADRModeEn <UINT8>
			+00000342[00000156] crMixedSKU <UINT8>
			+00000343[00000157] imcBclk <UINT8>
			+00000344[00000158] spdCrcCheck <UINT8>
			+00000345[00000159] DfxDdrtTransactor <UINT8>
			+00000346[0000015a] SanitizeOverwriteNvmDimm <UINT8>
			+00000347[0000015b] LatchSystemShutdownState <UINT8>
			+00000348[0000015c] EliminateDirectoryInFarMemory <UINT8>
			+00000349[0000015d] HbmCacheEnable <UINT8>
			+00000350[0000015e] HbmCacheRatio <UINT8>
			+00000351[0000015f] HbmCacheFmType <UINT8>
			+00000352[00000160] HbmCacheDdrtGran <UINT8>
			+00000353[00000161] HbmPagePolicy <UINT8>
			+00000354[00000162] HbmDbiMode <UINT8>
			+00000355[00000163] HbmRelaxedTurnaround <UINT8>
			+00000356[00000164] HbmRefreshMode <UINT8>
			+00000357[00000165] HbmSrefProgramming <UINT8>
			+00000358[00000166] HbmSrefIdleTimer <UINT8>
			+00000359[00000167] HbmOppSrefEn <UINT8>
			+00000360[00000168] HbmPkgcSrefEn <UINT8>
			+00000361[00000169] CmiInitOption <UINT8>
			+00000362[0000016a] cmdSetupPercentOffset <UINT8>
			+00000363[0000016b] ShortStroke2GB <UINT8>
		};
---------------------------------------------------------------
		struct SOCKET_MP_LINK_CONFIGURATION : mAlign [1] mTotalSize [0x9f]

		struct SOCKET_MP_LINK_CONFIGURATION {
			+00000000[00000000] QpiSetupNvVariableStartTag <UINT8>
			+00000001[00000001] BusRatio[4] <UINT8>
			+00000005[00000005] LegacyVgaSoc <UINT8>
			+00000006[00000006] LegacyVgaStack <UINT8>
			+00000007[00000007] MmioP2pDis <UINT8>
			+00000008[00000008] DebugPrintLevel <UINT8>
			+00000009[00000009] DegradePrecedence <UINT8>
			+00000010[0000000a] QpiLinkSpeedMode <UINT8>
			+00000011[0000000b] QpiLinkSpeed <UINT8>
			+00000012[0000000c] KtiLinkL0pEn <UINT8>
			+00000013[0000000d] KtiLinkL1En <UINT8>
			+00000014[0000000e] KtiFailoverEn <UINT8>
			+00000015[0000000f] KtiLbEn <UINT8>
			+00000016[00000010] KtiCrcMode <UINT8>
			+00000017[00000011] QpiCpuSktHotPlugEn <UINT8>
			+00000018[00000012] KtiCpuSktHotPlugTopology <UINT8>
			+00000019[00000013] KtiSkuMismatchCheck <UINT8>
			+00000020[00000014] KtiLinkVnaOverride <UINT8>
			+00000021[00000015] SncEn <UINT8>
			+00000022[00000016] IoDcMode <UINT8>
			+00000023[00000017] DirectoryModeEn <UINT8>
			+00000024[00000018] XptPrefetchEn <UINT8>
			+00000025[00000019] KtiPrefetchEn <UINT8>
			+00000026[0000001a] XptRemotePrefetchEn <UINT8>
			+00000027[0000001b] RdCurForXptPrefetchEn <UINT8>
			+00000028[0000001c] IrqThreshold <UINT8>
			+00000029[0000001d] TorThresLoctoremNorm <UINT8>
			+00000030[0000001e] TorThresLoctoremEmpty <UINT8>
			+00000031[0000001f] TscSyncEn <UINT8>
			+00000032[00000020] StaleAtoSOptEn <UINT8>
			+00000033[00000021] LLCDeadLineAlloc <UINT8>
			+00000034[00000022] SplitLock <UINT8>
			+00000035[00000023] DdrtQoSEn <UINT8>
			+00000036[00000024] DfxSystemWideParmStart <UINT8>
			+00000037[00000025] DfxHaltLinkFailReset <UINT8>
			+00000038[00000026] DfxKtiMaxInitAbort <UINT8>
			+00000039[00000027] DfxLlcShareDrdCrd <UINT8>
			+00000040[00000028] DfxBiasFwdMode <UINT8>
			+00000041[00000029] DfxSnoopFanoutEn <UINT8>
			+00000042[0000002a] DfxHitMeEn <UINT8>
			+00000043[0000002b] DfxFrcfwdinv <UINT8>
			+00000044[0000002c] DfxDbpEnable <UINT8>
			+00000045[0000002d] DfxCleanEvictAlwaysLive <UINT8>
			+00000046[0000002e] DfxModifiedEvictAlwaysLive <UINT8>
			+00000047[0000002f] DfxOsbEn <UINT8>
			+00000048[00000030] DfxHitMeRfoDirsEn <UINT8>
			+00000049[00000031] DfxGateOsbIodcAllocEn <UINT8>
			+00000050[00000032] DfxDualLinksInterleavingMode <UINT8>
			+00000051[00000033] DfxSystemDegradeMode <UINT8>
			+00000052[00000034] DfxVn1En <UINT8>
			+00000053[00000035] DfxD2cEn <UINT8>
			+00000054[00000036] DfxD2kEn <UINT8>
			+00000055[00000037] DfxLockMaster <UINT8>
			+00000056[00000038] DfxOsbLocRd <UINT8>
			+00000057[00000039] DfxOsbLocRdCur <UINT8>
			+00000058[0000003a] DfxOsbRmtRd <UINT8>
			+00000059[0000003b] DfxSystemWideParmEnd <UINT8>
			+00000060[0000003c] SvKtiSystemWideParmStartTag <UINT8>
			+00000061[0000003d] SvMinCreditSocEn[4] <UINT8>
			+00000065[00000041] SvAkFifoThld <UINT8>
			+00000066[00000042] SvM3KtiCountMismatchEn <UINT8>
			+00000067[00000043] SvDisIsocEgrRes <UINT8>
			+00000068[00000044] SvKtiForceUnusedL1En <UINT8>
			+00000069[00000045] SvMctpBroadcastEn <UINT8>
			+00000070[00000046] SvKtiEvDebugPrintEn <UINT8>
			+00000071[00000047] SvKtiSystemWideParmEndTag <UINT8>
			+00000072[00000048] KtiCpuPerPortStartTag <UINT8>
			+00000073[00000049] Cpu0P0KtiPortDisable <UINT8>
			+00000074[0000004a] Cpu0P0KtiLinkSpeed <UINT8>
			+00000075[0000004b] Cpu0P0KtiLinkVnaOverride <UINT8>
			+00000076[0000004c] Cpu0P1KtiPortDisable <UINT8>
			+00000077[0000004d] Cpu0P1KtiLinkSpeed <UINT8>
			+00000078[0000004e] Cpu0P1KtiLinkVnaOverride <UINT8>
			+00000079[0000004f] Cpu0P2KtiPortDisable <UINT8>
			+00000080[00000050] Cpu0P2KtiLinkSpeed <UINT8>
			+00000081[00000051] Cpu0P2KtiLinkVnaOverride <UINT8>
			+00000082[00000052] Cpu1P0KtiPortDisable <UINT8>
			+00000083[00000053] Cpu1P0KtiLinkSpeed <UINT8>
			+00000084[00000054] Cpu1P0KtiLinkVnaOverride <UINT8>
			+00000085[00000055] Cpu1P1KtiPortDisable <UINT8>
			+00000086[00000056] Cpu1P1KtiLinkSpeed <UINT8>
			+00000087[00000057] Cpu1P1KtiLinkVnaOverride <UINT8>
			+00000088[00000058] Cpu1P2KtiPortDisable <UINT8>
			+00000089[00000059] Cpu1P2KtiLinkSpeed <UINT8>
			+00000090[0000005a] Cpu1P2KtiLinkVnaOverride <UINT8>
			+00000091[0000005b] Cpu2P0KtiPortDisable <UINT8>
			+00000092[0000005c] Cpu2P0KtiLinkSpeed <UINT8>
			+00000093[0000005d] Cpu2P0KtiLinkVnaOverride <UINT8>
			+00000094[0000005e] Cpu2P1KtiPortDisable <UINT8>
			+00000095[0000005f] Cpu2P1KtiLinkSpeed <UINT8>
			+00000096[00000060] Cpu2P1KtiLinkVnaOverride <UINT8>
			+00000097[00000061] Cpu2P2KtiPortDisable <UINT8>
			+00000098[00000062] Cpu2P2KtiLinkSpeed <UINT8>
			+00000099[00000063] Cpu2P2KtiLinkVnaOverride <UINT8>
			+00000100[00000064] Cpu3P0KtiPortDisable <UINT8>
			+00000101[00000065] Cpu3P0KtiLinkSpeed <UINT8>
			+00000102[00000066] Cpu3P0KtiLinkVnaOverride <UINT8>
			+00000103[00000067] Cpu3P1KtiPortDisable <UINT8>
			+00000104[00000068] Cpu3P1KtiLinkSpeed <UINT8>
			+00000105[00000069] Cpu3P1KtiLinkVnaOverride <UINT8>
			+00000106[0000006a] Cpu3P2KtiPortDisable <UINT8>
			+00000107[0000006b] Cpu3P2KtiLinkSpeed <UINT8>
			+00000108[0000006c] Cpu3P2KtiLinkVnaOverride <UINT8>
			+00000109[0000006d] DfxKtiCpuPerPortStartTag <UINT8>
			+00000110[0000006e] Cpu0P0DfxCrcMode <UINT8>
			+00000111[0000006f] Cpu0P0DfxL0pEnable <UINT8>
			+00000112[00000070] Cpu0P0DfxL1Enable <UINT8>
			+00000113[00000071] Cpu0P0DfxKtiFailoverEn <UINT8>
			+00000114[00000072] Cpu0P1DfxCrcMode <UINT8>
			+00000115[00000073] Cpu0P1DfxL0pEnable <UINT8>
			+00000116[00000074] Cpu0P1DfxL1Enable <UINT8>
			+00000117[00000075] Cpu0P1DfxKtiFailoverEn <UINT8>
			+00000118[00000076] Cpu0P2DfxCrcMode <UINT8>
			+00000119[00000077] Cpu0P2DfxL0pEnable <UINT8>
			+00000120[00000078] Cpu0P2DfxL1Enable <UINT8>
			+00000121[00000079] Cpu0P2DfxKtiFailoverEn <UINT8>
			+00000122[0000007a] Cpu1P0DfxCrcMode <UINT8>
			+00000123[0000007b] Cpu1P0DfxL0pEnable <UINT8>
			+00000124[0000007c] Cpu1P0DfxL1Enable <UINT8>
			+00000125[0000007d] Cpu1P0DfxKtiFailoverEn <UINT8>
			+00000126[0000007e] Cpu1P1DfxCrcMode <UINT8>
			+00000127[0000007f] Cpu1P1DfxL0pEnable <UINT8>
			+00000128[00000080] Cpu1P1DfxL1Enable <UINT8>
			+00000129[00000081] Cpu1P1DfxKtiFailoverEn <UINT8>
			+00000130[00000082] Cpu1P2DfxCrcMode <UINT8>
			+00000131[00000083] Cpu1P2DfxL0pEnable <UINT8>
			+00000132[00000084] Cpu1P2DfxL1Enable <UINT8>
			+00000133[00000085] Cpu1P2DfxKtiFailoverEn <UINT8>
			+00000134[00000086] Cpu2P0DfxCrcMode <UINT8>
			+00000135[00000087] Cpu2P0DfxL0pEnable <UINT8>
			+00000136[00000088] Cpu2P0DfxL1Enable <UINT8>
			+00000137[00000089] Cpu2P0DfxKtiFailoverEn <UINT8>
			+00000138[0000008a] Cpu2P1DfxCrcMode <UINT8>
			+00000139[0000008b] Cpu2P1DfxL0pEnable <UINT8>
			+00000140[0000008c] Cpu2P1DfxL1Enable <UINT8>
			+00000141[0000008d] Cpu2P1DfxKtiFailoverEn <UINT8>
			+00000142[0000008e] Cpu2P2DfxCrcMode <UINT8>
			+00000143[0000008f] Cpu2P2DfxL0pEnable <UINT8>
			+00000144[00000090] Cpu2P2DfxL1Enable <UINT8>
			+00000145[00000091] Cpu2P2DfxKtiFailoverEn <UINT8>
			+00000146[00000092] Cpu3P0DfxCrcMode <UINT8>
			+00000147[00000093] Cpu3P0DfxL0pEnable <UINT8>
			+00000148[00000094] Cpu3P0DfxL1Enable <UINT8>
			+00000149[00000095] Cpu3P0DfxKtiFailoverEn <UINT8>
			+00000150[00000096] Cpu3P1DfxCrcMode <UINT8>
			+00000151[00000097] Cpu3P1DfxL0pEnable <UINT8>
			+00000152[00000098] Cpu3P1DfxL1Enable <UINT8>
			+00000153[00000099] Cpu3P1DfxKtiFailoverEn <UINT8>
			+00000154[0000009a] Cpu3P2DfxCrcMode <UINT8>
			+00000155[0000009b] Cpu3P2DfxL0pEnable <UINT8>
			+00000156[0000009c] Cpu3P2DfxL1Enable <UINT8>
			+00000157[0000009d] Cpu3P2DfxKtiFailoverEn <UINT8>
			+00000158[0000009e] QpiSetupNvVariableEndTag <UINT8>
		};
---------------------------------------------------------------
		struct SOCKET_PROCESSORCORE_CONFIGURATION : mAlign [1] mTotalSize [0xbd]

		struct SOCKET_PROCESSORCORE_CONFIGURATION {
			+00000000[00000000] CpuidMaxValue <UINT8>
			+00000001[00000001] PchTraceHubEn <UINT8>
			+00000002[00000002] ProcessorHyperThreadingDisable <UINT8>
			+00000003[00000003] ProcessorSmxEnable <UINT8>
			+00000004[00000004] ThreeStrikeTimer <UINT8>
			+00000005[00000005] FastStringEnable <UINT8>
			+00000006[00000006] MachineCheckEnable <UINT8>
			+00000007[00000007] MlcStreamerPrefetcherEnable <UINT8>
			+00000008[00000008] MlcSpatialPrefetcherEnable <UINT8>
			+00000009[00000009] DCUStreamerPrefetcherEnable <UINT8>
			+00000010[0000000a] DCUIPPrefetcherEnable <UINT8>
			+00000011[0000000b] DCUModeSelection <UINT8>
			+00000012[0000000c] ProcessorX2apic <UINT8>
			+00000013[0000000d] ForceX2ApicIds <UINT8>
			+00000014[0000000e] BspSelection <UINT8>
			+00000015[0000000f] IedSize <UINT8>
			+00000016[00000010] IedTraceSize <UINT8>
			+00000017[00000011] TsegSize <UINT8>
			+00000018[00000012] AllowMixedPowerOnCpuRatio <UINT8>
			+00000019[00000013] CheckCpuBist <UINT8>
			+00000020[00000014] ProcessorFlexibleRatio <UINT8>
			+00000021[00000015] ProcessorFlexibleRatioOverrideEnable <UINT8>
			+00000022[00000016] MTRRDefTypeUncachable <UINT8>
			+00000023[00000017] ForcePhysicalModeEnable <UINT8>
			+00000024[00000018] LlcPrefetchEnable <UINT8>
			+00000025[00000019] ProcessorVirtualWireMode <UINT8>
			+00000026[0000001a] ExecuteDisableBit <UINT8>
			+00000027[0000001b] ProcessorLtsxEnable <UINT8>
			+00000028[0000001c] ProcessorVmxEnable <UINT8>
			+00000029[0000001d] ProcessorMsrLockControl <UINT8>
			+00000030[0000001e] DebugInterface <UINT8>
			+00000031[0000001f] AesEnable <UINT8>
			+00000032[00000020] PpinControl <UINT8>
			+00000033[00000021] LockChipset <UINT8>
			+00000034[00000022] BiosAcmErrorReset <UINT8>
			+00000035[00000023] AcmType <UINT8>
			+00000036[00000024] EnableSgx <UINT8>
			+00000037[00000025] SgxFactoryReset <UINT8>
			+00000038[00000026] SgxOobManagement <UINT8>
			+00000039[00000027] SgxPackageInfoInBandAccess <UINT8>
			+00000040[00000028] EpochUpdate <UINT8>
			+00000041[00000029] ShowEpoch <UINT8>
			+00000042[0000002a] PrmrrBase0 <UINT64>
			+00000050[00000032] PrmrrSize <UINT64>
			+00000058[0000003a] SgxEpoch0 <UINT64>
			+00000066[00000042] SgxEpoch1 <UINT64>
			+00000074[0000004a] SgxQoS <UINT8>
			+00000075[0000004b] SgxLePubKeyHash0 <UINT64>
			+00000083[00000053] SgxLePubKeyHash1 <UINT64>
			+00000091[0000005b] SgxLePubKeyHash2 <UINT64>
			+00000099[00000063] SgxLePubKeyHash3 <UINT64>
			+00000107[0000006b] SgxLeWr <UINT8>
			+00000108[0000006c] SgxDebugMode <UINT8>
			+00000109[0000006d] EnableTme <UINT8>
			+00000110[0000006e] EnableTmeCR <UINT8>
			+00000111[0000006f] TmeCrSupport <UINT8>
			+00000112[00000070] TmeExclusionBase <UINT32>
			+00000116[00000074] TmeExclusionLength <UINT32>
			+00000120[00000078] EnableMktme <UINT8>
			+00000121[00000079] MktmeMaxKeys <UINT16>
			+00000123[0000007b] SkipStopPbet <UINT8>
			+00000124[0000007c] CoreDisableMask[4] <UINT64>
			+00000156[0000009c] IotEn[4] <UINT8>
			+00000160[000000a0] OclaMaxTorEntry[4] <UINT8>
			+00000164[000000a4] OclaMinWay[4] <UINT8>
			+00000168[000000a8] IioLlcWaysMask <UINT32>
			+00000172[000000ac] ExpandedIioLlcWaysMask <UINT32>
			+00000176[000000b0] RemoteWaysMask <UINT32>
			+00000180[000000b4] PCIeDownStreamPECIWrite <UINT8>
			+00000181[000000b5] TargetedSmi <UINT8>
			+00000182[000000b6] eSmmSaveState <UINT8>
			+00000183[000000b7] PeciInTrustControlBit <UINT8>
			+00000184[000000b8] Poison <UINT8>
			+00000185[000000b9] Viral <UINT8>
			+00000186[000000ba] EVMode <UINT8>
			+00000187[000000bb] SmbusErrorRecovery <UINT8>
			+00000188[000000bc] CpuL1NextPagePrefetcherDisable <UINT8>
		};
---------------------------------------------------------------
		struct SOCKET_POWERMANAGEMENT_CONFIGURATION : mAlign [1] mTotalSize [0x192]

		struct SOCKET_POWERMANAGEMENT_CONFIGURATION {
			+00000000[00000000] LOT26UnusedVrPowerDownEnable <UINT8>
			+00000001[00000001] WFRWAEnable <UINT8>
			+00000002[00000002] UFSDisable <UINT8>
			+00000003[00000003] ProcessorEistSupport <UINT8>
			+00000004[00000004] ProcessorEistEnable <UINT8>
			+00000005[00000005] ConfigTDP <UINT8>
			+00000006[00000006] ConfigTDPLevel <UINT8>
			+00000007[00000007] AcpiS3Enable <UINT8>
			+00000008[00000008] AcpiS4Enable <UINT8>
			+00000009[00000009] ProcessorHWPMEnable <UINT8>
			+00000010[0000000a] ProcessorAutonomousCstateEnable <UINT8>
			+00000011[0000000b] ProcessorHWPMInterrupt <UINT8>
			+00000012[0000000c] ProcessorEPPEnable <UINT8>
			+00000013[0000000d] ProcessorEppProfile <UINT8>
			+00000014[0000000e] ProcessorAPSrocketing <UINT8>
			+00000015[0000000f] ProcessorScalability <UINT8>
			+00000016[00000010] ProcessorPerCoreRaplLimit <UINT8>
			+00000017[00000011] ProcessorOutofBandAlternateEPB <UINT8>
			+00000018[00000012] ProcessorEistPsdFunc <UINT8>
			+00000019[00000013] BootPState <UINT8>
			+00000020[00000014] TurboMode <UINT8>
			+00000021[00000015] EnableXe <UINT8>
			+00000022[00000016] OverclockingLock <UINT8>
			+00000023[00000017] AvxSupport <UINT8>
			+00000024[00000018] AvxIccpLevel <UINT8>
			+00000025[00000019] TurboRatioLimitRatio[8] <UINT8>
			+00000033[00000021] TurboRatioLimitCores[8] <UINT8>
			+00000041[00000029] C2C3TT <UINT8>
			+00000042[0000002a] DynamicL1 <UINT8>
			+00000043[0000002b] ProcessorCcxEnable <UINT8>
			+00000044[0000002c] PackageCState <UINT8>
			+00000045[0000002d] C3Enable <UINT8>
			+00000046[0000002e] C6Enable <UINT8>
			+00000047[0000002f] ProcessorC1eEnable <UINT8>
			+00000048[00000030] OSCx <UINT8>
			+00000049[00000031] C1AutoDemotion <UINT8>
			+00000050[00000032] C1AutoUnDemotion <UINT8>
			+00000051[00000033] MonitorMWait <UINT8>
			+00000052[00000034] CStateLatencyCtrlValid[6] <UINT8>
			+00000058[0000003a] CStateLatencyCtrlMultiplier[6] <UINT8>
			+00000064[00000040] CStateLatencyCtrlValue[6] <UINT16>
			+00000076[0000004c] TStateEnable <UINT8>
			+00000077[0000004d] OnDieThermalThrottling <UINT8>
			+00000078[0000004e] ProchotLock <UINT8>
			+00000079[0000004f] EnableProcHot <UINT8>
			+00000080[00000050] EnableThermalMonitor <UINT8>
			+00000081[00000051] ProchotResponse <UINT8>
			+00000082[00000052] EETurboDisable <UINT8>
			+00000083[00000053] SapmctlValCtl <UINT8>
			+00000084[00000054] PwrPerfTuning <UINT8>
			+00000085[00000055] AltEngPerfBIAS <UINT8>
			+00000086[00000056] PwrPerfSwitch <UINT8>
			+00000087[00000057] WorkLdConfig <UINT8>
			+00000088[00000058] EngAvgTimeWdw1 <UINT16>
			+00000090[0000005a] ProchotResponseRatio <UINT8>
			+00000091[0000005b] TCCActivationOffset <UINT8>
			+00000092[0000005c] P0TtlTimeLow1 <UINT8>
			+00000093[0000005d] P0TtlTimeHigh1 <UINT8>
			+00000094[0000005e] PkgCLatNeg <UINT8>
			+00000095[0000005f] LTRSwInput <UINT8>
			+00000096[00000060] SAPMControl <UINT8>
			+00000097[00000061] CurrentConfig <UINT8>
			+00000098[00000062] PriPlnCurCfgValCtl <UINT8>
			+00000099[00000063] Psi3Code <UINT8>
			+00000100[00000064] CurrentLimit <UINT16>
			+00000102[00000066] Psi3Thshld <UINT8>
			+00000103[00000067] Psi2Code <UINT8>
			+00000104[00000068] Psi2Thshld <UINT8>
			+00000105[00000069] Psi1Code <UINT8>
			+00000106[0000006a] Psi1Thshld <UINT8>
			+00000107[0000006b] PkgCstEntryValCtl <UINT8>
			+00000108[0000006c] PpcccLock <UINT8>
			+00000109[0000006d] SnpLatVld <UINT8>
			+00000110[0000006e] SnpLatOvrd <UINT8>
			+00000111[0000006f] SnpLatMult <UINT8>
			+00000112[00000070] SnpLatVal <UINT16>
			+00000114[00000072] NonSnpLatVld <UINT16>
			+00000116[00000074] NonSnpLatOvrd <UINT8>
			+00000117[00000075] NonSnpLatMult <UINT8>
			+00000118[00000076] NonSnpLatVal <UINT16>
			+00000120[00000078] EepLOverride <UINT8>
			+00000121[00000079] EepLOverrideEn <UINT8>
			+00000122[0000007a] ITurboOvrdEn <UINT8>
			+00000123[0000007b] CstDemotOvrdEN <UINT8>
			+00000124[0000007c] TrboDemotOvrdEn <UINT8>
			+00000125[0000007d] UncrPerfPlmtOvrdEn <UINT8>
			+00000126[0000007e] EetOverrideEn <UINT8>
			+00000127[0000007f] IoBwPlmtOvrdEn <UINT8>
			+00000128[00000080] ImcApmOvrdEn <UINT8>
			+00000129[00000081] IomApmOvrdEn <UINT8>
			+00000130[00000082] KtiApmOvrdEn <UINT8>
			+00000131[00000083] PerfPLmtThshld <UINT8>
			+00000132[00000084] Iio0PkgcClkGateDis[4] <UINT8>
			+00000136[00000088] Iio1PkgcClkGateDis[4] <UINT8>
			+00000140[0000008c] Iio2PkgcClkGateDis[4] <UINT8>
			+00000144[00000090] Kti01PkgcClkGateDis[4] <UINT8>
			+00000148[00000094] Kti23PkgcClkGateDis[4] <UINT8>
			+00000152[00000098] P0pllOffEna[4] <UINT8>
			+00000156[0000009c] P1pllOffEna[4] <UINT8>
			+00000160[000000a0] P2pllOffEna[4] <UINT8>
			+00000164[000000a4] Mc0pllOffEna[4] <UINT8>
			+00000168[000000a8] Mc1pllOffEna[4] <UINT8>
			+00000172[000000ac] Mc0PkgcClkGateDis[4] <UINT8>
			+00000176[000000b0] Mc1PkgcClkGateDis[4] <UINT8>
			+00000180[000000b4] Kti01pllOffEna[4] <UINT8>
			+00000184[000000b8] Kti23pllOffEna[4] <UINT8>
			+00000188[000000bc] SetvidDecayDisable[4] <UINT8>
			+00000192[000000c0] SapmCtlLock[4] <UINT8>
			+00000196[000000c4] PerfPLimitClip <UINT8>
			+00000197[000000c5] PerfPLimitEn <UINT8>
			+00000198[000000c6] PerfPlimitDifferential <UINT8>
			+00000199[000000c7] PerfPLimitClipC <UINT8>
			+00000200[000000c8] Kti0In[4] <UINT8>
			+00000204[000000cc] Kti1In[4] <UINT8>
			+00000208[000000d0] Kti2In[4] <UINT8>
			+00000212[000000d4] PcieIio0In[4] <UINT8>
			+00000216[000000d8] PcieIio1In[4] <UINT8>
			+00000220[000000dc] PcieIio2In[4] <UINT8>
			+00000224[000000e0] PcieIio3In[4] <UINT8>
			+00000228[000000e4] PcieIio4In[4] <UINT8>
			+00000232[000000e8] PcieIio5In[4] <UINT8>
			+00000236[000000ec] EnablePkgcCriteria <UINT8>
			+00000237[000000ed] PkgCCriteriaLogicalIpType[4] <UINT8>
			+00000241[000000f1] EnablePkgCCriteriaKti[4] <UINT8>
			+00000245[000000f5] EnablePkgCCriteriaRlink[4] <UINT8>
			+00000249[000000f9] EnablePkgCCriteriaFxr[4] <UINT8>
			+00000253[000000fd] EnablePkgCCriteriaMcddr[4] <UINT8>
			+00000257[00000101] EnablePkgCCriteriaIio[4] <UINT8>
			+00000261[00000105] EnablePkgCCriteriaHqm[4] <UINT8>
			+00000265[00000109] EnablePkgCCriteriaNac[4] <UINT8>
			+00000269[0000010d] EnablePkgCCriteriaTip[4] <UINT8>
			+00000273[00000111] PkgCCriteriaLogicalIpTypeMcddr[4] <UINT8>
			+00000277[00000115] PkgCCriteriaLogicalIpTypeIio[4] <UINT8>
			+00000281[00000119] PkgCCriteriaInstanceNoKti[4] <UINT8>
			+00000285[0000011d] PkgcCriteraPsMaskKti[4] <UINT8>
			+00000289[00000121] PkgCCriteriaAllowedPsMaskKti[4] <UINT8>
			+00000293[00000125] PkgCCriteriaInstanceNoRlink[4] <UINT8>
			+00000297[00000129] PkgcCriteraPsMaskRlink[4] <UINT8>
			+00000301[0000012d] PkgCCriteriaAllowedPsMaskRlink[4] <UINT8>
			+00000305[00000131] PkgCCriteriaInstanceNoFxr[4] <UINT8>
			+00000309[00000135] PkgcCriteraPsMaskFxr[4] <UINT8>
			+00000313[00000139] PkgCCriteriaAllowedPsMaskFxr[4] <UINT8>
			+00000317[0000013d] PkgCCriteriaInstanceNoMcddr[4] <UINT8>
			+00000321[00000141] PkgcCriteraPsMaskMcddr[4] <UINT8>
			+00000325[00000145] PkgCCriteriaAllowedPsMaskMcddr[4] <UINT8>
			+00000329[00000149] PkgCCriteriaInstanceNoIio[4] <UINT8>
			+00000333[0000014d] PkgcCriteraPsMaskIio[4] <UINT8>
			+00000337[00000151] PkgCCriteriaAllowedPsMaskIio[4] <UINT8>
			+00000341[00000155] PkgCCriteriaInstanceNoHqm[4] <UINT8>
			+00000345[00000159] PkgcCriteraPsMaskHqm[4] <UINT8>
			+00000349[0000015d] PkgCCriteriaAllowedPsMaskHqm[4] <UINT8>
			+00000353[00000161] PkgCCriteriaInstanceNoNac[4] <UINT8>
			+00000357[00000165] PkgcCriteraPsMaskNac[4] <UINT8>
			+00000361[00000169] PkgCCriteriaAllowedPsMaskNac[4] <UINT8>
			+00000365[0000016d] PkgCCriteriaInstanceNoTip[4] <UINT8>
			+00000369[00000171] PkgcCriteraPsMaskTip[4] <UINT8>
			+00000373[00000175] PkgCCriteriaAllowedPsMaskTip[4] <UINT8>
			+00000377[00000179] FastRaplDutyCycle <UINT8>
			+00000378[0000017a] TurboPowerLimitLock <UINT8>
			+00000379[0000017b] TurboPowerLimitCsrLock <UINT8>
			+00000380[0000017c] PowerLimit1En <UINT8>
			+00000381[0000017d] PowerLimit1Power <UINT16>
			+00000383[0000017f] PowerLimit1Time <UINT8>
			+00000384[00000180] PowerLimit2En <UINT8>
			+00000385[00000181] PowerLimit2Power <UINT16>
			+00000387[00000183] PowerLimit2Time <UINT8>
			+00000388[00000184] UsePmaxOffsetTable <UINT8>
			+00000389[00000185] PmaxSign <UINT8>
			+00000390[00000186] PmaxOffset <UINT8>
			+00000391[00000187] PmaxDetectorIo <UINT8>
			+00000392[00000188] MaxEfficiencyRatio[4] <UINT8>
			+00000396[0000018c] MaxNonTurboRatio[4] <UINT8>
			+00000400[00000190] VccSAandVccIOdisable <UINT8>
			+00000401[00000191] SwLtrOvrdCtl <UINT8>
		};
---------------------------------------------------------------
		struct SOCKET_COMMONRC_CONFIGURATION : mAlign [1] mTotalSize [0x33]

		struct SOCKET_COMMONRC_CONFIGURATION {
			+00000000[00000000] MmiohBase <UINT32>
			+00000004[00000004] MmiohSize <UINT16>
			+00000006[00000006] MmcfgBase <UINT8>
			+00000007[00000007] MmcfgSize <UINT8>
			+00000008[00000008] IsocEn <UINT8>
			+00000009[00000009] NumaEn <UINT8>
			+00000010[0000000a] MirrorMode <UINT8>
			+00000011[0000000b] CpuType <UINT8>
			+00000012[0000000c] SubCpuType <UINT8>
			+00000013[0000000d] CpuStepping <UINT8>
			+00000014[0000000e] X2ApicForceEn <UINT8>
			+00000015[0000000f] SystemRasType <UINT8>
			+00000016[00000010] NumCpus <UINT8>
			+00000017[00000011] DfxRstCplBitsEn <UINT8>
			+00000018[00000012] DfxB2PMailboxCmdEnMask[32] <UINT8>
			+00000050[00000032] OcCap <UINT8>
		};
---------------------------------------------------------------
		struct SOCKET_IIO_CONFIGURATION : mAlign [1] mTotalSize [0x2784]

		struct SOCKET_IIO_CONFIGURATION {
			+00000000[00000000] VTdSupport <UINT8>
			+00000001[00000001] InterruptRemap <UINT8>
			+00000002[00000002] CoherencySupport <UINT8>
			+00000003[00000003] ATS <UINT8>
			+00000004[00000004] PostedInterrupt <UINT8>
			+00000005[00000005] PassThroughDma <UINT8>
			+00000006[00000006] IioPresent[4] <UINT8>
			+00000010[0000000a] VtdAcsWa <UINT8>
			+00000011[0000000b] SLOTHPCAP[168] <UINT8>
			+00000179[000000b3] SLOTHPSUP[168] <UINT8>
			+00000347[0000015b] ConfigIOU0[4] <UINT8>
			+00000351[0000015f] ConfigIOU1[4] <UINT8>
			+00000355[00000163] ConfigIOU2[4] <UINT8>
			+00000359[00000167] ConfigIOU3[4] <UINT8>
			+00000363[0000016b] ConfigIOU4[4] <UINT8>
			+00000367[0000016f] CompletionTimeoutGlobal <UINT8>
			+00000368[00000170] CompletionTimeoutGlobalValue <UINT8>
			+00000369[00000171] CompletionTimeout[4] <UINT8>
			+00000373[00000175] CompletionTimeoutValue[4] <UINT8>
			+00000377[00000179] CoherentReadPart <UINT8>
			+00000378[0000017a] CoherentReadFull <UINT8>
			+00000379[0000017b] PcieGlobalAspm <UINT8>
			+00000380[0000017c] StopAndScream <UINT8>
			+00000381[0000017d] SnoopResponseHoldOff <UINT8>
			+00000382[0000017e] PCIe_LTR <UINT8>
			+00000383[0000017f] PcieExtendedTagField <UINT8>
			+00000384[00000180] Pcie10bitTag <UINT8>
			+00000385[00000181] PCIe_AtomicOpReq <UINT8>
			+00000386[00000182] PcieMaxReadRequestSize <UINT8>
			+00000387[00000183] PciePtm <UINT8>
			+00000388[00000184] RpCorrectableErrorEsc[4] <UINT8>
			+00000392[00000188] RpUncorrectableNonFatalErrorEsc[4] <UINT8>
			+00000396[0000018c] RpUncorrectableFatalErrorEsc[4] <UINT8>
			+00000400[00000190] PcieLinkDis[168] <UINT8>
			+00000568[00000238] PcieAspm[168] <UINT8>
			+00000736[000002e0] PcieCommonClock[168] <UINT8>
			+00000904[00000388] PcieMaxPayload[168] <UINT8>
			+00001072[00000430] PcieDState[168] <UINT8>
			+00001240[000004d8] PcieL1Latency[168] <UINT8>
			+00001408[00000580] MsiEn[168] <UINT8>
			+00001576[00000628] ExtendedSync[168] <UINT8>
			+00001744[000006d0] InbandPresenceDetect[168] <UINT8>
			+00001912[00000778] PciePortDisable[168] <UINT8>
			+00002080[00000820] PciePmeIntEn[168] <UINT8>
			+00002248[000008c8] IODC[168] <UINT8>
			+00002416[00000970] PciePortLinkSpeed[168] <UINT8>
			+00002584[00000a18] ComplianceMode[168] <UINT8>
			+00002752[00000ac0] PciePortLinkMaxWidth[168] <UINT8>
			+00002920[00000b68] DeEmphasis[168] <UINT8>
			+00003088[00000c10] EOI[168] <UINT8>
			+00003256[00000cb8] MSIFATEN[168] <UINT8>
			+00003424[00000d60] MSINFATEN[168] <UINT8>
			+00003592[00000e08] MSICOREN[168] <UINT8>
			+00003760[00000eb0] ACPIPMEn[168] <UINT8>
			+00003928[00000f58] P2PWrtDis[168] <UINT8>
			+00004096[00001000] P2PRdDis[168] <UINT8>
			+00004264[000010a8] DisPMETOAck[168] <UINT8>
			+00004432[00001150] ACPIHP[168] <UINT8>
			+00004600[000011f8] ACPIPM[168] <UINT8>
			+00004768[000012a0] SRIS[168] <UINT8>
			+00004936[00001348] TXEQ[168] <UINT8>
			+00005104[000013f0] ECRC[168] <UINT8>
			+00005272[00001498] SERRE[168] <UINT8>
			+00005440[00001540] PcieUnsupportedRequests[168] <UINT8>
			+00005608[000015e8] Cb3DmaEn[64] <UINT8>
			+00005672[00001628] Cb3NoSnoopEn[64] <UINT8>
			+00005736[00001668] DisableTPH <UINT8>
			+00005737[00001669] PrioritizeTPH <UINT8>
			+00005738[0000166a] CbRelaxedOrdering <UINT8>
			+00005739[0000166b] CbDmaMultiCastEnable <UINT8>
			+00005740[0000166c] PEXPHIDE[168] <UINT8>
			+00005908[00001714] DevPresIoApicIio[48] <UINT8>
			+00005956[00001744] PCUF6Hide <UINT8>
			+00005957[00001745] EN1K <UINT8>
			+00005958[00001746] DualCvIoFlow <UINT8>
			+00005959[00001747] Pci64BitResourceAllocation <UINT8>
			+00005960[00001748] PcieBiosTrainEnable <UINT8>
			+00005961[00001749] MultiCastEnable <UINT8>
			+00005962[0000174a] McastBaseAddrRegion <UINT8>
			+00005963[0000174b] McastIndexPosition <UINT8>
			+00005964[0000174c] McastNumGroup <UINT8>
			+00005965[0000174d] HidePEXPMenu[168] <UINT8>
			+00006133[000017f5] NtbPpd[32] <UINT8>
			+00006165[00001815] NtbBarSizeOverride[32] <UINT8>
			+00006197[00001835] NtbSplitBar[32] <UINT8>
			+00006229[00001855] NtbBarSizeImBar1[32] <UINT8>
			+00006261[00001875] NtbBarSizeImBar2[32] <UINT8>
			+00006293[00001895] NtbBarSizeImBar2_0[32] <UINT8>
			+00006325[000018b5] NtbBarSizeImBar2_1[32] <UINT8>
			+00006357[000018d5] NtbBarSizeEmBarSZ1[32] <UINT8>
			+00006389[000018f5] NtbBarSizeEmBarSZ2[32] <UINT8>
			+00006421[00001915] NtbBarSizeEmBarSZ2_0[32] <UINT8>
			+00006453[00001935] NtbBarSizeEmBarSZ2_1[32] <UINT8>
			+00006485[00001955] NtbXlinkCtlOverride[32] <UINT8>
			+00006517[00001975] VMDEnabled[20] <UINT8>
			+00006537[00001989] VMDPortEnable[80] <UINT8>
			+00006617[000019d9] VMDHotPlugEnable[20] <UINT8>
			+00006637[000019ed] VMDCfgBarSz[20] <UINT8>
			+00006657[00001a01] VMDCfgBarAttr[20] <UINT8>
			+00006677[00001a15] VMDMemBarSz1[20] <UINT8>
			+00006697[00001a29] VMDMemBar1Attr[20] <UINT8>
			+00006717[00001a3d] VMDMemBarSz2[20] <UINT8>
			+00006737[00001a51] VMDMemBar2Attr[20] <UINT8>
			+00006757[00001a65] PcieAICEnabled[20] <UINT8>
			+00006777[00001a79] PcieAICPortEnable[80] <UINT8>
			+00006857[00001ac9] PcieAICHotPlugEnable[20] <UINT8>
			+00006877[00001add] NoSnoopRdCfg <UINT8>
			+00006878[00001ade] NoSnoopWrCfg <UINT8>
			+00006879[00001adf] MaxReadCompCombSize <UINT8>
			+00006880[00001ae0] ProblematicPort <UINT8>
			+00006881[00001ae1] DmiAllocatingFlow <UINT8>
			+00006882[00001ae2] PcieAllocatingFlow <UINT8>
			+00006883[00001ae3] PcieHotPlugEnable <UINT8>
			+00006884[00001ae4] PcieAcpiHotPlugEnable <UINT8>
			+00006885[00001ae5] HaltOnDmiDegraded <UINT8>
			+00006886[00001ae6] RxClockWA <UINT8>
			+00006887[00001ae7] GlobalPme2AckTOCtrl <UINT8>
			+00006888[00001ae8] MctpEn <UINT8>
			+00006889[00001ae9] PcieSlotOprom1 <UINT8>
			+00006890[00001aea] PcieSlotOprom2 <UINT8>
			+00006891[00001aeb] PcieSlotOprom3 <UINT8>
			+00006892[00001aec] PcieSlotOprom4 <UINT8>
			+00006893[00001aed] PcieSlotOprom5 <UINT8>
			+00006894[00001aee] PcieSlotOprom6 <UINT8>
			+00006895[00001aef] PcieSlotOprom7 <UINT8>
			+00006896[00001af0] PcieSlotOprom8 <UINT8>
			+00006897[00001af1] PcieSlotItemCtrl <UINT8>
			+00006898[00001af2] PcieRelaxedOrdering <UINT8>
			+00006899[00001af3] PciePhyTestMode <UINT8>
			+00006900[00001af4] DFXEnable <UINT8>
			+00006901[00001af5] DfxLtssmLogger <UINT8>
			+00006902[00001af6] DfxLtssmLoggerStop <UINT8>
			+00006903[00001af7] DfxLtssmLoggerSpeed <UINT8>
			+00006904[00001af8] DfxLtssmLoggerMask <UINT8>
			+00006905[00001af9] DfxJitterLogger <UINT8>
			+00006906[00001afa] DfxIioRcFlow <UINT8>
			+00006907[00001afb] DfxIioLinkTraining <UINT8>
			+00006908[00001afc] DfxSocketDevFuncHide[256] <UINT32>
			+00007932[00001efc] DfxGen3NTBTestCard[168] <UINT8>
			+00008100[00001fa4] DfxGen3OverrideMode[168] <UINT8>
			+00008268[0000204c] DfxGen3TestCard[168] <UINT8>
			+00008436[000020f4] DfxGen3ManualPh2_Precursor[168] <UINT8>
			+00008604[0000219c] DfxGen3ManualPh2_Cursor[168] <UINT8>
			+00008772[00002244] DfxGen3ManualPh2_Postcursor[168] <UINT8>
			+00008940[000022ec] DfxGen3ManualPh3_Precursor[168] <UINT8>
			+00009108[00002394] DfxGen3ManualPh3_Cursor[168] <UINT8>
			+00009276[0000243c] DfxGen3ManualPh3_Postcursor[168] <UINT8>
			+00009444[000024e4] DfxDnTxPreset[168] <UINT8>
			+00009612[0000258c] DfxRxPreset[168] <UINT8>
			+00009780[00002634] DfxUpTxPreset[168] <UINT8>
			+00009948[000026dc] InboundConfiguration[168] <UINT8>
		};
---------------------------------------------------------------
		struct FAKE_VARSTORE : mAlign [1] mTotalSize [0x1]

		struct FAKE_VARSTORE {
			+00000000[00000000] FakeItem <UINT8>
		};
---------------------------------------------------------------
		struct SYSTEM_CONFIGURATION : mAlign [1] mTotalSize [0x1c6]

		struct SYSTEM_CONFIGURATION {
			+00000000[00000000] UserPassword[32] <UINT8>
			+00000032[00000020] AdminPassword[32] <UINT8>
			+00000064[00000040] Access <UINT8>
			+00000065[00000041] Numlock <UINT8>
			+00000066[00000042] Ps2PortSwap <UINT8>
			+00000067[00000043] TpmEnable <UINT8>
			+00000068[00000044] TpmState <UINT8>
			+00000069[00000045] MorState <UINT8>
			+00000070[00000046] ValidationBreakpointType <UINT8>
			+00000071[00000047] bsdBreakpoint <UINT16>
			+00000073[00000049] PowerState <UINT8>
			+00000074[0000004a] WakeOnLanS5 <UINT8>
			+00000075[0000004b] BootNetwork <UINT8>
			+00000076[0000004c] VideoSelect <UINT8>
			+00000077[0000004d] EfiWindowsInt10Workaround <UINT8>
			+00000078[0000004e] UefiOptimizedBootToggle <UINT8>
			+00000079[0000004f] FanPwmOffset <UINT8>
			+00000080[00000050] Benchmark <UINT8>
			+00000081[00000051] PCIe_MultiSeg_Support <UINT8>
			+00000082[00000052] WakeOnLanSupport <UINT8>
			+00000083[00000053] LomDisableByGpio <UINT8>
			+00000084[00000054] WakeOnRTCS4S5 <UINT8>
			+00000085[00000055] RTCWakeupTimeHour <UINT8>
			+00000086[00000056] RTCWakeupTimeMinute <UINT8>
			+00000087[00000057] RTCWakeupTimeSecond <UINT8>
			+00000088[00000058] PcieClockGatingDisabled <UINT8>
			+00000089[00000059] PcieDmiAspm <UINT8>
			+00000090[0000005a] PcieSBDE <UINT8>
			+00000091[0000005b] GbePciePortNum <UINT8>
			+00000092[0000005c] PciePortConfig1 <UINT8>
			+00000093[0000005d] PciePortConfig2 <UINT8>
			+00000094[0000005e] PciePortConfig3 <UINT8>
			+00000095[0000005f] PciePortConfig4 <UINT8>
			+00000096[00000060] PciePortConfig5 <UINT8>
			+00000097[00000061] GbeEnabled <UINT8>
			+00000098[00000062] PchStepping <UINT8>
			+00000099[00000063] XhciWakeOnUsbEnabled <UINT8>
			+00000100[00000064] SystemErrorEn <UINT8>
			+00000101[00000065] PoisonEn <UINT8>
			+00000102[00000066] ViralEn <UINT8>
			+00000103[00000067] ClearViralStatus <UINT8>
			+00000104[00000068] CloakingEn <UINT8>
			+00000105[00000069] UboxToPcuMcaEn <UINT8>
			+00000106[0000006a] FatalErrSpinLoopEn <UINT8>
			+00000107[0000006b] EmcaEn <UINT8>
			+00000108[0000006c] EmcaIgnOptin <UINT8>
			+00000109[0000006d] EmcaCsmiEn <UINT8>
			+00000110[0000006e] CsmiDynamicDisable <UINT8>
			+00000111[0000006f] EmcaMsmiEn <UINT8>
			+00000112[00000070] ElogCorrErrEn <UINT8>
			+00000113[00000071] ElogMemErrEn <UINT8>
			+00000114[00000072] ElogProcErrEn <UINT8>
			+00000115[00000073] EmcaSetFwUpdate <UINT8>
			+00000116[00000074] LmceEn <UINT8>
			+00000117[00000075] WheaSupportEn <UINT8>
			+00000118[00000076] WheaLogMemoryEn <UINT8>
			+00000119[00000077] WheaLogProcEn <UINT8>
			+00000120[00000078] WheaLogPciEn <UINT8>
			+00000121[00000079] AEPErrorInjEn <UINT8>
			+00000122[0000007a] WheaErrorInjSupportEn <UINT8>
			+00000123[0000007b] McaBankErrInjEn <UINT8>
			+00000124[0000007c] WheaErrInjEn <UINT8>
			+00000125[0000007d] WheaPcieErrInjEn <UINT8>
			+00000126[0000007e] MeSegErrorInjEn <UINT8>
			+00000127[0000007f] PcieErrInjActionTable <UINT8>
			+00000128[00000080] MemErrEn <UINT8>
			+00000129[00000081] CorrMemErrEn <UINT8>
			+00000130[00000082] LeakyBktHiLeakyBktLo <UINT32>
			+00000134[00000086] SpareIntSelect <UINT8>
			+00000135[00000087] FnvErrorEn <UINT8>
			+00000136[00000088] FnvErrorLowPrioritySignal <UINT8>
			+00000137[00000089] FnvErrorHighPrioritySignal <UINT8>
			+00000138[0000008a] NgnAddressRangeScrub <UINT8>
			+00000139[0000008b] NgnHostAlertAit <UINT8>
			+00000140[0000008c] NgnHostAlertDpa <UINT8>
			+00000141[0000008d] NgnHostAlertPatrolScrubUNC <UINT8>
			+00000142[0000008e] IioErrorEn <UINT8>
			+00000143[0000008f] IoMcaEn <UINT8>
			+00000144[00000090] IioErrRegistersClearEn <UINT8>
			+00000145[00000091] IioErrorPinEn <UINT8>
			+00000146[00000092] LerEn <UINT8>
			+00000147[00000093] DisableMAerrorLoggingDueToLER <UINT8>
			+00000148[00000094] IioIrpErrorEn <UINT8>
			+00000149[00000095] IioMiscErrorEn <UINT8>
			+00000150[00000096] IioVtdErrorEn <UINT8>
			+00000151[00000097] IioDmaErrorEn <UINT8>
			+00000152[00000098] IioDmiErrorEn <UINT8>
			+00000153[00000099] IioPcieAddCorrErrorEn <UINT8>
			+00000154[0000009a] IioPcieAddUnCorrEn <UINT8>
			+00000155[0000009b] IioPcieAerSpecCompEn <UINT8>
			+00000156[0000009c] PcieErrEn <UINT8>
			+00000157[0000009d] PcieCorrErrEn <UINT8>
			+00000158[0000009e] PcieUncorrErrEn <UINT8>
			+00000159[0000009f] PcieFatalErrEn <UINT8>
			+00000160[000000a0] PcieCorErrCntr <UINT8>
			+00000161[000000a1] PcieCorErrMaskBitMap <UINT8>
			+00000162[000000a2] PcieCorErrThres <UINT16>
			+00000164[000000a4] PcieAerCorrErrEn <UINT8>
			+00000165[000000a5] PcieAerAdNfatErrEn <UINT8>
			+00000166[000000a6] PcieAerNfatErrEn <UINT8>
			+00000167[000000a7] PcieAerFatErrEn <UINT8>
			+00000168[000000a8] SerrPropEn <UINT8>
			+00000169[000000a9] PerrPropEn <UINT8>
			+00000170[000000aa] OsSigOnSerrEn <UINT8>
			+00000171[000000ab] OsSigOnPerrEn <UINT8>
			+00000172[000000ac] CaterrGpioSmiEn <UINT8>
			+00000173[000000ad] McBankWarmBootClearError <UINT8>
			+00000174[000000ae] KTIFailoverSmiEn <UINT8>
			+00000175[000000af] irpp0_parityError <UINT8>
			+00000176[000000b0] irpp0_qtOverflow <UINT8>
			+00000177[000000b1] irpp0_unexprsp <UINT8>
			+00000178[000000b2] irpp0_csraccunaligned <UINT8>
			+00000179[000000b3] irpp0_unceccCs1 <UINT8>
			+00000180[000000b4] irpp0_unceccCs0 <UINT8>
			+00000181[000000b5] irpp0_rcvdpoison <UINT8>
			+00000182[000000b6] irpp0_crreccCs1 <UINT8>
			+00000183[000000b7] irpp0_crreccCs0 <UINT8>
			+00000184[000000b8] PropagateSerr <UINT8>
			+00000185[000000b9] PropagatePerr <UINT8>
			+00000186[000000ba] serialDebugMsgLvl <UINT8>
			+00000187[000000bb] serialDebugTrace <UINT8>
			+00000188[000000bc] serialDebugMsgLvlTrainResults <UINT8>
			+00000189[000000bd] ResetOnMemMapChange <UINT8>
			+00000190[000000be] ForceSetup <UINT8>
			+00000191[000000bf] BiosGuardEnabled <UINT8>
			+00000192[000000c0] BiosGuardPlatformSupported <UINT8>
			+00000193[000000c1] EnableAntiFlashWearout <UINT8>
			+00000194[000000c2] AntiFlashWearoutSupported <UINT8>
			+00000195[000000c3] DfxPopulateBGDirectory <UINT8>
			+00000196[000000c4] Use1GPageTable <UINT8>
			+00000197[000000c5] FastBoot <UINT8>
			+00000198[000000c6] ReserveMem <UINT8>
			+00000199[000000c7] ReserveStartAddr <UINT64>
			+00000207[000000cf] TagecMem <UINT8>
			+00000208[000000d0] UsbMassDevNum <UINT8>
			+00000209[000000d1] UsbLegacySupport <UINT8>
			+00000210[000000d2] UsbEmul6064 <UINT8>
			+00000211[000000d3] UsbMassResetDelay <UINT8>
			+00000212[000000d4] UsbNonBoot <UINT8>
			+00000213[000000d5] UsbEmu1 <UINT8>
			+00000214[000000d6] UsbEmu2 <UINT8>
			+00000215[000000d7] UsbEmu3 <UINT8>
			+00000216[000000d8] UsbEmu4 <UINT8>
			+00000217[000000d9] UsbEmu5 <UINT8>
			+00000218[000000da] UsbEmu6 <UINT8>
			+00000219[000000db] UsbEmu7 <UINT8>
			+00000220[000000dc] UsbEmu8 <UINT8>
			+00000221[000000dd] UsbEmu9 <UINT8>
			+00000222[000000de] UsbEmu10 <UINT8>
			+00000223[000000df] UsbEmu11 <UINT8>
			+00000224[000000e0] UsbEmu12 <UINT8>
			+00000225[000000e1] UsbEmu13 <UINT8>
			+00000226[000000e2] UsbEmu14 <UINT8>
			+00000227[000000e3] UsbEmu15 <UINT8>
			+00000228[000000e4] UsbEmu16 <UINT8>
			+00000229[000000e5] UsbStackSupport <UINT8>
			+00000230[000000e6] ConsoleRedirection <UINT8>
			+00000231[000000e7] FlowControl <UINT8>
			+00000232[000000e8] BaudRate <UINT64>
			+00000240[000000f0] TerminalType <UINT8>
			+00000241[000000f1] LegacyOsRedirection <UINT8>
			+00000242[000000f2] TerminalResolution <UINT8>
			+00000243[000000f3] DataBits <UINT8>
			+00000244[000000f4] Parity <UINT8>
			+00000245[000000f5] StopBits <UINT8>
			+00000246[000000f6] SystemPageSize <UINT8>
			+00000247[000000f7] ARIEnable <UINT8>
			+00000248[000000f8] ARIForward <UINT8>
			+00000249[000000f9] SRIOVEnable <UINT8>
			+00000250[000000fa] MRIOVEnable <UINT8>
			+00000251[000000fb] LegacyPxeRom <UINT8>
			+00000252[000000fc] EfiNetworkSupport <UINT8>
			+00000253[000000fd] SerialBaudRate <UINT32>
			+00000257[00000101] BootAllOptions <UINT8>
			+00000258[00000102] SetShellFirst <UINT8>
			+00000259[00000103] PlatformOCSupport <UINT8>
			+00000260[00000104] FilterPll <UINT8>
			+00000261[00000105] OverclockingSupport <UINT8>
			+00000262[00000106] CoreMaxOcRatio <UINT8>
			+00000263[00000107] CoreVoltageMode <UINT8>
			+00000264[00000108] CoreVoltageOverride <UINT16>
			+00000266[0000010a] CoreVoltageOffset <UINT16>
			+00000268[0000010c] CoreVoltageOffsetPrefix <UINT8>
			+00000269[0000010d] CoreExtraTurboVoltage <UINT16>
			+00000271[0000010f] MemoryVoltage <UINT8>
			+00000272[00000110] MemoryVoltageDefault <UINT8>
			+00000273[00000111] tCL <UINT8>
			+00000274[00000112] ClrMaxOcRatio <UINT8>
			+00000275[00000113] ClrVoltageMode <UINT8>
			+00000276[00000114] ClrVoltageOverride <UINT16>
			+00000278[00000116] ClrVoltageOffset <UINT16>
			+00000280[00000118] ClrVoltageOffsetPrefix <UINT8>
			+00000281[00000119] ClrExtraTurboVoltage <UINT16>
			+00000283[0000011b] UncoreVoltageOffset <UINT16>
			+00000285[0000011d] UncoreVoltageOffsetPrefix <UINT8>
			+00000286[0000011e] IoaVoltageOffset <UINT16>
			+00000288[00000120] IoaVoltageOffsetPrefix <UINT8>
			+00000289[00000121] IodVoltageOffset <UINT16>
			+00000291[00000123] IodVoltageOffsetPrefix <UINT8>
			+00000292[00000124] SvidEnable <UINT8>
			+00000293[00000125] SvidVoltageOverride <UINT16>
			+00000295[00000127] FivrFaultsEnable <UINT8>
			+00000296[00000128] FivrEfficiencyEnable <UINT8>
			+00000297[00000129] SataInterfaceRAIDMode <UINT8>
			+00000298[0000012a] sSataInterfaceRAIDMode <UINT8>
			+00000299[0000012b] C01MemoryVoltage <UINT16>
			+00000301[0000012d] C23MemoryVoltage <UINT16>
			+00000303[0000012f] CpuVccInVoltage <UINT16>
			+00000305[00000131] VccIoVoltage <UINT8>
			+00000306[00000132] CloudProfile <UINT8>
			+00000307[00000133] VariablePlatId <UINT16>
			+00000309[00000135] FlexRatioOverrideDefault <UINT8>
			+00000310[00000136] RatioLimit1Default <UINT8>
			+00000311[00000137] RatioLimit2Default <UINT8>
			+00000312[00000138] RatioLimit3Default <UINT8>
			+00000313[00000139] RatioLimit4Default <UINT8>
			+00000314[0000013a] OverclockingLockDefault <UINT8>
			+00000315[0000013b] DdrRefClkDefault <UINT8>
			+00000316[0000013c] DdrRatioDefault <UINT8>
			+00000317[0000013d] tCLDefault <UINT8>
			+00000318[0000013e] tCWLDefault <UINT8>
			+00000319[0000013f] tFAWDefault <UINT16>
			+00000321[00000141] tRASDefault <UINT16>
			+00000323[00000143] tRCDefault <UINT16>
			+00000325[00000145] tRCDDefault <UINT8>
			+00000326[00000146] tREFIDefault <UINT16>
			+00000328[00000148] tRFCDefault <UINT16>
			+00000330[0000014a] tRPDefault <UINT8>
			+00000331[0000014b] tRPabDefault <UINT8>
			+00000332[0000014c] tRRDDefault <UINT8>
			+00000333[0000014d] tRTPDefault <UINT8>
			+00000334[0000014e] tWRDefault <UINT8>
			+00000335[0000014f] tWTRDefault <UINT8>
			+00000336[00000150] NModeDefault <UINT8>
			+00000337[00000151] CoreMaxOcRatioDefault <UINT8>
			+00000338[00000152] CoreVoltageModeDefault <UINT8>
			+00000339[00000153] CoreVoltageOverrideDefault <UINT16>
			+00000341[00000155] CoreVoltageOffsetDefault <UINT16>
			+00000343[00000157] CoreVoltageOffsetPrefixDefault <UINT8>
			+00000344[00000158] CoreExtraTurboVoltageDefault <UINT16>
			+00000346[0000015a] GtOcSupportDefault <UINT8>
			+00000347[0000015b] GtOcFrequencyDefault <UINT8>
			+00000348[0000015c] GtExtraTurboVoltageDefault <UINT16>
			+00000350[0000015e] GtOcVoltageDefault <UINT16>
			+00000352[00000160] GtVoltageModeDefault <UINT8>
			+00000353[00000161] GtVoltageOverrideDefault <UINT16>
			+00000355[00000163] GtVoltageOffsetDefault <UINT16>
			+00000357[00000165] GtVoltageOffsetPrefixDefault <UINT8>
			+00000358[00000166] ClrMaxOcRatioDefault <UINT8>
			+00000359[00000167] ClrVoltageModeDefault <UINT8>
			+00000360[00000168] ClrVoltageOverrideDefault <UINT16>
			+00000362[0000016a] ClrVoltageOffsetDefault <UINT16>
			+00000364[0000016c] ClrVoltageOffsetPrefixDefault <UINT8>
			+00000365[0000016d] ClrExtraTurboVoltageDefault <UINT16>
			+00000367[0000016f] UncoreVoltageOffsetDefault <UINT16>
			+00000369[00000171] UncoreVoltageOffsetPrefixDefault <UINT8>
			+00000370[00000172] IoaVoltageOffsetDefault <UINT16>
			+00000372[00000174] IoaVoltageOffsetPrefixDefault <UINT8>
			+00000373[00000175] IodVoltageOffsetDefault <UINT16>
			+00000375[00000177] IodVoltageOffsetPrefixDefault <UINT8>
			+00000376[00000178] SvidEnableDefault <UINT8>
			+00000377[00000179] SvidVoltageOverrideDefault <UINT16>
			+00000379[0000017b] FivrFaultsEnableDefault <UINT8>
			+00000380[0000017c] FivrEfficiencyEnableDefault <UINT8>
			+00000381[0000017d] VrCurrentLimitDefault <UINT16>
			+00000383[0000017f] EnableGvDefault <UINT8>
			+00000384[00000180] TurboModeDefault <UINT8>
			+00000385[00000181] PowerLimit1TimeDefault <UINT8>
			+00000386[00000182] PowerLimit1Default <UINT16>
			+00000388[00000184] PowerLimit2Default <UINT16>
			+00000390[00000186] RatioLimit1 <UINT8>
			+00000391[00000187] RatioLimit2 <UINT8>
			+00000392[00000188] RatioLimit3 <UINT8>
			+00000393[00000189] RatioLimit4 <UINT8>
			+00000394[0000018a] CpuRatio <UINT8>
			+00000395[0000018b] CpuRatioOverride <UINT8>
			+00000396[0000018c] IsTurboRatioDefaultsInitalized <UINT8>
			+00000397[0000018d] DdrRefClk <UINT8>
			+00000398[0000018e] PcieRatioDisabled <UINT8>
			+00000399[0000018f] NMode <UINT8>
			+00000400[00000190] Pmtt <UINT8>
			+00000401[00000191] GtVoltageOffset <UINT16>
			+00000403[00000193] VrCurrentLimit <UINT16>
			+00000405[00000195] NModeSupport <UINT8>
			+00000406[00000196] WDTSupportforNextOSBoot <UINT8>
			+00000407[00000197] TimeforNextOSBoot <UINT16>
			+00000409[00000199] PlatformUnstable <UINT8>
			+00000410[0000019a] GtVoltageMode <UINT8>
			+00000411[0000019b] DdrRatio <UINT8>
			+00000412[0000019c] GtOcFrequency <UINT8>
			+00000413[0000019d] GtExtraTurboVoltage <UINT16>
			+00000415[0000019f] GtVoltageOverride <UINT16>
			+00000417[000001a1] GtVoltageOffsetPrefix <UINT8>
			+00000418[000001a2] GtOcSupport <UINT8>
			+00000419[000001a3] FlexOverrideEnable <UINT8>
			+00000420[000001a4] FlexRatioOverride <UINT8>
			+00000421[000001a5] PowerLimit3Override <UINT8>
			+00000422[000001a6] PowerLimit3 <UINT32>
			+00000426[000001aa] PowerLimit3Time <UINT8>
			+00000427[000001ab] PowerLimit3DutyCycle <UINT8>
			+00000428[000001ac] PowerLimit3Lock <UINT8>
			+00000429[000001ad] MemoryVoltageOverride <UINT8>
			+00000430[000001ae] BClkOverride <UINT8>
			+00000431[000001af] BclkAdjustable <UINT8>
			+00000432[000001b0] DmiPegRatio <UINT8>
			+00000433[000001b1] SkipXmlComprs <UINT8>
			+00000434[000001b2] DfxAdvDebugJumper <UINT8>
			+00000435[000001b3] DfxAltPostCode <UINT8>
			+00000436[000001b4] ValidationResetType <UINT8>
			+00000437[000001b5] ValidationCountOuter <UINT16>
			+00000439[000001b7] ValidationCountInner <UINT16>
			+00000441[000001b9] ValidationStopOnError <UINT8>
			+00000442[000001ba] ValidationBootWhenDone <UINT8>
			+00000443[000001bb] ValidationSkxPciError <UINT8>
			+00000444[000001bc] ValidationSkxPciLinkError <UINT8>
			+00000445[000001bd] ValidationPchPciError <UINT8>
			+00000446[000001be] ValidationSkxPciLinkRecoveryCountError <UINT8>
			+00000447[000001bf] ValidationSkxPciLinkRecoveryCountThreshold <UINT16>
			+00000449[000001c1] ValidationKtiError <UINT8>
			+00000450[000001c2] TraceHubDebugInterface <UINT8>
			+00000451[000001c3] RamDebugInterface <UINT8>
			+00000452[000001c4] StorageOpROMSuppression <UINT8>
			+00000453[000001c5] RsaSupport <UINT8>
		};
---------------------------------------------------------------
		struct EFI_HII_REF : mAlign [16] mTotalSize [0x16]

		struct EFI_HII_REF {
			+00000000[00000000] QuestionId <UINT16>
			+00000002[00000002] FormId <UINT16>
			+00000004[00000004] FormSetGuid <(null)>
			+00000020[00000014] DevicePath <EFI_STRING_ID>
		};
---------------------------------------------------------------
		struct EFI_HII_TIME : mAlign [1] mTotalSize [0x3]

		struct EFI_HII_TIME {
			+00000000[00000000] Hours <UINT8>
			+00000001[00000001] Minutes <UINT8>
			+00000002[00000002] Seconds <UINT8>
		};
---------------------------------------------------------------
		struct EFI_STRING_ID : mAlign [2] mTotalSize [0x2]

		struct EFI_STRING_ID {
		};
---------------------------------------------------------------
		struct EFI_HII_DATE : mAlign [2] mTotalSize [0x4]

		struct EFI_HII_DATE {
			+00000000[00000000] Year <UINT16>
			+00000002[00000002] Month <UINT8>
			+00000003[00000003] Day <UINT8>
		};
---------------------------------------------------------------
		struct BOOLEAN : mAlign [1] mTotalSize [0x1]

		struct BOOLEAN {
		};
---------------------------------------------------------------
		struct UINT8 : mAlign [1] mTotalSize [0x1]

		struct UINT8 {
		};
---------------------------------------------------------------
		struct UINT16 : mAlign [2] mTotalSize [0x2]

		struct UINT16 {
		};
---------------------------------------------------------------
		struct UINT32 : mAlign [4] mTotalSize [0x4]

		struct UINT32 {
		};
---------------------------------------------------------------
		struct UINT64 : mAlign [8] mTotalSize [0x8]

		struct UINT64 {
		};
---------------------------------------------------------------
***************************************************************
